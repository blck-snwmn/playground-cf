/* eslint-disable */
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** Scalar type types.Date */
  Date: { input: any; output: any; }
  /** Scalar type time.Time */
  Time: { input: any; output: any; }
  /** Scalar type bool */
  bool: { input: any; output: any; }
  /** Scalar type []uint8 */
  bytes: { input: any; output: any; }
  /** Scalar type float32 */
  float32: { input: any; output: any; }
  /** Scalar type float64 */
  float64: { input: any; output: any; }
  /** Scalar type int8 */
  int8: { input: any; output: any; }
  /** Scalar type int16 */
  int16: { input: any; output: any; }
  /** Scalar type int64 */
  int64: { input: any; output: any; }
  /** Scalar type string */
  string: { input: any; output: any; }
  /** Scalar type uint8 */
  uint8: { input: any; output: any; }
  /** Scalar type uint16 */
  uint16: { input: any; output: any; }
  /** Scalar type uint32 */
  uint32: { input: any; output: any; }
  /** Scalar type uint64 */
  uint64: { input: any; output: any; }
};

/** Access login requests */
export type AccountAccessLoginRequestsAdaptiveGroups = {
  __typename?: 'AccountAccessLoginRequestsAdaptiveGroups';
  avg?: Maybe<AccountAccessLoginRequestsAdaptiveGroupsAvg>;
  /** Number of access login API events processed */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountAccessLoginRequestsAdaptiveGroupsDimensions>;
};

export type AccountAccessLoginRequestsAdaptiveGroupsAvg = {
  __typename?: 'AccountAccessLoginRequestsAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountAccessLoginRequestsAdaptiveGroupsDimensions = {
  __typename?: 'AccountAccessLoginRequestsAdaptiveGroupsDimensions';
  /** Access application ID */
  appId: Scalars['string']['output'];
  /** Policy ID that approved the user */
  approvingPolicyId: Scalars['string']['output'];
  /** CF ray id */
  cfRayId: Scalars['string']['output'];
  /** Country tag */
  country: Scalars['string']['output'];
  /** The date the access login event was emitted */
  date: Scalars['Date']['output'];
  /** The date and time the access login event was emitted */
  datetime: Scalars['Time']['output'];
  /** The date and time the access login event was emitted truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Device ID */
  deviceId: Scalars['string']['output'];
  /** Has existing JWT (0 = false, 1 = true) */
  hasExistingJWT: Scalars['uint8']['output'];
  /** Has Gateway enabled (0 = false, 1 = true) */
  hasGatewayEnabled: Scalars['uint8']['output'];
  /** Has WARP enabled (0 = false, 1 = true) */
  hasWarpEnabled: Scalars['uint8']['output'];
  /** Identity provider */
  identityProvider: Scalars['string']['output'];
  /** User IP address */
  ipAddress: Scalars['string']['output'];
  /** If the login was successful (0 = false, 1 = true) */
  isSuccessfulLogin: Scalars['uint8']['output'];
  /** MTLS certificate serial ID */
  mtlsCertSerialId: Scalars['string']['output'];
  /** MTLS common name */
  mtlsCommonName: Scalars['string']['output'];
  /** MTLS status (may show error message if status is not successful) */
  mtlsStatus: Scalars['string']['output'];
  /** Service token ID */
  serviceTokenId: Scalars['string']['output'];
  /** User UUID */
  userUuid: Scalars['string']['output'];
};

export type AccountAccessLoginRequestsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountAccessLoginRequestsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountAccessLoginRequestsAdaptiveGroupsFilter_InputObject>>;
  appId?: InputMaybe<Scalars['string']['input']>;
  appId_geq?: InputMaybe<Scalars['string']['input']>;
  appId_gt?: InputMaybe<Scalars['string']['input']>;
  appId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  appId_leq?: InputMaybe<Scalars['string']['input']>;
  appId_like?: InputMaybe<Scalars['string']['input']>;
  appId_lt?: InputMaybe<Scalars['string']['input']>;
  appId_neq?: InputMaybe<Scalars['string']['input']>;
  appId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  appId_notlike?: InputMaybe<Scalars['string']['input']>;
  approvingPolicyId?: InputMaybe<Scalars['string']['input']>;
  approvingPolicyId_geq?: InputMaybe<Scalars['string']['input']>;
  approvingPolicyId_gt?: InputMaybe<Scalars['string']['input']>;
  approvingPolicyId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  approvingPolicyId_leq?: InputMaybe<Scalars['string']['input']>;
  approvingPolicyId_like?: InputMaybe<Scalars['string']['input']>;
  approvingPolicyId_lt?: InputMaybe<Scalars['string']['input']>;
  approvingPolicyId_neq?: InputMaybe<Scalars['string']['input']>;
  approvingPolicyId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  approvingPolicyId_notlike?: InputMaybe<Scalars['string']['input']>;
  cfRayId?: InputMaybe<Scalars['string']['input']>;
  cfRayId_geq?: InputMaybe<Scalars['string']['input']>;
  cfRayId_gt?: InputMaybe<Scalars['string']['input']>;
  cfRayId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cfRayId_leq?: InputMaybe<Scalars['string']['input']>;
  cfRayId_like?: InputMaybe<Scalars['string']['input']>;
  cfRayId_lt?: InputMaybe<Scalars['string']['input']>;
  cfRayId_neq?: InputMaybe<Scalars['string']['input']>;
  cfRayId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cfRayId_notlike?: InputMaybe<Scalars['string']['input']>;
  country?: InputMaybe<Scalars['string']['input']>;
  country_geq?: InputMaybe<Scalars['string']['input']>;
  country_gt?: InputMaybe<Scalars['string']['input']>;
  country_in?: InputMaybe<Array<Scalars['string']['input']>>;
  country_leq?: InputMaybe<Scalars['string']['input']>;
  country_like?: InputMaybe<Scalars['string']['input']>;
  country_lt?: InputMaybe<Scalars['string']['input']>;
  country_neq?: InputMaybe<Scalars['string']['input']>;
  country_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  country_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  deviceId?: InputMaybe<Scalars['string']['input']>;
  deviceId_geq?: InputMaybe<Scalars['string']['input']>;
  deviceId_gt?: InputMaybe<Scalars['string']['input']>;
  deviceId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceId_leq?: InputMaybe<Scalars['string']['input']>;
  deviceId_like?: InputMaybe<Scalars['string']['input']>;
  deviceId_lt?: InputMaybe<Scalars['string']['input']>;
  deviceId_neq?: InputMaybe<Scalars['string']['input']>;
  deviceId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceId_notlike?: InputMaybe<Scalars['string']['input']>;
  hasExistingJWT?: InputMaybe<Scalars['uint8']['input']>;
  hasExistingJWT_geq?: InputMaybe<Scalars['uint8']['input']>;
  hasExistingJWT_gt?: InputMaybe<Scalars['uint8']['input']>;
  hasExistingJWT_in?: InputMaybe<Scalars['bytes']['input']>;
  hasExistingJWT_leq?: InputMaybe<Scalars['uint8']['input']>;
  hasExistingJWT_lt?: InputMaybe<Scalars['uint8']['input']>;
  hasExistingJWT_neq?: InputMaybe<Scalars['uint8']['input']>;
  hasExistingJWT_notin?: InputMaybe<Scalars['bytes']['input']>;
  hasGatewayEnabled?: InputMaybe<Scalars['uint8']['input']>;
  hasGatewayEnabled_geq?: InputMaybe<Scalars['uint8']['input']>;
  hasGatewayEnabled_gt?: InputMaybe<Scalars['uint8']['input']>;
  hasGatewayEnabled_in?: InputMaybe<Scalars['bytes']['input']>;
  hasGatewayEnabled_leq?: InputMaybe<Scalars['uint8']['input']>;
  hasGatewayEnabled_lt?: InputMaybe<Scalars['uint8']['input']>;
  hasGatewayEnabled_neq?: InputMaybe<Scalars['uint8']['input']>;
  hasGatewayEnabled_notin?: InputMaybe<Scalars['bytes']['input']>;
  hasWarpEnabled?: InputMaybe<Scalars['uint8']['input']>;
  hasWarpEnabled_geq?: InputMaybe<Scalars['uint8']['input']>;
  hasWarpEnabled_gt?: InputMaybe<Scalars['uint8']['input']>;
  hasWarpEnabled_in?: InputMaybe<Scalars['bytes']['input']>;
  hasWarpEnabled_leq?: InputMaybe<Scalars['uint8']['input']>;
  hasWarpEnabled_lt?: InputMaybe<Scalars['uint8']['input']>;
  hasWarpEnabled_neq?: InputMaybe<Scalars['uint8']['input']>;
  hasWarpEnabled_notin?: InputMaybe<Scalars['bytes']['input']>;
  identityProvider?: InputMaybe<Scalars['string']['input']>;
  identityProvider_geq?: InputMaybe<Scalars['string']['input']>;
  identityProvider_gt?: InputMaybe<Scalars['string']['input']>;
  identityProvider_in?: InputMaybe<Array<Scalars['string']['input']>>;
  identityProvider_leq?: InputMaybe<Scalars['string']['input']>;
  identityProvider_like?: InputMaybe<Scalars['string']['input']>;
  identityProvider_lt?: InputMaybe<Scalars['string']['input']>;
  identityProvider_neq?: InputMaybe<Scalars['string']['input']>;
  identityProvider_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  identityProvider_notlike?: InputMaybe<Scalars['string']['input']>;
  ipAddress?: InputMaybe<Scalars['string']['input']>;
  ipAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  isSuccessfulLogin?: InputMaybe<Scalars['uint8']['input']>;
  isSuccessfulLogin_geq?: InputMaybe<Scalars['uint8']['input']>;
  isSuccessfulLogin_gt?: InputMaybe<Scalars['uint8']['input']>;
  isSuccessfulLogin_in?: InputMaybe<Scalars['bytes']['input']>;
  isSuccessfulLogin_leq?: InputMaybe<Scalars['uint8']['input']>;
  isSuccessfulLogin_lt?: InputMaybe<Scalars['uint8']['input']>;
  isSuccessfulLogin_neq?: InputMaybe<Scalars['uint8']['input']>;
  isSuccessfulLogin_notin?: InputMaybe<Scalars['bytes']['input']>;
  mtlsCertSerialId?: InputMaybe<Scalars['string']['input']>;
  mtlsCertSerialId_geq?: InputMaybe<Scalars['string']['input']>;
  mtlsCertSerialId_gt?: InputMaybe<Scalars['string']['input']>;
  mtlsCertSerialId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mtlsCertSerialId_leq?: InputMaybe<Scalars['string']['input']>;
  mtlsCertSerialId_like?: InputMaybe<Scalars['string']['input']>;
  mtlsCertSerialId_lt?: InputMaybe<Scalars['string']['input']>;
  mtlsCertSerialId_neq?: InputMaybe<Scalars['string']['input']>;
  mtlsCertSerialId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mtlsCertSerialId_notlike?: InputMaybe<Scalars['string']['input']>;
  mtlsCommonName?: InputMaybe<Scalars['string']['input']>;
  mtlsCommonName_geq?: InputMaybe<Scalars['string']['input']>;
  mtlsCommonName_gt?: InputMaybe<Scalars['string']['input']>;
  mtlsCommonName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mtlsCommonName_leq?: InputMaybe<Scalars['string']['input']>;
  mtlsCommonName_like?: InputMaybe<Scalars['string']['input']>;
  mtlsCommonName_lt?: InputMaybe<Scalars['string']['input']>;
  mtlsCommonName_neq?: InputMaybe<Scalars['string']['input']>;
  mtlsCommonName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mtlsCommonName_notlike?: InputMaybe<Scalars['string']['input']>;
  mtlsStatus?: InputMaybe<Scalars['string']['input']>;
  mtlsStatus_geq?: InputMaybe<Scalars['string']['input']>;
  mtlsStatus_gt?: InputMaybe<Scalars['string']['input']>;
  mtlsStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mtlsStatus_leq?: InputMaybe<Scalars['string']['input']>;
  mtlsStatus_like?: InputMaybe<Scalars['string']['input']>;
  mtlsStatus_lt?: InputMaybe<Scalars['string']['input']>;
  mtlsStatus_neq?: InputMaybe<Scalars['string']['input']>;
  mtlsStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mtlsStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  serviceTokenId?: InputMaybe<Scalars['string']['input']>;
  serviceTokenId_geq?: InputMaybe<Scalars['string']['input']>;
  serviceTokenId_gt?: InputMaybe<Scalars['string']['input']>;
  serviceTokenId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  serviceTokenId_leq?: InputMaybe<Scalars['string']['input']>;
  serviceTokenId_like?: InputMaybe<Scalars['string']['input']>;
  serviceTokenId_lt?: InputMaybe<Scalars['string']['input']>;
  serviceTokenId_neq?: InputMaybe<Scalars['string']['input']>;
  serviceTokenId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  serviceTokenId_notlike?: InputMaybe<Scalars['string']['input']>;
  userUuid?: InputMaybe<Scalars['string']['input']>;
  userUuid_geq?: InputMaybe<Scalars['string']['input']>;
  userUuid_gt?: InputMaybe<Scalars['string']['input']>;
  userUuid_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userUuid_leq?: InputMaybe<Scalars['string']['input']>;
  userUuid_like?: InputMaybe<Scalars['string']['input']>;
  userUuid_lt?: InputMaybe<Scalars['string']['input']>;
  userUuid_neq?: InputMaybe<Scalars['string']['input']>;
  userUuid_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userUuid_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountAccessLoginRequestsAdaptiveGroupsOrderBy {
  /** appId ascending */
  AppIdAsc = 'appId_ASC',
  /** appId descending */
  AppIdDesc = 'appId_DESC',
  /** approvingPolicyId ascending */
  ApprovingPolicyIdAsc = 'approvingPolicyId_ASC',
  /** approvingPolicyId descending */
  ApprovingPolicyIdDesc = 'approvingPolicyId_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** cfRayId ascending */
  CfRayIdAsc = 'cfRayId_ASC',
  /** cfRayId descending */
  CfRayIdDesc = 'cfRayId_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** country ascending */
  CountryAsc = 'country_ASC',
  /** country descending */
  CountryDesc = 'country_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** deviceId ascending */
  DeviceIdAsc = 'deviceId_ASC',
  /** deviceId descending */
  DeviceIdDesc = 'deviceId_DESC',
  /** hasExistingJWT ascending */
  HasExistingJwtAsc = 'hasExistingJWT_ASC',
  /** hasExistingJWT descending */
  HasExistingJwtDesc = 'hasExistingJWT_DESC',
  /** hasGatewayEnabled ascending */
  HasGatewayEnabledAsc = 'hasGatewayEnabled_ASC',
  /** hasGatewayEnabled descending */
  HasGatewayEnabledDesc = 'hasGatewayEnabled_DESC',
  /** hasWarpEnabled ascending */
  HasWarpEnabledAsc = 'hasWarpEnabled_ASC',
  /** hasWarpEnabled descending */
  HasWarpEnabledDesc = 'hasWarpEnabled_DESC',
  /** identityProvider ascending */
  IdentityProviderAsc = 'identityProvider_ASC',
  /** identityProvider descending */
  IdentityProviderDesc = 'identityProvider_DESC',
  /** ipAddress ascending */
  IpAddressAsc = 'ipAddress_ASC',
  /** ipAddress descending */
  IpAddressDesc = 'ipAddress_DESC',
  /** isSuccessfulLogin ascending */
  IsSuccessfulLoginAsc = 'isSuccessfulLogin_ASC',
  /** isSuccessfulLogin descending */
  IsSuccessfulLoginDesc = 'isSuccessfulLogin_DESC',
  /** mtlsCertSerialId ascending */
  MtlsCertSerialIdAsc = 'mtlsCertSerialId_ASC',
  /** mtlsCertSerialId descending */
  MtlsCertSerialIdDesc = 'mtlsCertSerialId_DESC',
  /** mtlsCommonName ascending */
  MtlsCommonNameAsc = 'mtlsCommonName_ASC',
  /** mtlsCommonName descending */
  MtlsCommonNameDesc = 'mtlsCommonName_DESC',
  /** mtlsStatus ascending */
  MtlsStatusAsc = 'mtlsStatus_ASC',
  /** mtlsStatus descending */
  MtlsStatusDesc = 'mtlsStatus_DESC',
  /** serviceTokenId ascending */
  ServiceTokenIdAsc = 'serviceTokenId_ASC',
  /** serviceTokenId descending */
  ServiceTokenIdDesc = 'serviceTokenId_DESC',
  /** userUuid ascending */
  UserUuidAsc = 'userUuid_ASC',
  /** userUuid descending */
  UserUuidDesc = 'userUuid_DESC'
}

/** Network analytics data for Advanced DNS Protection */
export type AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroups = {
  __typename?: 'AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroups';
  /** The average of values for a metric per dimension */
  avg?: Maybe<AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsSum>;
};

export type AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsAvg = {
  __typename?: 'AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsAvg';
  /** Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime */
  bitRate: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date */
  bitRateDay: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes */
  bitRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes */
  bitRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour */
  bitRateHour: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute */
  bitRateMinute: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds */
  bitRateTenSeconds: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime */
  packetRate: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date */
  packetRateDay: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes */
  packetRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes */
  packetRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour */
  packetRateHour: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute */
  packetRateMinute: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds */
  packetRateTenSeconds: Scalars['uint64']['output'];
};

export type AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsDimensions = {
  __typename?: 'AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsDimensions';
  /** Application tag associated with the packet */
  applicationTag: Scalars['string']['output'];
  /** City where the Cloudflare datacenter that received the packet is located */
  coloCity: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (nearest IATA airport code) */
  coloCode: Scalars['string']['output'];
  /** Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2) */
  coloCountry: Scalars['string']['output'];
  /** Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding) */
  coloGeohash: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (unique site identifier) */
  coloName: Scalars['string']['output'];
  /** Date that the packet was received */
  date: Scalars['Date']['output'];
  /** Date and time that the packet was received */
  datetime: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest hour */
  datetimeHour: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest ten seconds */
  datetimeTenSeconds: Scalars['Time']['output'];
  /** ASN associated with the destination IP of the packet, or 0 if there was no mapping available */
  destinationAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the destination IP of the packet, if available */
  destinationAsnName: Scalars['string']['output'];
  /** Country where the destination IP of the packet is located (ISO 3166-1 alpha-2) */
  destinationCountry: Scalars['string']['output'];
  /** Latitude and longitude where the destination IP of the packet is located (Geohash encoding) */
  destinationGeohash: Scalars['string']['output'];
  /** Value of the Destination Port header field in the TCP or UDP packet */
  destinationPort: Scalars['uint16']['output'];
  /** Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral) */
  direction: Scalars['string']['output'];
  /** The requested domain name in the DNS query */
  dnsQueryName: Scalars['string']['output'];
  /** The query type in the DNS query */
  dnsQueryType: Scalars['string']['output'];
  /** Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6) */
  ethertype: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the GRE packet */
  greChecksum: Scalars['uint16']['output'];
  /** Value of the Ethertype header field in the GRE packet */
  greEthertype: Scalars['uint16']['output'];
  /** Length of the GRE packet header, in bytes */
  greHeaderLength: Scalars['uint16']['output'];
  /** Value of the Key header field in the GRE packet */
  greKey: Scalars['uint32']['output'];
  /** Value of the Sequence Number header field in the GRE packet */
  greSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Version header field in the GRE packet */
  greVersion: Scalars['uint8']['output'];
  /** Value of the Checkusm header field in the ICMP packet */
  icmpChecksum: Scalars['uint16']['output'];
  /** Value of the Code header field in the ICMP packet */
  icmpCode: Scalars['uint8']['output'];
  /** Value of the Type header field in the ICMP packet */
  icmpType: Scalars['uint8']['output'];
  /** Value of the Destination Address header field in the IPv4 or IPv6 packet */
  ipDestinationAddress: Scalars['string']['output'];
  /** Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipDestinationSubnet: Scalars['string']['output'];
  /** Value of the Fragment Offset header field in the IPv4 or IPv6 packet */
  ipFragmentOffset: Scalars['uint16']['output'];
  /** Length of the IPv4 or IPv6 packet header, in bytes */
  ipHeaderLength: Scalars['uint16']['output'];
  /** Value of the More Fragments header field in the IPv4 or IPv6 packet */
  ipMoreFragments: Scalars['uint8']['output'];
  /** Value of the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocol: Scalars['uint8']['output'];
  /** Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocolName: Scalars['string']['output'];
  /** Value of the Source Address header field in the IPv4 or IPv6 packet */
  ipSourceAddress: Scalars['string']['output'];
  /** Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipSourceSubnet: Scalars['string']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes */
  ipTotalLength: Scalars['uint16']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated */
  ipTotalLengthBuckets: Scalars['uint16']['output'];
  /** Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet */
  ipTtl: Scalars['uint8']['output'];
  /**
   * Value of the TTL header field in the IPv4 packet or the Hop Limit header field
   * in the IPv6 packet, with the last digit truncated
   */
  ipTtlBuckets: Scalars['uint8']['output'];
  /** Value of the Checksum header field in the IPv4 packet */
  ipv4Checksum: Scalars['uint16']['output'];
  /** Value of the Don't Fragment header field in the IPv4 packet */
  ipv4DontFragment: Scalars['uint8']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv4 packet */
  ipv4Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv4 packet */
  ipv4Ecn: Scalars['uint8']['output'];
  /** Value of the Identification header field in the IPv4 packet */
  ipv4Identification: Scalars['uint16']['output'];
  /** List of Options numbers included in the IPv4 packet header */
  ipv4Options: Scalars['string']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv6 packet */
  ipv6Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv6 packet */
  ipv6Ecn: Scalars['uint8']['output'];
  /** List of Extension Header numbers included in the IPv6 packet header */
  ipv6ExtensionHeaders: Scalars['string']['output'];
  /** Value of the Flow Label header field in the IPv6 packet */
  ipv6FlowLabel: Scalars['uint32']['output'];
  /** Value of the Identification extension header field in the IPv6 packet */
  ipv6Identification: Scalars['uint32']['output'];
  /** IP lease tag associated with the packet */
  leaseTag: Scalars['string']['output'];
  /** Reason for applying a mitigation to the packet, if any */
  mitigationReason: Scalars['string']['output'];
  /** Whether the packet matched a local or global mitigation, if any (possible values: local, global) */
  mitigationScope: Scalars['string']['output'];
  /** The action that was taken on the packet (possible values: pass, drop) */
  outcome: Scalars['string']['output'];
  /** IP prefix tag associated with the packet */
  prefixTag: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** ASN associated with the source IP of the packet, or 0 if there was no mapping available */
  sourceAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the source IP of the packet, if available */
  sourceAsnName: Scalars['string']['output'];
  /** Country where the source IP of the packet is located (ISO 3166-1 alpha-2) */
  sourceCountry: Scalars['string']['output'];
  /** Latitude and longitude where the source IP of the packet is located (Geohash encoding) */
  sourceGeohash: Scalars['string']['output'];
  /** Value of the Source Port header field in the TCP or UDP packet */
  sourcePort: Scalars['uint16']['output'];
  /** Value of the Acknowledgement Number header field in the TCP packet */
  tcpAcknowledgementNumber: Scalars['uint32']['output'];
  /** Value of the Checkusm header field in the TCP packet */
  tcpChecksum: Scalars['uint16']['output'];
  /** Value of the Data Offset header field in the TCP packet */
  tcpDataOffset: Scalars['uint16']['output'];
  /** Value of the Flags header field in the TCP packet */
  tcpFlags: Scalars['uint8']['output'];
  /** Human-readable string representation of the Flags header field in the TCP packet */
  tcpFlagsString: Scalars['string']['output'];
  /** Value of the MSS option header field in the TCP packet */
  tcpMss: Scalars['uint16']['output'];
  /** List of Options numbers included in the TCP packet header */
  tcpOptions: Scalars['string']['output'];
  /** Value of the SACK Blocks option header field in the TCP packet */
  tcpSackBlocks: Scalars['string']['output'];
  /** Value of the SACK Permitted option header field in the TCP packet */
  tcpSackPermitted: Scalars['uint8']['output'];
  /** Value of the Sequence Number header field in the TCP packet */
  tcpSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Timestamp Echo Reply option header field in the TCP packet */
  tcpTimestampEcr: Scalars['uint32']['output'];
  /** Value of the Timestamp option header field in the TCP packet */
  tcpTimestampValue: Scalars['uint32']['output'];
  /** Value of the Urgent Pointer header field in the TCP packet */
  tcpUrgentPointer: Scalars['uint16']['output'];
  /** Value of the Window Scale option header field in the TCP packet */
  tcpWindowScale: Scalars['uint16']['output'];
  /** Value of the Window Size header field in the TCP packet */
  tcpWindowSize: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the UDP packet */
  udpChecksum: Scalars['uint16']['output'];
  /** Value of the Payload Length header field in the UDP packet */
  udpPayloadLength: Scalars['uint16']['output'];
  /** The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop) */
  verdict: Scalars['string']['output'];
};

export type AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  applicationTag?: InputMaybe<Scalars['string']['input']>;
  applicationTag_geq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_gt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_leq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_like?: InputMaybe<Scalars['string']['input']>;
  applicationTag_lt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_neq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCity?: InputMaybe<Scalars['string']['input']>;
  coloCity_geq?: InputMaybe<Scalars['string']['input']>;
  coloCity_gt?: InputMaybe<Scalars['string']['input']>;
  coloCity_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_leq?: InputMaybe<Scalars['string']['input']>;
  coloCity_like?: InputMaybe<Scalars['string']['input']>;
  coloCity_lt?: InputMaybe<Scalars['string']['input']>;
  coloCity_neq?: InputMaybe<Scalars['string']['input']>;
  coloCity_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCountry?: InputMaybe<Scalars['string']['input']>;
  coloCountry_geq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_gt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_leq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_like?: InputMaybe<Scalars['string']['input']>;
  coloCountry_lt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_neq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  coloGeohash?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_like?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  coloName?: InputMaybe<Scalars['string']['input']>;
  coloName_geq?: InputMaybe<Scalars['string']['input']>;
  coloName_gt?: InputMaybe<Scalars['string']['input']>;
  coloName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_leq?: InputMaybe<Scalars['string']['input']>;
  coloName_like?: InputMaybe<Scalars['string']['input']>;
  coloName_lt?: InputMaybe<Scalars['string']['input']>;
  coloName_neq?: InputMaybe<Scalars['string']['input']>;
  coloName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationAsn?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsnName?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_like?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationCountry?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_geq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_gt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_leq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_like?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_lt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_neq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_like?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  direction?: InputMaybe<Scalars['string']['input']>;
  direction_geq?: InputMaybe<Scalars['string']['input']>;
  direction_gt?: InputMaybe<Scalars['string']['input']>;
  direction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_leq?: InputMaybe<Scalars['string']['input']>;
  direction_like?: InputMaybe<Scalars['string']['input']>;
  direction_lt?: InputMaybe<Scalars['string']['input']>;
  direction_neq?: InputMaybe<Scalars['string']['input']>;
  direction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_notlike?: InputMaybe<Scalars['string']['input']>;
  dnsQueryName?: InputMaybe<Scalars['string']['input']>;
  dnsQueryName_geq?: InputMaybe<Scalars['string']['input']>;
  dnsQueryName_gt?: InputMaybe<Scalars['string']['input']>;
  dnsQueryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  dnsQueryName_leq?: InputMaybe<Scalars['string']['input']>;
  dnsQueryName_like?: InputMaybe<Scalars['string']['input']>;
  dnsQueryName_lt?: InputMaybe<Scalars['string']['input']>;
  dnsQueryName_neq?: InputMaybe<Scalars['string']['input']>;
  dnsQueryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  dnsQueryName_notlike?: InputMaybe<Scalars['string']['input']>;
  dnsQueryType?: InputMaybe<Scalars['string']['input']>;
  dnsQueryType_geq?: InputMaybe<Scalars['string']['input']>;
  dnsQueryType_gt?: InputMaybe<Scalars['string']['input']>;
  dnsQueryType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  dnsQueryType_leq?: InputMaybe<Scalars['string']['input']>;
  dnsQueryType_like?: InputMaybe<Scalars['string']['input']>;
  dnsQueryType_lt?: InputMaybe<Scalars['string']['input']>;
  dnsQueryType_neq?: InputMaybe<Scalars['string']['input']>;
  dnsQueryType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  dnsQueryType_notlike?: InputMaybe<Scalars['string']['input']>;
  ethertype?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ethertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greKey?: InputMaybe<Scalars['uint32']['input']>;
  greKey_geq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_gt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greKey_leq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_lt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_neq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greVersion?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  greVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpCode?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpCode_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpType?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpType_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipDestinationAddress?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipFragmentOffset?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipFragmentOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipMoreFragments?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_in?: InputMaybe<Scalars['bytes']['input']>;
  ipMoreFragments_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocolName?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_geq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_gt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_leq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_like?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_lt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_neq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipProtocol_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_in?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipSourceAddress?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipTotalLength?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLengthBuckets_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTtl?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtlBuckets_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Checksum?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Checksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4DontFragment?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4DontFragment_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Identification?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Identification_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Options?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_geq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_gt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_leq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_like?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_lt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_neq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6ExtensionHeaders?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_geq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_gt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_leq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_like?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_lt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_neq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6FlowLabel?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6FlowLabel_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  leaseTag?: InputMaybe<Scalars['string']['input']>;
  leaseTag_geq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_gt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_leq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_like?: InputMaybe<Scalars['string']['input']>;
  leaseTag_lt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_neq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationReason?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationReason_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_like?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationReason_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationScope?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationScope_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_like?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationScope_notlike?: InputMaybe<Scalars['string']['input']>;
  outcome?: InputMaybe<Scalars['string']['input']>;
  outcome_geq?: InputMaybe<Scalars['string']['input']>;
  outcome_gt?: InputMaybe<Scalars['string']['input']>;
  outcome_in?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_leq?: InputMaybe<Scalars['string']['input']>;
  outcome_like?: InputMaybe<Scalars['string']['input']>;
  outcome_lt?: InputMaybe<Scalars['string']['input']>;
  outcome_neq?: InputMaybe<Scalars['string']['input']>;
  outcome_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_notlike?: InputMaybe<Scalars['string']['input']>;
  prefixTag?: InputMaybe<Scalars['string']['input']>;
  prefixTag_geq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_gt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_leq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_like?: InputMaybe<Scalars['string']['input']>;
  prefixTag_lt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_neq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsnName?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_like?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceCountry?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_geq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_gt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_leq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_like?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_lt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_neq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_like?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpAcknowledgementNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpAcknowledgementNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlagsString?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_geq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_gt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_leq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_like?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_lt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_neq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpMss?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpMss_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpOptions?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_geq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_gt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_leq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_like?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_lt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_neq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_geq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_gt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_leq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_like?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_lt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_neq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackPermitted?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpSackPermitted_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpUrgentPointer?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpUrgentPointer_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  verdict?: InputMaybe<Scalars['string']['input']>;
  verdict_geq?: InputMaybe<Scalars['string']['input']>;
  verdict_gt?: InputMaybe<Scalars['string']['input']>;
  verdict_in?: InputMaybe<Array<Scalars['string']['input']>>;
  verdict_leq?: InputMaybe<Scalars['string']['input']>;
  verdict_like?: InputMaybe<Scalars['string']['input']>;
  verdict_lt?: InputMaybe<Scalars['string']['input']>;
  verdict_neq?: InputMaybe<Scalars['string']['input']>;
  verdict_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  verdict_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsOrderBy {
  /** applicationTag ascending */
  ApplicationTagAsc = 'applicationTag_ASC',
  /** applicationTag descending */
  ApplicationTagDesc = 'applicationTag_DESC',
  /** avg(bitRateDay) ascending */
  AvgBitRateDayAsc = 'avg_bitRateDay_ASC',
  /** avg(bitRateDay) descending */
  AvgBitRateDayDesc = 'avg_bitRateDay_DESC',
  /** avg(bitRateFifteenMinutes) ascending */
  AvgBitRateFifteenMinutesAsc = 'avg_bitRateFifteenMinutes_ASC',
  /** avg(bitRateFifteenMinutes) descending */
  AvgBitRateFifteenMinutesDesc = 'avg_bitRateFifteenMinutes_DESC',
  /** avg(bitRateFiveMinutes) ascending */
  AvgBitRateFiveMinutesAsc = 'avg_bitRateFiveMinutes_ASC',
  /** avg(bitRateFiveMinutes) descending */
  AvgBitRateFiveMinutesDesc = 'avg_bitRateFiveMinutes_DESC',
  /** avg(bitRateHour) ascending */
  AvgBitRateHourAsc = 'avg_bitRateHour_ASC',
  /** avg(bitRateHour) descending */
  AvgBitRateHourDesc = 'avg_bitRateHour_DESC',
  /** avg(bitRateMinute) ascending */
  AvgBitRateMinuteAsc = 'avg_bitRateMinute_ASC',
  /** avg(bitRateMinute) descending */
  AvgBitRateMinuteDesc = 'avg_bitRateMinute_DESC',
  /** avg(bitRateTenSeconds) ascending */
  AvgBitRateTenSecondsAsc = 'avg_bitRateTenSeconds_ASC',
  /** avg(bitRateTenSeconds) descending */
  AvgBitRateTenSecondsDesc = 'avg_bitRateTenSeconds_DESC',
  /** avg(bitRate) ascending */
  AvgBitRateAsc = 'avg_bitRate_ASC',
  /** avg(bitRate) descending */
  AvgBitRateDesc = 'avg_bitRate_DESC',
  /** avg(packetRateDay) ascending */
  AvgPacketRateDayAsc = 'avg_packetRateDay_ASC',
  /** avg(packetRateDay) descending */
  AvgPacketRateDayDesc = 'avg_packetRateDay_DESC',
  /** avg(packetRateFifteenMinutes) ascending */
  AvgPacketRateFifteenMinutesAsc = 'avg_packetRateFifteenMinutes_ASC',
  /** avg(packetRateFifteenMinutes) descending */
  AvgPacketRateFifteenMinutesDesc = 'avg_packetRateFifteenMinutes_DESC',
  /** avg(packetRateFiveMinutes) ascending */
  AvgPacketRateFiveMinutesAsc = 'avg_packetRateFiveMinutes_ASC',
  /** avg(packetRateFiveMinutes) descending */
  AvgPacketRateFiveMinutesDesc = 'avg_packetRateFiveMinutes_DESC',
  /** avg(packetRateHour) ascending */
  AvgPacketRateHourAsc = 'avg_packetRateHour_ASC',
  /** avg(packetRateHour) descending */
  AvgPacketRateHourDesc = 'avg_packetRateHour_DESC',
  /** avg(packetRateMinute) ascending */
  AvgPacketRateMinuteAsc = 'avg_packetRateMinute_ASC',
  /** avg(packetRateMinute) descending */
  AvgPacketRateMinuteDesc = 'avg_packetRateMinute_DESC',
  /** avg(packetRateTenSeconds) ascending */
  AvgPacketRateTenSecondsAsc = 'avg_packetRateTenSeconds_ASC',
  /** avg(packetRateTenSeconds) descending */
  AvgPacketRateTenSecondsDesc = 'avg_packetRateTenSeconds_DESC',
  /** avg(packetRate) ascending */
  AvgPacketRateAsc = 'avg_packetRate_ASC',
  /** avg(packetRate) descending */
  AvgPacketRateDesc = 'avg_packetRate_DESC',
  /** coloCity ascending */
  ColoCityAsc = 'coloCity_ASC',
  /** coloCity descending */
  ColoCityDesc = 'coloCity_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** coloCountry ascending */
  ColoCountryAsc = 'coloCountry_ASC',
  /** coloCountry descending */
  ColoCountryDesc = 'coloCountry_DESC',
  /** coloGeohash ascending */
  ColoGeohashAsc = 'coloGeohash_ASC',
  /** coloGeohash descending */
  ColoGeohashDesc = 'coloGeohash_DESC',
  /** coloName ascending */
  ColoNameAsc = 'coloName_ASC',
  /** coloName descending */
  ColoNameDesc = 'coloName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetimeTenSeconds ascending */
  DatetimeTenSecondsAsc = 'datetimeTenSeconds_ASC',
  /** datetimeTenSeconds descending */
  DatetimeTenSecondsDesc = 'datetimeTenSeconds_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationAsnName ascending */
  DestinationAsnNameAsc = 'destinationAsnName_ASC',
  /** destinationAsnName descending */
  DestinationAsnNameDesc = 'destinationAsnName_DESC',
  /** destinationAsn ascending */
  DestinationAsnAsc = 'destinationAsn_ASC',
  /** destinationAsn descending */
  DestinationAsnDesc = 'destinationAsn_DESC',
  /** destinationCountry ascending */
  DestinationCountryAsc = 'destinationCountry_ASC',
  /** destinationCountry descending */
  DestinationCountryDesc = 'destinationCountry_DESC',
  /** destinationGeohash ascending */
  DestinationGeohashAsc = 'destinationGeohash_ASC',
  /** destinationGeohash descending */
  DestinationGeohashDesc = 'destinationGeohash_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** direction ascending */
  DirectionAsc = 'direction_ASC',
  /** direction descending */
  DirectionDesc = 'direction_DESC',
  /** dnsQueryName ascending */
  DnsQueryNameAsc = 'dnsQueryName_ASC',
  /** dnsQueryName descending */
  DnsQueryNameDesc = 'dnsQueryName_DESC',
  /** dnsQueryType ascending */
  DnsQueryTypeAsc = 'dnsQueryType_ASC',
  /** dnsQueryType descending */
  DnsQueryTypeDesc = 'dnsQueryType_DESC',
  /** ethertype ascending */
  EthertypeAsc = 'ethertype_ASC',
  /** ethertype descending */
  EthertypeDesc = 'ethertype_DESC',
  /** greChecksum ascending */
  GreChecksumAsc = 'greChecksum_ASC',
  /** greChecksum descending */
  GreChecksumDesc = 'greChecksum_DESC',
  /** greEthertype ascending */
  GreEthertypeAsc = 'greEthertype_ASC',
  /** greEthertype descending */
  GreEthertypeDesc = 'greEthertype_DESC',
  /** greHeaderLength ascending */
  GreHeaderLengthAsc = 'greHeaderLength_ASC',
  /** greHeaderLength descending */
  GreHeaderLengthDesc = 'greHeaderLength_DESC',
  /** greKey ascending */
  GreKeyAsc = 'greKey_ASC',
  /** greKey descending */
  GreKeyDesc = 'greKey_DESC',
  /** greSequenceNumber ascending */
  GreSequenceNumberAsc = 'greSequenceNumber_ASC',
  /** greSequenceNumber descending */
  GreSequenceNumberDesc = 'greSequenceNumber_DESC',
  /** greVersion ascending */
  GreVersionAsc = 'greVersion_ASC',
  /** greVersion descending */
  GreVersionDesc = 'greVersion_DESC',
  /** icmpChecksum ascending */
  IcmpChecksumAsc = 'icmpChecksum_ASC',
  /** icmpChecksum descending */
  IcmpChecksumDesc = 'icmpChecksum_DESC',
  /** icmpCode ascending */
  IcmpCodeAsc = 'icmpCode_ASC',
  /** icmpCode descending */
  IcmpCodeDesc = 'icmpCode_DESC',
  /** icmpType ascending */
  IcmpTypeAsc = 'icmpType_ASC',
  /** icmpType descending */
  IcmpTypeDesc = 'icmpType_DESC',
  /** ipDestinationAddress ascending */
  IpDestinationAddressAsc = 'ipDestinationAddress_ASC',
  /** ipDestinationAddress descending */
  IpDestinationAddressDesc = 'ipDestinationAddress_DESC',
  /** ipDestinationSubnet ascending */
  IpDestinationSubnetAsc = 'ipDestinationSubnet_ASC',
  /** ipDestinationSubnet descending */
  IpDestinationSubnetDesc = 'ipDestinationSubnet_DESC',
  /** ipFragmentOffset ascending */
  IpFragmentOffsetAsc = 'ipFragmentOffset_ASC',
  /** ipFragmentOffset descending */
  IpFragmentOffsetDesc = 'ipFragmentOffset_DESC',
  /** ipHeaderLength ascending */
  IpHeaderLengthAsc = 'ipHeaderLength_ASC',
  /** ipHeaderLength descending */
  IpHeaderLengthDesc = 'ipHeaderLength_DESC',
  /** ipMoreFragments ascending */
  IpMoreFragmentsAsc = 'ipMoreFragments_ASC',
  /** ipMoreFragments descending */
  IpMoreFragmentsDesc = 'ipMoreFragments_DESC',
  /** ipProtocolName ascending */
  IpProtocolNameAsc = 'ipProtocolName_ASC',
  /** ipProtocolName descending */
  IpProtocolNameDesc = 'ipProtocolName_DESC',
  /** ipProtocol ascending */
  IpProtocolAsc = 'ipProtocol_ASC',
  /** ipProtocol descending */
  IpProtocolDesc = 'ipProtocol_DESC',
  /** ipSourceAddress ascending */
  IpSourceAddressAsc = 'ipSourceAddress_ASC',
  /** ipSourceAddress descending */
  IpSourceAddressDesc = 'ipSourceAddress_DESC',
  /** ipSourceSubnet ascending */
  IpSourceSubnetAsc = 'ipSourceSubnet_ASC',
  /** ipSourceSubnet descending */
  IpSourceSubnetDesc = 'ipSourceSubnet_DESC',
  /** ipTotalLengthBuckets ascending */
  IpTotalLengthBucketsAsc = 'ipTotalLengthBuckets_ASC',
  /** ipTotalLengthBuckets descending */
  IpTotalLengthBucketsDesc = 'ipTotalLengthBuckets_DESC',
  /** ipTotalLength ascending */
  IpTotalLengthAsc = 'ipTotalLength_ASC',
  /** ipTotalLength descending */
  IpTotalLengthDesc = 'ipTotalLength_DESC',
  /** ipTtlBuckets ascending */
  IpTtlBucketsAsc = 'ipTtlBuckets_ASC',
  /** ipTtlBuckets descending */
  IpTtlBucketsDesc = 'ipTtlBuckets_DESC',
  /** ipTtl ascending */
  IpTtlAsc = 'ipTtl_ASC',
  /** ipTtl descending */
  IpTtlDesc = 'ipTtl_DESC',
  /** ipv4Checksum ascending */
  Ipv4ChecksumAsc = 'ipv4Checksum_ASC',
  /** ipv4Checksum descending */
  Ipv4ChecksumDesc = 'ipv4Checksum_DESC',
  /** ipv4DontFragment ascending */
  Ipv4DontFragmentAsc = 'ipv4DontFragment_ASC',
  /** ipv4DontFragment descending */
  Ipv4DontFragmentDesc = 'ipv4DontFragment_DESC',
  /** ipv4Dscp ascending */
  Ipv4DscpAsc = 'ipv4Dscp_ASC',
  /** ipv4Dscp descending */
  Ipv4DscpDesc = 'ipv4Dscp_DESC',
  /** ipv4Ecn ascending */
  Ipv4EcnAsc = 'ipv4Ecn_ASC',
  /** ipv4Ecn descending */
  Ipv4EcnDesc = 'ipv4Ecn_DESC',
  /** ipv4Identification ascending */
  Ipv4IdentificationAsc = 'ipv4Identification_ASC',
  /** ipv4Identification descending */
  Ipv4IdentificationDesc = 'ipv4Identification_DESC',
  /** ipv4Options ascending */
  Ipv4OptionsAsc = 'ipv4Options_ASC',
  /** ipv4Options descending */
  Ipv4OptionsDesc = 'ipv4Options_DESC',
  /** ipv6Dscp ascending */
  Ipv6DscpAsc = 'ipv6Dscp_ASC',
  /** ipv6Dscp descending */
  Ipv6DscpDesc = 'ipv6Dscp_DESC',
  /** ipv6Ecn ascending */
  Ipv6EcnAsc = 'ipv6Ecn_ASC',
  /** ipv6Ecn descending */
  Ipv6EcnDesc = 'ipv6Ecn_DESC',
  /** ipv6ExtensionHeaders ascending */
  Ipv6ExtensionHeadersAsc = 'ipv6ExtensionHeaders_ASC',
  /** ipv6ExtensionHeaders descending */
  Ipv6ExtensionHeadersDesc = 'ipv6ExtensionHeaders_DESC',
  /** ipv6FlowLabel ascending */
  Ipv6FlowLabelAsc = 'ipv6FlowLabel_ASC',
  /** ipv6FlowLabel descending */
  Ipv6FlowLabelDesc = 'ipv6FlowLabel_DESC',
  /** ipv6Identification ascending */
  Ipv6IdentificationAsc = 'ipv6Identification_ASC',
  /** ipv6Identification descending */
  Ipv6IdentificationDesc = 'ipv6Identification_DESC',
  /** leaseTag ascending */
  LeaseTagAsc = 'leaseTag_ASC',
  /** leaseTag descending */
  LeaseTagDesc = 'leaseTag_DESC',
  /** mitigationReason ascending */
  MitigationReasonAsc = 'mitigationReason_ASC',
  /** mitigationReason descending */
  MitigationReasonDesc = 'mitigationReason_DESC',
  /** mitigationScope ascending */
  MitigationScopeAsc = 'mitigationScope_ASC',
  /** mitigationScope descending */
  MitigationScopeDesc = 'mitigationScope_DESC',
  /** outcome ascending */
  OutcomeAsc = 'outcome_ASC',
  /** outcome descending */
  OutcomeDesc = 'outcome_DESC',
  /** prefixTag ascending */
  PrefixTagAsc = 'prefixTag_ASC',
  /** prefixTag descending */
  PrefixTagDesc = 'prefixTag_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sourceAsnName ascending */
  SourceAsnNameAsc = 'sourceAsnName_ASC',
  /** sourceAsnName descending */
  SourceAsnNameDesc = 'sourceAsnName_DESC',
  /** sourceAsn ascending */
  SourceAsnAsc = 'sourceAsn_ASC',
  /** sourceAsn descending */
  SourceAsnDesc = 'sourceAsn_DESC',
  /** sourceCountry ascending */
  SourceCountryAsc = 'sourceCountry_ASC',
  /** sourceCountry descending */
  SourceCountryDesc = 'sourceCountry_DESC',
  /** sourceGeohash ascending */
  SourceGeohashAsc = 'sourceGeohash_ASC',
  /** sourceGeohash descending */
  SourceGeohashDesc = 'sourceGeohash_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** sum(bits) ascending */
  SumBitsAsc = 'sum_bits_ASC',
  /** sum(bits) descending */
  SumBitsDesc = 'sum_bits_DESC',
  /** sum(packets) ascending */
  SumPacketsAsc = 'sum_packets_ASC',
  /** sum(packets) descending */
  SumPacketsDesc = 'sum_packets_DESC',
  /** system ascending */
  SystemAsc = 'system_ASC',
  /** system descending */
  SystemDesc = 'system_DESC',
  /** tcpAcknowledgementNumber ascending */
  TcpAcknowledgementNumberAsc = 'tcpAcknowledgementNumber_ASC',
  /** tcpAcknowledgementNumber descending */
  TcpAcknowledgementNumberDesc = 'tcpAcknowledgementNumber_DESC',
  /** tcpChecksum ascending */
  TcpChecksumAsc = 'tcpChecksum_ASC',
  /** tcpChecksum descending */
  TcpChecksumDesc = 'tcpChecksum_DESC',
  /** tcpDataOffset ascending */
  TcpDataOffsetAsc = 'tcpDataOffset_ASC',
  /** tcpDataOffset descending */
  TcpDataOffsetDesc = 'tcpDataOffset_DESC',
  /** tcpFlagsString ascending */
  TcpFlagsStringAsc = 'tcpFlagsString_ASC',
  /** tcpFlagsString descending */
  TcpFlagsStringDesc = 'tcpFlagsString_DESC',
  /** tcpFlags ascending */
  TcpFlagsAsc = 'tcpFlags_ASC',
  /** tcpFlags descending */
  TcpFlagsDesc = 'tcpFlags_DESC',
  /** tcpMss ascending */
  TcpMssAsc = 'tcpMss_ASC',
  /** tcpMss descending */
  TcpMssDesc = 'tcpMss_DESC',
  /** tcpOptions ascending */
  TcpOptionsAsc = 'tcpOptions_ASC',
  /** tcpOptions descending */
  TcpOptionsDesc = 'tcpOptions_DESC',
  /** tcpSackBlocks ascending */
  TcpSackBlocksAsc = 'tcpSackBlocks_ASC',
  /** tcpSackBlocks descending */
  TcpSackBlocksDesc = 'tcpSackBlocks_DESC',
  /** tcpSackPermitted ascending */
  TcpSackPermittedAsc = 'tcpSackPermitted_ASC',
  /** tcpSackPermitted descending */
  TcpSackPermittedDesc = 'tcpSackPermitted_DESC',
  /** tcpSequenceNumber ascending */
  TcpSequenceNumberAsc = 'tcpSequenceNumber_ASC',
  /** tcpSequenceNumber descending */
  TcpSequenceNumberDesc = 'tcpSequenceNumber_DESC',
  /** tcpTimestampEcr ascending */
  TcpTimestampEcrAsc = 'tcpTimestampEcr_ASC',
  /** tcpTimestampEcr descending */
  TcpTimestampEcrDesc = 'tcpTimestampEcr_DESC',
  /** tcpTimestampValue ascending */
  TcpTimestampValueAsc = 'tcpTimestampValue_ASC',
  /** tcpTimestampValue descending */
  TcpTimestampValueDesc = 'tcpTimestampValue_DESC',
  /** tcpUrgentPointer ascending */
  TcpUrgentPointerAsc = 'tcpUrgentPointer_ASC',
  /** tcpUrgentPointer descending */
  TcpUrgentPointerDesc = 'tcpUrgentPointer_DESC',
  /** tcpWindowScale ascending */
  TcpWindowScaleAsc = 'tcpWindowScale_ASC',
  /** tcpWindowScale descending */
  TcpWindowScaleDesc = 'tcpWindowScale_DESC',
  /** tcpWindowSize ascending */
  TcpWindowSizeAsc = 'tcpWindowSize_ASC',
  /** tcpWindowSize descending */
  TcpWindowSizeDesc = 'tcpWindowSize_DESC',
  /** udpChecksum ascending */
  UdpChecksumAsc = 'udpChecksum_ASC',
  /** udpChecksum descending */
  UdpChecksumDesc = 'udpChecksum_DESC',
  /** udpPayloadLength ascending */
  UdpPayloadLengthAsc = 'udpPayloadLength_ASC',
  /** udpPayloadLength descending */
  UdpPayloadLengthDesc = 'udpPayloadLength_DESC',
  /** verdict ascending */
  VerdictAsc = 'verdict_ASC',
  /** verdict descending */
  VerdictDesc = 'verdict_DESC'
}

export type AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsSum = {
  __typename?: 'AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsSum';
  /** Sum of bits received */
  bits: Scalars['uint64']['output'];
  /** Sum of packets received */
  packets: Scalars['uint64']['output'];
};

/** Network analytics data for Advanced TCP Protection */
export type AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroups = {
  __typename?: 'AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroups';
  /** The average of values for a metric per dimension */
  avg?: Maybe<AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsSum>;
};

export type AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsAvg = {
  __typename?: 'AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsAvg';
  /** Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime */
  bitRate: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date */
  bitRateDay: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes */
  bitRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes */
  bitRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour */
  bitRateHour: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute */
  bitRateMinute: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds */
  bitRateTenSeconds: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime */
  packetRate: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date */
  packetRateDay: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes */
  packetRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes */
  packetRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour */
  packetRateHour: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute */
  packetRateMinute: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds */
  packetRateTenSeconds: Scalars['uint64']['output'];
};

export type AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsDimensions = {
  __typename?: 'AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsDimensions';
  /** Application tag associated with the packet */
  applicationTag: Scalars['string']['output'];
  /** City where the Cloudflare datacenter that received the packet is located */
  coloCity: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (nearest IATA airport code) */
  coloCode: Scalars['string']['output'];
  /** Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2) */
  coloCountry: Scalars['string']['output'];
  /** Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding) */
  coloGeohash: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (unique site identifier) */
  coloName: Scalars['string']['output'];
  /** Date that the packet was received */
  date: Scalars['Date']['output'];
  /** Date and time that the packet was received */
  datetime: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest hour */
  datetimeHour: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest ten seconds */
  datetimeTenSeconds: Scalars['Time']['output'];
  /** ASN associated with the destination IP of the packet, or 0 if there was no mapping available */
  destinationAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the destination IP of the packet, if available */
  destinationAsnName: Scalars['string']['output'];
  /** Country where the destination IP of the packet is located (ISO 3166-1 alpha-2) */
  destinationCountry: Scalars['string']['output'];
  /** Latitude and longitude where the destination IP of the packet is located (Geohash encoding) */
  destinationGeohash: Scalars['string']['output'];
  /** Value of the Destination Port header field in the TCP or UDP packet */
  destinationPort: Scalars['uint16']['output'];
  /** Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral) */
  direction: Scalars['string']['output'];
  /** Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6) */
  ethertype: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the GRE packet */
  greChecksum: Scalars['uint16']['output'];
  /** Value of the Ethertype header field in the GRE packet */
  greEthertype: Scalars['uint16']['output'];
  /** Length of the GRE packet header, in bytes */
  greHeaderLength: Scalars['uint16']['output'];
  /** Value of the Key header field in the GRE packet */
  greKey: Scalars['uint32']['output'];
  /** Value of the Sequence Number header field in the GRE packet */
  greSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Version header field in the GRE packet */
  greVersion: Scalars['uint8']['output'];
  /** Value of the Checkusm header field in the ICMP packet */
  icmpChecksum: Scalars['uint16']['output'];
  /** Value of the Code header field in the ICMP packet */
  icmpCode: Scalars['uint8']['output'];
  /** Value of the Type header field in the ICMP packet */
  icmpType: Scalars['uint8']['output'];
  /** Value of the Destination Address header field in the IPv4 or IPv6 packet */
  ipDestinationAddress: Scalars['string']['output'];
  /** Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipDestinationSubnet: Scalars['string']['output'];
  /** Value of the Fragment Offset header field in the IPv4 or IPv6 packet */
  ipFragmentOffset: Scalars['uint16']['output'];
  /** Length of the IPv4 or IPv6 packet header, in bytes */
  ipHeaderLength: Scalars['uint16']['output'];
  /** Value of the More Fragments header field in the IPv4 or IPv6 packet */
  ipMoreFragments: Scalars['uint8']['output'];
  /** Value of the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocol: Scalars['uint8']['output'];
  /** Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocolName: Scalars['string']['output'];
  /** Value of the Source Address header field in the IPv4 or IPv6 packet */
  ipSourceAddress: Scalars['string']['output'];
  /** Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipSourceSubnet: Scalars['string']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes */
  ipTotalLength: Scalars['uint16']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated */
  ipTotalLengthBuckets: Scalars['uint16']['output'];
  /** Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet */
  ipTtl: Scalars['uint8']['output'];
  /**
   * Value of the TTL header field in the IPv4 packet or the Hop Limit header field
   * in the IPv6 packet, with the last digit truncated
   */
  ipTtlBuckets: Scalars['uint8']['output'];
  /** Value of the Checksum header field in the IPv4 packet */
  ipv4Checksum: Scalars['uint16']['output'];
  /** Value of the Don't Fragment header field in the IPv4 packet */
  ipv4DontFragment: Scalars['uint8']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv4 packet */
  ipv4Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv4 packet */
  ipv4Ecn: Scalars['uint8']['output'];
  /** Value of the Identification header field in the IPv4 packet */
  ipv4Identification: Scalars['uint16']['output'];
  /** List of Options numbers included in the IPv4 packet header */
  ipv4Options: Scalars['string']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv6 packet */
  ipv6Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv6 packet */
  ipv6Ecn: Scalars['uint8']['output'];
  /** List of Extension Header numbers included in the IPv6 packet header */
  ipv6ExtensionHeaders: Scalars['string']['output'];
  /** Value of the Flow Label header field in the IPv6 packet */
  ipv6FlowLabel: Scalars['uint32']['output'];
  /** Value of the Identification extension header field in the IPv6 packet */
  ipv6Identification: Scalars['uint32']['output'];
  /** IP lease tag associated with the packet */
  leaseTag: Scalars['string']['output'];
  /** Reason for applying a mitigation to the packet, if any */
  mitigationReason: Scalars['string']['output'];
  /** Whether the packet matched a local or global mitigation, if any (possible values: local, global) */
  mitigationScope: Scalars['string']['output'];
  /** The action that was taken on the packet (possible values: pass, drop) */
  outcome: Scalars['string']['output'];
  /** IP prefix tag associated with the packet */
  prefixTag: Scalars['string']['output'];
  /** State of the packet in the context of the protocol, if available */
  protocolState: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** ASN associated with the source IP of the packet, or 0 if there was no mapping available */
  sourceAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the source IP of the packet, if available */
  sourceAsnName: Scalars['string']['output'];
  /** Country where the source IP of the packet is located (ISO 3166-1 alpha-2) */
  sourceCountry: Scalars['string']['output'];
  /** Latitude and longitude where the source IP of the packet is located (Geohash encoding) */
  sourceGeohash: Scalars['string']['output'];
  /** Value of the Source Port header field in the TCP or UDP packet */
  sourcePort: Scalars['uint16']['output'];
  /** Value of the Acknowledgement Number header field in the TCP packet */
  tcpAcknowledgementNumber: Scalars['uint32']['output'];
  /** Value of the Checkusm header field in the TCP packet */
  tcpChecksum: Scalars['uint16']['output'];
  /** Value of the Data Offset header field in the TCP packet */
  tcpDataOffset: Scalars['uint16']['output'];
  /** Value of the Flags header field in the TCP packet */
  tcpFlags: Scalars['uint8']['output'];
  /** Human-readable string representation of the Flags header field in the TCP packet */
  tcpFlagsString: Scalars['string']['output'];
  /** Value of the MSS option header field in the TCP packet */
  tcpMss: Scalars['uint16']['output'];
  /** List of Options numbers included in the TCP packet header */
  tcpOptions: Scalars['string']['output'];
  /** Value of the SACK Blocks option header field in the TCP packet */
  tcpSackBlocks: Scalars['string']['output'];
  /** Value of the SACK Permitted option header field in the TCP packet */
  tcpSackPermitted: Scalars['uint8']['output'];
  /** Value of the Sequence Number header field in the TCP packet */
  tcpSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Timestamp Echo Reply option header field in the TCP packet */
  tcpTimestampEcr: Scalars['uint32']['output'];
  /** Value of the Timestamp option header field in the TCP packet */
  tcpTimestampValue: Scalars['uint32']['output'];
  /** Value of the Urgent Pointer header field in the TCP packet */
  tcpUrgentPointer: Scalars['uint16']['output'];
  /** Value of the Window Scale option header field in the TCP packet */
  tcpWindowScale: Scalars['uint16']['output'];
  /** Value of the Window Size header field in the TCP packet */
  tcpWindowSize: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the UDP packet */
  udpChecksum: Scalars['uint16']['output'];
  /** Value of the Payload Length header field in the UDP packet */
  udpPayloadLength: Scalars['uint16']['output'];
  /** The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop) */
  verdict: Scalars['string']['output'];
};

export type AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  applicationTag?: InputMaybe<Scalars['string']['input']>;
  applicationTag_geq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_gt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_leq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_like?: InputMaybe<Scalars['string']['input']>;
  applicationTag_lt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_neq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCity?: InputMaybe<Scalars['string']['input']>;
  coloCity_geq?: InputMaybe<Scalars['string']['input']>;
  coloCity_gt?: InputMaybe<Scalars['string']['input']>;
  coloCity_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_leq?: InputMaybe<Scalars['string']['input']>;
  coloCity_like?: InputMaybe<Scalars['string']['input']>;
  coloCity_lt?: InputMaybe<Scalars['string']['input']>;
  coloCity_neq?: InputMaybe<Scalars['string']['input']>;
  coloCity_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCountry?: InputMaybe<Scalars['string']['input']>;
  coloCountry_geq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_gt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_leq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_like?: InputMaybe<Scalars['string']['input']>;
  coloCountry_lt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_neq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  coloGeohash?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_like?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  coloName?: InputMaybe<Scalars['string']['input']>;
  coloName_geq?: InputMaybe<Scalars['string']['input']>;
  coloName_gt?: InputMaybe<Scalars['string']['input']>;
  coloName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_leq?: InputMaybe<Scalars['string']['input']>;
  coloName_like?: InputMaybe<Scalars['string']['input']>;
  coloName_lt?: InputMaybe<Scalars['string']['input']>;
  coloName_neq?: InputMaybe<Scalars['string']['input']>;
  coloName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationAsn?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsnName?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_like?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationCountry?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_geq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_gt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_leq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_like?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_lt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_neq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_like?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  direction?: InputMaybe<Scalars['string']['input']>;
  direction_geq?: InputMaybe<Scalars['string']['input']>;
  direction_gt?: InputMaybe<Scalars['string']['input']>;
  direction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_leq?: InputMaybe<Scalars['string']['input']>;
  direction_like?: InputMaybe<Scalars['string']['input']>;
  direction_lt?: InputMaybe<Scalars['string']['input']>;
  direction_neq?: InputMaybe<Scalars['string']['input']>;
  direction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_notlike?: InputMaybe<Scalars['string']['input']>;
  ethertype?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ethertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greKey?: InputMaybe<Scalars['uint32']['input']>;
  greKey_geq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_gt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greKey_leq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_lt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_neq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greVersion?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  greVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpCode?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpCode_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpType?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpType_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipDestinationAddress?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipFragmentOffset?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipFragmentOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipMoreFragments?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_in?: InputMaybe<Scalars['bytes']['input']>;
  ipMoreFragments_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocolName?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_geq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_gt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_leq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_like?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_lt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_neq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipProtocol_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_in?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipSourceAddress?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipTotalLength?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLengthBuckets_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTtl?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtlBuckets_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Checksum?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Checksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4DontFragment?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4DontFragment_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Identification?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Identification_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Options?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_geq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_gt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_leq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_like?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_lt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_neq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6ExtensionHeaders?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_geq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_gt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_leq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_like?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_lt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_neq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6FlowLabel?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6FlowLabel_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  leaseTag?: InputMaybe<Scalars['string']['input']>;
  leaseTag_geq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_gt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_leq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_like?: InputMaybe<Scalars['string']['input']>;
  leaseTag_lt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_neq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationReason?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationReason_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_like?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationReason_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationScope?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationScope_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_like?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationScope_notlike?: InputMaybe<Scalars['string']['input']>;
  outcome?: InputMaybe<Scalars['string']['input']>;
  outcome_geq?: InputMaybe<Scalars['string']['input']>;
  outcome_gt?: InputMaybe<Scalars['string']['input']>;
  outcome_in?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_leq?: InputMaybe<Scalars['string']['input']>;
  outcome_like?: InputMaybe<Scalars['string']['input']>;
  outcome_lt?: InputMaybe<Scalars['string']['input']>;
  outcome_neq?: InputMaybe<Scalars['string']['input']>;
  outcome_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_notlike?: InputMaybe<Scalars['string']['input']>;
  prefixTag?: InputMaybe<Scalars['string']['input']>;
  prefixTag_geq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_gt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_leq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_like?: InputMaybe<Scalars['string']['input']>;
  prefixTag_lt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_neq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_notlike?: InputMaybe<Scalars['string']['input']>;
  protocolState?: InputMaybe<Scalars['string']['input']>;
  protocolState_geq?: InputMaybe<Scalars['string']['input']>;
  protocolState_gt?: InputMaybe<Scalars['string']['input']>;
  protocolState_in?: InputMaybe<Array<Scalars['string']['input']>>;
  protocolState_leq?: InputMaybe<Scalars['string']['input']>;
  protocolState_like?: InputMaybe<Scalars['string']['input']>;
  protocolState_lt?: InputMaybe<Scalars['string']['input']>;
  protocolState_neq?: InputMaybe<Scalars['string']['input']>;
  protocolState_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  protocolState_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsnName?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_like?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceCountry?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_geq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_gt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_leq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_like?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_lt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_neq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_like?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpAcknowledgementNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpAcknowledgementNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlagsString?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_geq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_gt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_leq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_like?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_lt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_neq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpMss?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpMss_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpOptions?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_geq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_gt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_leq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_like?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_lt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_neq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_geq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_gt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_leq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_like?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_lt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_neq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackPermitted?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpSackPermitted_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpUrgentPointer?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpUrgentPointer_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  verdict?: InputMaybe<Scalars['string']['input']>;
  verdict_geq?: InputMaybe<Scalars['string']['input']>;
  verdict_gt?: InputMaybe<Scalars['string']['input']>;
  verdict_in?: InputMaybe<Array<Scalars['string']['input']>>;
  verdict_leq?: InputMaybe<Scalars['string']['input']>;
  verdict_like?: InputMaybe<Scalars['string']['input']>;
  verdict_lt?: InputMaybe<Scalars['string']['input']>;
  verdict_neq?: InputMaybe<Scalars['string']['input']>;
  verdict_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  verdict_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsOrderBy {
  /** applicationTag ascending */
  ApplicationTagAsc = 'applicationTag_ASC',
  /** applicationTag descending */
  ApplicationTagDesc = 'applicationTag_DESC',
  /** avg(bitRateDay) ascending */
  AvgBitRateDayAsc = 'avg_bitRateDay_ASC',
  /** avg(bitRateDay) descending */
  AvgBitRateDayDesc = 'avg_bitRateDay_DESC',
  /** avg(bitRateFifteenMinutes) ascending */
  AvgBitRateFifteenMinutesAsc = 'avg_bitRateFifteenMinutes_ASC',
  /** avg(bitRateFifteenMinutes) descending */
  AvgBitRateFifteenMinutesDesc = 'avg_bitRateFifteenMinutes_DESC',
  /** avg(bitRateFiveMinutes) ascending */
  AvgBitRateFiveMinutesAsc = 'avg_bitRateFiveMinutes_ASC',
  /** avg(bitRateFiveMinutes) descending */
  AvgBitRateFiveMinutesDesc = 'avg_bitRateFiveMinutes_DESC',
  /** avg(bitRateHour) ascending */
  AvgBitRateHourAsc = 'avg_bitRateHour_ASC',
  /** avg(bitRateHour) descending */
  AvgBitRateHourDesc = 'avg_bitRateHour_DESC',
  /** avg(bitRateMinute) ascending */
  AvgBitRateMinuteAsc = 'avg_bitRateMinute_ASC',
  /** avg(bitRateMinute) descending */
  AvgBitRateMinuteDesc = 'avg_bitRateMinute_DESC',
  /** avg(bitRateTenSeconds) ascending */
  AvgBitRateTenSecondsAsc = 'avg_bitRateTenSeconds_ASC',
  /** avg(bitRateTenSeconds) descending */
  AvgBitRateTenSecondsDesc = 'avg_bitRateTenSeconds_DESC',
  /** avg(bitRate) ascending */
  AvgBitRateAsc = 'avg_bitRate_ASC',
  /** avg(bitRate) descending */
  AvgBitRateDesc = 'avg_bitRate_DESC',
  /** avg(packetRateDay) ascending */
  AvgPacketRateDayAsc = 'avg_packetRateDay_ASC',
  /** avg(packetRateDay) descending */
  AvgPacketRateDayDesc = 'avg_packetRateDay_DESC',
  /** avg(packetRateFifteenMinutes) ascending */
  AvgPacketRateFifteenMinutesAsc = 'avg_packetRateFifteenMinutes_ASC',
  /** avg(packetRateFifteenMinutes) descending */
  AvgPacketRateFifteenMinutesDesc = 'avg_packetRateFifteenMinutes_DESC',
  /** avg(packetRateFiveMinutes) ascending */
  AvgPacketRateFiveMinutesAsc = 'avg_packetRateFiveMinutes_ASC',
  /** avg(packetRateFiveMinutes) descending */
  AvgPacketRateFiveMinutesDesc = 'avg_packetRateFiveMinutes_DESC',
  /** avg(packetRateHour) ascending */
  AvgPacketRateHourAsc = 'avg_packetRateHour_ASC',
  /** avg(packetRateHour) descending */
  AvgPacketRateHourDesc = 'avg_packetRateHour_DESC',
  /** avg(packetRateMinute) ascending */
  AvgPacketRateMinuteAsc = 'avg_packetRateMinute_ASC',
  /** avg(packetRateMinute) descending */
  AvgPacketRateMinuteDesc = 'avg_packetRateMinute_DESC',
  /** avg(packetRateTenSeconds) ascending */
  AvgPacketRateTenSecondsAsc = 'avg_packetRateTenSeconds_ASC',
  /** avg(packetRateTenSeconds) descending */
  AvgPacketRateTenSecondsDesc = 'avg_packetRateTenSeconds_DESC',
  /** avg(packetRate) ascending */
  AvgPacketRateAsc = 'avg_packetRate_ASC',
  /** avg(packetRate) descending */
  AvgPacketRateDesc = 'avg_packetRate_DESC',
  /** coloCity ascending */
  ColoCityAsc = 'coloCity_ASC',
  /** coloCity descending */
  ColoCityDesc = 'coloCity_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** coloCountry ascending */
  ColoCountryAsc = 'coloCountry_ASC',
  /** coloCountry descending */
  ColoCountryDesc = 'coloCountry_DESC',
  /** coloGeohash ascending */
  ColoGeohashAsc = 'coloGeohash_ASC',
  /** coloGeohash descending */
  ColoGeohashDesc = 'coloGeohash_DESC',
  /** coloName ascending */
  ColoNameAsc = 'coloName_ASC',
  /** coloName descending */
  ColoNameDesc = 'coloName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetimeTenSeconds ascending */
  DatetimeTenSecondsAsc = 'datetimeTenSeconds_ASC',
  /** datetimeTenSeconds descending */
  DatetimeTenSecondsDesc = 'datetimeTenSeconds_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationAsnName ascending */
  DestinationAsnNameAsc = 'destinationAsnName_ASC',
  /** destinationAsnName descending */
  DestinationAsnNameDesc = 'destinationAsnName_DESC',
  /** destinationAsn ascending */
  DestinationAsnAsc = 'destinationAsn_ASC',
  /** destinationAsn descending */
  DestinationAsnDesc = 'destinationAsn_DESC',
  /** destinationCountry ascending */
  DestinationCountryAsc = 'destinationCountry_ASC',
  /** destinationCountry descending */
  DestinationCountryDesc = 'destinationCountry_DESC',
  /** destinationGeohash ascending */
  DestinationGeohashAsc = 'destinationGeohash_ASC',
  /** destinationGeohash descending */
  DestinationGeohashDesc = 'destinationGeohash_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** direction ascending */
  DirectionAsc = 'direction_ASC',
  /** direction descending */
  DirectionDesc = 'direction_DESC',
  /** ethertype ascending */
  EthertypeAsc = 'ethertype_ASC',
  /** ethertype descending */
  EthertypeDesc = 'ethertype_DESC',
  /** greChecksum ascending */
  GreChecksumAsc = 'greChecksum_ASC',
  /** greChecksum descending */
  GreChecksumDesc = 'greChecksum_DESC',
  /** greEthertype ascending */
  GreEthertypeAsc = 'greEthertype_ASC',
  /** greEthertype descending */
  GreEthertypeDesc = 'greEthertype_DESC',
  /** greHeaderLength ascending */
  GreHeaderLengthAsc = 'greHeaderLength_ASC',
  /** greHeaderLength descending */
  GreHeaderLengthDesc = 'greHeaderLength_DESC',
  /** greKey ascending */
  GreKeyAsc = 'greKey_ASC',
  /** greKey descending */
  GreKeyDesc = 'greKey_DESC',
  /** greSequenceNumber ascending */
  GreSequenceNumberAsc = 'greSequenceNumber_ASC',
  /** greSequenceNumber descending */
  GreSequenceNumberDesc = 'greSequenceNumber_DESC',
  /** greVersion ascending */
  GreVersionAsc = 'greVersion_ASC',
  /** greVersion descending */
  GreVersionDesc = 'greVersion_DESC',
  /** icmpChecksum ascending */
  IcmpChecksumAsc = 'icmpChecksum_ASC',
  /** icmpChecksum descending */
  IcmpChecksumDesc = 'icmpChecksum_DESC',
  /** icmpCode ascending */
  IcmpCodeAsc = 'icmpCode_ASC',
  /** icmpCode descending */
  IcmpCodeDesc = 'icmpCode_DESC',
  /** icmpType ascending */
  IcmpTypeAsc = 'icmpType_ASC',
  /** icmpType descending */
  IcmpTypeDesc = 'icmpType_DESC',
  /** ipDestinationAddress ascending */
  IpDestinationAddressAsc = 'ipDestinationAddress_ASC',
  /** ipDestinationAddress descending */
  IpDestinationAddressDesc = 'ipDestinationAddress_DESC',
  /** ipDestinationSubnet ascending */
  IpDestinationSubnetAsc = 'ipDestinationSubnet_ASC',
  /** ipDestinationSubnet descending */
  IpDestinationSubnetDesc = 'ipDestinationSubnet_DESC',
  /** ipFragmentOffset ascending */
  IpFragmentOffsetAsc = 'ipFragmentOffset_ASC',
  /** ipFragmentOffset descending */
  IpFragmentOffsetDesc = 'ipFragmentOffset_DESC',
  /** ipHeaderLength ascending */
  IpHeaderLengthAsc = 'ipHeaderLength_ASC',
  /** ipHeaderLength descending */
  IpHeaderLengthDesc = 'ipHeaderLength_DESC',
  /** ipMoreFragments ascending */
  IpMoreFragmentsAsc = 'ipMoreFragments_ASC',
  /** ipMoreFragments descending */
  IpMoreFragmentsDesc = 'ipMoreFragments_DESC',
  /** ipProtocolName ascending */
  IpProtocolNameAsc = 'ipProtocolName_ASC',
  /** ipProtocolName descending */
  IpProtocolNameDesc = 'ipProtocolName_DESC',
  /** ipProtocol ascending */
  IpProtocolAsc = 'ipProtocol_ASC',
  /** ipProtocol descending */
  IpProtocolDesc = 'ipProtocol_DESC',
  /** ipSourceAddress ascending */
  IpSourceAddressAsc = 'ipSourceAddress_ASC',
  /** ipSourceAddress descending */
  IpSourceAddressDesc = 'ipSourceAddress_DESC',
  /** ipSourceSubnet ascending */
  IpSourceSubnetAsc = 'ipSourceSubnet_ASC',
  /** ipSourceSubnet descending */
  IpSourceSubnetDesc = 'ipSourceSubnet_DESC',
  /** ipTotalLengthBuckets ascending */
  IpTotalLengthBucketsAsc = 'ipTotalLengthBuckets_ASC',
  /** ipTotalLengthBuckets descending */
  IpTotalLengthBucketsDesc = 'ipTotalLengthBuckets_DESC',
  /** ipTotalLength ascending */
  IpTotalLengthAsc = 'ipTotalLength_ASC',
  /** ipTotalLength descending */
  IpTotalLengthDesc = 'ipTotalLength_DESC',
  /** ipTtlBuckets ascending */
  IpTtlBucketsAsc = 'ipTtlBuckets_ASC',
  /** ipTtlBuckets descending */
  IpTtlBucketsDesc = 'ipTtlBuckets_DESC',
  /** ipTtl ascending */
  IpTtlAsc = 'ipTtl_ASC',
  /** ipTtl descending */
  IpTtlDesc = 'ipTtl_DESC',
  /** ipv4Checksum ascending */
  Ipv4ChecksumAsc = 'ipv4Checksum_ASC',
  /** ipv4Checksum descending */
  Ipv4ChecksumDesc = 'ipv4Checksum_DESC',
  /** ipv4DontFragment ascending */
  Ipv4DontFragmentAsc = 'ipv4DontFragment_ASC',
  /** ipv4DontFragment descending */
  Ipv4DontFragmentDesc = 'ipv4DontFragment_DESC',
  /** ipv4Dscp ascending */
  Ipv4DscpAsc = 'ipv4Dscp_ASC',
  /** ipv4Dscp descending */
  Ipv4DscpDesc = 'ipv4Dscp_DESC',
  /** ipv4Ecn ascending */
  Ipv4EcnAsc = 'ipv4Ecn_ASC',
  /** ipv4Ecn descending */
  Ipv4EcnDesc = 'ipv4Ecn_DESC',
  /** ipv4Identification ascending */
  Ipv4IdentificationAsc = 'ipv4Identification_ASC',
  /** ipv4Identification descending */
  Ipv4IdentificationDesc = 'ipv4Identification_DESC',
  /** ipv4Options ascending */
  Ipv4OptionsAsc = 'ipv4Options_ASC',
  /** ipv4Options descending */
  Ipv4OptionsDesc = 'ipv4Options_DESC',
  /** ipv6Dscp ascending */
  Ipv6DscpAsc = 'ipv6Dscp_ASC',
  /** ipv6Dscp descending */
  Ipv6DscpDesc = 'ipv6Dscp_DESC',
  /** ipv6Ecn ascending */
  Ipv6EcnAsc = 'ipv6Ecn_ASC',
  /** ipv6Ecn descending */
  Ipv6EcnDesc = 'ipv6Ecn_DESC',
  /** ipv6ExtensionHeaders ascending */
  Ipv6ExtensionHeadersAsc = 'ipv6ExtensionHeaders_ASC',
  /** ipv6ExtensionHeaders descending */
  Ipv6ExtensionHeadersDesc = 'ipv6ExtensionHeaders_DESC',
  /** ipv6FlowLabel ascending */
  Ipv6FlowLabelAsc = 'ipv6FlowLabel_ASC',
  /** ipv6FlowLabel descending */
  Ipv6FlowLabelDesc = 'ipv6FlowLabel_DESC',
  /** ipv6Identification ascending */
  Ipv6IdentificationAsc = 'ipv6Identification_ASC',
  /** ipv6Identification descending */
  Ipv6IdentificationDesc = 'ipv6Identification_DESC',
  /** leaseTag ascending */
  LeaseTagAsc = 'leaseTag_ASC',
  /** leaseTag descending */
  LeaseTagDesc = 'leaseTag_DESC',
  /** mitigationReason ascending */
  MitigationReasonAsc = 'mitigationReason_ASC',
  /** mitigationReason descending */
  MitigationReasonDesc = 'mitigationReason_DESC',
  /** mitigationScope ascending */
  MitigationScopeAsc = 'mitigationScope_ASC',
  /** mitigationScope descending */
  MitigationScopeDesc = 'mitigationScope_DESC',
  /** outcome ascending */
  OutcomeAsc = 'outcome_ASC',
  /** outcome descending */
  OutcomeDesc = 'outcome_DESC',
  /** prefixTag ascending */
  PrefixTagAsc = 'prefixTag_ASC',
  /** prefixTag descending */
  PrefixTagDesc = 'prefixTag_DESC',
  /** protocolState ascending */
  ProtocolStateAsc = 'protocolState_ASC',
  /** protocolState descending */
  ProtocolStateDesc = 'protocolState_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sourceAsnName ascending */
  SourceAsnNameAsc = 'sourceAsnName_ASC',
  /** sourceAsnName descending */
  SourceAsnNameDesc = 'sourceAsnName_DESC',
  /** sourceAsn ascending */
  SourceAsnAsc = 'sourceAsn_ASC',
  /** sourceAsn descending */
  SourceAsnDesc = 'sourceAsn_DESC',
  /** sourceCountry ascending */
  SourceCountryAsc = 'sourceCountry_ASC',
  /** sourceCountry descending */
  SourceCountryDesc = 'sourceCountry_DESC',
  /** sourceGeohash ascending */
  SourceGeohashAsc = 'sourceGeohash_ASC',
  /** sourceGeohash descending */
  SourceGeohashDesc = 'sourceGeohash_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** sum(bits) ascending */
  SumBitsAsc = 'sum_bits_ASC',
  /** sum(bits) descending */
  SumBitsDesc = 'sum_bits_DESC',
  /** sum(packets) ascending */
  SumPacketsAsc = 'sum_packets_ASC',
  /** sum(packets) descending */
  SumPacketsDesc = 'sum_packets_DESC',
  /** system ascending */
  SystemAsc = 'system_ASC',
  /** system descending */
  SystemDesc = 'system_DESC',
  /** tcpAcknowledgementNumber ascending */
  TcpAcknowledgementNumberAsc = 'tcpAcknowledgementNumber_ASC',
  /** tcpAcknowledgementNumber descending */
  TcpAcknowledgementNumberDesc = 'tcpAcknowledgementNumber_DESC',
  /** tcpChecksum ascending */
  TcpChecksumAsc = 'tcpChecksum_ASC',
  /** tcpChecksum descending */
  TcpChecksumDesc = 'tcpChecksum_DESC',
  /** tcpDataOffset ascending */
  TcpDataOffsetAsc = 'tcpDataOffset_ASC',
  /** tcpDataOffset descending */
  TcpDataOffsetDesc = 'tcpDataOffset_DESC',
  /** tcpFlagsString ascending */
  TcpFlagsStringAsc = 'tcpFlagsString_ASC',
  /** tcpFlagsString descending */
  TcpFlagsStringDesc = 'tcpFlagsString_DESC',
  /** tcpFlags ascending */
  TcpFlagsAsc = 'tcpFlags_ASC',
  /** tcpFlags descending */
  TcpFlagsDesc = 'tcpFlags_DESC',
  /** tcpMss ascending */
  TcpMssAsc = 'tcpMss_ASC',
  /** tcpMss descending */
  TcpMssDesc = 'tcpMss_DESC',
  /** tcpOptions ascending */
  TcpOptionsAsc = 'tcpOptions_ASC',
  /** tcpOptions descending */
  TcpOptionsDesc = 'tcpOptions_DESC',
  /** tcpSackBlocks ascending */
  TcpSackBlocksAsc = 'tcpSackBlocks_ASC',
  /** tcpSackBlocks descending */
  TcpSackBlocksDesc = 'tcpSackBlocks_DESC',
  /** tcpSackPermitted ascending */
  TcpSackPermittedAsc = 'tcpSackPermitted_ASC',
  /** tcpSackPermitted descending */
  TcpSackPermittedDesc = 'tcpSackPermitted_DESC',
  /** tcpSequenceNumber ascending */
  TcpSequenceNumberAsc = 'tcpSequenceNumber_ASC',
  /** tcpSequenceNumber descending */
  TcpSequenceNumberDesc = 'tcpSequenceNumber_DESC',
  /** tcpTimestampEcr ascending */
  TcpTimestampEcrAsc = 'tcpTimestampEcr_ASC',
  /** tcpTimestampEcr descending */
  TcpTimestampEcrDesc = 'tcpTimestampEcr_DESC',
  /** tcpTimestampValue ascending */
  TcpTimestampValueAsc = 'tcpTimestampValue_ASC',
  /** tcpTimestampValue descending */
  TcpTimestampValueDesc = 'tcpTimestampValue_DESC',
  /** tcpUrgentPointer ascending */
  TcpUrgentPointerAsc = 'tcpUrgentPointer_ASC',
  /** tcpUrgentPointer descending */
  TcpUrgentPointerDesc = 'tcpUrgentPointer_DESC',
  /** tcpWindowScale ascending */
  TcpWindowScaleAsc = 'tcpWindowScale_ASC',
  /** tcpWindowScale descending */
  TcpWindowScaleDesc = 'tcpWindowScale_DESC',
  /** tcpWindowSize ascending */
  TcpWindowSizeAsc = 'tcpWindowSize_ASC',
  /** tcpWindowSize descending */
  TcpWindowSizeDesc = 'tcpWindowSize_DESC',
  /** udpChecksum ascending */
  UdpChecksumAsc = 'udpChecksum_ASC',
  /** udpChecksum descending */
  UdpChecksumDesc = 'udpChecksum_DESC',
  /** udpPayloadLength ascending */
  UdpPayloadLengthAsc = 'udpPayloadLength_ASC',
  /** udpPayloadLength descending */
  UdpPayloadLengthDesc = 'udpPayloadLength_DESC',
  /** verdict ascending */
  VerdictAsc = 'verdict_ASC',
  /** verdict descending */
  VerdictDesc = 'verdict_DESC'
}

export type AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsSum = {
  __typename?: 'AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsSum';
  /** Sum of bits received */
  bits: Scalars['uint64']['output'];
  /** Sum of packets received */
  packets: Scalars['uint64']['output'];
};

/** AI Gateway Cache */
export type AccountAiGatewayCacheAdaptiveGroups = {
  __typename?: 'AccountAiGatewayCacheAdaptiveGroups';
  /** Total number of requests for an account with caching enabled: including hits and misses */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountAiGatewayCacheAdaptiveGroupsDimensions>;
};

export type AccountAiGatewayCacheAdaptiveGroupsDimensions = {
  __typename?: 'AccountAiGatewayCacheAdaptiveGroupsDimensions';
  /** Cache Hit or Miss: 1 = cache hit, 0 = cache miss */
  cacheOp: Scalars['uint8']['output'];
  /** The date when trigger was triggerd */
  date: Scalars['Date']['output'];
  /** The date and time truncated to fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time truncated to five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Gateway name */
  gateway: Scalars['string']['output'];
  /** Which model was the request sent to */
  model: Scalars['string']['output'];
  /** Which provider was the request sent to */
  provider: Scalars['string']['output'];
  /** Number of tokens in the request */
  tokensIn: Scalars['uint64']['output'];
  /** Number of tokens in the response */
  tokensOut: Scalars['uint64']['output'];
};

export type AccountAiGatewayCacheAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountAiGatewayCacheAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountAiGatewayCacheAdaptiveGroupsFilter_InputObject>>;
  cacheOp?: InputMaybe<Scalars['uint8']['input']>;
  cacheOp_geq?: InputMaybe<Scalars['uint8']['input']>;
  cacheOp_gt?: InputMaybe<Scalars['uint8']['input']>;
  cacheOp_in?: InputMaybe<Scalars['bytes']['input']>;
  cacheOp_leq?: InputMaybe<Scalars['uint8']['input']>;
  cacheOp_lt?: InputMaybe<Scalars['uint8']['input']>;
  cacheOp_neq?: InputMaybe<Scalars['uint8']['input']>;
  cacheOp_notin?: InputMaybe<Scalars['bytes']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  gateway?: InputMaybe<Scalars['string']['input']>;
  gateway_geq?: InputMaybe<Scalars['string']['input']>;
  gateway_gt?: InputMaybe<Scalars['string']['input']>;
  gateway_in?: InputMaybe<Array<Scalars['string']['input']>>;
  gateway_leq?: InputMaybe<Scalars['string']['input']>;
  gateway_like?: InputMaybe<Scalars['string']['input']>;
  gateway_lt?: InputMaybe<Scalars['string']['input']>;
  gateway_neq?: InputMaybe<Scalars['string']['input']>;
  gateway_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  gateway_notlike?: InputMaybe<Scalars['string']['input']>;
  model?: InputMaybe<Scalars['string']['input']>;
  model_geq?: InputMaybe<Scalars['string']['input']>;
  model_gt?: InputMaybe<Scalars['string']['input']>;
  model_in?: InputMaybe<Array<Scalars['string']['input']>>;
  model_leq?: InputMaybe<Scalars['string']['input']>;
  model_like?: InputMaybe<Scalars['string']['input']>;
  model_lt?: InputMaybe<Scalars['string']['input']>;
  model_neq?: InputMaybe<Scalars['string']['input']>;
  model_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  model_notlike?: InputMaybe<Scalars['string']['input']>;
  provider?: InputMaybe<Scalars['string']['input']>;
  provider_geq?: InputMaybe<Scalars['string']['input']>;
  provider_gt?: InputMaybe<Scalars['string']['input']>;
  provider_in?: InputMaybe<Array<Scalars['string']['input']>>;
  provider_leq?: InputMaybe<Scalars['string']['input']>;
  provider_like?: InputMaybe<Scalars['string']['input']>;
  provider_lt?: InputMaybe<Scalars['string']['input']>;
  provider_neq?: InputMaybe<Scalars['string']['input']>;
  provider_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  provider_notlike?: InputMaybe<Scalars['string']['input']>;
  tokensIn?: InputMaybe<Scalars['uint64']['input']>;
  tokensIn_geq?: InputMaybe<Scalars['uint64']['input']>;
  tokensIn_gt?: InputMaybe<Scalars['uint64']['input']>;
  tokensIn_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  tokensIn_leq?: InputMaybe<Scalars['uint64']['input']>;
  tokensIn_lt?: InputMaybe<Scalars['uint64']['input']>;
  tokensIn_neq?: InputMaybe<Scalars['uint64']['input']>;
  tokensIn_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  tokensOut?: InputMaybe<Scalars['uint64']['input']>;
  tokensOut_geq?: InputMaybe<Scalars['uint64']['input']>;
  tokensOut_gt?: InputMaybe<Scalars['uint64']['input']>;
  tokensOut_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  tokensOut_leq?: InputMaybe<Scalars['uint64']['input']>;
  tokensOut_lt?: InputMaybe<Scalars['uint64']['input']>;
  tokensOut_neq?: InputMaybe<Scalars['uint64']['input']>;
  tokensOut_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

export enum AccountAiGatewayCacheAdaptiveGroupsOrderBy {
  /** cacheOp ascending */
  CacheOpAsc = 'cacheOp_ASC',
  /** cacheOp descending */
  CacheOpDesc = 'cacheOp_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** gateway ascending */
  GatewayAsc = 'gateway_ASC',
  /** gateway descending */
  GatewayDesc = 'gateway_DESC',
  /** model ascending */
  ModelAsc = 'model_ASC',
  /** model descending */
  ModelDesc = 'model_DESC',
  /** provider ascending */
  ProviderAsc = 'provider_ASC',
  /** provider descending */
  ProviderDesc = 'provider_DESC',
  /** tokensIn ascending */
  TokensInAsc = 'tokensIn_ASC',
  /** tokensIn descending */
  TokensInDesc = 'tokensIn_DESC',
  /** tokensOut ascending */
  TokensOutAsc = 'tokensOut_ASC',
  /** tokensOut descending */
  TokensOutDesc = 'tokensOut_DESC'
}

/** AI Gateway Errors */
export type AccountAiGatewayErrorsAdaptiveGroups = {
  __typename?: 'AccountAiGatewayErrorsAdaptiveGroups';
  /** Number of errors */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountAiGatewayErrorsAdaptiveGroupsDimensions>;
};

export type AccountAiGatewayErrorsAdaptiveGroupsDimensions = {
  __typename?: 'AccountAiGatewayErrorsAdaptiveGroupsDimensions';
  /** The date when trigger was triggerd */
  date: Scalars['Date']['output'];
  /** The date and time truncated to fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time truncated to five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Gateway name */
  gateway: Scalars['string']['output'];
  /** Which models was the request sent to */
  model: Scalars['string']['output'];
  /** Which provider was the request sent to */
  provider: Scalars['string']['output'];
};

export type AccountAiGatewayErrorsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountAiGatewayErrorsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountAiGatewayErrorsAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  gateway?: InputMaybe<Scalars['string']['input']>;
  gateway_geq?: InputMaybe<Scalars['string']['input']>;
  gateway_gt?: InputMaybe<Scalars['string']['input']>;
  gateway_in?: InputMaybe<Array<Scalars['string']['input']>>;
  gateway_leq?: InputMaybe<Scalars['string']['input']>;
  gateway_like?: InputMaybe<Scalars['string']['input']>;
  gateway_lt?: InputMaybe<Scalars['string']['input']>;
  gateway_neq?: InputMaybe<Scalars['string']['input']>;
  gateway_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  gateway_notlike?: InputMaybe<Scalars['string']['input']>;
  model?: InputMaybe<Scalars['string']['input']>;
  model_geq?: InputMaybe<Scalars['string']['input']>;
  model_gt?: InputMaybe<Scalars['string']['input']>;
  model_in?: InputMaybe<Array<Scalars['string']['input']>>;
  model_leq?: InputMaybe<Scalars['string']['input']>;
  model_like?: InputMaybe<Scalars['string']['input']>;
  model_lt?: InputMaybe<Scalars['string']['input']>;
  model_neq?: InputMaybe<Scalars['string']['input']>;
  model_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  model_notlike?: InputMaybe<Scalars['string']['input']>;
  provider?: InputMaybe<Scalars['string']['input']>;
  provider_geq?: InputMaybe<Scalars['string']['input']>;
  provider_gt?: InputMaybe<Scalars['string']['input']>;
  provider_in?: InputMaybe<Array<Scalars['string']['input']>>;
  provider_leq?: InputMaybe<Scalars['string']['input']>;
  provider_like?: InputMaybe<Scalars['string']['input']>;
  provider_lt?: InputMaybe<Scalars['string']['input']>;
  provider_neq?: InputMaybe<Scalars['string']['input']>;
  provider_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  provider_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountAiGatewayErrorsAdaptiveGroupsOrderBy {
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** gateway ascending */
  GatewayAsc = 'gateway_ASC',
  /** gateway descending */
  GatewayDesc = 'gateway_DESC',
  /** model ascending */
  ModelAsc = 'model_ASC',
  /** model descending */
  ModelDesc = 'model_DESC',
  /** provider ascending */
  ProviderAsc = 'provider_ASC',
  /** provider descending */
  ProviderDesc = 'provider_DESC'
}

/** AI Gateway Requests */
export type AccountAiGatewayRequestsAdaptiveGroups = {
  __typename?: 'AccountAiGatewayRequestsAdaptiveGroups';
  /** Number of processed requests */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountAiGatewayRequestsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountAiGatewayRequestsAdaptiveGroupsSum>;
};

export type AccountAiGatewayRequestsAdaptiveGroupsDimensions = {
  __typename?: 'AccountAiGatewayRequestsAdaptiveGroupsDimensions';
  /** Was the response served from cache?: 1 = cache hit, 0 = cache misss */
  cached: Scalars['uint8']['output'];
  /** The date when trigger was triggered */
  date: Scalars['Date']['output'];
  /** The date and time truncated to fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time truncated to five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Gateway name */
  gateway: Scalars['string']['output'];
  /** Which models was the request sent to */
  model: Scalars['string']['output'];
  /** Which provider was the request sent to */
  provider: Scalars['string']['output'];
  /** Was the request rate limited?: 1 = rate limit applied, 0 = rate limit not applied */
  rateLimited: Scalars['uint8']['output'];
  /** Number of tokens in the request */
  tokensIn: Scalars['uint64']['output'];
  /** Number of tokens in the response */
  tokensOut: Scalars['uint64']['output'];
};

export type AccountAiGatewayRequestsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountAiGatewayRequestsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountAiGatewayRequestsAdaptiveGroupsFilter_InputObject>>;
  cached?: InputMaybe<Scalars['uint8']['input']>;
  cached_geq?: InputMaybe<Scalars['uint8']['input']>;
  cached_gt?: InputMaybe<Scalars['uint8']['input']>;
  cached_in?: InputMaybe<Scalars['bytes']['input']>;
  cached_leq?: InputMaybe<Scalars['uint8']['input']>;
  cached_lt?: InputMaybe<Scalars['uint8']['input']>;
  cached_neq?: InputMaybe<Scalars['uint8']['input']>;
  cached_notin?: InputMaybe<Scalars['bytes']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  gateway?: InputMaybe<Scalars['string']['input']>;
  gateway_geq?: InputMaybe<Scalars['string']['input']>;
  gateway_gt?: InputMaybe<Scalars['string']['input']>;
  gateway_in?: InputMaybe<Array<Scalars['string']['input']>>;
  gateway_leq?: InputMaybe<Scalars['string']['input']>;
  gateway_like?: InputMaybe<Scalars['string']['input']>;
  gateway_lt?: InputMaybe<Scalars['string']['input']>;
  gateway_neq?: InputMaybe<Scalars['string']['input']>;
  gateway_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  gateway_notlike?: InputMaybe<Scalars['string']['input']>;
  model?: InputMaybe<Scalars['string']['input']>;
  model_geq?: InputMaybe<Scalars['string']['input']>;
  model_gt?: InputMaybe<Scalars['string']['input']>;
  model_in?: InputMaybe<Array<Scalars['string']['input']>>;
  model_leq?: InputMaybe<Scalars['string']['input']>;
  model_like?: InputMaybe<Scalars['string']['input']>;
  model_lt?: InputMaybe<Scalars['string']['input']>;
  model_neq?: InputMaybe<Scalars['string']['input']>;
  model_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  model_notlike?: InputMaybe<Scalars['string']['input']>;
  provider?: InputMaybe<Scalars['string']['input']>;
  provider_geq?: InputMaybe<Scalars['string']['input']>;
  provider_gt?: InputMaybe<Scalars['string']['input']>;
  provider_in?: InputMaybe<Array<Scalars['string']['input']>>;
  provider_leq?: InputMaybe<Scalars['string']['input']>;
  provider_like?: InputMaybe<Scalars['string']['input']>;
  provider_lt?: InputMaybe<Scalars['string']['input']>;
  provider_neq?: InputMaybe<Scalars['string']['input']>;
  provider_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  provider_notlike?: InputMaybe<Scalars['string']['input']>;
  rateLimited?: InputMaybe<Scalars['uint8']['input']>;
  rateLimited_geq?: InputMaybe<Scalars['uint8']['input']>;
  rateLimited_gt?: InputMaybe<Scalars['uint8']['input']>;
  rateLimited_in?: InputMaybe<Scalars['bytes']['input']>;
  rateLimited_leq?: InputMaybe<Scalars['uint8']['input']>;
  rateLimited_lt?: InputMaybe<Scalars['uint8']['input']>;
  rateLimited_neq?: InputMaybe<Scalars['uint8']['input']>;
  rateLimited_notin?: InputMaybe<Scalars['bytes']['input']>;
  tokensIn?: InputMaybe<Scalars['uint64']['input']>;
  tokensIn_geq?: InputMaybe<Scalars['uint64']['input']>;
  tokensIn_gt?: InputMaybe<Scalars['uint64']['input']>;
  tokensIn_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  tokensIn_leq?: InputMaybe<Scalars['uint64']['input']>;
  tokensIn_lt?: InputMaybe<Scalars['uint64']['input']>;
  tokensIn_neq?: InputMaybe<Scalars['uint64']['input']>;
  tokensIn_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  tokensOut?: InputMaybe<Scalars['uint64']['input']>;
  tokensOut_geq?: InputMaybe<Scalars['uint64']['input']>;
  tokensOut_gt?: InputMaybe<Scalars['uint64']['input']>;
  tokensOut_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  tokensOut_leq?: InputMaybe<Scalars['uint64']['input']>;
  tokensOut_lt?: InputMaybe<Scalars['uint64']['input']>;
  tokensOut_neq?: InputMaybe<Scalars['uint64']['input']>;
  tokensOut_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

export enum AccountAiGatewayRequestsAdaptiveGroupsOrderBy {
  /** cached ascending */
  CachedAsc = 'cached_ASC',
  /** cached descending */
  CachedDesc = 'cached_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** gateway ascending */
  GatewayAsc = 'gateway_ASC',
  /** gateway descending */
  GatewayDesc = 'gateway_DESC',
  /** model ascending */
  ModelAsc = 'model_ASC',
  /** model descending */
  ModelDesc = 'model_DESC',
  /** provider ascending */
  ProviderAsc = 'provider_ASC',
  /** provider descending */
  ProviderDesc = 'provider_DESC',
  /** rateLimited ascending */
  RateLimitedAsc = 'rateLimited_ASC',
  /** rateLimited descending */
  RateLimitedDesc = 'rateLimited_DESC',
  /** sum(cachedTokensIn) ascending */
  SumCachedTokensInAsc = 'sum_cachedTokensIn_ASC',
  /** sum(cachedTokensIn) descending */
  SumCachedTokensInDesc = 'sum_cachedTokensIn_DESC',
  /** sum(cachedTokensOut) ascending */
  SumCachedTokensOutAsc = 'sum_cachedTokensOut_ASC',
  /** sum(cachedTokensOut) descending */
  SumCachedTokensOutDesc = 'sum_cachedTokensOut_DESC',
  /** sum(uncachedTokensIn) ascending */
  SumUncachedTokensInAsc = 'sum_uncachedTokensIn_ASC',
  /** sum(uncachedTokensIn) descending */
  SumUncachedTokensInDesc = 'sum_uncachedTokensIn_DESC',
  /** sum(uncachedTokensOut) ascending */
  SumUncachedTokensOutAsc = 'sum_uncachedTokensOut_ASC',
  /** sum(uncachedTokensOut) descending */
  SumUncachedTokensOutDesc = 'sum_uncachedTokensOut_DESC',
  /** tokensIn ascending */
  TokensInAsc = 'tokensIn_ASC',
  /** tokensIn descending */
  TokensInDesc = 'tokensIn_DESC',
  /** tokensOut ascending */
  TokensOutAsc = 'tokensOut_ASC',
  /** tokensOut descending */
  TokensOutDesc = 'tokensOut_DESC'
}

export type AccountAiGatewayRequestsAdaptiveGroupsSum = {
  __typename?: 'AccountAiGatewayRequestsAdaptiveGroupsSum';
  /** Sum of cached tokens in */
  cachedTokensIn: Scalars['uint64']['output'];
  /** Sum of cached tokens out */
  cachedTokensOut: Scalars['uint64']['output'];
  /** Sum of uncached tokens in */
  uncachedTokensIn: Scalars['uint64']['output'];
  /** Sum of uncached tokens out */
  uncachedTokensOut: Scalars['uint64']['output'];
};

/** AI Inference logs with adaptive sampling */
export type AccountAiInferenceAdaptive = {
  __typename?: 'AccountAiInferenceAdaptive';
  /** The date when inferance was triggered */
  datetime: Scalars['Time']['output'];
  /** Error code */
  errorCode: Scalars['uint32']['output'];
  /** Inference time ms */
  inferenceTimeMs: Scalars['uint64']['output'];
  /** ModelId that was trigger to inference */
  modelId: Scalars['string']['output'];
  /** Monetization unit */
  neurons: Scalars['float64']['output'];
  /** Request size in bytes */
  requestBytesIn: Scalars['uint64']['output'];
  /** Request size out bytes */
  requestBytesOut: Scalars['uint64']['output'];
  /** Source who triggered (worker binding, pages binding, rest api) */
  requestSource: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
};

export type AccountAiInferenceAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<AccountAiInferenceAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountAiInferenceAdaptiveFilter_InputObject>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  errorCode?: InputMaybe<Scalars['uint32']['input']>;
  errorCode_geq?: InputMaybe<Scalars['uint32']['input']>;
  errorCode_gt?: InputMaybe<Scalars['uint32']['input']>;
  errorCode_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  errorCode_leq?: InputMaybe<Scalars['uint32']['input']>;
  errorCode_lt?: InputMaybe<Scalars['uint32']['input']>;
  errorCode_neq?: InputMaybe<Scalars['uint32']['input']>;
  errorCode_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  inferenceTimeMs?: InputMaybe<Scalars['uint64']['input']>;
  inferenceTimeMs_geq?: InputMaybe<Scalars['uint64']['input']>;
  inferenceTimeMs_gt?: InputMaybe<Scalars['uint64']['input']>;
  inferenceTimeMs_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  inferenceTimeMs_leq?: InputMaybe<Scalars['uint64']['input']>;
  inferenceTimeMs_lt?: InputMaybe<Scalars['uint64']['input']>;
  inferenceTimeMs_neq?: InputMaybe<Scalars['uint64']['input']>;
  inferenceTimeMs_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  modelId?: InputMaybe<Scalars['string']['input']>;
  modelId_geq?: InputMaybe<Scalars['string']['input']>;
  modelId_gt?: InputMaybe<Scalars['string']['input']>;
  modelId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  modelId_leq?: InputMaybe<Scalars['string']['input']>;
  modelId_like?: InputMaybe<Scalars['string']['input']>;
  modelId_lt?: InputMaybe<Scalars['string']['input']>;
  modelId_neq?: InputMaybe<Scalars['string']['input']>;
  modelId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  modelId_notlike?: InputMaybe<Scalars['string']['input']>;
  neurons?: InputMaybe<Scalars['float64']['input']>;
  neurons_geq?: InputMaybe<Scalars['float64']['input']>;
  neurons_gt?: InputMaybe<Scalars['float64']['input']>;
  neurons_in?: InputMaybe<Array<Scalars['float64']['input']>>;
  neurons_leq?: InputMaybe<Scalars['float64']['input']>;
  neurons_lt?: InputMaybe<Scalars['float64']['input']>;
  neurons_neq?: InputMaybe<Scalars['float64']['input']>;
  neurons_notin?: InputMaybe<Array<Scalars['float64']['input']>>;
  requestBytesIn?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesIn_geq?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesIn_gt?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesIn_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  requestBytesIn_leq?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesIn_lt?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesIn_neq?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesIn_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  requestBytesOut?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesOut_geq?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesOut_gt?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesOut_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  requestBytesOut_leq?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesOut_lt?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesOut_neq?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesOut_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  requestSource?: InputMaybe<Scalars['string']['input']>;
  requestSource_geq?: InputMaybe<Scalars['string']['input']>;
  requestSource_gt?: InputMaybe<Scalars['string']['input']>;
  requestSource_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestSource_leq?: InputMaybe<Scalars['string']['input']>;
  requestSource_like?: InputMaybe<Scalars['string']['input']>;
  requestSource_lt?: InputMaybe<Scalars['string']['input']>;
  requestSource_neq?: InputMaybe<Scalars['string']['input']>;
  requestSource_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestSource_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
};

/** Aggregated AI Inference logs with adaptive sampling */
export type AccountAiInferenceAdaptiveGroups = {
  __typename?: 'AccountAiInferenceAdaptiveGroups';
  /** Total number of inferences for an account */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountAiInferenceAdaptiveGroupsDimensions>;
  sum?: Maybe<AccountAiInferenceAdaptiveGroupsSum>;
};

export type AccountAiInferenceAdaptiveGroupsDimensions = {
  __typename?: 'AccountAiInferenceAdaptiveGroupsDimensions';
  /** The date when starts the inference */
  date: Scalars['Date']['output'];
  /** The date and time truncated to fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time truncated to five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Error code */
  errorCode: Scalars['uint32']['output'];
  /** Inference time ms */
  inferenceTimeMs: Scalars['uint64']['output'];
  /** ModelId that was trigger to inference */
  modelId: Scalars['string']['output'];
  /** Monetization unit */
  neurons: Scalars['float64']['output'];
  /** Request size in bytes */
  requestBytesIn: Scalars['uint64']['output'];
  /** Request size out bytes */
  requestBytesOut: Scalars['uint64']['output'];
  /** Source who triggered (worker binding, pages binding, rest api) */
  requestSource: Scalars['string']['output'];
};

export type AccountAiInferenceAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountAiInferenceAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountAiInferenceAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  errorCode?: InputMaybe<Scalars['uint32']['input']>;
  errorCode_geq?: InputMaybe<Scalars['uint32']['input']>;
  errorCode_gt?: InputMaybe<Scalars['uint32']['input']>;
  errorCode_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  errorCode_leq?: InputMaybe<Scalars['uint32']['input']>;
  errorCode_lt?: InputMaybe<Scalars['uint32']['input']>;
  errorCode_neq?: InputMaybe<Scalars['uint32']['input']>;
  errorCode_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  inferenceTimeMs?: InputMaybe<Scalars['uint64']['input']>;
  inferenceTimeMs_geq?: InputMaybe<Scalars['uint64']['input']>;
  inferenceTimeMs_gt?: InputMaybe<Scalars['uint64']['input']>;
  inferenceTimeMs_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  inferenceTimeMs_leq?: InputMaybe<Scalars['uint64']['input']>;
  inferenceTimeMs_lt?: InputMaybe<Scalars['uint64']['input']>;
  inferenceTimeMs_neq?: InputMaybe<Scalars['uint64']['input']>;
  inferenceTimeMs_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  modelId?: InputMaybe<Scalars['string']['input']>;
  modelId_geq?: InputMaybe<Scalars['string']['input']>;
  modelId_gt?: InputMaybe<Scalars['string']['input']>;
  modelId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  modelId_leq?: InputMaybe<Scalars['string']['input']>;
  modelId_like?: InputMaybe<Scalars['string']['input']>;
  modelId_lt?: InputMaybe<Scalars['string']['input']>;
  modelId_neq?: InputMaybe<Scalars['string']['input']>;
  modelId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  modelId_notlike?: InputMaybe<Scalars['string']['input']>;
  neurons?: InputMaybe<Scalars['float64']['input']>;
  neurons_geq?: InputMaybe<Scalars['float64']['input']>;
  neurons_gt?: InputMaybe<Scalars['float64']['input']>;
  neurons_in?: InputMaybe<Array<Scalars['float64']['input']>>;
  neurons_leq?: InputMaybe<Scalars['float64']['input']>;
  neurons_lt?: InputMaybe<Scalars['float64']['input']>;
  neurons_neq?: InputMaybe<Scalars['float64']['input']>;
  neurons_notin?: InputMaybe<Array<Scalars['float64']['input']>>;
  requestBytesIn?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesIn_geq?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesIn_gt?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesIn_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  requestBytesIn_leq?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesIn_lt?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesIn_neq?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesIn_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  requestBytesOut?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesOut_geq?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesOut_gt?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesOut_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  requestBytesOut_leq?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesOut_lt?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesOut_neq?: InputMaybe<Scalars['uint64']['input']>;
  requestBytesOut_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  requestSource?: InputMaybe<Scalars['string']['input']>;
  requestSource_geq?: InputMaybe<Scalars['string']['input']>;
  requestSource_gt?: InputMaybe<Scalars['string']['input']>;
  requestSource_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestSource_leq?: InputMaybe<Scalars['string']['input']>;
  requestSource_like?: InputMaybe<Scalars['string']['input']>;
  requestSource_lt?: InputMaybe<Scalars['string']['input']>;
  requestSource_neq?: InputMaybe<Scalars['string']['input']>;
  requestSource_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestSource_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountAiInferenceAdaptiveGroupsOrderBy {
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** errorCode ascending */
  ErrorCodeAsc = 'errorCode_ASC',
  /** errorCode descending */
  ErrorCodeDesc = 'errorCode_DESC',
  /** inferenceTimeMs ascending */
  InferenceTimeMsAsc = 'inferenceTimeMs_ASC',
  /** inferenceTimeMs descending */
  InferenceTimeMsDesc = 'inferenceTimeMs_DESC',
  /** modelId ascending */
  ModelIdAsc = 'modelId_ASC',
  /** modelId descending */
  ModelIdDesc = 'modelId_DESC',
  /** neurons ascending */
  NeuronsAsc = 'neurons_ASC',
  /** neurons descending */
  NeuronsDesc = 'neurons_DESC',
  /** requestBytesIn ascending */
  RequestBytesInAsc = 'requestBytesIn_ASC',
  /** requestBytesIn descending */
  RequestBytesInDesc = 'requestBytesIn_DESC',
  /** requestBytesOut ascending */
  RequestBytesOutAsc = 'requestBytesOut_ASC',
  /** requestBytesOut descending */
  RequestBytesOutDesc = 'requestBytesOut_DESC',
  /** requestSource ascending */
  RequestSourceAsc = 'requestSource_ASC',
  /** requestSource descending */
  RequestSourceDesc = 'requestSource_DESC',
  /** sum(totalInferenceTimeMs) ascending */
  SumTotalInferenceTimeMsAsc = 'sum_totalInferenceTimeMs_ASC',
  /** sum(totalInferenceTimeMs) descending */
  SumTotalInferenceTimeMsDesc = 'sum_totalInferenceTimeMs_DESC',
  /** sum(totalNeurons) ascending */
  SumTotalNeuronsAsc = 'sum_totalNeurons_ASC',
  /** sum(totalNeurons) descending */
  SumTotalNeuronsDesc = 'sum_totalNeurons_DESC',
  /** sum(totalRequestBytesIn) ascending */
  SumTotalRequestBytesInAsc = 'sum_totalRequestBytesIn_ASC',
  /** sum(totalRequestBytesIn) descending */
  SumTotalRequestBytesInDesc = 'sum_totalRequestBytesIn_DESC',
  /** sum(totalRequestBytesOut) ascending */
  SumTotalRequestBytesOutAsc = 'sum_totalRequestBytesOut_ASC',
  /** sum(totalRequestBytesOut) descending */
  SumTotalRequestBytesOutDesc = 'sum_totalRequestBytesOut_DESC'
}

export type AccountAiInferenceAdaptiveGroupsSum = {
  __typename?: 'AccountAiInferenceAdaptiveGroupsSum';
  /** Total inference time ms */
  totalInferenceTimeMs: Scalars['uint64']['output'];
  /** Total neurons */
  totalNeurons: Scalars['float64']['output'];
  /** Total bytes in per request */
  totalRequestBytesIn: Scalars['uint64']['output'];
  /** Total bytes out per request */
  totalRequestBytesOut: Scalars['uint64']['output'];
};

export enum AccountAiInferenceAdaptiveOrderBy {
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** errorCode ascending */
  ErrorCodeAsc = 'errorCode_ASC',
  /** errorCode descending */
  ErrorCodeDesc = 'errorCode_DESC',
  /** inferenceTimeMs ascending */
  InferenceTimeMsAsc = 'inferenceTimeMs_ASC',
  /** inferenceTimeMs descending */
  InferenceTimeMsDesc = 'inferenceTimeMs_DESC',
  /** modelId ascending */
  ModelIdAsc = 'modelId_ASC',
  /** modelId descending */
  ModelIdDesc = 'modelId_DESC',
  /** neurons ascending */
  NeuronsAsc = 'neurons_ASC',
  /** neurons descending */
  NeuronsDesc = 'neurons_DESC',
  /** requestBytesIn ascending */
  RequestBytesInAsc = 'requestBytesIn_ASC',
  /** requestBytesIn descending */
  RequestBytesInDesc = 'requestBytesIn_DESC',
  /** requestBytesOut ascending */
  RequestBytesOutAsc = 'requestBytesOut_ASC',
  /** requestBytesOut descending */
  RequestBytesOutDesc = 'requestBytesOut_DESC',
  /** requestSource ascending */
  RequestSourceAsc = 'requestSource_ASC',
  /** requestSource descending */
  RequestSourceDesc = 'requestSource_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC'
}

/** Network analytics data for Cloudflare CDN traffic */
export type AccountCdnNetworkAnalyticsAdaptiveGroups = {
  __typename?: 'AccountCdnNetworkAnalyticsAdaptiveGroups';
  /** The average of values for a metric per dimension */
  avg?: Maybe<AccountCdnNetworkAnalyticsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountCdnNetworkAnalyticsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountCdnNetworkAnalyticsAdaptiveGroupsSum>;
};

export type AccountCdnNetworkAnalyticsAdaptiveGroupsAvg = {
  __typename?: 'AccountCdnNetworkAnalyticsAdaptiveGroupsAvg';
  /** Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime */
  bitRate: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date */
  bitRateDay: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes */
  bitRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes */
  bitRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour */
  bitRateHour: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute */
  bitRateMinute: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds */
  bitRateTenSeconds: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime */
  packetRate: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date */
  packetRateDay: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes */
  packetRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes */
  packetRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour */
  packetRateHour: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute */
  packetRateMinute: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds */
  packetRateTenSeconds: Scalars['uint64']['output'];
};

export type AccountCdnNetworkAnalyticsAdaptiveGroupsDimensions = {
  __typename?: 'AccountCdnNetworkAnalyticsAdaptiveGroupsDimensions';
  /** Application tag associated with the packet */
  applicationTag: Scalars['string']['output'];
  /** City where the Cloudflare datacenter that received the packet is located */
  coloCity: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (nearest IATA airport code) */
  coloCode: Scalars['string']['output'];
  /** Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2) */
  coloCountry: Scalars['string']['output'];
  /** Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding) */
  coloGeohash: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (unique site identifier) */
  coloName: Scalars['string']['output'];
  /** Date that the packet was received */
  date: Scalars['Date']['output'];
  /** Date and time that the packet was received */
  datetime: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest hour */
  datetimeHour: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest ten seconds */
  datetimeTenSeconds: Scalars['Time']['output'];
  /** ASN associated with the destination IP of the packet, or 0 if there was no mapping available */
  destinationAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the destination IP of the packet, if available */
  destinationAsnName: Scalars['string']['output'];
  /** Country where the destination IP of the packet is located (ISO 3166-1 alpha-2) */
  destinationCountry: Scalars['string']['output'];
  /** Device tag associated with the destination IP of the packet */
  destinationDeviceTag: Scalars['string']['output'];
  /** Latitude and longitude where the destination IP of the packet is located (Geohash encoding) */
  destinationGeohash: Scalars['string']['output'];
  /** Value of the Destination Port header field in the TCP or UDP packet */
  destinationPort: Scalars['uint16']['output'];
  /** Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral) */
  direction: Scalars['string']['output'];
  /** Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6) */
  ethertype: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the GRE packet */
  greChecksum: Scalars['uint16']['output'];
  /** Value of the Ethertype header field in the GRE packet */
  greEthertype: Scalars['uint16']['output'];
  /** Length of the GRE packet header, in bytes */
  greHeaderLength: Scalars['uint16']['output'];
  /** Value of the Key header field in the GRE packet */
  greKey: Scalars['uint32']['output'];
  /** Value of the Sequence Number header field in the GRE packet */
  greSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Version header field in the GRE packet */
  greVersion: Scalars['uint8']['output'];
  /** Value of the Checkusm header field in the ICMP packet */
  icmpChecksum: Scalars['uint16']['output'];
  /** Value of the Code header field in the ICMP packet */
  icmpCode: Scalars['uint8']['output'];
  /** Value of the Type header field in the ICMP packet */
  icmpType: Scalars['uint8']['output'];
  /** Value of the Destination Address header field in the IPv4 or IPv6 packet */
  ipDestinationAddress: Scalars['string']['output'];
  /** Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipDestinationSubnet: Scalars['string']['output'];
  /** Value of the Fragment Offset header field in the IPv4 or IPv6 packet */
  ipFragmentOffset: Scalars['uint16']['output'];
  /** Length of the IPv4 or IPv6 packet header, in bytes */
  ipHeaderLength: Scalars['uint16']['output'];
  /** Value of the More Fragments header field in the IPv4 or IPv6 packet */
  ipMoreFragments: Scalars['uint8']['output'];
  /** Value of the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocol: Scalars['uint8']['output'];
  /** Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocolName: Scalars['string']['output'];
  /** Value of the Source Address header field in the IPv4 or IPv6 packet */
  ipSourceAddress: Scalars['string']['output'];
  /** Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipSourceSubnet: Scalars['string']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes */
  ipTotalLength: Scalars['uint16']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated */
  ipTotalLengthBuckets: Scalars['uint16']['output'];
  /** Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet */
  ipTtl: Scalars['uint8']['output'];
  /**
   * Value of the TTL header field in the IPv4 packet or the Hop Limit header field
   * in the IPv6 packet, with the last digit truncated
   */
  ipTtlBuckets: Scalars['uint8']['output'];
  /** Value of the Checksum header field in the IPv4 packet */
  ipv4Checksum: Scalars['uint16']['output'];
  /** Value of the Don't Fragment header field in the IPv4 packet */
  ipv4DontFragment: Scalars['uint8']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv4 packet */
  ipv4Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv4 packet */
  ipv4Ecn: Scalars['uint8']['output'];
  /** Value of the Identification header field in the IPv4 packet */
  ipv4Identification: Scalars['uint16']['output'];
  /** List of Options numbers included in the IPv4 packet header */
  ipv4Options: Scalars['string']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv6 packet */
  ipv6Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv6 packet */
  ipv6Ecn: Scalars['uint8']['output'];
  /** List of Extension Header numbers included in the IPv6 packet header */
  ipv6ExtensionHeaders: Scalars['string']['output'];
  /** Value of the Flow Label header field in the IPv6 packet */
  ipv6FlowLabel: Scalars['uint32']['output'];
  /** Value of the Identification extension header field in the IPv6 packet */
  ipv6Identification: Scalars['uint32']['output'];
  /** IP lease tag associated with the packet */
  leaseTag: Scalars['string']['output'];
  /** Which system dropped the packet (possible values: dosd, flowtrackd, magic-firewall) */
  mitigationSystem: Scalars['string']['output'];
  /** The action that was taken on the packet (possible values: pass, drop) */
  outcome: Scalars['string']['output'];
  /** IP prefix tag associated with the packet */
  prefixTag: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** ASN associated with the source IP of the packet, or 0 if there was no mapping available */
  sourceAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the source IP of the packet, if available */
  sourceAsnName: Scalars['string']['output'];
  /** Country where the source IP of the packet is located (ISO 3166-1 alpha-2) */
  sourceCountry: Scalars['string']['output'];
  /** Device tag associated with the source IP of the packet */
  sourceDeviceTag: Scalars['string']['output'];
  /** Latitude and longitude where the source IP of the packet is located (Geohash encoding) */
  sourceGeohash: Scalars['string']['output'];
  /** Value of the Source Port header field in the TCP or UDP packet */
  sourcePort: Scalars['uint16']['output'];
  /** Value of the Acknowledgement Number header field in the TCP packet */
  tcpAcknowledgementNumber: Scalars['uint32']['output'];
  /** Value of the Checkusm header field in the TCP packet */
  tcpChecksum: Scalars['uint16']['output'];
  /** Value of the Data Offset header field in the TCP packet */
  tcpDataOffset: Scalars['uint16']['output'];
  /** Value of the Flags header field in the TCP packet */
  tcpFlags: Scalars['uint8']['output'];
  /** Human-readable string representation of the Flags header field in the TCP packet */
  tcpFlagsString: Scalars['string']['output'];
  /** Value of the MSS option header field in the TCP packet */
  tcpMss: Scalars['uint16']['output'];
  /** List of Options numbers included in the TCP packet header */
  tcpOptions: Scalars['string']['output'];
  /** Value of the SACK Blocks option header field in the TCP packet */
  tcpSackBlocks: Scalars['string']['output'];
  /** Value of the SACK Permitted option header field in the TCP packet */
  tcpSackPermitted: Scalars['uint8']['output'];
  /** Value of the Sequence Number header field in the TCP packet */
  tcpSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Timestamp Echo Reply option header field in the TCP packet */
  tcpTimestampEcr: Scalars['uint32']['output'];
  /** Value of the Timestamp option header field in the TCP packet */
  tcpTimestampValue: Scalars['uint32']['output'];
  /** Value of the Urgent Pointer header field in the TCP packet */
  tcpUrgentPointer: Scalars['uint16']['output'];
  /** Value of the Window Scale option header field in the TCP packet */
  tcpWindowScale: Scalars['uint16']['output'];
  /** Value of the Window Size header field in the TCP packet */
  tcpWindowSize: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the UDP packet */
  udpChecksum: Scalars['uint16']['output'];
  /** Value of the Payload Length header field in the UDP packet */
  udpPayloadLength: Scalars['uint16']['output'];
};

export type AccountCdnNetworkAnalyticsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountCdnNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountCdnNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  applicationTag?: InputMaybe<Scalars['string']['input']>;
  applicationTag_geq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_gt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_leq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_like?: InputMaybe<Scalars['string']['input']>;
  applicationTag_lt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_neq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCity?: InputMaybe<Scalars['string']['input']>;
  coloCity_geq?: InputMaybe<Scalars['string']['input']>;
  coloCity_gt?: InputMaybe<Scalars['string']['input']>;
  coloCity_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_leq?: InputMaybe<Scalars['string']['input']>;
  coloCity_like?: InputMaybe<Scalars['string']['input']>;
  coloCity_lt?: InputMaybe<Scalars['string']['input']>;
  coloCity_neq?: InputMaybe<Scalars['string']['input']>;
  coloCity_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCountry?: InputMaybe<Scalars['string']['input']>;
  coloCountry_geq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_gt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_leq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_like?: InputMaybe<Scalars['string']['input']>;
  coloCountry_lt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_neq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  coloGeohash?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_like?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  coloName?: InputMaybe<Scalars['string']['input']>;
  coloName_geq?: InputMaybe<Scalars['string']['input']>;
  coloName_gt?: InputMaybe<Scalars['string']['input']>;
  coloName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_leq?: InputMaybe<Scalars['string']['input']>;
  coloName_like?: InputMaybe<Scalars['string']['input']>;
  coloName_lt?: InputMaybe<Scalars['string']['input']>;
  coloName_neq?: InputMaybe<Scalars['string']['input']>;
  coloName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationAsn?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsnName?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_like?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationCountry?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_geq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_gt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_leq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_like?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_lt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_neq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_geq?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_gt?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationDeviceTag_leq?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_like?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_lt?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_neq?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationDeviceTag_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_like?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  direction?: InputMaybe<Scalars['string']['input']>;
  direction_geq?: InputMaybe<Scalars['string']['input']>;
  direction_gt?: InputMaybe<Scalars['string']['input']>;
  direction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_leq?: InputMaybe<Scalars['string']['input']>;
  direction_like?: InputMaybe<Scalars['string']['input']>;
  direction_lt?: InputMaybe<Scalars['string']['input']>;
  direction_neq?: InputMaybe<Scalars['string']['input']>;
  direction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_notlike?: InputMaybe<Scalars['string']['input']>;
  ethertype?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ethertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greKey?: InputMaybe<Scalars['uint32']['input']>;
  greKey_geq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_gt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greKey_leq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_lt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_neq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greVersion?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  greVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpCode?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpCode_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpType?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpType_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipDestinationAddress?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipFragmentOffset?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipFragmentOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipMoreFragments?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_in?: InputMaybe<Scalars['bytes']['input']>;
  ipMoreFragments_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocolName?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_geq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_gt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_leq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_like?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_lt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_neq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipProtocol_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_in?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipSourceAddress?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipTotalLength?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLengthBuckets_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTtl?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtlBuckets_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Checksum?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Checksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4DontFragment?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4DontFragment_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Identification?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Identification_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Options?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_geq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_gt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_leq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_like?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_lt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_neq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6ExtensionHeaders?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_geq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_gt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_leq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_like?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_lt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_neq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6FlowLabel?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6FlowLabel_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  leaseTag?: InputMaybe<Scalars['string']['input']>;
  leaseTag_geq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_gt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_leq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_like?: InputMaybe<Scalars['string']['input']>;
  leaseTag_lt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_neq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationSystem_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_like?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationSystem_notlike?: InputMaybe<Scalars['string']['input']>;
  outcome?: InputMaybe<Scalars['string']['input']>;
  outcome_geq?: InputMaybe<Scalars['string']['input']>;
  outcome_gt?: InputMaybe<Scalars['string']['input']>;
  outcome_in?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_leq?: InputMaybe<Scalars['string']['input']>;
  outcome_like?: InputMaybe<Scalars['string']['input']>;
  outcome_lt?: InputMaybe<Scalars['string']['input']>;
  outcome_neq?: InputMaybe<Scalars['string']['input']>;
  outcome_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_notlike?: InputMaybe<Scalars['string']['input']>;
  prefixTag?: InputMaybe<Scalars['string']['input']>;
  prefixTag_geq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_gt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_leq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_like?: InputMaybe<Scalars['string']['input']>;
  prefixTag_lt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_neq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsnName?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_like?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceCountry?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_geq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_gt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_leq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_like?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_lt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_neq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_geq?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_gt?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceDeviceTag_leq?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_like?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_lt?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_neq?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceDeviceTag_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_like?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpAcknowledgementNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpAcknowledgementNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlagsString?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_geq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_gt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_leq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_like?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_lt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_neq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpMss?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpMss_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpOptions?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_geq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_gt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_leq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_like?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_lt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_neq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_geq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_gt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_leq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_like?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_lt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_neq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackPermitted?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpSackPermitted_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpUrgentPointer?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpUrgentPointer_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
};

export enum AccountCdnNetworkAnalyticsAdaptiveGroupsOrderBy {
  /** applicationTag ascending */
  ApplicationTagAsc = 'applicationTag_ASC',
  /** applicationTag descending */
  ApplicationTagDesc = 'applicationTag_DESC',
  /** avg(bitRateDay) ascending */
  AvgBitRateDayAsc = 'avg_bitRateDay_ASC',
  /** avg(bitRateDay) descending */
  AvgBitRateDayDesc = 'avg_bitRateDay_DESC',
  /** avg(bitRateFifteenMinutes) ascending */
  AvgBitRateFifteenMinutesAsc = 'avg_bitRateFifteenMinutes_ASC',
  /** avg(bitRateFifteenMinutes) descending */
  AvgBitRateFifteenMinutesDesc = 'avg_bitRateFifteenMinutes_DESC',
  /** avg(bitRateFiveMinutes) ascending */
  AvgBitRateFiveMinutesAsc = 'avg_bitRateFiveMinutes_ASC',
  /** avg(bitRateFiveMinutes) descending */
  AvgBitRateFiveMinutesDesc = 'avg_bitRateFiveMinutes_DESC',
  /** avg(bitRateHour) ascending */
  AvgBitRateHourAsc = 'avg_bitRateHour_ASC',
  /** avg(bitRateHour) descending */
  AvgBitRateHourDesc = 'avg_bitRateHour_DESC',
  /** avg(bitRateMinute) ascending */
  AvgBitRateMinuteAsc = 'avg_bitRateMinute_ASC',
  /** avg(bitRateMinute) descending */
  AvgBitRateMinuteDesc = 'avg_bitRateMinute_DESC',
  /** avg(bitRateTenSeconds) ascending */
  AvgBitRateTenSecondsAsc = 'avg_bitRateTenSeconds_ASC',
  /** avg(bitRateTenSeconds) descending */
  AvgBitRateTenSecondsDesc = 'avg_bitRateTenSeconds_DESC',
  /** avg(bitRate) ascending */
  AvgBitRateAsc = 'avg_bitRate_ASC',
  /** avg(bitRate) descending */
  AvgBitRateDesc = 'avg_bitRate_DESC',
  /** avg(packetRateDay) ascending */
  AvgPacketRateDayAsc = 'avg_packetRateDay_ASC',
  /** avg(packetRateDay) descending */
  AvgPacketRateDayDesc = 'avg_packetRateDay_DESC',
  /** avg(packetRateFifteenMinutes) ascending */
  AvgPacketRateFifteenMinutesAsc = 'avg_packetRateFifteenMinutes_ASC',
  /** avg(packetRateFifteenMinutes) descending */
  AvgPacketRateFifteenMinutesDesc = 'avg_packetRateFifteenMinutes_DESC',
  /** avg(packetRateFiveMinutes) ascending */
  AvgPacketRateFiveMinutesAsc = 'avg_packetRateFiveMinutes_ASC',
  /** avg(packetRateFiveMinutes) descending */
  AvgPacketRateFiveMinutesDesc = 'avg_packetRateFiveMinutes_DESC',
  /** avg(packetRateHour) ascending */
  AvgPacketRateHourAsc = 'avg_packetRateHour_ASC',
  /** avg(packetRateHour) descending */
  AvgPacketRateHourDesc = 'avg_packetRateHour_DESC',
  /** avg(packetRateMinute) ascending */
  AvgPacketRateMinuteAsc = 'avg_packetRateMinute_ASC',
  /** avg(packetRateMinute) descending */
  AvgPacketRateMinuteDesc = 'avg_packetRateMinute_DESC',
  /** avg(packetRateTenSeconds) ascending */
  AvgPacketRateTenSecondsAsc = 'avg_packetRateTenSeconds_ASC',
  /** avg(packetRateTenSeconds) descending */
  AvgPacketRateTenSecondsDesc = 'avg_packetRateTenSeconds_DESC',
  /** avg(packetRate) ascending */
  AvgPacketRateAsc = 'avg_packetRate_ASC',
  /** avg(packetRate) descending */
  AvgPacketRateDesc = 'avg_packetRate_DESC',
  /** coloCity ascending */
  ColoCityAsc = 'coloCity_ASC',
  /** coloCity descending */
  ColoCityDesc = 'coloCity_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** coloCountry ascending */
  ColoCountryAsc = 'coloCountry_ASC',
  /** coloCountry descending */
  ColoCountryDesc = 'coloCountry_DESC',
  /** coloGeohash ascending */
  ColoGeohashAsc = 'coloGeohash_ASC',
  /** coloGeohash descending */
  ColoGeohashDesc = 'coloGeohash_DESC',
  /** coloName ascending */
  ColoNameAsc = 'coloName_ASC',
  /** coloName descending */
  ColoNameDesc = 'coloName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetimeTenSeconds ascending */
  DatetimeTenSecondsAsc = 'datetimeTenSeconds_ASC',
  /** datetimeTenSeconds descending */
  DatetimeTenSecondsDesc = 'datetimeTenSeconds_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationAsnName ascending */
  DestinationAsnNameAsc = 'destinationAsnName_ASC',
  /** destinationAsnName descending */
  DestinationAsnNameDesc = 'destinationAsnName_DESC',
  /** destinationAsn ascending */
  DestinationAsnAsc = 'destinationAsn_ASC',
  /** destinationAsn descending */
  DestinationAsnDesc = 'destinationAsn_DESC',
  /** destinationCountry ascending */
  DestinationCountryAsc = 'destinationCountry_ASC',
  /** destinationCountry descending */
  DestinationCountryDesc = 'destinationCountry_DESC',
  /** destinationDeviceTag ascending */
  DestinationDeviceTagAsc = 'destinationDeviceTag_ASC',
  /** destinationDeviceTag descending */
  DestinationDeviceTagDesc = 'destinationDeviceTag_DESC',
  /** destinationGeohash ascending */
  DestinationGeohashAsc = 'destinationGeohash_ASC',
  /** destinationGeohash descending */
  DestinationGeohashDesc = 'destinationGeohash_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** destinationService ascending */
  DestinationServiceAsc = 'destinationService_ASC',
  /** destinationService descending */
  DestinationServiceDesc = 'destinationService_DESC',
  /** direction ascending */
  DirectionAsc = 'direction_ASC',
  /** direction descending */
  DirectionDesc = 'direction_DESC',
  /** ethertype ascending */
  EthertypeAsc = 'ethertype_ASC',
  /** ethertype descending */
  EthertypeDesc = 'ethertype_DESC',
  /** greChecksum ascending */
  GreChecksumAsc = 'greChecksum_ASC',
  /** greChecksum descending */
  GreChecksumDesc = 'greChecksum_DESC',
  /** greEthertype ascending */
  GreEthertypeAsc = 'greEthertype_ASC',
  /** greEthertype descending */
  GreEthertypeDesc = 'greEthertype_DESC',
  /** greHeaderLength ascending */
  GreHeaderLengthAsc = 'greHeaderLength_ASC',
  /** greHeaderLength descending */
  GreHeaderLengthDesc = 'greHeaderLength_DESC',
  /** greKey ascending */
  GreKeyAsc = 'greKey_ASC',
  /** greKey descending */
  GreKeyDesc = 'greKey_DESC',
  /** greSequenceNumber ascending */
  GreSequenceNumberAsc = 'greSequenceNumber_ASC',
  /** greSequenceNumber descending */
  GreSequenceNumberDesc = 'greSequenceNumber_DESC',
  /** greVersion ascending */
  GreVersionAsc = 'greVersion_ASC',
  /** greVersion descending */
  GreVersionDesc = 'greVersion_DESC',
  /** icmpChecksum ascending */
  IcmpChecksumAsc = 'icmpChecksum_ASC',
  /** icmpChecksum descending */
  IcmpChecksumDesc = 'icmpChecksum_DESC',
  /** icmpCode ascending */
  IcmpCodeAsc = 'icmpCode_ASC',
  /** icmpCode descending */
  IcmpCodeDesc = 'icmpCode_DESC',
  /** icmpType ascending */
  IcmpTypeAsc = 'icmpType_ASC',
  /** icmpType descending */
  IcmpTypeDesc = 'icmpType_DESC',
  /** ipDestinationAddress ascending */
  IpDestinationAddressAsc = 'ipDestinationAddress_ASC',
  /** ipDestinationAddress descending */
  IpDestinationAddressDesc = 'ipDestinationAddress_DESC',
  /** ipDestinationSubnet ascending */
  IpDestinationSubnetAsc = 'ipDestinationSubnet_ASC',
  /** ipDestinationSubnet descending */
  IpDestinationSubnetDesc = 'ipDestinationSubnet_DESC',
  /** ipFragmentOffset ascending */
  IpFragmentOffsetAsc = 'ipFragmentOffset_ASC',
  /** ipFragmentOffset descending */
  IpFragmentOffsetDesc = 'ipFragmentOffset_DESC',
  /** ipHeaderLength ascending */
  IpHeaderLengthAsc = 'ipHeaderLength_ASC',
  /** ipHeaderLength descending */
  IpHeaderLengthDesc = 'ipHeaderLength_DESC',
  /** ipMoreFragments ascending */
  IpMoreFragmentsAsc = 'ipMoreFragments_ASC',
  /** ipMoreFragments descending */
  IpMoreFragmentsDesc = 'ipMoreFragments_DESC',
  /** ipProtocolName ascending */
  IpProtocolNameAsc = 'ipProtocolName_ASC',
  /** ipProtocolName descending */
  IpProtocolNameDesc = 'ipProtocolName_DESC',
  /** ipProtocol ascending */
  IpProtocolAsc = 'ipProtocol_ASC',
  /** ipProtocol descending */
  IpProtocolDesc = 'ipProtocol_DESC',
  /** ipSourceAddress ascending */
  IpSourceAddressAsc = 'ipSourceAddress_ASC',
  /** ipSourceAddress descending */
  IpSourceAddressDesc = 'ipSourceAddress_DESC',
  /** ipSourceSubnet ascending */
  IpSourceSubnetAsc = 'ipSourceSubnet_ASC',
  /** ipSourceSubnet descending */
  IpSourceSubnetDesc = 'ipSourceSubnet_DESC',
  /** ipTotalLengthBuckets ascending */
  IpTotalLengthBucketsAsc = 'ipTotalLengthBuckets_ASC',
  /** ipTotalLengthBuckets descending */
  IpTotalLengthBucketsDesc = 'ipTotalLengthBuckets_DESC',
  /** ipTotalLength ascending */
  IpTotalLengthAsc = 'ipTotalLength_ASC',
  /** ipTotalLength descending */
  IpTotalLengthDesc = 'ipTotalLength_DESC',
  /** ipTtlBuckets ascending */
  IpTtlBucketsAsc = 'ipTtlBuckets_ASC',
  /** ipTtlBuckets descending */
  IpTtlBucketsDesc = 'ipTtlBuckets_DESC',
  /** ipTtl ascending */
  IpTtlAsc = 'ipTtl_ASC',
  /** ipTtl descending */
  IpTtlDesc = 'ipTtl_DESC',
  /** ipv4Checksum ascending */
  Ipv4ChecksumAsc = 'ipv4Checksum_ASC',
  /** ipv4Checksum descending */
  Ipv4ChecksumDesc = 'ipv4Checksum_DESC',
  /** ipv4DontFragment ascending */
  Ipv4DontFragmentAsc = 'ipv4DontFragment_ASC',
  /** ipv4DontFragment descending */
  Ipv4DontFragmentDesc = 'ipv4DontFragment_DESC',
  /** ipv4Dscp ascending */
  Ipv4DscpAsc = 'ipv4Dscp_ASC',
  /** ipv4Dscp descending */
  Ipv4DscpDesc = 'ipv4Dscp_DESC',
  /** ipv4Ecn ascending */
  Ipv4EcnAsc = 'ipv4Ecn_ASC',
  /** ipv4Ecn descending */
  Ipv4EcnDesc = 'ipv4Ecn_DESC',
  /** ipv4Identification ascending */
  Ipv4IdentificationAsc = 'ipv4Identification_ASC',
  /** ipv4Identification descending */
  Ipv4IdentificationDesc = 'ipv4Identification_DESC',
  /** ipv4Options ascending */
  Ipv4OptionsAsc = 'ipv4Options_ASC',
  /** ipv4Options descending */
  Ipv4OptionsDesc = 'ipv4Options_DESC',
  /** ipv6Dscp ascending */
  Ipv6DscpAsc = 'ipv6Dscp_ASC',
  /** ipv6Dscp descending */
  Ipv6DscpDesc = 'ipv6Dscp_DESC',
  /** ipv6Ecn ascending */
  Ipv6EcnAsc = 'ipv6Ecn_ASC',
  /** ipv6Ecn descending */
  Ipv6EcnDesc = 'ipv6Ecn_DESC',
  /** ipv6ExtensionHeaders ascending */
  Ipv6ExtensionHeadersAsc = 'ipv6ExtensionHeaders_ASC',
  /** ipv6ExtensionHeaders descending */
  Ipv6ExtensionHeadersDesc = 'ipv6ExtensionHeaders_DESC',
  /** ipv6FlowLabel ascending */
  Ipv6FlowLabelAsc = 'ipv6FlowLabel_ASC',
  /** ipv6FlowLabel descending */
  Ipv6FlowLabelDesc = 'ipv6FlowLabel_DESC',
  /** ipv6Identification ascending */
  Ipv6IdentificationAsc = 'ipv6Identification_ASC',
  /** ipv6Identification descending */
  Ipv6IdentificationDesc = 'ipv6Identification_DESC',
  /** leaseTag ascending */
  LeaseTagAsc = 'leaseTag_ASC',
  /** leaseTag descending */
  LeaseTagDesc = 'leaseTag_DESC',
  /** mitigationSystem ascending */
  MitigationSystemAsc = 'mitigationSystem_ASC',
  /** mitigationSystem descending */
  MitigationSystemDesc = 'mitigationSystem_DESC',
  /** outcome ascending */
  OutcomeAsc = 'outcome_ASC',
  /** outcome descending */
  OutcomeDesc = 'outcome_DESC',
  /** prefixTag ascending */
  PrefixTagAsc = 'prefixTag_ASC',
  /** prefixTag descending */
  PrefixTagDesc = 'prefixTag_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sourceAsnName ascending */
  SourceAsnNameAsc = 'sourceAsnName_ASC',
  /** sourceAsnName descending */
  SourceAsnNameDesc = 'sourceAsnName_DESC',
  /** sourceAsn ascending */
  SourceAsnAsc = 'sourceAsn_ASC',
  /** sourceAsn descending */
  SourceAsnDesc = 'sourceAsn_DESC',
  /** sourceCountry ascending */
  SourceCountryAsc = 'sourceCountry_ASC',
  /** sourceCountry descending */
  SourceCountryDesc = 'sourceCountry_DESC',
  /** sourceDeviceTag ascending */
  SourceDeviceTagAsc = 'sourceDeviceTag_ASC',
  /** sourceDeviceTag descending */
  SourceDeviceTagDesc = 'sourceDeviceTag_DESC',
  /** sourceGeohash ascending */
  SourceGeohashAsc = 'sourceGeohash_ASC',
  /** sourceGeohash descending */
  SourceGeohashDesc = 'sourceGeohash_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** sourceService ascending */
  SourceServiceAsc = 'sourceService_ASC',
  /** sourceService descending */
  SourceServiceDesc = 'sourceService_DESC',
  /** sum(bits) ascending */
  SumBitsAsc = 'sum_bits_ASC',
  /** sum(bits) descending */
  SumBitsDesc = 'sum_bits_DESC',
  /** sum(packets) ascending */
  SumPacketsAsc = 'sum_packets_ASC',
  /** sum(packets) descending */
  SumPacketsDesc = 'sum_packets_DESC',
  /** system ascending */
  SystemAsc = 'system_ASC',
  /** system descending */
  SystemDesc = 'system_DESC',
  /** tcpAcknowledgementNumber ascending */
  TcpAcknowledgementNumberAsc = 'tcpAcknowledgementNumber_ASC',
  /** tcpAcknowledgementNumber descending */
  TcpAcknowledgementNumberDesc = 'tcpAcknowledgementNumber_DESC',
  /** tcpChecksum ascending */
  TcpChecksumAsc = 'tcpChecksum_ASC',
  /** tcpChecksum descending */
  TcpChecksumDesc = 'tcpChecksum_DESC',
  /** tcpDataOffset ascending */
  TcpDataOffsetAsc = 'tcpDataOffset_ASC',
  /** tcpDataOffset descending */
  TcpDataOffsetDesc = 'tcpDataOffset_DESC',
  /** tcpFlagsString ascending */
  TcpFlagsStringAsc = 'tcpFlagsString_ASC',
  /** tcpFlagsString descending */
  TcpFlagsStringDesc = 'tcpFlagsString_DESC',
  /** tcpFlags ascending */
  TcpFlagsAsc = 'tcpFlags_ASC',
  /** tcpFlags descending */
  TcpFlagsDesc = 'tcpFlags_DESC',
  /** tcpMss ascending */
  TcpMssAsc = 'tcpMss_ASC',
  /** tcpMss descending */
  TcpMssDesc = 'tcpMss_DESC',
  /** tcpOptions ascending */
  TcpOptionsAsc = 'tcpOptions_ASC',
  /** tcpOptions descending */
  TcpOptionsDesc = 'tcpOptions_DESC',
  /** tcpSackBlocks ascending */
  TcpSackBlocksAsc = 'tcpSackBlocks_ASC',
  /** tcpSackBlocks descending */
  TcpSackBlocksDesc = 'tcpSackBlocks_DESC',
  /** tcpSackPermitted ascending */
  TcpSackPermittedAsc = 'tcpSackPermitted_ASC',
  /** tcpSackPermitted descending */
  TcpSackPermittedDesc = 'tcpSackPermitted_DESC',
  /** tcpSequenceNumber ascending */
  TcpSequenceNumberAsc = 'tcpSequenceNumber_ASC',
  /** tcpSequenceNumber descending */
  TcpSequenceNumberDesc = 'tcpSequenceNumber_DESC',
  /** tcpTimestampEcr ascending */
  TcpTimestampEcrAsc = 'tcpTimestampEcr_ASC',
  /** tcpTimestampEcr descending */
  TcpTimestampEcrDesc = 'tcpTimestampEcr_DESC',
  /** tcpTimestampValue ascending */
  TcpTimestampValueAsc = 'tcpTimestampValue_ASC',
  /** tcpTimestampValue descending */
  TcpTimestampValueDesc = 'tcpTimestampValue_DESC',
  /** tcpUrgentPointer ascending */
  TcpUrgentPointerAsc = 'tcpUrgentPointer_ASC',
  /** tcpUrgentPointer descending */
  TcpUrgentPointerDesc = 'tcpUrgentPointer_DESC',
  /** tcpWindowScale ascending */
  TcpWindowScaleAsc = 'tcpWindowScale_ASC',
  /** tcpWindowScale descending */
  TcpWindowScaleDesc = 'tcpWindowScale_DESC',
  /** tcpWindowSize ascending */
  TcpWindowSizeAsc = 'tcpWindowSize_ASC',
  /** tcpWindowSize descending */
  TcpWindowSizeDesc = 'tcpWindowSize_DESC',
  /** udpChecksum ascending */
  UdpChecksumAsc = 'udpChecksum_ASC',
  /** udpChecksum descending */
  UdpChecksumDesc = 'udpChecksum_DESC',
  /** udpPayloadLength ascending */
  UdpPayloadLengthAsc = 'udpPayloadLength_ASC',
  /** udpPayloadLength descending */
  UdpPayloadLengthDesc = 'udpPayloadLength_DESC',
  /** verdict ascending */
  VerdictAsc = 'verdict_ASC',
  /** verdict descending */
  VerdictDesc = 'verdict_DESC'
}

export type AccountCdnNetworkAnalyticsAdaptiveGroupsSum = {
  __typename?: 'AccountCdnNetworkAnalyticsAdaptiveGroupsSum';
  /** Sum of bits received */
  bits: Scalars['uint64']['output'];
  /** Sum of packets received */
  packets: Scalars['uint64']['output'];
};

/** Beta. Aggregated D1 analytics with adaptive sampling */
export type AccountD1AnalyticsAdaptiveGroups = {
  __typename?: 'AccountD1AnalyticsAdaptiveGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<AccountD1AnalyticsAdaptiveGroupsAvg>;
  /** Number of requests to D1 processed (approximation when sampleInterval > 1) */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountD1AnalyticsAdaptiveGroupsDimensions>;
  /** Quantiles of a metric per dimension */
  quantiles?: Maybe<AccountD1AnalyticsAdaptiveGroupsQuantiles>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountD1AnalyticsAdaptiveGroupsSum>;
};

export type AccountD1AnalyticsAdaptiveGroupsAvg = {
  __typename?: 'AccountD1AnalyticsAdaptiveGroupsAvg';
  /** The total number of bytes in the response, including all returned rows and metadata (average/mean). */
  queryBatchResponseBytes: Scalars['float64']['output'];
  /** Query batch response time in milliseconds (average/mean). */
  queryBatchTimeMs: Scalars['float64']['output'];
  /** The average value used for sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountD1AnalyticsAdaptiveGroupsDimensions = {
  __typename?: 'AccountD1AnalyticsAdaptiveGroupsDimensions';
  /** The UUID of a D1 database */
  databaseId: Scalars['string']['output'];
  /** The date the D1 request was received */
  date: Scalars['Date']['output'];
  /** The date and time the D1 request was received truncated to fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the D1 request was received truncated to five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the D1 request was received truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the D1 request was received truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
};

export type AccountD1AnalyticsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountD1AnalyticsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountD1AnalyticsAdaptiveGroupsFilter_InputObject>>;
  databaseId?: InputMaybe<Scalars['string']['input']>;
  databaseId_geq?: InputMaybe<Scalars['string']['input']>;
  databaseId_gt?: InputMaybe<Scalars['string']['input']>;
  databaseId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  databaseId_leq?: InputMaybe<Scalars['string']['input']>;
  databaseId_like?: InputMaybe<Scalars['string']['input']>;
  databaseId_lt?: InputMaybe<Scalars['string']['input']>;
  databaseId_neq?: InputMaybe<Scalars['string']['input']>;
  databaseId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  databaseId_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export enum AccountD1AnalyticsAdaptiveGroupsOrderBy {
  /** avg(queryBatchResponseBytes) ascending */
  AvgQueryBatchResponseBytesAsc = 'avg_queryBatchResponseBytes_ASC',
  /** avg(queryBatchResponseBytes) descending */
  AvgQueryBatchResponseBytesDesc = 'avg_queryBatchResponseBytes_DESC',
  /** avg(queryBatchTimeMs) ascending */
  AvgQueryBatchTimeMsAsc = 'avg_queryBatchTimeMs_ASC',
  /** avg(queryBatchTimeMs) descending */
  AvgQueryBatchTimeMsDesc = 'avg_queryBatchTimeMs_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** databaseId ascending */
  DatabaseIdAsc = 'databaseId_ASC',
  /** databaseId descending */
  DatabaseIdDesc = 'databaseId_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** quantiles(queryBatchResponseBytesP50) ascending */
  QuantilesQueryBatchResponseBytesP50Asc = 'quantiles_queryBatchResponseBytesP50_ASC',
  /** quantiles(queryBatchResponseBytesP50) descending */
  QuantilesQueryBatchResponseBytesP50Desc = 'quantiles_queryBatchResponseBytesP50_DESC',
  /** quantiles(queryBatchResponseBytesP90) ascending */
  QuantilesQueryBatchResponseBytesP90Asc = 'quantiles_queryBatchResponseBytesP90_ASC',
  /** quantiles(queryBatchResponseBytesP90) descending */
  QuantilesQueryBatchResponseBytesP90Desc = 'quantiles_queryBatchResponseBytesP90_DESC',
  /** quantiles(queryBatchTimeMsP50) ascending */
  QuantilesQueryBatchTimeMsP50Asc = 'quantiles_queryBatchTimeMsP50_ASC',
  /** quantiles(queryBatchTimeMsP50) descending */
  QuantilesQueryBatchTimeMsP50Desc = 'quantiles_queryBatchTimeMsP50_DESC',
  /** quantiles(queryBatchTimeMsP90) ascending */
  QuantilesQueryBatchTimeMsP90Asc = 'quantiles_queryBatchTimeMsP90_ASC',
  /** quantiles(queryBatchTimeMsP90) descending */
  QuantilesQueryBatchTimeMsP90Desc = 'quantiles_queryBatchTimeMsP90_DESC',
  /** sum(queryBatchResponseBytes) ascending */
  SumQueryBatchResponseBytesAsc = 'sum_queryBatchResponseBytes_ASC',
  /** sum(queryBatchResponseBytes) descending */
  SumQueryBatchResponseBytesDesc = 'sum_queryBatchResponseBytes_DESC',
  /** sum(readQueries) ascending */
  SumReadQueriesAsc = 'sum_readQueries_ASC',
  /** sum(readQueries) descending */
  SumReadQueriesDesc = 'sum_readQueries_DESC',
  /** sum(rowsRead) ascending */
  SumRowsReadAsc = 'sum_rowsRead_ASC',
  /** sum(rowsRead) descending */
  SumRowsReadDesc = 'sum_rowsRead_DESC',
  /** sum(rowsWritten) ascending */
  SumRowsWrittenAsc = 'sum_rowsWritten_ASC',
  /** sum(rowsWritten) descending */
  SumRowsWrittenDesc = 'sum_rowsWritten_DESC',
  /** sum(writeQueries) ascending */
  SumWriteQueriesAsc = 'sum_writeQueries_ASC',
  /** sum(writeQueries) descending */
  SumWriteQueriesDesc = 'sum_writeQueries_DESC'
}

export type AccountD1AnalyticsAdaptiveGroupsQuantiles = {
  __typename?: 'AccountD1AnalyticsAdaptiveGroupsQuantiles';
  /** The total number of bytes in the response, including all returned rows and metadata (50th percentile). */
  queryBatchResponseBytesP50: Scalars['float64']['output'];
  /** The total number of bytes in the response, including all returned rows and metadata (90th percentile). */
  queryBatchResponseBytesP90: Scalars['float64']['output'];
  /** Query batch response time in milliseconds (50th percentile). */
  queryBatchTimeMsP50: Scalars['float64']['output'];
  /** Query batch response time in milliseconds (90th percentile). */
  queryBatchTimeMsP90: Scalars['float64']['output'];
};

export type AccountD1AnalyticsAdaptiveGroupsSum = {
  __typename?: 'AccountD1AnalyticsAdaptiveGroupsSum';
  /** The total number of bytes in the response, including all returned rows and metadata. */
  queryBatchResponseBytes: Scalars['float64']['output'];
  /** The number of read queries. */
  readQueries: Scalars['uint64']['output'];
  /** The number of rows your queries read. */
  rowsRead: Scalars['uint64']['output'];
  /** The number of rows your queries wrote. */
  rowsWritten: Scalars['uint64']['output'];
  /** The number of write queries. */
  writeQueries: Scalars['uint64']['output'];
};

/** Attack analytics metadata for attacks detected by dosd */
export type AccountDosdAttackAnalyticsGroups = {
  __typename?: 'AccountDosdAttackAnalyticsGroups';
  /** Unique identifier of the mitigation that matched the packet, if any */
  attackId: Scalars['string']['output'];
  /**
   * Type of attack traffic
   * @deprecated Use attackVector for a richer description of the attack
   */
  attackType: Scalars['string']['output'];
  /** Description of attack vector */
  attackVector: Scalars['string']['output'];
  /** Sum of bits received during the attack */
  bits: Scalars['uint64']['output'];
  /** Common TCP flags used by attack traffic, if any */
  commonTcpFlags: Scalars['uint8']['output'];
  /** Names of common TCP flags used by attack traffic, if any */
  commonTcpFlagsNames: Scalars['string']['output'];
  /** Fixed destination IP used by attack traffic, if any */
  destinationIp: Scalars['string']['output'];
  /** Fixed destination port used by attack traffic, if any */
  destinationPort: Scalars['uint16']['output'];
  /** Sum of bits dropped during the attack */
  droppedBits: Scalars['uint64']['output'];
  /** Sum of packets dropped during the attack */
  droppedPackets: Scalars['uint64']['output'];
  /** Date and time that the attack ended; not available for ongoing attacks */
  endDatetime: Scalars['Time']['output'];
  /** Fixed protocol used by attack traffic, if any */
  ipProtocol: Scalars['uint8']['output'];
  /** Fixed protocol used by attack traffic, if any */
  ipProtocolName: Scalars['string']['output'];
  /** Type of mitigation applied to attack traffic */
  mitigationReason: Scalars['string']['output'];
  /** Whether mitigation was applied in only some locations or globally */
  mitigationScope: Scalars['string']['output'];
  /** Type of mitigation applied to attack traffic */
  mitigationType: Scalars['string']['output'];
  /** Sum of packets received during the attack */
  packets: Scalars['uint64']['output'];
  /** Unique identifier of the rule that matched the packet, if any */
  ruleId: Scalars['string']['output'];
  /** Human-readable name of the rule that matched the packet, if any */
  ruleName: Scalars['string']['output'];
  /** Unique identifier of the ruleset containing the rule that matched the packet, if any */
  rulesetId: Scalars['string']['output'];
  /** Unique identifier of the ruleset override containing the rule that matched the packet, if any */
  rulesetOverrideId: Scalars['string']['output'];
  /** Fixed source IP used by attack traffic, if any */
  sourceIp: Scalars['string']['output'];
  /** Fixed source port used by attack traffic, if any */
  sourcePort: Scalars['uint16']['output'];
  /** Date and time that the attack started */
  startDatetime: Scalars['Time']['output'];
  /** Fixed TCP flags used by attack traffic, if any */
  tcpFlags: Scalars['uint8']['output'];
  /** Names of fixed TCP flags used by attack traffic, if any */
  tcpFlagsNames: Scalars['string']['output'];
};

export type AccountDosdAttackAnalyticsGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountDosdAttackAnalyticsGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountDosdAttackAnalyticsGroupsFilter_InputObject>>;
  attackId?: InputMaybe<Scalars['string']['input']>;
  attackId_geq?: InputMaybe<Scalars['string']['input']>;
  attackId_gt?: InputMaybe<Scalars['string']['input']>;
  attackId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  attackId_leq?: InputMaybe<Scalars['string']['input']>;
  attackId_like?: InputMaybe<Scalars['string']['input']>;
  attackId_lt?: InputMaybe<Scalars['string']['input']>;
  attackId_neq?: InputMaybe<Scalars['string']['input']>;
  attackId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  attackId_notlike?: InputMaybe<Scalars['string']['input']>;
  attackType?: InputMaybe<Scalars['string']['input']>;
  attackType_geq?: InputMaybe<Scalars['string']['input']>;
  attackType_gt?: InputMaybe<Scalars['string']['input']>;
  attackType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  attackType_leq?: InputMaybe<Scalars['string']['input']>;
  attackType_like?: InputMaybe<Scalars['string']['input']>;
  attackType_lt?: InputMaybe<Scalars['string']['input']>;
  attackType_neq?: InputMaybe<Scalars['string']['input']>;
  attackType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  attackType_notlike?: InputMaybe<Scalars['string']['input']>;
  attackVector?: InputMaybe<Scalars['string']['input']>;
  attackVector_geq?: InputMaybe<Scalars['string']['input']>;
  attackVector_gt?: InputMaybe<Scalars['string']['input']>;
  attackVector_in?: InputMaybe<Array<Scalars['string']['input']>>;
  attackVector_leq?: InputMaybe<Scalars['string']['input']>;
  attackVector_like?: InputMaybe<Scalars['string']['input']>;
  attackVector_lt?: InputMaybe<Scalars['string']['input']>;
  attackVector_neq?: InputMaybe<Scalars['string']['input']>;
  attackVector_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  attackVector_notlike?: InputMaybe<Scalars['string']['input']>;
  bits?: InputMaybe<Scalars['uint64']['input']>;
  bits_geq?: InputMaybe<Scalars['uint64']['input']>;
  bits_gt?: InputMaybe<Scalars['uint64']['input']>;
  bits_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  bits_leq?: InputMaybe<Scalars['uint64']['input']>;
  bits_lt?: InputMaybe<Scalars['uint64']['input']>;
  bits_neq?: InputMaybe<Scalars['uint64']['input']>;
  bits_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  commonTcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  commonTcpFlagsNames?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_geq?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_gt?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_in?: InputMaybe<Array<Scalars['string']['input']>>;
  commonTcpFlagsNames_leq?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_like?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_lt?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_neq?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  commonTcpFlagsNames_notlike?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  commonTcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  commonTcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  commonTcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  commonTcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  commonTcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  commonTcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
  destinationIp?: InputMaybe<Scalars['string']['input']>;
  destinationIp_geq?: InputMaybe<Scalars['string']['input']>;
  destinationIp_gt?: InputMaybe<Scalars['string']['input']>;
  destinationIp_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationIp_leq?: InputMaybe<Scalars['string']['input']>;
  destinationIp_like?: InputMaybe<Scalars['string']['input']>;
  destinationIp_lt?: InputMaybe<Scalars['string']['input']>;
  destinationIp_neq?: InputMaybe<Scalars['string']['input']>;
  destinationIp_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationIp_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  droppedBits?: InputMaybe<Scalars['uint64']['input']>;
  droppedBits_geq?: InputMaybe<Scalars['uint64']['input']>;
  droppedBits_gt?: InputMaybe<Scalars['uint64']['input']>;
  droppedBits_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  droppedBits_leq?: InputMaybe<Scalars['uint64']['input']>;
  droppedBits_lt?: InputMaybe<Scalars['uint64']['input']>;
  droppedBits_neq?: InputMaybe<Scalars['uint64']['input']>;
  droppedBits_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  droppedPackets?: InputMaybe<Scalars['uint64']['input']>;
  droppedPackets_geq?: InputMaybe<Scalars['uint64']['input']>;
  droppedPackets_gt?: InputMaybe<Scalars['uint64']['input']>;
  droppedPackets_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  droppedPackets_leq?: InputMaybe<Scalars['uint64']['input']>;
  droppedPackets_lt?: InputMaybe<Scalars['uint64']['input']>;
  droppedPackets_neq?: InputMaybe<Scalars['uint64']['input']>;
  droppedPackets_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  endDatetime?: InputMaybe<Scalars['Time']['input']>;
  endDatetime_geq?: InputMaybe<Scalars['Time']['input']>;
  endDatetime_gt?: InputMaybe<Scalars['Time']['input']>;
  endDatetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  endDatetime_leq?: InputMaybe<Scalars['Time']['input']>;
  endDatetime_lt?: InputMaybe<Scalars['Time']['input']>;
  endDatetime_neq?: InputMaybe<Scalars['Time']['input']>;
  endDatetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  ipProtocol?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocolName?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_geq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_gt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_leq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_like?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_lt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_neq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipProtocol_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_in?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_notin?: InputMaybe<Scalars['bytes']['input']>;
  mitigationReason?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationReason_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_like?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationReason_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationScope?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationScope_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_like?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationScope_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationType?: InputMaybe<Scalars['string']['input']>;
  mitigationType_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationType_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationType_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationType_like?: InputMaybe<Scalars['string']['input']>;
  mitigationType_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationType_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationType_notlike?: InputMaybe<Scalars['string']['input']>;
  packets?: InputMaybe<Scalars['uint64']['input']>;
  packets_geq?: InputMaybe<Scalars['uint64']['input']>;
  packets_gt?: InputMaybe<Scalars['uint64']['input']>;
  packets_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  packets_leq?: InputMaybe<Scalars['uint64']['input']>;
  packets_lt?: InputMaybe<Scalars['uint64']['input']>;
  packets_neq?: InputMaybe<Scalars['uint64']['input']>;
  packets_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  ruleId?: InputMaybe<Scalars['string']['input']>;
  ruleId_geq?: InputMaybe<Scalars['string']['input']>;
  ruleId_gt?: InputMaybe<Scalars['string']['input']>;
  ruleId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_leq?: InputMaybe<Scalars['string']['input']>;
  ruleId_like?: InputMaybe<Scalars['string']['input']>;
  ruleId_lt?: InputMaybe<Scalars['string']['input']>;
  ruleId_neq?: InputMaybe<Scalars['string']['input']>;
  ruleId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_notlike?: InputMaybe<Scalars['string']['input']>;
  ruleName?: InputMaybe<Scalars['string']['input']>;
  ruleName_geq?: InputMaybe<Scalars['string']['input']>;
  ruleName_gt?: InputMaybe<Scalars['string']['input']>;
  ruleName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleName_leq?: InputMaybe<Scalars['string']['input']>;
  ruleName_like?: InputMaybe<Scalars['string']['input']>;
  ruleName_lt?: InputMaybe<Scalars['string']['input']>;
  ruleName_neq?: InputMaybe<Scalars['string']['input']>;
  ruleName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleName_notlike?: InputMaybe<Scalars['string']['input']>;
  rulesetId?: InputMaybe<Scalars['string']['input']>;
  rulesetId_geq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_gt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_leq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_like?: InputMaybe<Scalars['string']['input']>;
  rulesetId_lt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_neq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_notlike?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_geq?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_gt?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetOverrideId_leq?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_like?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_lt?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_neq?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetOverrideId_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceIp?: InputMaybe<Scalars['string']['input']>;
  sourceIp_geq?: InputMaybe<Scalars['string']['input']>;
  sourceIp_gt?: InputMaybe<Scalars['string']['input']>;
  sourceIp_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceIp_leq?: InputMaybe<Scalars['string']['input']>;
  sourceIp_like?: InputMaybe<Scalars['string']['input']>;
  sourceIp_lt?: InputMaybe<Scalars['string']['input']>;
  sourceIp_neq?: InputMaybe<Scalars['string']['input']>;
  sourceIp_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceIp_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  startDatetime?: InputMaybe<Scalars['Time']['input']>;
  startDatetime_geq?: InputMaybe<Scalars['Time']['input']>;
  startDatetime_gt?: InputMaybe<Scalars['Time']['input']>;
  startDatetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  startDatetime_leq?: InputMaybe<Scalars['Time']['input']>;
  startDatetime_lt?: InputMaybe<Scalars['Time']['input']>;
  startDatetime_neq?: InputMaybe<Scalars['Time']['input']>;
  startDatetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  tcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlagsNames?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_geq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_gt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsNames_leq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_like?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_lt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_neq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsNames_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
};

export enum AccountDosdAttackAnalyticsGroupsOrderBy {
  /** attackId ascending */
  AttackIdAsc = 'attackId_ASC',
  /** attackId descending */
  AttackIdDesc = 'attackId_DESC',
  /** attackType ascending */
  AttackTypeAsc = 'attackType_ASC',
  /** attackType descending */
  AttackTypeDesc = 'attackType_DESC',
  /** attackVector ascending */
  AttackVectorAsc = 'attackVector_ASC',
  /** attackVector descending */
  AttackVectorDesc = 'attackVector_DESC',
  /** bits ascending */
  BitsAsc = 'bits_ASC',
  /** bits descending */
  BitsDesc = 'bits_DESC',
  /** commonTcpFlagsNames ascending */
  CommonTcpFlagsNamesAsc = 'commonTcpFlagsNames_ASC',
  /** commonTcpFlagsNames descending */
  CommonTcpFlagsNamesDesc = 'commonTcpFlagsNames_DESC',
  /** commonTcpFlags ascending */
  CommonTcpFlagsAsc = 'commonTcpFlags_ASC',
  /** commonTcpFlags descending */
  CommonTcpFlagsDesc = 'commonTcpFlags_DESC',
  /** destinationIp ascending */
  DestinationIpAsc = 'destinationIp_ASC',
  /** destinationIp descending */
  DestinationIpDesc = 'destinationIp_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** droppedBits ascending */
  DroppedBitsAsc = 'droppedBits_ASC',
  /** droppedBits descending */
  DroppedBitsDesc = 'droppedBits_DESC',
  /** droppedPackets ascending */
  DroppedPacketsAsc = 'droppedPackets_ASC',
  /** droppedPackets descending */
  DroppedPacketsDesc = 'droppedPackets_DESC',
  /** endDatetime ascending */
  EndDatetimeAsc = 'endDatetime_ASC',
  /** endDatetime descending */
  EndDatetimeDesc = 'endDatetime_DESC',
  /** ipProtocolName ascending */
  IpProtocolNameAsc = 'ipProtocolName_ASC',
  /** ipProtocolName descending */
  IpProtocolNameDesc = 'ipProtocolName_DESC',
  /** ipProtocol ascending */
  IpProtocolAsc = 'ipProtocol_ASC',
  /** ipProtocol descending */
  IpProtocolDesc = 'ipProtocol_DESC',
  /** mitigationReason ascending */
  MitigationReasonAsc = 'mitigationReason_ASC',
  /** mitigationReason descending */
  MitigationReasonDesc = 'mitigationReason_DESC',
  /** mitigationScope ascending */
  MitigationScopeAsc = 'mitigationScope_ASC',
  /** mitigationScope descending */
  MitigationScopeDesc = 'mitigationScope_DESC',
  /** mitigationType ascending */
  MitigationTypeAsc = 'mitigationType_ASC',
  /** mitigationType descending */
  MitigationTypeDesc = 'mitigationType_DESC',
  /** packets ascending */
  PacketsAsc = 'packets_ASC',
  /** packets descending */
  PacketsDesc = 'packets_DESC',
  /** ruleId ascending */
  RuleIdAsc = 'ruleId_ASC',
  /** ruleId descending */
  RuleIdDesc = 'ruleId_DESC',
  /** ruleName ascending */
  RuleNameAsc = 'ruleName_ASC',
  /** ruleName descending */
  RuleNameDesc = 'ruleName_DESC',
  /** rulesetId ascending */
  RulesetIdAsc = 'rulesetId_ASC',
  /** rulesetId descending */
  RulesetIdDesc = 'rulesetId_DESC',
  /** rulesetOverrideId ascending */
  RulesetOverrideIdAsc = 'rulesetOverrideId_ASC',
  /** rulesetOverrideId descending */
  RulesetOverrideIdDesc = 'rulesetOverrideId_DESC',
  /** sourceIp ascending */
  SourceIpAsc = 'sourceIp_ASC',
  /** sourceIp descending */
  SourceIpDesc = 'sourceIp_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** startDatetime ascending */
  StartDatetimeAsc = 'startDatetime_ASC',
  /** startDatetime descending */
  StartDatetimeDesc = 'startDatetime_DESC',
  /** tcpFlagsNames ascending */
  TcpFlagsNamesAsc = 'tcpFlagsNames_ASC',
  /** tcpFlagsNames descending */
  TcpFlagsNamesDesc = 'tcpFlagsNames_DESC',
  /** tcpFlags ascending */
  TcpFlagsAsc = 'tcpFlags_ASC',
  /** tcpFlags descending */
  TcpFlagsDesc = 'tcpFlags_DESC'
}

/** Network analytics data for dosd */
export type AccountDosdNetworkAnalyticsAdaptiveGroups = {
  __typename?: 'AccountDosdNetworkAnalyticsAdaptiveGroups';
  /** The average of values for a metric per dimension */
  avg?: Maybe<AccountDosdNetworkAnalyticsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountDosdNetworkAnalyticsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountDosdNetworkAnalyticsAdaptiveGroupsSum>;
};

export type AccountDosdNetworkAnalyticsAdaptiveGroupsAvg = {
  __typename?: 'AccountDosdNetworkAnalyticsAdaptiveGroupsAvg';
  /** Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime */
  bitRate: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date */
  bitRateDay: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes */
  bitRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes */
  bitRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour */
  bitRateHour: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute */
  bitRateMinute: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds */
  bitRateTenSeconds: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime */
  packetRate: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date */
  packetRateDay: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes */
  packetRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes */
  packetRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour */
  packetRateHour: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute */
  packetRateMinute: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds */
  packetRateTenSeconds: Scalars['uint64']['output'];
};

export type AccountDosdNetworkAnalyticsAdaptiveGroupsDimensions = {
  __typename?: 'AccountDosdNetworkAnalyticsAdaptiveGroupsDimensions';
  /** Application tag associated with the packet */
  applicationTag: Scalars['string']['output'];
  /** Unique identifier of the mitigation that matched the packet, if any */
  attackId: Scalars['string']['output'];
  /** Attack vector of the rule that matched the packet, if any */
  attackVector: Scalars['string']['output'];
  /** City where the Cloudflare datacenter that received the packet is located */
  coloCity: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (nearest IATA airport code) */
  coloCode: Scalars['string']['output'];
  /** Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2) */
  coloCountry: Scalars['string']['output'];
  /** Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding) */
  coloGeohash: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (unique site identifier) */
  coloName: Scalars['string']['output'];
  /** Date that the packet was received */
  date: Scalars['Date']['output'];
  /** Date and time that the packet was received */
  datetime: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest hour */
  datetimeHour: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest ten seconds */
  datetimeTenSeconds: Scalars['Time']['output'];
  /** ASN associated with the destination IP of the packet, or 0 if there was no mapping available */
  destinationAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the destination IP of the packet, if available */
  destinationAsnName: Scalars['string']['output'];
  /** Country where the destination IP of the packet is located (ISO 3166-1 alpha-2) */
  destinationCountry: Scalars['string']['output'];
  /** Latitude and longitude where the destination IP of the packet is located (Geohash encoding) */
  destinationGeohash: Scalars['string']['output'];
  /** Value of the Destination Port header field in the TCP or UDP packet */
  destinationPort: Scalars['uint16']['output'];
  /** Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral) */
  direction: Scalars['string']['output'];
  /** Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6) */
  ethertype: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the GRE packet */
  greChecksum: Scalars['uint16']['output'];
  /** Value of the Ethertype header field in the GRE packet */
  greEthertype: Scalars['uint16']['output'];
  /** Length of the GRE packet header, in bytes */
  greHeaderLength: Scalars['uint16']['output'];
  /** Value of the Key header field in the GRE packet */
  greKey: Scalars['uint32']['output'];
  /** Value of the Sequence Number header field in the GRE packet */
  greSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Version header field in the GRE packet */
  greVersion: Scalars['uint8']['output'];
  /** Value of the Checkusm header field in the ICMP packet */
  icmpChecksum: Scalars['uint16']['output'];
  /** Value of the Code header field in the ICMP packet */
  icmpCode: Scalars['uint8']['output'];
  /** Value of the Type header field in the ICMP packet */
  icmpType: Scalars['uint8']['output'];
  /** Value of the Destination Address header field in the IPv4 or IPv6 packet */
  ipDestinationAddress: Scalars['string']['output'];
  /** Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipDestinationSubnet: Scalars['string']['output'];
  /** Value of the Fragment Offset header field in the IPv4 or IPv6 packet */
  ipFragmentOffset: Scalars['uint16']['output'];
  /** Length of the IPv4 or IPv6 packet header, in bytes */
  ipHeaderLength: Scalars['uint16']['output'];
  /** Value of the More Fragments header field in the IPv4 or IPv6 packet */
  ipMoreFragments: Scalars['uint8']['output'];
  /** Value of the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocol: Scalars['uint8']['output'];
  /** Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocolName: Scalars['string']['output'];
  /** Value of the Source Address header field in the IPv4 or IPv6 packet */
  ipSourceAddress: Scalars['string']['output'];
  /** Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipSourceSubnet: Scalars['string']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes */
  ipTotalLength: Scalars['uint16']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated */
  ipTotalLengthBuckets: Scalars['uint16']['output'];
  /** Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet */
  ipTtl: Scalars['uint8']['output'];
  /**
   * Value of the TTL header field in the IPv4 packet or the Hop Limit header field
   * in the IPv6 packet, with the last digit truncated
   */
  ipTtlBuckets: Scalars['uint8']['output'];
  /** Value of the Checksum header field in the IPv4 packet */
  ipv4Checksum: Scalars['uint16']['output'];
  /** Value of the Don't Fragment header field in the IPv4 packet */
  ipv4DontFragment: Scalars['uint8']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv4 packet */
  ipv4Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv4 packet */
  ipv4Ecn: Scalars['uint8']['output'];
  /** Value of the Identification header field in the IPv4 packet */
  ipv4Identification: Scalars['uint16']['output'];
  /** List of Options numbers included in the IPv4 packet header */
  ipv4Options: Scalars['string']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv6 packet */
  ipv6Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv6 packet */
  ipv6Ecn: Scalars['uint8']['output'];
  /** List of Extension Header numbers included in the IPv6 packet header */
  ipv6ExtensionHeaders: Scalars['string']['output'];
  /** Value of the Flow Label header field in the IPv6 packet */
  ipv6FlowLabel: Scalars['uint32']['output'];
  /** Value of the Identification extension header field in the IPv6 packet */
  ipv6Identification: Scalars['uint32']['output'];
  /** IP lease tag associated with the packet */
  leaseTag: Scalars['string']['output'];
  /** Reason for applying a mitigation to the packet, if any */
  mitigationReason: Scalars['string']['output'];
  /** Whether the packet matched a local or global mitigation, if any (possible values: local, global) */
  mitigationScope: Scalars['string']['output'];
  /** The action that was taken on the packet (possible values: pass, drop) */
  outcome: Scalars['string']['output'];
  /** IP prefix tag associated with the packet */
  prefixTag: Scalars['string']['output'];
  /** State of the packet in the context of the protocol, if available */
  protocolState: Scalars['string']['output'];
  /** Unique identifier of the rule that matched the packet, if any */
  ruleId: Scalars['string']['output'];
  /** Human-readable name of the rule that matched the packet, if any */
  ruleName: Scalars['string']['output'];
  /** Unique identifier of the ruleset containing the rule that matched the packet, if any */
  rulesetId: Scalars['string']['output'];
  /** Unique identifier of the ruleset override containing the rule that matched the packet, if any */
  rulesetOverrideId: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** ASN associated with the source IP of the packet, or 0 if there was no mapping available */
  sourceAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the source IP of the packet, if available */
  sourceAsnName: Scalars['string']['output'];
  /** Country where the source IP of the packet is located (ISO 3166-1 alpha-2) */
  sourceCountry: Scalars['string']['output'];
  /** Latitude and longitude where the source IP of the packet is located (Geohash encoding) */
  sourceGeohash: Scalars['string']['output'];
  /** Value of the Source Port header field in the TCP or UDP packet */
  sourcePort: Scalars['uint16']['output'];
  /** Value of the Acknowledgement Number header field in the TCP packet */
  tcpAcknowledgementNumber: Scalars['uint32']['output'];
  /** Value of the Checkusm header field in the TCP packet */
  tcpChecksum: Scalars['uint16']['output'];
  /** Value of the Data Offset header field in the TCP packet */
  tcpDataOffset: Scalars['uint16']['output'];
  /** Value of the Flags header field in the TCP packet */
  tcpFlags: Scalars['uint8']['output'];
  /** Human-readable string representation of the Flags header field in the TCP packet */
  tcpFlagsString: Scalars['string']['output'];
  /** Value of the MSS option header field in the TCP packet */
  tcpMss: Scalars['uint16']['output'];
  /** List of Options numbers included in the TCP packet header */
  tcpOptions: Scalars['string']['output'];
  /** Value of the SACK Blocks option header field in the TCP packet */
  tcpSackBlocks: Scalars['string']['output'];
  /** Value of the SACK Permitted option header field in the TCP packet */
  tcpSackPermitted: Scalars['uint8']['output'];
  /** Value of the Sequence Number header field in the TCP packet */
  tcpSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Timestamp Echo Reply option header field in the TCP packet */
  tcpTimestampEcr: Scalars['uint32']['output'];
  /** Value of the Timestamp option header field in the TCP packet */
  tcpTimestampValue: Scalars['uint32']['output'];
  /** Value of the Urgent Pointer header field in the TCP packet */
  tcpUrgentPointer: Scalars['uint16']['output'];
  /** Value of the Window Scale option header field in the TCP packet */
  tcpWindowScale: Scalars['uint16']['output'];
  /** Value of the Window Size header field in the TCP packet */
  tcpWindowSize: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the UDP packet */
  udpChecksum: Scalars['uint16']['output'];
  /** Value of the Payload Length header field in the UDP packet */
  udpPayloadLength: Scalars['uint16']['output'];
  /** The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop) */
  verdict: Scalars['string']['output'];
};

export type AccountDosdNetworkAnalyticsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountDosdNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountDosdNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  applicationTag?: InputMaybe<Scalars['string']['input']>;
  applicationTag_geq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_gt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_leq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_like?: InputMaybe<Scalars['string']['input']>;
  applicationTag_lt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_neq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_notlike?: InputMaybe<Scalars['string']['input']>;
  attackId?: InputMaybe<Scalars['string']['input']>;
  attackId_geq?: InputMaybe<Scalars['string']['input']>;
  attackId_gt?: InputMaybe<Scalars['string']['input']>;
  attackId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  attackId_leq?: InputMaybe<Scalars['string']['input']>;
  attackId_like?: InputMaybe<Scalars['string']['input']>;
  attackId_lt?: InputMaybe<Scalars['string']['input']>;
  attackId_neq?: InputMaybe<Scalars['string']['input']>;
  attackId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  attackId_notlike?: InputMaybe<Scalars['string']['input']>;
  attackVector?: InputMaybe<Scalars['string']['input']>;
  attackVector_geq?: InputMaybe<Scalars['string']['input']>;
  attackVector_gt?: InputMaybe<Scalars['string']['input']>;
  attackVector_in?: InputMaybe<Array<Scalars['string']['input']>>;
  attackVector_leq?: InputMaybe<Scalars['string']['input']>;
  attackVector_like?: InputMaybe<Scalars['string']['input']>;
  attackVector_lt?: InputMaybe<Scalars['string']['input']>;
  attackVector_neq?: InputMaybe<Scalars['string']['input']>;
  attackVector_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  attackVector_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCity?: InputMaybe<Scalars['string']['input']>;
  coloCity_geq?: InputMaybe<Scalars['string']['input']>;
  coloCity_gt?: InputMaybe<Scalars['string']['input']>;
  coloCity_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_leq?: InputMaybe<Scalars['string']['input']>;
  coloCity_like?: InputMaybe<Scalars['string']['input']>;
  coloCity_lt?: InputMaybe<Scalars['string']['input']>;
  coloCity_neq?: InputMaybe<Scalars['string']['input']>;
  coloCity_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCountry?: InputMaybe<Scalars['string']['input']>;
  coloCountry_geq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_gt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_leq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_like?: InputMaybe<Scalars['string']['input']>;
  coloCountry_lt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_neq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  coloGeohash?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_like?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  coloName?: InputMaybe<Scalars['string']['input']>;
  coloName_geq?: InputMaybe<Scalars['string']['input']>;
  coloName_gt?: InputMaybe<Scalars['string']['input']>;
  coloName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_leq?: InputMaybe<Scalars['string']['input']>;
  coloName_like?: InputMaybe<Scalars['string']['input']>;
  coloName_lt?: InputMaybe<Scalars['string']['input']>;
  coloName_neq?: InputMaybe<Scalars['string']['input']>;
  coloName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationAsn?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsnName?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_like?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationCountry?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_geq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_gt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_leq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_like?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_lt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_neq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_like?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  direction?: InputMaybe<Scalars['string']['input']>;
  direction_geq?: InputMaybe<Scalars['string']['input']>;
  direction_gt?: InputMaybe<Scalars['string']['input']>;
  direction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_leq?: InputMaybe<Scalars['string']['input']>;
  direction_like?: InputMaybe<Scalars['string']['input']>;
  direction_lt?: InputMaybe<Scalars['string']['input']>;
  direction_neq?: InputMaybe<Scalars['string']['input']>;
  direction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_notlike?: InputMaybe<Scalars['string']['input']>;
  ethertype?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ethertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greKey?: InputMaybe<Scalars['uint32']['input']>;
  greKey_geq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_gt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greKey_leq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_lt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_neq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greVersion?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  greVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpCode?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpCode_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpType?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpType_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipDestinationAddress?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipFragmentOffset?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipFragmentOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipMoreFragments?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_in?: InputMaybe<Scalars['bytes']['input']>;
  ipMoreFragments_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocolName?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_geq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_gt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_leq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_like?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_lt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_neq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipProtocol_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_in?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipSourceAddress?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipTotalLength?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLengthBuckets_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTtl?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtlBuckets_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Checksum?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Checksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4DontFragment?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4DontFragment_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Identification?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Identification_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Options?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_geq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_gt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_leq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_like?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_lt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_neq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6ExtensionHeaders?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_geq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_gt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_leq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_like?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_lt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_neq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6FlowLabel?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6FlowLabel_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  leaseTag?: InputMaybe<Scalars['string']['input']>;
  leaseTag_geq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_gt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_leq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_like?: InputMaybe<Scalars['string']['input']>;
  leaseTag_lt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_neq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationReason?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationReason_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_like?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationReason_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationScope?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationScope_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_like?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationScope_notlike?: InputMaybe<Scalars['string']['input']>;
  outcome?: InputMaybe<Scalars['string']['input']>;
  outcome_geq?: InputMaybe<Scalars['string']['input']>;
  outcome_gt?: InputMaybe<Scalars['string']['input']>;
  outcome_in?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_leq?: InputMaybe<Scalars['string']['input']>;
  outcome_like?: InputMaybe<Scalars['string']['input']>;
  outcome_lt?: InputMaybe<Scalars['string']['input']>;
  outcome_neq?: InputMaybe<Scalars['string']['input']>;
  outcome_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_notlike?: InputMaybe<Scalars['string']['input']>;
  prefixTag?: InputMaybe<Scalars['string']['input']>;
  prefixTag_geq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_gt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_leq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_like?: InputMaybe<Scalars['string']['input']>;
  prefixTag_lt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_neq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_notlike?: InputMaybe<Scalars['string']['input']>;
  protocolState?: InputMaybe<Scalars['string']['input']>;
  protocolState_geq?: InputMaybe<Scalars['string']['input']>;
  protocolState_gt?: InputMaybe<Scalars['string']['input']>;
  protocolState_in?: InputMaybe<Array<Scalars['string']['input']>>;
  protocolState_leq?: InputMaybe<Scalars['string']['input']>;
  protocolState_like?: InputMaybe<Scalars['string']['input']>;
  protocolState_lt?: InputMaybe<Scalars['string']['input']>;
  protocolState_neq?: InputMaybe<Scalars['string']['input']>;
  protocolState_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  protocolState_notlike?: InputMaybe<Scalars['string']['input']>;
  ruleId?: InputMaybe<Scalars['string']['input']>;
  ruleId_geq?: InputMaybe<Scalars['string']['input']>;
  ruleId_gt?: InputMaybe<Scalars['string']['input']>;
  ruleId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_leq?: InputMaybe<Scalars['string']['input']>;
  ruleId_like?: InputMaybe<Scalars['string']['input']>;
  ruleId_lt?: InputMaybe<Scalars['string']['input']>;
  ruleId_neq?: InputMaybe<Scalars['string']['input']>;
  ruleId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_notlike?: InputMaybe<Scalars['string']['input']>;
  ruleName?: InputMaybe<Scalars['string']['input']>;
  ruleName_geq?: InputMaybe<Scalars['string']['input']>;
  ruleName_gt?: InputMaybe<Scalars['string']['input']>;
  ruleName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleName_leq?: InputMaybe<Scalars['string']['input']>;
  ruleName_like?: InputMaybe<Scalars['string']['input']>;
  ruleName_lt?: InputMaybe<Scalars['string']['input']>;
  ruleName_neq?: InputMaybe<Scalars['string']['input']>;
  ruleName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleName_notlike?: InputMaybe<Scalars['string']['input']>;
  rulesetId?: InputMaybe<Scalars['string']['input']>;
  rulesetId_geq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_gt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_leq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_like?: InputMaybe<Scalars['string']['input']>;
  rulesetId_lt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_neq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_notlike?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_geq?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_gt?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetOverrideId_leq?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_like?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_lt?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_neq?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetOverrideId_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsnName?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_like?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceCountry?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_geq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_gt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_leq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_like?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_lt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_neq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_like?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpAcknowledgementNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpAcknowledgementNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlagsString?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_geq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_gt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_leq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_like?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_lt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_neq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpMss?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpMss_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpOptions?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_geq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_gt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_leq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_like?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_lt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_neq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_geq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_gt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_leq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_like?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_lt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_neq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackPermitted?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpSackPermitted_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpUrgentPointer?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpUrgentPointer_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  verdict?: InputMaybe<Scalars['string']['input']>;
  verdict_geq?: InputMaybe<Scalars['string']['input']>;
  verdict_gt?: InputMaybe<Scalars['string']['input']>;
  verdict_in?: InputMaybe<Array<Scalars['string']['input']>>;
  verdict_leq?: InputMaybe<Scalars['string']['input']>;
  verdict_like?: InputMaybe<Scalars['string']['input']>;
  verdict_lt?: InputMaybe<Scalars['string']['input']>;
  verdict_neq?: InputMaybe<Scalars['string']['input']>;
  verdict_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  verdict_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountDosdNetworkAnalyticsAdaptiveGroupsOrderBy {
  /** applicationTag ascending */
  ApplicationTagAsc = 'applicationTag_ASC',
  /** applicationTag descending */
  ApplicationTagDesc = 'applicationTag_DESC',
  /** attackId ascending */
  AttackIdAsc = 'attackId_ASC',
  /** attackId descending */
  AttackIdDesc = 'attackId_DESC',
  /** attackVector ascending */
  AttackVectorAsc = 'attackVector_ASC',
  /** attackVector descending */
  AttackVectorDesc = 'attackVector_DESC',
  /** avg(bitRateDay) ascending */
  AvgBitRateDayAsc = 'avg_bitRateDay_ASC',
  /** avg(bitRateDay) descending */
  AvgBitRateDayDesc = 'avg_bitRateDay_DESC',
  /** avg(bitRateFifteenMinutes) ascending */
  AvgBitRateFifteenMinutesAsc = 'avg_bitRateFifteenMinutes_ASC',
  /** avg(bitRateFifteenMinutes) descending */
  AvgBitRateFifteenMinutesDesc = 'avg_bitRateFifteenMinutes_DESC',
  /** avg(bitRateFiveMinutes) ascending */
  AvgBitRateFiveMinutesAsc = 'avg_bitRateFiveMinutes_ASC',
  /** avg(bitRateFiveMinutes) descending */
  AvgBitRateFiveMinutesDesc = 'avg_bitRateFiveMinutes_DESC',
  /** avg(bitRateHour) ascending */
  AvgBitRateHourAsc = 'avg_bitRateHour_ASC',
  /** avg(bitRateHour) descending */
  AvgBitRateHourDesc = 'avg_bitRateHour_DESC',
  /** avg(bitRateMinute) ascending */
  AvgBitRateMinuteAsc = 'avg_bitRateMinute_ASC',
  /** avg(bitRateMinute) descending */
  AvgBitRateMinuteDesc = 'avg_bitRateMinute_DESC',
  /** avg(bitRateTenSeconds) ascending */
  AvgBitRateTenSecondsAsc = 'avg_bitRateTenSeconds_ASC',
  /** avg(bitRateTenSeconds) descending */
  AvgBitRateTenSecondsDesc = 'avg_bitRateTenSeconds_DESC',
  /** avg(bitRate) ascending */
  AvgBitRateAsc = 'avg_bitRate_ASC',
  /** avg(bitRate) descending */
  AvgBitRateDesc = 'avg_bitRate_DESC',
  /** avg(packetRateDay) ascending */
  AvgPacketRateDayAsc = 'avg_packetRateDay_ASC',
  /** avg(packetRateDay) descending */
  AvgPacketRateDayDesc = 'avg_packetRateDay_DESC',
  /** avg(packetRateFifteenMinutes) ascending */
  AvgPacketRateFifteenMinutesAsc = 'avg_packetRateFifteenMinutes_ASC',
  /** avg(packetRateFifteenMinutes) descending */
  AvgPacketRateFifteenMinutesDesc = 'avg_packetRateFifteenMinutes_DESC',
  /** avg(packetRateFiveMinutes) ascending */
  AvgPacketRateFiveMinutesAsc = 'avg_packetRateFiveMinutes_ASC',
  /** avg(packetRateFiveMinutes) descending */
  AvgPacketRateFiveMinutesDesc = 'avg_packetRateFiveMinutes_DESC',
  /** avg(packetRateHour) ascending */
  AvgPacketRateHourAsc = 'avg_packetRateHour_ASC',
  /** avg(packetRateHour) descending */
  AvgPacketRateHourDesc = 'avg_packetRateHour_DESC',
  /** avg(packetRateMinute) ascending */
  AvgPacketRateMinuteAsc = 'avg_packetRateMinute_ASC',
  /** avg(packetRateMinute) descending */
  AvgPacketRateMinuteDesc = 'avg_packetRateMinute_DESC',
  /** avg(packetRateTenSeconds) ascending */
  AvgPacketRateTenSecondsAsc = 'avg_packetRateTenSeconds_ASC',
  /** avg(packetRateTenSeconds) descending */
  AvgPacketRateTenSecondsDesc = 'avg_packetRateTenSeconds_DESC',
  /** avg(packetRate) ascending */
  AvgPacketRateAsc = 'avg_packetRate_ASC',
  /** avg(packetRate) descending */
  AvgPacketRateDesc = 'avg_packetRate_DESC',
  /** coloCity ascending */
  ColoCityAsc = 'coloCity_ASC',
  /** coloCity descending */
  ColoCityDesc = 'coloCity_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** coloCountry ascending */
  ColoCountryAsc = 'coloCountry_ASC',
  /** coloCountry descending */
  ColoCountryDesc = 'coloCountry_DESC',
  /** coloGeohash ascending */
  ColoGeohashAsc = 'coloGeohash_ASC',
  /** coloGeohash descending */
  ColoGeohashDesc = 'coloGeohash_DESC',
  /** coloName ascending */
  ColoNameAsc = 'coloName_ASC',
  /** coloName descending */
  ColoNameDesc = 'coloName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetimeTenSeconds ascending */
  DatetimeTenSecondsAsc = 'datetimeTenSeconds_ASC',
  /** datetimeTenSeconds descending */
  DatetimeTenSecondsDesc = 'datetimeTenSeconds_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationAsnName ascending */
  DestinationAsnNameAsc = 'destinationAsnName_ASC',
  /** destinationAsnName descending */
  DestinationAsnNameDesc = 'destinationAsnName_DESC',
  /** destinationAsn ascending */
  DestinationAsnAsc = 'destinationAsn_ASC',
  /** destinationAsn descending */
  DestinationAsnDesc = 'destinationAsn_DESC',
  /** destinationCountry ascending */
  DestinationCountryAsc = 'destinationCountry_ASC',
  /** destinationCountry descending */
  DestinationCountryDesc = 'destinationCountry_DESC',
  /** destinationGeohash ascending */
  DestinationGeohashAsc = 'destinationGeohash_ASC',
  /** destinationGeohash descending */
  DestinationGeohashDesc = 'destinationGeohash_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** direction ascending */
  DirectionAsc = 'direction_ASC',
  /** direction descending */
  DirectionDesc = 'direction_DESC',
  /** ethertype ascending */
  EthertypeAsc = 'ethertype_ASC',
  /** ethertype descending */
  EthertypeDesc = 'ethertype_DESC',
  /** greChecksum ascending */
  GreChecksumAsc = 'greChecksum_ASC',
  /** greChecksum descending */
  GreChecksumDesc = 'greChecksum_DESC',
  /** greEthertype ascending */
  GreEthertypeAsc = 'greEthertype_ASC',
  /** greEthertype descending */
  GreEthertypeDesc = 'greEthertype_DESC',
  /** greHeaderLength ascending */
  GreHeaderLengthAsc = 'greHeaderLength_ASC',
  /** greHeaderLength descending */
  GreHeaderLengthDesc = 'greHeaderLength_DESC',
  /** greKey ascending */
  GreKeyAsc = 'greKey_ASC',
  /** greKey descending */
  GreKeyDesc = 'greKey_DESC',
  /** greSequenceNumber ascending */
  GreSequenceNumberAsc = 'greSequenceNumber_ASC',
  /** greSequenceNumber descending */
  GreSequenceNumberDesc = 'greSequenceNumber_DESC',
  /** greVersion ascending */
  GreVersionAsc = 'greVersion_ASC',
  /** greVersion descending */
  GreVersionDesc = 'greVersion_DESC',
  /** icmpChecksum ascending */
  IcmpChecksumAsc = 'icmpChecksum_ASC',
  /** icmpChecksum descending */
  IcmpChecksumDesc = 'icmpChecksum_DESC',
  /** icmpCode ascending */
  IcmpCodeAsc = 'icmpCode_ASC',
  /** icmpCode descending */
  IcmpCodeDesc = 'icmpCode_DESC',
  /** icmpType ascending */
  IcmpTypeAsc = 'icmpType_ASC',
  /** icmpType descending */
  IcmpTypeDesc = 'icmpType_DESC',
  /** ipDestinationAddress ascending */
  IpDestinationAddressAsc = 'ipDestinationAddress_ASC',
  /** ipDestinationAddress descending */
  IpDestinationAddressDesc = 'ipDestinationAddress_DESC',
  /** ipDestinationSubnet ascending */
  IpDestinationSubnetAsc = 'ipDestinationSubnet_ASC',
  /** ipDestinationSubnet descending */
  IpDestinationSubnetDesc = 'ipDestinationSubnet_DESC',
  /** ipFragmentOffset ascending */
  IpFragmentOffsetAsc = 'ipFragmentOffset_ASC',
  /** ipFragmentOffset descending */
  IpFragmentOffsetDesc = 'ipFragmentOffset_DESC',
  /** ipHeaderLength ascending */
  IpHeaderLengthAsc = 'ipHeaderLength_ASC',
  /** ipHeaderLength descending */
  IpHeaderLengthDesc = 'ipHeaderLength_DESC',
  /** ipMoreFragments ascending */
  IpMoreFragmentsAsc = 'ipMoreFragments_ASC',
  /** ipMoreFragments descending */
  IpMoreFragmentsDesc = 'ipMoreFragments_DESC',
  /** ipProtocolName ascending */
  IpProtocolNameAsc = 'ipProtocolName_ASC',
  /** ipProtocolName descending */
  IpProtocolNameDesc = 'ipProtocolName_DESC',
  /** ipProtocol ascending */
  IpProtocolAsc = 'ipProtocol_ASC',
  /** ipProtocol descending */
  IpProtocolDesc = 'ipProtocol_DESC',
  /** ipSourceAddress ascending */
  IpSourceAddressAsc = 'ipSourceAddress_ASC',
  /** ipSourceAddress descending */
  IpSourceAddressDesc = 'ipSourceAddress_DESC',
  /** ipSourceSubnet ascending */
  IpSourceSubnetAsc = 'ipSourceSubnet_ASC',
  /** ipSourceSubnet descending */
  IpSourceSubnetDesc = 'ipSourceSubnet_DESC',
  /** ipTotalLengthBuckets ascending */
  IpTotalLengthBucketsAsc = 'ipTotalLengthBuckets_ASC',
  /** ipTotalLengthBuckets descending */
  IpTotalLengthBucketsDesc = 'ipTotalLengthBuckets_DESC',
  /** ipTotalLength ascending */
  IpTotalLengthAsc = 'ipTotalLength_ASC',
  /** ipTotalLength descending */
  IpTotalLengthDesc = 'ipTotalLength_DESC',
  /** ipTtlBuckets ascending */
  IpTtlBucketsAsc = 'ipTtlBuckets_ASC',
  /** ipTtlBuckets descending */
  IpTtlBucketsDesc = 'ipTtlBuckets_DESC',
  /** ipTtl ascending */
  IpTtlAsc = 'ipTtl_ASC',
  /** ipTtl descending */
  IpTtlDesc = 'ipTtl_DESC',
  /** ipv4Checksum ascending */
  Ipv4ChecksumAsc = 'ipv4Checksum_ASC',
  /** ipv4Checksum descending */
  Ipv4ChecksumDesc = 'ipv4Checksum_DESC',
  /** ipv4DontFragment ascending */
  Ipv4DontFragmentAsc = 'ipv4DontFragment_ASC',
  /** ipv4DontFragment descending */
  Ipv4DontFragmentDesc = 'ipv4DontFragment_DESC',
  /** ipv4Dscp ascending */
  Ipv4DscpAsc = 'ipv4Dscp_ASC',
  /** ipv4Dscp descending */
  Ipv4DscpDesc = 'ipv4Dscp_DESC',
  /** ipv4Ecn ascending */
  Ipv4EcnAsc = 'ipv4Ecn_ASC',
  /** ipv4Ecn descending */
  Ipv4EcnDesc = 'ipv4Ecn_DESC',
  /** ipv4Identification ascending */
  Ipv4IdentificationAsc = 'ipv4Identification_ASC',
  /** ipv4Identification descending */
  Ipv4IdentificationDesc = 'ipv4Identification_DESC',
  /** ipv4Options ascending */
  Ipv4OptionsAsc = 'ipv4Options_ASC',
  /** ipv4Options descending */
  Ipv4OptionsDesc = 'ipv4Options_DESC',
  /** ipv6Dscp ascending */
  Ipv6DscpAsc = 'ipv6Dscp_ASC',
  /** ipv6Dscp descending */
  Ipv6DscpDesc = 'ipv6Dscp_DESC',
  /** ipv6Ecn ascending */
  Ipv6EcnAsc = 'ipv6Ecn_ASC',
  /** ipv6Ecn descending */
  Ipv6EcnDesc = 'ipv6Ecn_DESC',
  /** ipv6ExtensionHeaders ascending */
  Ipv6ExtensionHeadersAsc = 'ipv6ExtensionHeaders_ASC',
  /** ipv6ExtensionHeaders descending */
  Ipv6ExtensionHeadersDesc = 'ipv6ExtensionHeaders_DESC',
  /** ipv6FlowLabel ascending */
  Ipv6FlowLabelAsc = 'ipv6FlowLabel_ASC',
  /** ipv6FlowLabel descending */
  Ipv6FlowLabelDesc = 'ipv6FlowLabel_DESC',
  /** ipv6Identification ascending */
  Ipv6IdentificationAsc = 'ipv6Identification_ASC',
  /** ipv6Identification descending */
  Ipv6IdentificationDesc = 'ipv6Identification_DESC',
  /** leaseTag ascending */
  LeaseTagAsc = 'leaseTag_ASC',
  /** leaseTag descending */
  LeaseTagDesc = 'leaseTag_DESC',
  /** mitigationReason ascending */
  MitigationReasonAsc = 'mitigationReason_ASC',
  /** mitigationReason descending */
  MitigationReasonDesc = 'mitigationReason_DESC',
  /** mitigationScope ascending */
  MitigationScopeAsc = 'mitigationScope_ASC',
  /** mitigationScope descending */
  MitigationScopeDesc = 'mitigationScope_DESC',
  /** outcome ascending */
  OutcomeAsc = 'outcome_ASC',
  /** outcome descending */
  OutcomeDesc = 'outcome_DESC',
  /** prefixTag ascending */
  PrefixTagAsc = 'prefixTag_ASC',
  /** prefixTag descending */
  PrefixTagDesc = 'prefixTag_DESC',
  /** protocolState ascending */
  ProtocolStateAsc = 'protocolState_ASC',
  /** protocolState descending */
  ProtocolStateDesc = 'protocolState_DESC',
  /** ruleId ascending */
  RuleIdAsc = 'ruleId_ASC',
  /** ruleId descending */
  RuleIdDesc = 'ruleId_DESC',
  /** ruleName ascending */
  RuleNameAsc = 'ruleName_ASC',
  /** ruleName descending */
  RuleNameDesc = 'ruleName_DESC',
  /** rulesetId ascending */
  RulesetIdAsc = 'rulesetId_ASC',
  /** rulesetId descending */
  RulesetIdDesc = 'rulesetId_DESC',
  /** rulesetOverrideId ascending */
  RulesetOverrideIdAsc = 'rulesetOverrideId_ASC',
  /** rulesetOverrideId descending */
  RulesetOverrideIdDesc = 'rulesetOverrideId_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sourceAsnName ascending */
  SourceAsnNameAsc = 'sourceAsnName_ASC',
  /** sourceAsnName descending */
  SourceAsnNameDesc = 'sourceAsnName_DESC',
  /** sourceAsn ascending */
  SourceAsnAsc = 'sourceAsn_ASC',
  /** sourceAsn descending */
  SourceAsnDesc = 'sourceAsn_DESC',
  /** sourceCountry ascending */
  SourceCountryAsc = 'sourceCountry_ASC',
  /** sourceCountry descending */
  SourceCountryDesc = 'sourceCountry_DESC',
  /** sourceGeohash ascending */
  SourceGeohashAsc = 'sourceGeohash_ASC',
  /** sourceGeohash descending */
  SourceGeohashDesc = 'sourceGeohash_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** sum(bits) ascending */
  SumBitsAsc = 'sum_bits_ASC',
  /** sum(bits) descending */
  SumBitsDesc = 'sum_bits_DESC',
  /** sum(packets) ascending */
  SumPacketsAsc = 'sum_packets_ASC',
  /** sum(packets) descending */
  SumPacketsDesc = 'sum_packets_DESC',
  /** system ascending */
  SystemAsc = 'system_ASC',
  /** system descending */
  SystemDesc = 'system_DESC',
  /** tcpAcknowledgementNumber ascending */
  TcpAcknowledgementNumberAsc = 'tcpAcknowledgementNumber_ASC',
  /** tcpAcknowledgementNumber descending */
  TcpAcknowledgementNumberDesc = 'tcpAcknowledgementNumber_DESC',
  /** tcpChecksum ascending */
  TcpChecksumAsc = 'tcpChecksum_ASC',
  /** tcpChecksum descending */
  TcpChecksumDesc = 'tcpChecksum_DESC',
  /** tcpDataOffset ascending */
  TcpDataOffsetAsc = 'tcpDataOffset_ASC',
  /** tcpDataOffset descending */
  TcpDataOffsetDesc = 'tcpDataOffset_DESC',
  /** tcpFlagsString ascending */
  TcpFlagsStringAsc = 'tcpFlagsString_ASC',
  /** tcpFlagsString descending */
  TcpFlagsStringDesc = 'tcpFlagsString_DESC',
  /** tcpFlags ascending */
  TcpFlagsAsc = 'tcpFlags_ASC',
  /** tcpFlags descending */
  TcpFlagsDesc = 'tcpFlags_DESC',
  /** tcpMss ascending */
  TcpMssAsc = 'tcpMss_ASC',
  /** tcpMss descending */
  TcpMssDesc = 'tcpMss_DESC',
  /** tcpOptions ascending */
  TcpOptionsAsc = 'tcpOptions_ASC',
  /** tcpOptions descending */
  TcpOptionsDesc = 'tcpOptions_DESC',
  /** tcpSackBlocks ascending */
  TcpSackBlocksAsc = 'tcpSackBlocks_ASC',
  /** tcpSackBlocks descending */
  TcpSackBlocksDesc = 'tcpSackBlocks_DESC',
  /** tcpSackPermitted ascending */
  TcpSackPermittedAsc = 'tcpSackPermitted_ASC',
  /** tcpSackPermitted descending */
  TcpSackPermittedDesc = 'tcpSackPermitted_DESC',
  /** tcpSequenceNumber ascending */
  TcpSequenceNumberAsc = 'tcpSequenceNumber_ASC',
  /** tcpSequenceNumber descending */
  TcpSequenceNumberDesc = 'tcpSequenceNumber_DESC',
  /** tcpTimestampEcr ascending */
  TcpTimestampEcrAsc = 'tcpTimestampEcr_ASC',
  /** tcpTimestampEcr descending */
  TcpTimestampEcrDesc = 'tcpTimestampEcr_DESC',
  /** tcpTimestampValue ascending */
  TcpTimestampValueAsc = 'tcpTimestampValue_ASC',
  /** tcpTimestampValue descending */
  TcpTimestampValueDesc = 'tcpTimestampValue_DESC',
  /** tcpUrgentPointer ascending */
  TcpUrgentPointerAsc = 'tcpUrgentPointer_ASC',
  /** tcpUrgentPointer descending */
  TcpUrgentPointerDesc = 'tcpUrgentPointer_DESC',
  /** tcpWindowScale ascending */
  TcpWindowScaleAsc = 'tcpWindowScale_ASC',
  /** tcpWindowScale descending */
  TcpWindowScaleDesc = 'tcpWindowScale_DESC',
  /** tcpWindowSize ascending */
  TcpWindowSizeAsc = 'tcpWindowSize_ASC',
  /** tcpWindowSize descending */
  TcpWindowSizeDesc = 'tcpWindowSize_DESC',
  /** udpChecksum ascending */
  UdpChecksumAsc = 'udpChecksum_ASC',
  /** udpChecksum descending */
  UdpChecksumDesc = 'udpChecksum_DESC',
  /** udpPayloadLength ascending */
  UdpPayloadLengthAsc = 'udpPayloadLength_ASC',
  /** udpPayloadLength descending */
  UdpPayloadLengthDesc = 'udpPayloadLength_DESC',
  /** verdict ascending */
  VerdictAsc = 'verdict_ASC',
  /** verdict descending */
  VerdictDesc = 'verdict_DESC'
}

export type AccountDosdNetworkAnalyticsAdaptiveGroupsSum = {
  __typename?: 'AccountDosdNetworkAnalyticsAdaptiveGroupsSum';
  /** Sum of bits received */
  bits: Scalars['uint64']['output'];
  /** Sum of packets received */
  packets: Scalars['uint64']['output'];
};

/** Durable Objects invocations with adaptive sampling */
export type AccountDurableObjectsInvocationsAdaptiveGroups = {
  __typename?: 'AccountDurableObjectsInvocationsAdaptiveGroups';
  /** The average value used for sample interval */
  avg?: Maybe<AccountDurableObjectsInvocationsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountDurableObjectsInvocationsAdaptiveGroupsDimensions>;
  /** The max value for a metric */
  max?: Maybe<AccountDurableObjectsInvocationsAdaptiveGroupsMax>;
  /** The min value for a metric */
  min?: Maybe<AccountDurableObjectsInvocationsAdaptiveGroupsMin>;
  /** Quantiles of a metric per dimension */
  quantiles?: Maybe<AccountDurableObjectsInvocationsAdaptiveGroupsQuantiles>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountDurableObjectsInvocationsAdaptiveGroupsSum>;
};

export type AccountDurableObjectsInvocationsAdaptiveGroupsAvg = {
  __typename?: 'AccountDurableObjectsInvocationsAdaptiveGroupsAvg';
  sampleInterval: Scalars['float64']['output'];
};

export type AccountDurableObjectsInvocationsAdaptiveGroupsDimensions = {
  __typename?: 'AccountDurableObjectsInvocationsAdaptiveGroupsDimensions';
  /** Request datetime, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** Request datetime, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime, truncated to start of a minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The name of the script environment */
  environmentName: Scalars['string']['output'];
  /** Durable Object namespace ID */
  namespaceId: Scalars['string']['output'];
  /** Durable Object ID as a hex string */
  objectId: Scalars['string']['output'];
  /** The name of the script */
  scriptName: Scalars['string']['output'];
  /** Status of the worker invocation */
  status: Scalars['string']['output'];
};

export type AccountDurableObjectsInvocationsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountDurableObjectsInvocationsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountDurableObjectsInvocationsAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  environmentName?: InputMaybe<Scalars['string']['input']>;
  environmentName_geq?: InputMaybe<Scalars['string']['input']>;
  environmentName_gt?: InputMaybe<Scalars['string']['input']>;
  environmentName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  environmentName_leq?: InputMaybe<Scalars['string']['input']>;
  environmentName_like?: InputMaybe<Scalars['string']['input']>;
  environmentName_lt?: InputMaybe<Scalars['string']['input']>;
  environmentName_neq?: InputMaybe<Scalars['string']['input']>;
  environmentName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  environmentName_notlike?: InputMaybe<Scalars['string']['input']>;
  namespaceId?: InputMaybe<Scalars['string']['input']>;
  namespaceId_geq?: InputMaybe<Scalars['string']['input']>;
  namespaceId_gt?: InputMaybe<Scalars['string']['input']>;
  namespaceId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  namespaceId_leq?: InputMaybe<Scalars['string']['input']>;
  namespaceId_like?: InputMaybe<Scalars['string']['input']>;
  namespaceId_lt?: InputMaybe<Scalars['string']['input']>;
  namespaceId_neq?: InputMaybe<Scalars['string']['input']>;
  namespaceId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  namespaceId_notlike?: InputMaybe<Scalars['string']['input']>;
  objectId?: InputMaybe<Scalars['string']['input']>;
  objectId_geq?: InputMaybe<Scalars['string']['input']>;
  objectId_gt?: InputMaybe<Scalars['string']['input']>;
  objectId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  objectId_leq?: InputMaybe<Scalars['string']['input']>;
  objectId_like?: InputMaybe<Scalars['string']['input']>;
  objectId_lt?: InputMaybe<Scalars['string']['input']>;
  objectId_neq?: InputMaybe<Scalars['string']['input']>;
  objectId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  objectId_notlike?: InputMaybe<Scalars['string']['input']>;
  scriptName?: InputMaybe<Scalars['string']['input']>;
  scriptName_geq?: InputMaybe<Scalars['string']['input']>;
  scriptName_gt?: InputMaybe<Scalars['string']['input']>;
  scriptName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_leq?: InputMaybe<Scalars['string']['input']>;
  scriptName_like?: InputMaybe<Scalars['string']['input']>;
  scriptName_lt?: InputMaybe<Scalars['string']['input']>;
  scriptName_neq?: InputMaybe<Scalars['string']['input']>;
  scriptName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_notlike?: InputMaybe<Scalars['string']['input']>;
  status?: InputMaybe<Scalars['string']['input']>;
  status_geq?: InputMaybe<Scalars['string']['input']>;
  status_gt?: InputMaybe<Scalars['string']['input']>;
  status_in?: InputMaybe<Array<Scalars['string']['input']>>;
  status_leq?: InputMaybe<Scalars['string']['input']>;
  status_like?: InputMaybe<Scalars['string']['input']>;
  status_lt?: InputMaybe<Scalars['string']['input']>;
  status_neq?: InputMaybe<Scalars['string']['input']>;
  status_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  status_notlike?: InputMaybe<Scalars['string']['input']>;
};

export type AccountDurableObjectsInvocationsAdaptiveGroupsMax = {
  __typename?: 'AccountDurableObjectsInvocationsAdaptiveGroupsMax';
  /** Maximum response body size for one request - bytes */
  responseBodySize: Scalars['float64']['output'];
  /** Maximum wall time for one request - microseconds */
  wallTime: Scalars['float64']['output'];
};

export type AccountDurableObjectsInvocationsAdaptiveGroupsMin = {
  __typename?: 'AccountDurableObjectsInvocationsAdaptiveGroupsMin';
  /** Minimum response body size for one request - bytes */
  responseBodySize: Scalars['float64']['output'];
  /** Minimum wall time for one request - microseconds */
  wallTime: Scalars['float64']['output'];
};

export enum AccountDurableObjectsInvocationsAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** environmentName ascending */
  EnvironmentNameAsc = 'environmentName_ASC',
  /** environmentName descending */
  EnvironmentNameDesc = 'environmentName_DESC',
  /** max(responseBodySize) ascending */
  MaxResponseBodySizeAsc = 'max_responseBodySize_ASC',
  /** max(responseBodySize) descending */
  MaxResponseBodySizeDesc = 'max_responseBodySize_DESC',
  /** max(wallTime) ascending */
  MaxWallTimeAsc = 'max_wallTime_ASC',
  /** max(wallTime) descending */
  MaxWallTimeDesc = 'max_wallTime_DESC',
  /** min(responseBodySize) ascending */
  MinResponseBodySizeAsc = 'min_responseBodySize_ASC',
  /** min(responseBodySize) descending */
  MinResponseBodySizeDesc = 'min_responseBodySize_DESC',
  /** min(wallTime) ascending */
  MinWallTimeAsc = 'min_wallTime_ASC',
  /** min(wallTime) descending */
  MinWallTimeDesc = 'min_wallTime_DESC',
  /** namespaceId ascending */
  NamespaceIdAsc = 'namespaceId_ASC',
  /** namespaceId descending */
  NamespaceIdDesc = 'namespaceId_DESC',
  /** objectId ascending */
  ObjectIdAsc = 'objectId_ASC',
  /** objectId descending */
  ObjectIdDesc = 'objectId_DESC',
  /** quantiles(responseBodySizeP25) ascending */
  QuantilesResponseBodySizeP25Asc = 'quantiles_responseBodySizeP25_ASC',
  /** quantiles(responseBodySizeP25) descending */
  QuantilesResponseBodySizeP25Desc = 'quantiles_responseBodySizeP25_DESC',
  /** quantiles(responseBodySizeP50) ascending */
  QuantilesResponseBodySizeP50Asc = 'quantiles_responseBodySizeP50_ASC',
  /** quantiles(responseBodySizeP50) descending */
  QuantilesResponseBodySizeP50Desc = 'quantiles_responseBodySizeP50_DESC',
  /** quantiles(responseBodySizeP75) ascending */
  QuantilesResponseBodySizeP75Asc = 'quantiles_responseBodySizeP75_ASC',
  /** quantiles(responseBodySizeP75) descending */
  QuantilesResponseBodySizeP75Desc = 'quantiles_responseBodySizeP75_DESC',
  /** quantiles(responseBodySizeP90) ascending */
  QuantilesResponseBodySizeP90Asc = 'quantiles_responseBodySizeP90_ASC',
  /** quantiles(responseBodySizeP90) descending */
  QuantilesResponseBodySizeP90Desc = 'quantiles_responseBodySizeP90_DESC',
  /** quantiles(responseBodySizeP99) ascending */
  QuantilesResponseBodySizeP99Asc = 'quantiles_responseBodySizeP99_ASC',
  /** quantiles(responseBodySizeP99) descending */
  QuantilesResponseBodySizeP99Desc = 'quantiles_responseBodySizeP99_DESC',
  /** quantiles(responseBodySizeP999) ascending */
  QuantilesResponseBodySizeP999Asc = 'quantiles_responseBodySizeP999_ASC',
  /** quantiles(responseBodySizeP999) descending */
  QuantilesResponseBodySizeP999Desc = 'quantiles_responseBodySizeP999_DESC',
  /** quantiles(wallTimeP25) ascending */
  QuantilesWallTimeP25Asc = 'quantiles_wallTimeP25_ASC',
  /** quantiles(wallTimeP25) descending */
  QuantilesWallTimeP25Desc = 'quantiles_wallTimeP25_DESC',
  /** quantiles(wallTimeP50) ascending */
  QuantilesWallTimeP50Asc = 'quantiles_wallTimeP50_ASC',
  /** quantiles(wallTimeP50) descending */
  QuantilesWallTimeP50Desc = 'quantiles_wallTimeP50_DESC',
  /** quantiles(wallTimeP75) ascending */
  QuantilesWallTimeP75Asc = 'quantiles_wallTimeP75_ASC',
  /** quantiles(wallTimeP75) descending */
  QuantilesWallTimeP75Desc = 'quantiles_wallTimeP75_DESC',
  /** quantiles(wallTimeP90) ascending */
  QuantilesWallTimeP90Asc = 'quantiles_wallTimeP90_ASC',
  /** quantiles(wallTimeP90) descending */
  QuantilesWallTimeP90Desc = 'quantiles_wallTimeP90_DESC',
  /** quantiles(wallTimeP99) ascending */
  QuantilesWallTimeP99Asc = 'quantiles_wallTimeP99_ASC',
  /** quantiles(wallTimeP99) descending */
  QuantilesWallTimeP99Desc = 'quantiles_wallTimeP99_DESC',
  /** quantiles(wallTimeP999) ascending */
  QuantilesWallTimeP999Asc = 'quantiles_wallTimeP999_ASC',
  /** quantiles(wallTimeP999) descending */
  QuantilesWallTimeP999Desc = 'quantiles_wallTimeP999_DESC',
  /** scriptName ascending */
  ScriptNameAsc = 'scriptName_ASC',
  /** scriptName descending */
  ScriptNameDesc = 'scriptName_DESC',
  /** status ascending */
  StatusAsc = 'status_ASC',
  /** status descending */
  StatusDesc = 'status_DESC',
  /** sum(errors) ascending */
  SumErrorsAsc = 'sum_errors_ASC',
  /** sum(errors) descending */
  SumErrorsDesc = 'sum_errors_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(responseBodySize) ascending */
  SumResponseBodySizeAsc = 'sum_responseBodySize_ASC',
  /** sum(responseBodySize) descending */
  SumResponseBodySizeDesc = 'sum_responseBodySize_DESC',
  /** sum(wallTime) ascending */
  SumWallTimeAsc = 'sum_wallTime_ASC',
  /** sum(wallTime) descending */
  SumWallTimeDesc = 'sum_wallTime_DESC'
}

export type AccountDurableObjectsInvocationsAdaptiveGroupsQuantiles = {
  __typename?: 'AccountDurableObjectsInvocationsAdaptiveGroupsQuantiles';
  /** Response body size 25th percentile - bytes */
  responseBodySizeP25: Scalars['float32']['output'];
  /** Response body size 50th percentile - bytes */
  responseBodySizeP50: Scalars['float32']['output'];
  /** Response body size 75th percentile - bytes */
  responseBodySizeP75: Scalars['float32']['output'];
  /** Response body size 90th percentile - bytes */
  responseBodySizeP90: Scalars['float32']['output'];
  /** Response body size 99th percentile - bytes */
  responseBodySizeP99: Scalars['float32']['output'];
  /** Response body size 99.9th percentile - bytes */
  responseBodySizeP999: Scalars['float32']['output'];
  /** Wall time 25th percentile - microseconds */
  wallTimeP25: Scalars['float32']['output'];
  /** Wall time 50th percentile - microseconds */
  wallTimeP50: Scalars['float32']['output'];
  /** Wall time 75th percentile - microseconds */
  wallTimeP75: Scalars['float32']['output'];
  /** Wall time 90th percentile - microseconds */
  wallTimeP90: Scalars['float32']['output'];
  /** Wall time 99th percentile - microseconds */
  wallTimeP99: Scalars['float32']['output'];
  /** Wall time 99.9th percentile - microseconds */
  wallTimeP999: Scalars['float32']['output'];
};

export type AccountDurableObjectsInvocationsAdaptiveGroupsSum = {
  __typename?: 'AccountDurableObjectsInvocationsAdaptiveGroupsSum';
  /** Sum of errors */
  errors: Scalars['uint64']['output'];
  /** Sum of requests */
  requests: Scalars['uint64']['output'];
  /** Sum of response body sizes */
  responseBodySize: Scalars['uint64']['output'];
  /** Sum of wall time */
  wallTime: Scalars['uint64']['output'];
};

/** Durable Objects periodic metrics */
export type AccountDurableObjectsPeriodicGroups = {
  __typename?: 'AccountDurableObjectsPeriodicGroups';
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountDurableObjectsPeriodicGroupsDimensions>;
  /** The max value for a metric */
  max?: Maybe<AccountDurableObjectsPeriodicGroupsMax>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountDurableObjectsPeriodicGroupsSum>;
};

export type AccountDurableObjectsPeriodicGroupsDimensions = {
  __typename?: 'AccountDurableObjectsPeriodicGroupsDimensions';
  /** Datetime the metrics period started, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Datetime the metrics period started, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Datetime the metrics period started, truncated to start of a minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Durable Object namespace ID */
  namespaceId: Scalars['string']['output'];
  /** Durable Object ID as a hex string */
  objectId: Scalars['string']['output'];
};

export type AccountDurableObjectsPeriodicGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountDurableObjectsPeriodicGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountDurableObjectsPeriodicGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  namespaceId?: InputMaybe<Scalars['string']['input']>;
  namespaceId_geq?: InputMaybe<Scalars['string']['input']>;
  namespaceId_gt?: InputMaybe<Scalars['string']['input']>;
  namespaceId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  namespaceId_leq?: InputMaybe<Scalars['string']['input']>;
  namespaceId_like?: InputMaybe<Scalars['string']['input']>;
  namespaceId_lt?: InputMaybe<Scalars['string']['input']>;
  namespaceId_neq?: InputMaybe<Scalars['string']['input']>;
  namespaceId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  namespaceId_notlike?: InputMaybe<Scalars['string']['input']>;
  objectId?: InputMaybe<Scalars['string']['input']>;
  objectId_geq?: InputMaybe<Scalars['string']['input']>;
  objectId_gt?: InputMaybe<Scalars['string']['input']>;
  objectId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  objectId_leq?: InputMaybe<Scalars['string']['input']>;
  objectId_like?: InputMaybe<Scalars['string']['input']>;
  objectId_lt?: InputMaybe<Scalars['string']['input']>;
  objectId_neq?: InputMaybe<Scalars['string']['input']>;
  objectId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  objectId_notlike?: InputMaybe<Scalars['string']['input']>;
};

export type AccountDurableObjectsPeriodicGroupsMax = {
  __typename?: 'AccountDurableObjectsPeriodicGroupsMax';
  /** Maximum active websocket connections in the time window */
  activeWebsocketConnections: Scalars['uint16']['output'];
};

export enum AccountDurableObjectsPeriodicGroupsOrderBy {
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** max(activeWebsocketConnections) ascending */
  MaxActiveWebsocketConnectionsAsc = 'max_activeWebsocketConnections_ASC',
  /** max(activeWebsocketConnections) descending */
  MaxActiveWebsocketConnectionsDesc = 'max_activeWebsocketConnections_DESC',
  /** namespaceId ascending */
  NamespaceIdAsc = 'namespaceId_ASC',
  /** namespaceId descending */
  NamespaceIdDesc = 'namespaceId_DESC',
  /** objectId ascending */
  ObjectIdAsc = 'objectId_ASC',
  /** objectId descending */
  ObjectIdDesc = 'objectId_DESC',
  /** sum(activeTime) ascending */
  SumActiveTimeAsc = 'sum_activeTime_ASC',
  /** sum(activeTime) descending */
  SumActiveTimeDesc = 'sum_activeTime_DESC',
  /** sum(cpuTime) ascending */
  SumCpuTimeAsc = 'sum_cpuTime_ASC',
  /** sum(cpuTime) descending */
  SumCpuTimeDesc = 'sum_cpuTime_DESC',
  /** sum(duration) ascending */
  SumDurationAsc = 'sum_duration_ASC',
  /** sum(duration) descending */
  SumDurationDesc = 'sum_duration_DESC',
  /** sum(exceededCpuErrors) ascending */
  SumExceededCpuErrorsAsc = 'sum_exceededCpuErrors_ASC',
  /** sum(exceededCpuErrors) descending */
  SumExceededCpuErrorsDesc = 'sum_exceededCpuErrors_DESC',
  /** sum(exceededMemoryErrors) ascending */
  SumExceededMemoryErrorsAsc = 'sum_exceededMemoryErrors_ASC',
  /** sum(exceededMemoryErrors) descending */
  SumExceededMemoryErrorsDesc = 'sum_exceededMemoryErrors_DESC',
  /** sum(fatalInternalErrors) ascending */
  SumFatalInternalErrorsAsc = 'sum_fatalInternalErrors_ASC',
  /** sum(fatalInternalErrors) descending */
  SumFatalInternalErrorsDesc = 'sum_fatalInternalErrors_DESC',
  /** sum(inboundWebsocketMsgCount) ascending */
  SumInboundWebsocketMsgCountAsc = 'sum_inboundWebsocketMsgCount_ASC',
  /** sum(inboundWebsocketMsgCount) descending */
  SumInboundWebsocketMsgCountDesc = 'sum_inboundWebsocketMsgCount_DESC',
  /** sum(outboundWebsocketMsgCount) ascending */
  SumOutboundWebsocketMsgCountAsc = 'sum_outboundWebsocketMsgCount_ASC',
  /** sum(outboundWebsocketMsgCount) descending */
  SumOutboundWebsocketMsgCountDesc = 'sum_outboundWebsocketMsgCount_DESC',
  /** sum(storageDeletes) ascending */
  SumStorageDeletesAsc = 'sum_storageDeletes_ASC',
  /** sum(storageDeletes) descending */
  SumStorageDeletesDesc = 'sum_storageDeletes_DESC',
  /** sum(storageReadUnits) ascending */
  SumStorageReadUnitsAsc = 'sum_storageReadUnits_ASC',
  /** sum(storageReadUnits) descending */
  SumStorageReadUnitsDesc = 'sum_storageReadUnits_DESC',
  /** sum(storageWriteUnits) ascending */
  SumStorageWriteUnitsAsc = 'sum_storageWriteUnits_ASC',
  /** sum(storageWriteUnits) descending */
  SumStorageWriteUnitsDesc = 'sum_storageWriteUnits_DESC',
  /** sum(subrequests) ascending */
  SumSubrequestsAsc = 'sum_subrequests_ASC',
  /** sum(subrequests) descending */
  SumSubrequestsDesc = 'sum_subrequests_DESC'
}

export type AccountDurableObjectsPeriodicGroupsSum = {
  __typename?: 'AccountDurableObjectsPeriodicGroupsSum';
  /** Sum of active time - microseconds */
  activeTime: Scalars['uint64']['output'];
  /** Sum of CPU time - microseconds */
  cpuTime: Scalars['uint64']['output'];
  /** Sum of Duration - GB*s */
  duration: Scalars['float64']['output'];
  /** Sum of CPU exceeded errors */
  exceededCpuErrors: Scalars['uint64']['output'];
  /** Sum of memory exceeded errors */
  exceededMemoryErrors: Scalars['uint64']['output'];
  /** Sum of fatal internal server errors */
  fatalInternalErrors: Scalars['uint64']['output'];
  /** Sum of incoming websocket messages */
  inboundWebsocketMsgCount: Scalars['uint64']['output'];
  /** Sum of outbound websocket messages */
  outboundWebsocketMsgCount: Scalars['uint64']['output'];
  /** Sum of storage deletes */
  storageDeletes: Scalars['uint64']['output'];
  /** Sum of storage reads - in 4KB units */
  storageReadUnits: Scalars['uint64']['output'];
  /** Sum of storage writes - in 4KB units */
  storageWriteUnits: Scalars['uint64']['output'];
  /** Sum of subrequests */
  subrequests: Scalars['uint64']['output'];
};

/** Durable Objects storage metrics */
export type AccountDurableObjectsStorageGroups = {
  __typename?: 'AccountDurableObjectsStorageGroups';
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountDurableObjectsStorageGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  max?: Maybe<AccountDurableObjectsStorageGroupsMax>;
};

export type AccountDurableObjectsStorageGroupsDimensions = {
  __typename?: 'AccountDurableObjectsStorageGroupsDimensions';
  /** Datetime that the storage usage was recorded, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Datetime that the storage usage was recorded, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
};

export type AccountDurableObjectsStorageGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountDurableObjectsStorageGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountDurableObjectsStorageGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type AccountDurableObjectsStorageGroupsMax = {
  __typename?: 'AccountDurableObjectsStorageGroupsMax';
  /** Max of stored bytes */
  storedBytes: Scalars['uint64']['output'];
};

export enum AccountDurableObjectsStorageGroupsOrderBy {
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** max(storedBytes) ascending */
  MaxStoredBytesAsc = 'max_storedBytes_ASC',
  /** max(storedBytes) descending */
  MaxStoredBytesDesc = 'max_storedBytes_DESC'
}

/** Durable Objects subrequests with adaptive sampling */
export type AccountDurableObjectsSubrequestsAdaptiveGroups = {
  __typename?: 'AccountDurableObjectsSubrequestsAdaptiveGroups';
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountDurableObjectsSubrequestsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountDurableObjectsSubrequestsAdaptiveGroupsSum>;
};

export type AccountDurableObjectsSubrequestsAdaptiveGroupsDimensions = {
  __typename?: 'AccountDurableObjectsSubrequestsAdaptiveGroupsDimensions';
  /** Request datetime, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** Request datetime, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime, truncated to start of a minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The name of the script environment */
  environmentName: Scalars['string']['output'];
  /** Durable Object namespace ID */
  namespaceId: Scalars['string']['output'];
  /** Durable Object ID as a hex string */
  objectId: Scalars['string']['output'];
  /** The name of the script */
  scriptName: Scalars['string']['output'];
};

export type AccountDurableObjectsSubrequestsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountDurableObjectsSubrequestsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountDurableObjectsSubrequestsAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  environmentName?: InputMaybe<Scalars['string']['input']>;
  environmentName_geq?: InputMaybe<Scalars['string']['input']>;
  environmentName_gt?: InputMaybe<Scalars['string']['input']>;
  environmentName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  environmentName_leq?: InputMaybe<Scalars['string']['input']>;
  environmentName_like?: InputMaybe<Scalars['string']['input']>;
  environmentName_lt?: InputMaybe<Scalars['string']['input']>;
  environmentName_neq?: InputMaybe<Scalars['string']['input']>;
  environmentName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  environmentName_notlike?: InputMaybe<Scalars['string']['input']>;
  namespaceId?: InputMaybe<Scalars['string']['input']>;
  namespaceId_geq?: InputMaybe<Scalars['string']['input']>;
  namespaceId_gt?: InputMaybe<Scalars['string']['input']>;
  namespaceId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  namespaceId_leq?: InputMaybe<Scalars['string']['input']>;
  namespaceId_like?: InputMaybe<Scalars['string']['input']>;
  namespaceId_lt?: InputMaybe<Scalars['string']['input']>;
  namespaceId_neq?: InputMaybe<Scalars['string']['input']>;
  namespaceId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  namespaceId_notlike?: InputMaybe<Scalars['string']['input']>;
  objectId?: InputMaybe<Scalars['string']['input']>;
  objectId_geq?: InputMaybe<Scalars['string']['input']>;
  objectId_gt?: InputMaybe<Scalars['string']['input']>;
  objectId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  objectId_leq?: InputMaybe<Scalars['string']['input']>;
  objectId_like?: InputMaybe<Scalars['string']['input']>;
  objectId_lt?: InputMaybe<Scalars['string']['input']>;
  objectId_neq?: InputMaybe<Scalars['string']['input']>;
  objectId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  objectId_notlike?: InputMaybe<Scalars['string']['input']>;
  scriptName?: InputMaybe<Scalars['string']['input']>;
  scriptName_geq?: InputMaybe<Scalars['string']['input']>;
  scriptName_gt?: InputMaybe<Scalars['string']['input']>;
  scriptName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_leq?: InputMaybe<Scalars['string']['input']>;
  scriptName_like?: InputMaybe<Scalars['string']['input']>;
  scriptName_lt?: InputMaybe<Scalars['string']['input']>;
  scriptName_neq?: InputMaybe<Scalars['string']['input']>;
  scriptName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountDurableObjectsSubrequestsAdaptiveGroupsOrderBy {
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** environmentName ascending */
  EnvironmentNameAsc = 'environmentName_ASC',
  /** environmentName descending */
  EnvironmentNameDesc = 'environmentName_DESC',
  /** namespaceId ascending */
  NamespaceIdAsc = 'namespaceId_ASC',
  /** namespaceId descending */
  NamespaceIdDesc = 'namespaceId_DESC',
  /** objectId ascending */
  ObjectIdAsc = 'objectId_ASC',
  /** objectId descending */
  ObjectIdDesc = 'objectId_DESC',
  /** scriptName ascending */
  ScriptNameAsc = 'scriptName_ASC',
  /** scriptName descending */
  ScriptNameDesc = 'scriptName_DESC',
  /** sum(requestBodySizeUncached) ascending */
  SumRequestBodySizeUncachedAsc = 'sum_requestBodySizeUncached_ASC',
  /** sum(requestBodySizeUncached) descending */
  SumRequestBodySizeUncachedDesc = 'sum_requestBodySizeUncached_DESC'
}

export type AccountDurableObjectsSubrequestsAdaptiveGroupsSum = {
  __typename?: 'AccountDurableObjectsSubrequestsAdaptiveGroupsSum';
  /** Outgoing Durable Objects fetch request body size in bytes where the request was not cached */
  requestBodySizeUncached: Scalars['uint64']['output'];
};

/** FBM analytics metadata for attacks detected by dosd */
export type AccountFbmAttackAnalyticsGroups = {
  __typename?: 'AccountFbmAttackAnalyticsGroups';
  /** Unique identifier of the mitigation that matched the packet, if any */
  attackId: Scalars['string']['output'];
  /**
   * Type of attack traffic
   * @deprecated Use attackVector for a richer description of the attack
   */
  attackType: Scalars['string']['output'];
  /** Description of attack vector */
  attackVector: Scalars['string']['output'];
  /** Sum of bits received during the attack */
  bits: Scalars['uint64']['output'];
  /** Common TCP flags used by attack traffic, if any */
  commonTcpFlags: Scalars['uint8']['output'];
  /** Names of common TCP flags used by attack traffic, if any */
  commonTcpFlagsNames: Scalars['string']['output'];
  /** Fixed destination IP used by attack traffic, if any */
  destinationIp: Scalars['string']['output'];
  /** Fixed destination port used by attack traffic, if any */
  destinationPort: Scalars['uint16']['output'];
  /** Sum of bits dropped during the attack */
  droppedBits: Scalars['uint64']['output'];
  /** Sum of packets dropped during the attack */
  droppedPackets: Scalars['uint64']['output'];
  /** Date and time that the attack ended; not available for ongoing attacks */
  endDatetime: Scalars['Time']['output'];
  /** Fixed protocol used by attack traffic, if any */
  ipProtocol: Scalars['uint8']['output'];
  /** Fixed protocol used by attack traffic, if any */
  ipProtocolName: Scalars['string']['output'];
  /** Type of mitigation applied to attack traffic */
  mitigationReason: Scalars['string']['output'];
  /** Whether mitigation was applied in only some locations or globally */
  mitigationScope: Scalars['string']['output'];
  /** Type of mitigation applied to attack traffic */
  mitigationType: Scalars['string']['output'];
  /** Sum of packets received during the attack */
  packets: Scalars['uint64']['output'];
  /** Unique identifier of the rule that matched the packet, if any */
  ruleId: Scalars['string']['output'];
  /** Human-readable name of the rule that matched the packet, if any */
  ruleName: Scalars['string']['output'];
  /** Unique identifier of the ruleset containing the rule that matched the packet, if any */
  rulesetId: Scalars['string']['output'];
  /** Unique identifier of the ruleset override containing the rule that matched the packet, if any */
  rulesetOverrideId: Scalars['string']['output'];
  /** Fixed source IP used by attack traffic, if any */
  sourceIp: Scalars['string']['output'];
  /** Fixed source port used by attack traffic, if any */
  sourcePort: Scalars['uint16']['output'];
  /** Date and time that the attack started */
  startDatetime: Scalars['Time']['output'];
  /** Fixed TCP flags used by attack traffic, if any */
  tcpFlags: Scalars['uint8']['output'];
  /** Names of fixed TCP flags used by attack traffic, if any */
  tcpFlagsNames: Scalars['string']['output'];
};

export type AccountFbmAttackAnalyticsGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountFbmAttackAnalyticsGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountFbmAttackAnalyticsGroupsFilter_InputObject>>;
  attackId?: InputMaybe<Scalars['string']['input']>;
  attackId_geq?: InputMaybe<Scalars['string']['input']>;
  attackId_gt?: InputMaybe<Scalars['string']['input']>;
  attackId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  attackId_leq?: InputMaybe<Scalars['string']['input']>;
  attackId_like?: InputMaybe<Scalars['string']['input']>;
  attackId_lt?: InputMaybe<Scalars['string']['input']>;
  attackId_neq?: InputMaybe<Scalars['string']['input']>;
  attackId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  attackId_notlike?: InputMaybe<Scalars['string']['input']>;
  attackType?: InputMaybe<Scalars['string']['input']>;
  attackType_geq?: InputMaybe<Scalars['string']['input']>;
  attackType_gt?: InputMaybe<Scalars['string']['input']>;
  attackType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  attackType_leq?: InputMaybe<Scalars['string']['input']>;
  attackType_like?: InputMaybe<Scalars['string']['input']>;
  attackType_lt?: InputMaybe<Scalars['string']['input']>;
  attackType_neq?: InputMaybe<Scalars['string']['input']>;
  attackType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  attackType_notlike?: InputMaybe<Scalars['string']['input']>;
  attackVector?: InputMaybe<Scalars['string']['input']>;
  attackVector_geq?: InputMaybe<Scalars['string']['input']>;
  attackVector_gt?: InputMaybe<Scalars['string']['input']>;
  attackVector_in?: InputMaybe<Array<Scalars['string']['input']>>;
  attackVector_leq?: InputMaybe<Scalars['string']['input']>;
  attackVector_like?: InputMaybe<Scalars['string']['input']>;
  attackVector_lt?: InputMaybe<Scalars['string']['input']>;
  attackVector_neq?: InputMaybe<Scalars['string']['input']>;
  attackVector_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  attackVector_notlike?: InputMaybe<Scalars['string']['input']>;
  bits?: InputMaybe<Scalars['uint64']['input']>;
  bits_geq?: InputMaybe<Scalars['uint64']['input']>;
  bits_gt?: InputMaybe<Scalars['uint64']['input']>;
  bits_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  bits_leq?: InputMaybe<Scalars['uint64']['input']>;
  bits_lt?: InputMaybe<Scalars['uint64']['input']>;
  bits_neq?: InputMaybe<Scalars['uint64']['input']>;
  bits_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  commonTcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  commonTcpFlagsNames?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_geq?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_gt?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_in?: InputMaybe<Array<Scalars['string']['input']>>;
  commonTcpFlagsNames_leq?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_like?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_lt?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_neq?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlagsNames_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  commonTcpFlagsNames_notlike?: InputMaybe<Scalars['string']['input']>;
  commonTcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  commonTcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  commonTcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  commonTcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  commonTcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  commonTcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  commonTcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
  destinationIp?: InputMaybe<Scalars['string']['input']>;
  destinationIp_geq?: InputMaybe<Scalars['string']['input']>;
  destinationIp_gt?: InputMaybe<Scalars['string']['input']>;
  destinationIp_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationIp_leq?: InputMaybe<Scalars['string']['input']>;
  destinationIp_like?: InputMaybe<Scalars['string']['input']>;
  destinationIp_lt?: InputMaybe<Scalars['string']['input']>;
  destinationIp_neq?: InputMaybe<Scalars['string']['input']>;
  destinationIp_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationIp_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  droppedBits?: InputMaybe<Scalars['uint64']['input']>;
  droppedBits_geq?: InputMaybe<Scalars['uint64']['input']>;
  droppedBits_gt?: InputMaybe<Scalars['uint64']['input']>;
  droppedBits_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  droppedBits_leq?: InputMaybe<Scalars['uint64']['input']>;
  droppedBits_lt?: InputMaybe<Scalars['uint64']['input']>;
  droppedBits_neq?: InputMaybe<Scalars['uint64']['input']>;
  droppedBits_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  droppedPackets?: InputMaybe<Scalars['uint64']['input']>;
  droppedPackets_geq?: InputMaybe<Scalars['uint64']['input']>;
  droppedPackets_gt?: InputMaybe<Scalars['uint64']['input']>;
  droppedPackets_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  droppedPackets_leq?: InputMaybe<Scalars['uint64']['input']>;
  droppedPackets_lt?: InputMaybe<Scalars['uint64']['input']>;
  droppedPackets_neq?: InputMaybe<Scalars['uint64']['input']>;
  droppedPackets_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  endDatetime?: InputMaybe<Scalars['Time']['input']>;
  endDatetime_geq?: InputMaybe<Scalars['Time']['input']>;
  endDatetime_gt?: InputMaybe<Scalars['Time']['input']>;
  endDatetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  endDatetime_leq?: InputMaybe<Scalars['Time']['input']>;
  endDatetime_lt?: InputMaybe<Scalars['Time']['input']>;
  endDatetime_neq?: InputMaybe<Scalars['Time']['input']>;
  endDatetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  ipProtocol?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocolName?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_geq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_gt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_leq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_like?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_lt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_neq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipProtocol_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_in?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_notin?: InputMaybe<Scalars['bytes']['input']>;
  mitigationReason?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationReason_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_like?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationReason_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationScope?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationScope_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_like?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationScope_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationType?: InputMaybe<Scalars['string']['input']>;
  mitigationType_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationType_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationType_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationType_like?: InputMaybe<Scalars['string']['input']>;
  mitigationType_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationType_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationType_notlike?: InputMaybe<Scalars['string']['input']>;
  packets?: InputMaybe<Scalars['uint64']['input']>;
  packets_geq?: InputMaybe<Scalars['uint64']['input']>;
  packets_gt?: InputMaybe<Scalars['uint64']['input']>;
  packets_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  packets_leq?: InputMaybe<Scalars['uint64']['input']>;
  packets_lt?: InputMaybe<Scalars['uint64']['input']>;
  packets_neq?: InputMaybe<Scalars['uint64']['input']>;
  packets_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  ruleId?: InputMaybe<Scalars['string']['input']>;
  ruleId_geq?: InputMaybe<Scalars['string']['input']>;
  ruleId_gt?: InputMaybe<Scalars['string']['input']>;
  ruleId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_leq?: InputMaybe<Scalars['string']['input']>;
  ruleId_like?: InputMaybe<Scalars['string']['input']>;
  ruleId_lt?: InputMaybe<Scalars['string']['input']>;
  ruleId_neq?: InputMaybe<Scalars['string']['input']>;
  ruleId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_notlike?: InputMaybe<Scalars['string']['input']>;
  ruleName?: InputMaybe<Scalars['string']['input']>;
  ruleName_geq?: InputMaybe<Scalars['string']['input']>;
  ruleName_gt?: InputMaybe<Scalars['string']['input']>;
  ruleName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleName_leq?: InputMaybe<Scalars['string']['input']>;
  ruleName_like?: InputMaybe<Scalars['string']['input']>;
  ruleName_lt?: InputMaybe<Scalars['string']['input']>;
  ruleName_neq?: InputMaybe<Scalars['string']['input']>;
  ruleName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleName_notlike?: InputMaybe<Scalars['string']['input']>;
  rulesetId?: InputMaybe<Scalars['string']['input']>;
  rulesetId_geq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_gt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_leq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_like?: InputMaybe<Scalars['string']['input']>;
  rulesetId_lt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_neq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_notlike?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_geq?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_gt?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetOverrideId_leq?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_like?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_lt?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_neq?: InputMaybe<Scalars['string']['input']>;
  rulesetOverrideId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetOverrideId_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceIp?: InputMaybe<Scalars['string']['input']>;
  sourceIp_geq?: InputMaybe<Scalars['string']['input']>;
  sourceIp_gt?: InputMaybe<Scalars['string']['input']>;
  sourceIp_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceIp_leq?: InputMaybe<Scalars['string']['input']>;
  sourceIp_like?: InputMaybe<Scalars['string']['input']>;
  sourceIp_lt?: InputMaybe<Scalars['string']['input']>;
  sourceIp_neq?: InputMaybe<Scalars['string']['input']>;
  sourceIp_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceIp_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  startDatetime?: InputMaybe<Scalars['Time']['input']>;
  startDatetime_geq?: InputMaybe<Scalars['Time']['input']>;
  startDatetime_gt?: InputMaybe<Scalars['Time']['input']>;
  startDatetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  startDatetime_leq?: InputMaybe<Scalars['Time']['input']>;
  startDatetime_lt?: InputMaybe<Scalars['Time']['input']>;
  startDatetime_neq?: InputMaybe<Scalars['Time']['input']>;
  startDatetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  tcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlagsNames?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_geq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_gt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsNames_leq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_like?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_lt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_neq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsNames_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsNames_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
};

export enum AccountFbmAttackAnalyticsGroupsOrderBy {
  /** attackId ascending */
  AttackIdAsc = 'attackId_ASC',
  /** attackId descending */
  AttackIdDesc = 'attackId_DESC',
  /** attackType ascending */
  AttackTypeAsc = 'attackType_ASC',
  /** attackType descending */
  AttackTypeDesc = 'attackType_DESC',
  /** attackVector ascending */
  AttackVectorAsc = 'attackVector_ASC',
  /** attackVector descending */
  AttackVectorDesc = 'attackVector_DESC',
  /** bits ascending */
  BitsAsc = 'bits_ASC',
  /** bits descending */
  BitsDesc = 'bits_DESC',
  /** commonTcpFlagsNames ascending */
  CommonTcpFlagsNamesAsc = 'commonTcpFlagsNames_ASC',
  /** commonTcpFlagsNames descending */
  CommonTcpFlagsNamesDesc = 'commonTcpFlagsNames_DESC',
  /** commonTcpFlags ascending */
  CommonTcpFlagsAsc = 'commonTcpFlags_ASC',
  /** commonTcpFlags descending */
  CommonTcpFlagsDesc = 'commonTcpFlags_DESC',
  /** destinationIp ascending */
  DestinationIpAsc = 'destinationIp_ASC',
  /** destinationIp descending */
  DestinationIpDesc = 'destinationIp_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** droppedBits ascending */
  DroppedBitsAsc = 'droppedBits_ASC',
  /** droppedBits descending */
  DroppedBitsDesc = 'droppedBits_DESC',
  /** droppedPackets ascending */
  DroppedPacketsAsc = 'droppedPackets_ASC',
  /** droppedPackets descending */
  DroppedPacketsDesc = 'droppedPackets_DESC',
  /** endDatetime ascending */
  EndDatetimeAsc = 'endDatetime_ASC',
  /** endDatetime descending */
  EndDatetimeDesc = 'endDatetime_DESC',
  /** ipProtocolName ascending */
  IpProtocolNameAsc = 'ipProtocolName_ASC',
  /** ipProtocolName descending */
  IpProtocolNameDesc = 'ipProtocolName_DESC',
  /** ipProtocol ascending */
  IpProtocolAsc = 'ipProtocol_ASC',
  /** ipProtocol descending */
  IpProtocolDesc = 'ipProtocol_DESC',
  /** mitigationReason ascending */
  MitigationReasonAsc = 'mitigationReason_ASC',
  /** mitigationReason descending */
  MitigationReasonDesc = 'mitigationReason_DESC',
  /** mitigationScope ascending */
  MitigationScopeAsc = 'mitigationScope_ASC',
  /** mitigationScope descending */
  MitigationScopeDesc = 'mitigationScope_DESC',
  /** mitigationType ascending */
  MitigationTypeAsc = 'mitigationType_ASC',
  /** mitigationType descending */
  MitigationTypeDesc = 'mitigationType_DESC',
  /** packets ascending */
  PacketsAsc = 'packets_ASC',
  /** packets descending */
  PacketsDesc = 'packets_DESC',
  /** ruleId ascending */
  RuleIdAsc = 'ruleId_ASC',
  /** ruleId descending */
  RuleIdDesc = 'ruleId_DESC',
  /** ruleName ascending */
  RuleNameAsc = 'ruleName_ASC',
  /** ruleName descending */
  RuleNameDesc = 'ruleName_DESC',
  /** rulesetId ascending */
  RulesetIdAsc = 'rulesetId_ASC',
  /** rulesetId descending */
  RulesetIdDesc = 'rulesetId_DESC',
  /** rulesetOverrideId ascending */
  RulesetOverrideIdAsc = 'rulesetOverrideId_ASC',
  /** rulesetOverrideId descending */
  RulesetOverrideIdDesc = 'rulesetOverrideId_DESC',
  /** sourceIp ascending */
  SourceIpAsc = 'sourceIp_ASC',
  /** sourceIp descending */
  SourceIpDesc = 'sourceIp_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** startDatetime ascending */
  StartDatetimeAsc = 'startDatetime_ASC',
  /** startDatetime descending */
  StartDatetimeDesc = 'startDatetime_DESC',
  /** tcpFlagsNames ascending */
  TcpFlagsNamesAsc = 'tcpFlagsNames_ASC',
  /** tcpFlagsNames descending */
  TcpFlagsNamesDesc = 'tcpFlagsNames_DESC',
  /** tcpFlags ascending */
  TcpFlagsAsc = 'tcpFlags_ASC',
  /** tcpFlags descending */
  TcpFlagsDesc = 'tcpFlags_DESC'
}

export type AccountFilter_InputObject = {
  accountTag: Scalars['string']['input'];
};

/** Raw Firewall events with adaptive sampling */
export type AccountFirewallEventsAdaptive = {
  __typename?: 'AccountFirewallEventsAdaptive';
  /** The code of the first-class action the Cloudflare Firewall took on this request */
  action: Scalars['string']['output'];
  /** API Gateway endpoint matched at the edge */
  apiGatewayMatchedEndpoint: Scalars['string']['output'];
  /** API Gateway host matched at the edge */
  apiGatewayMatchedHost: Scalars['string']['output'];
  /** The final score originated from bot management detections. */
  botScore: Scalars['uint8']['output'];
  /** Name of the source detection which generated the bot management score. */
  botScoreSrcName: Scalars['string']['output'];
  /** The ASN of the visitor as string */
  clientASNDescription: Scalars['string']['output'];
  /** The ASN number of the visitor */
  clientAsn: Scalars['string']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  /** The visitor's IP address (IPv4 or IPv6) */
  clientIP: Scalars['string']['output'];
  /**
   * The classification of the visitor's IP address, possible values are: unknown |
   * clean | badHost | searchEngine | allowlist | greylist | monitoringService |
   * securityScanner | noRecord | scan | backupService | mobilePlatform | tor
   */
  clientIPClass: Scalars['string']['output'];
  /** The referer host */
  clientRefererHost: Scalars['string']['output'];
  /** The referer path requested by visitor */
  clientRefererPath: Scalars['string']['output'];
  /** The referer query-string was requested by the visitor */
  clientRefererQuery: Scalars['string']['output'];
  /** The referer url scheme requested by the visitor */
  clientRefererScheme: Scalars['string']['output'];
  /** The HTTP hostname requested by the visitor */
  clientRequestHTTPHost: Scalars['string']['output'];
  /** The HTTP method used by the visitor */
  clientRequestHTTPMethodName: Scalars['string']['output'];
  /** The version of HTTP protocol requested by the visitor */
  clientRequestHTTPProtocol: Scalars['string']['output'];
  /** The path requested by visitor */
  clientRequestPath: Scalars['string']['output'];
  /** The query-string was requested by the visitor */
  clientRequestQuery: Scalars['string']['output'];
  /** The url scheme requested by the visitor */
  clientRequestScheme: Scalars['string']['output'];
  /** 1 if not all contents for this request where successfully scanned, else 0 */
  contentScanHasFailed: Scalars['uint8']['output'];
  /** Number of scannable content objects that are malicious */
  contentScanNumMaliciousObj: Scalars['uint8']['output'];
  /** Number of scannable content objects */
  contentScanNumObj: Scalars['uint8']['output'];
  /** Array of scan results in order of detection */
  contentScanObjResults: Scalars['string']['output'];
  /** Array of content types in order of detection */
  contentScanObjTypes: Scalars['string']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The description of the rule triggered by this request */
  description: Scalars['string']['output'];
  /** The airport code of the Cloudflare datacenter that served this request */
  edgeColoName: Scalars['string']['output'];
  /** HTTP response status code returned to browser */
  edgeResponseStatus: Scalars['uint16']['output'];
  /**
   * Version associated with HTTP Application
   * @deprecated Field is replaced with <code>zoneVersion</code>
   */
  httpApplicationVersion: Scalars['uint64']['output'];
  /** MD5 hash of the JA3 TLS fingerprint */
  ja3Hash: Scalars['string']['output'];
  /** The kind of event, currently only possible values are: firewall */
  kind: Scalars['string']['output'];
  /** The distinct result of checking for leaked credentials */
  leakedCredentialCheckResult: Scalars['string']['output'];
  /** Rules match index in the chain */
  matchIndex: Scalars['uint16']['output'];
  /** Additional product-specific information. Metadata is organized in key:value pairs */
  metadata: Array<AccountFirewallEventsAdaptiveMetadataElem>;
  /** HTTP origin response status code returned to browser */
  originResponseStatus: Scalars['uint16']['output'];
  /** The RayId of the request that issued the challenge/jschallenge */
  originatorRayName: Scalars['string']['output'];
  /** The RayId of the request */
  rayName: Scalars['string']['output'];
  /**
   * The ref-field is a user-defined rule identifier that can be set via the API
   * for some firewall products and allows users to label their rules individually
   * alongside cloudflare provided identifiers (only available to entitled customers)
   */
  ref: Scalars['string']['output'];
  /** The Cloudflare security product-specific RuleId triggered by this request */
  ruleId: Scalars['string']['output'];
  /** The Cloudflare security product-specific RulesetId triggered by this request */
  rulesetId: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** The Cloudflare security product triggered by this request */
  source: Scalars['string']['output'];
  /** visitor's user-agent string */
  userAgent: Scalars['string']['output'];
  /** Beta. Overall request score generated by the WAF detection module */
  wafAttackScore: Scalars['uint8']['output'];
  /** Beta. Overall request score class generated by the WAF detection module */
  wafAttackScoreClass: Scalars['string']['output'];
  /**
   * Beta. Overall request score generated by the WAF detection module
   * @deprecated Field is replaced with <code>wafAttackScore</code>
   */
  wafMlAttackScore: Scalars['uint8']['output'];
  /**
   * Beta. WAF ML score for an SQLi attack
   * @deprecated Field is replaced with <code>wafSqliAttackScore</code>
   */
  wafMlSqliAttackScore: Scalars['uint8']['output'];
  /**
   * Beta. WAF ML score for an XSS attack
   * @deprecated Field is replaced with <code>wafXssAttackScore</code>
   */
  wafMlXssAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a RCE attack */
  wafRceAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a SQLi attack */
  wafSqliAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a XSS attack */
  wafXssAttackScore: Scalars['uint8']['output'];
  /** Associated zone */
  zoneTag: Scalars['string']['output'];
  /** The version of a zone */
  zoneVersion: Scalars['uint64']['output'];
};

export type AccountFirewallEventsAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<AccountFirewallEventsAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountFirewallEventsAdaptiveFilter_InputObject>>;
  action?: InputMaybe<Scalars['string']['input']>;
  action_geq?: InputMaybe<Scalars['string']['input']>;
  action_gt?: InputMaybe<Scalars['string']['input']>;
  action_in?: InputMaybe<Array<Scalars['string']['input']>>;
  action_leq?: InputMaybe<Scalars['string']['input']>;
  action_like?: InputMaybe<Scalars['string']['input']>;
  action_lt?: InputMaybe<Scalars['string']['input']>;
  action_neq?: InputMaybe<Scalars['string']['input']>;
  action_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  action_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore?: InputMaybe<Scalars['uint8']['input']>;
  botScoreSrcName?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_geq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_gt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_leq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_like?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_lt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_neq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_in?: InputMaybe<Scalars['bytes']['input']>;
  botScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  clientASNDescription?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  clientAsn?: InputMaybe<Scalars['string']['input']>;
  clientAsn_geq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_gt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_leq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_like?: InputMaybe<Scalars['string']['input']>;
  clientAsn_lt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_neq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_notlike?: InputMaybe<Scalars['string']['input']>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP?: InputMaybe<Scalars['string']['input']>;
  clientIPClass?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_geq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_gt?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPClass_leq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_like?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_lt?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_neq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPClass_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP_geq?: InputMaybe<Scalars['string']['input']>;
  clientIP_gt?: InputMaybe<Scalars['string']['input']>;
  clientIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_leq?: InputMaybe<Scalars['string']['input']>;
  clientIP_like?: InputMaybe<Scalars['string']['input']>;
  clientIP_lt?: InputMaybe<Scalars['string']['input']>;
  clientIP_neq?: InputMaybe<Scalars['string']['input']>;
  clientIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  contentScanHasFailed?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanHasFailed_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumMaliciousObj?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumMaliciousObj_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumObj?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumObj_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanObjResults?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_geq?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_gt?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_in?: InputMaybe<Array<Scalars['string']['input']>>;
  contentScanObjResults_leq?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_like?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_lt?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_neq?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  contentScanObjResults_notlike?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_geq?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_gt?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_in?: InputMaybe<Array<Scalars['string']['input']>>;
  contentScanObjTypes_leq?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_like?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_lt?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_neq?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  contentScanObjTypes_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  description?: InputMaybe<Scalars['string']['input']>;
  description_geq?: InputMaybe<Scalars['string']['input']>;
  description_gt?: InputMaybe<Scalars['string']['input']>;
  description_in?: InputMaybe<Array<Scalars['string']['input']>>;
  description_leq?: InputMaybe<Scalars['string']['input']>;
  description_like?: InputMaybe<Scalars['string']['input']>;
  description_lt?: InputMaybe<Scalars['string']['input']>;
  description_neq?: InputMaybe<Scalars['string']['input']>;
  description_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  description_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoName?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpApplicationVersion?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  httpApplicationVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  ja3Hash?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_geq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_gt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_leq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_like?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_lt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_neq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_notlike?: InputMaybe<Scalars['string']['input']>;
  kind?: InputMaybe<Scalars['string']['input']>;
  kind_geq?: InputMaybe<Scalars['string']['input']>;
  kind_gt?: InputMaybe<Scalars['string']['input']>;
  kind_in?: InputMaybe<Array<Scalars['string']['input']>>;
  kind_leq?: InputMaybe<Scalars['string']['input']>;
  kind_like?: InputMaybe<Scalars['string']['input']>;
  kind_lt?: InputMaybe<Scalars['string']['input']>;
  kind_neq?: InputMaybe<Scalars['string']['input']>;
  kind_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  kind_notlike?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_geq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_gt?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leakedCredentialCheckResult_leq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_like?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_lt?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_neq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leakedCredentialCheckResult_notlike?: InputMaybe<Scalars['string']['input']>;
  matchIndex?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_geq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_gt?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  matchIndex_leq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_lt?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_neq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originatorRayName?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_geq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_gt?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originatorRayName_leq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_like?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_lt?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_neq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originatorRayName_notlike?: InputMaybe<Scalars['string']['input']>;
  rayName?: InputMaybe<Scalars['string']['input']>;
  rayName_geq?: InputMaybe<Scalars['string']['input']>;
  rayName_gt?: InputMaybe<Scalars['string']['input']>;
  rayName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rayName_leq?: InputMaybe<Scalars['string']['input']>;
  rayName_like?: InputMaybe<Scalars['string']['input']>;
  rayName_lt?: InputMaybe<Scalars['string']['input']>;
  rayName_neq?: InputMaybe<Scalars['string']['input']>;
  rayName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rayName_notlike?: InputMaybe<Scalars['string']['input']>;
  ref?: InputMaybe<Scalars['string']['input']>;
  ref_geq?: InputMaybe<Scalars['string']['input']>;
  ref_gt?: InputMaybe<Scalars['string']['input']>;
  ref_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ref_leq?: InputMaybe<Scalars['string']['input']>;
  ref_like?: InputMaybe<Scalars['string']['input']>;
  ref_lt?: InputMaybe<Scalars['string']['input']>;
  ref_neq?: InputMaybe<Scalars['string']['input']>;
  ref_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ref_notlike?: InputMaybe<Scalars['string']['input']>;
  ruleId?: InputMaybe<Scalars['string']['input']>;
  ruleId_geq?: InputMaybe<Scalars['string']['input']>;
  ruleId_gt?: InputMaybe<Scalars['string']['input']>;
  ruleId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_leq?: InputMaybe<Scalars['string']['input']>;
  ruleId_like?: InputMaybe<Scalars['string']['input']>;
  ruleId_lt?: InputMaybe<Scalars['string']['input']>;
  ruleId_neq?: InputMaybe<Scalars['string']['input']>;
  ruleId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_notlike?: InputMaybe<Scalars['string']['input']>;
  rulesetId?: InputMaybe<Scalars['string']['input']>;
  rulesetId_geq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_gt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_leq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_like?: InputMaybe<Scalars['string']['input']>;
  rulesetId_lt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_neq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  source?: InputMaybe<Scalars['string']['input']>;
  source_geq?: InputMaybe<Scalars['string']['input']>;
  source_gt?: InputMaybe<Scalars['string']['input']>;
  source_in?: InputMaybe<Array<Scalars['string']['input']>>;
  source_leq?: InputMaybe<Scalars['string']['input']>;
  source_like?: InputMaybe<Scalars['string']['input']>;
  source_lt?: InputMaybe<Scalars['string']['input']>;
  source_neq?: InputMaybe<Scalars['string']['input']>;
  source_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  source_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent?: InputMaybe<Scalars['string']['input']>;
  userAgent_geq?: InputMaybe<Scalars['string']['input']>;
  userAgent_gt?: InputMaybe<Scalars['string']['input']>;
  userAgent_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_leq?: InputMaybe<Scalars['string']['input']>;
  userAgent_like?: InputMaybe<Scalars['string']['input']>;
  userAgent_lt?: InputMaybe<Scalars['string']['input']>;
  userAgent_neq?: InputMaybe<Scalars['string']['input']>;
  userAgent_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScoreClass?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_geq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_gt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_leq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_like?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_lt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_neq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  zoneTag?: InputMaybe<Scalars['string']['input']>;
  zoneTag_geq?: InputMaybe<Scalars['string']['input']>;
  zoneTag_gt?: InputMaybe<Scalars['string']['input']>;
  zoneTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  zoneTag_leq?: InputMaybe<Scalars['string']['input']>;
  zoneTag_like?: InputMaybe<Scalars['string']['input']>;
  zoneTag_lt?: InputMaybe<Scalars['string']['input']>;
  zoneTag_neq?: InputMaybe<Scalars['string']['input']>;
  zoneTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  zoneTag_notlike?: InputMaybe<Scalars['string']['input']>;
  zoneVersion?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  zoneVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

/** Aggregated Firewall events with adaptive sampling */
export type AccountFirewallEventsAdaptiveGroups = {
  __typename?: 'AccountFirewallEventsAdaptiveGroups';
  /** The average value used for sample interval */
  avg?: Maybe<AccountFirewallEventsAdaptiveGroupsAvg>;
  /** The sum of sample interval values */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountFirewallEventsAdaptiveGroupsDimensions>;
};

export type AccountFirewallEventsAdaptiveGroupsAvg = {
  __typename?: 'AccountFirewallEventsAdaptiveGroupsAvg';
  sampleInterval: Scalars['float64']['output'];
};

export type AccountFirewallEventsAdaptiveGroupsDimensions = {
  __typename?: 'AccountFirewallEventsAdaptiveGroupsDimensions';
  /** The code of the first-class action the Cloudflare Firewall took on this request */
  action: Scalars['string']['output'];
  /** API Gateway endpoint matched at the edge */
  apiGatewayMatchedEndpoint: Scalars['string']['output'];
  /** API Gateway host matched at the edge */
  apiGatewayMatchedHost: Scalars['string']['output'];
  /** The final score originated from bot management detections. */
  botScore: Scalars['uint8']['output'];
  /** Name of the source detection which generated the bot management score. */
  botScoreSrcName: Scalars['string']['output'];
  /** The ASN of the visitor as string */
  clientASNDescription: Scalars['string']['output'];
  /** The ASN number of the visitor */
  clientAsn: Scalars['string']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  /** The visitor's IP address (IPv4 or IPv6) */
  clientIP: Scalars['string']['output'];
  /**
   * The classification of the visitor's IP address, possible values are: unknown |
   * clean | badHost | searchEngine | allowlist | greylist | monitoringService |
   * securityScanner | noRecord | scan | backupService | mobilePlatform | tor
   */
  clientIPClass: Scalars['string']['output'];
  /** The referer host */
  clientRefererHost: Scalars['string']['output'];
  /** The referer path requested by visitor */
  clientRefererPath: Scalars['string']['output'];
  /** The referer query-string was requested by the visitor */
  clientRefererQuery: Scalars['string']['output'];
  /** The referer url scheme requested by the visitor */
  clientRefererScheme: Scalars['string']['output'];
  /** The HTTP hostname requested by the visitor */
  clientRequestHTTPHost: Scalars['string']['output'];
  /** The HTTP method used by the visitor */
  clientRequestHTTPMethodName: Scalars['string']['output'];
  /** The version of HTTP protocol requested by the visitor */
  clientRequestHTTPProtocol: Scalars['string']['output'];
  /** The path requested by visitor */
  clientRequestPath: Scalars['string']['output'];
  /** The query-string was requested by the visitor */
  clientRequestQuery: Scalars['string']['output'];
  /** The url scheme requested by the visitor */
  clientRequestScheme: Scalars['string']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The description of the rule triggered by this request */
  description: Scalars['string']['output'];
  /** The airport code of the Cloudflare datacenter that served this request */
  edgeColoName: Scalars['string']['output'];
  /** HTTP response status code returned to browser */
  edgeResponseStatus: Scalars['uint16']['output'];
  /**
   * Version associated with HTTP Application
   * @deprecated Field is replaced with <code>zoneVersion</code>
   */
  httpApplicationVersion: Scalars['uint64']['output'];
  /** MD5 hash of the JA3 TLS fingerprint */
  ja3Hash: Scalars['string']['output'];
  /** The kind of event, currently only possible values are: firewall */
  kind: Scalars['string']['output'];
  /** Rules match index in the chain */
  matchIndex: Scalars['uint16']['output'];
  /** HTTP origin response status code returned to browser */
  originResponseStatus: Scalars['uint16']['output'];
  /** The RayId of the request that issued the challenge/jschallenge */
  originatorRayName: Scalars['string']['output'];
  /** The RayId of the request */
  rayName: Scalars['string']['output'];
  /**
   * The ref-field is a user-defined rule identifier that can be set via the API
   * for some firewall products and allows users to label their rules individually
   * alongside cloudflare provided identifiers (only available to entitled customers)
   */
  ref: Scalars['string']['output'];
  /** The Cloudflare security product-specific RuleId triggered by this request */
  ruleId: Scalars['string']['output'];
  /** The Cloudflare security product-specific RulesetId triggered by this request */
  rulesetId: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** The Cloudflare security product triggered by this request */
  source: Scalars['string']['output'];
  /** visitor's user-agent string */
  userAgent: Scalars['string']['output'];
  /** Beta. Overall request score generated by the WAF detection module */
  wafAttackScore: Scalars['uint8']['output'];
  /** Beta. Overall request score class generated by the WAF detection module */
  wafAttackScoreClass: Scalars['string']['output'];
  /**
   * Beta. Overall request score generated by the WAF ML detection module
   * @deprecated Field is replaced with <code>wafAttackScore</code>
   */
  wafMlAttackScore: Scalars['uint8']['output'];
  /**
   * Beta. WAF ML score for an SQLi attack
   * @deprecated Field is replaced with <code>wafSqliAttackScore</code>
   */
  wafMlSqliAttackScore: Scalars['uint8']['output'];
  /**
   * Beta. WAF ML score for an XSS attack
   * @deprecated Field is replaced with <code>wafXssAttackScore</code>
   */
  wafMlXssAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a RCE attack */
  wafRceAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a SQLi attack */
  wafSqliAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a XSS attack */
  wafXssAttackScore: Scalars['uint8']['output'];
  /** Associated zone */
  zoneTag: Scalars['string']['output'];
  /** The version of a zone */
  zoneVersion: Scalars['uint64']['output'];
};

export type AccountFirewallEventsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountFirewallEventsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountFirewallEventsAdaptiveGroupsFilter_InputObject>>;
  action?: InputMaybe<Scalars['string']['input']>;
  action_geq?: InputMaybe<Scalars['string']['input']>;
  action_gt?: InputMaybe<Scalars['string']['input']>;
  action_in?: InputMaybe<Array<Scalars['string']['input']>>;
  action_leq?: InputMaybe<Scalars['string']['input']>;
  action_like?: InputMaybe<Scalars['string']['input']>;
  action_lt?: InputMaybe<Scalars['string']['input']>;
  action_neq?: InputMaybe<Scalars['string']['input']>;
  action_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  action_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore?: InputMaybe<Scalars['uint8']['input']>;
  botScoreSrcName?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_geq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_gt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_leq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_like?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_lt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_neq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_in?: InputMaybe<Scalars['bytes']['input']>;
  botScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  clientASNDescription?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  clientAsn?: InputMaybe<Scalars['string']['input']>;
  clientAsn_geq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_gt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_leq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_like?: InputMaybe<Scalars['string']['input']>;
  clientAsn_lt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_neq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_notlike?: InputMaybe<Scalars['string']['input']>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP?: InputMaybe<Scalars['string']['input']>;
  clientIPClass?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_geq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_gt?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPClass_leq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_like?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_lt?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_neq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPClass_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP_geq?: InputMaybe<Scalars['string']['input']>;
  clientIP_gt?: InputMaybe<Scalars['string']['input']>;
  clientIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_leq?: InputMaybe<Scalars['string']['input']>;
  clientIP_like?: InputMaybe<Scalars['string']['input']>;
  clientIP_lt?: InputMaybe<Scalars['string']['input']>;
  clientIP_neq?: InputMaybe<Scalars['string']['input']>;
  clientIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  description?: InputMaybe<Scalars['string']['input']>;
  description_geq?: InputMaybe<Scalars['string']['input']>;
  description_gt?: InputMaybe<Scalars['string']['input']>;
  description_in?: InputMaybe<Array<Scalars['string']['input']>>;
  description_leq?: InputMaybe<Scalars['string']['input']>;
  description_like?: InputMaybe<Scalars['string']['input']>;
  description_lt?: InputMaybe<Scalars['string']['input']>;
  description_neq?: InputMaybe<Scalars['string']['input']>;
  description_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  description_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoName?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpApplicationVersion?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  httpApplicationVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  ja3Hash?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_geq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_gt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_leq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_like?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_lt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_neq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_notlike?: InputMaybe<Scalars['string']['input']>;
  kind?: InputMaybe<Scalars['string']['input']>;
  kind_geq?: InputMaybe<Scalars['string']['input']>;
  kind_gt?: InputMaybe<Scalars['string']['input']>;
  kind_in?: InputMaybe<Array<Scalars['string']['input']>>;
  kind_leq?: InputMaybe<Scalars['string']['input']>;
  kind_like?: InputMaybe<Scalars['string']['input']>;
  kind_lt?: InputMaybe<Scalars['string']['input']>;
  kind_neq?: InputMaybe<Scalars['string']['input']>;
  kind_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  kind_notlike?: InputMaybe<Scalars['string']['input']>;
  matchIndex?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_geq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_gt?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  matchIndex_leq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_lt?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_neq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originatorRayName?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_geq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_gt?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originatorRayName_leq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_like?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_lt?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_neq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originatorRayName_notlike?: InputMaybe<Scalars['string']['input']>;
  rayName?: InputMaybe<Scalars['string']['input']>;
  rayName_geq?: InputMaybe<Scalars['string']['input']>;
  rayName_gt?: InputMaybe<Scalars['string']['input']>;
  rayName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rayName_leq?: InputMaybe<Scalars['string']['input']>;
  rayName_like?: InputMaybe<Scalars['string']['input']>;
  rayName_lt?: InputMaybe<Scalars['string']['input']>;
  rayName_neq?: InputMaybe<Scalars['string']['input']>;
  rayName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rayName_notlike?: InputMaybe<Scalars['string']['input']>;
  ref?: InputMaybe<Scalars['string']['input']>;
  ref_geq?: InputMaybe<Scalars['string']['input']>;
  ref_gt?: InputMaybe<Scalars['string']['input']>;
  ref_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ref_leq?: InputMaybe<Scalars['string']['input']>;
  ref_like?: InputMaybe<Scalars['string']['input']>;
  ref_lt?: InputMaybe<Scalars['string']['input']>;
  ref_neq?: InputMaybe<Scalars['string']['input']>;
  ref_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ref_notlike?: InputMaybe<Scalars['string']['input']>;
  ruleId?: InputMaybe<Scalars['string']['input']>;
  ruleId_geq?: InputMaybe<Scalars['string']['input']>;
  ruleId_gt?: InputMaybe<Scalars['string']['input']>;
  ruleId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_leq?: InputMaybe<Scalars['string']['input']>;
  ruleId_like?: InputMaybe<Scalars['string']['input']>;
  ruleId_lt?: InputMaybe<Scalars['string']['input']>;
  ruleId_neq?: InputMaybe<Scalars['string']['input']>;
  ruleId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_notlike?: InputMaybe<Scalars['string']['input']>;
  rulesetId?: InputMaybe<Scalars['string']['input']>;
  rulesetId_geq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_gt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_leq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_like?: InputMaybe<Scalars['string']['input']>;
  rulesetId_lt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_neq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  source?: InputMaybe<Scalars['string']['input']>;
  source_geq?: InputMaybe<Scalars['string']['input']>;
  source_gt?: InputMaybe<Scalars['string']['input']>;
  source_in?: InputMaybe<Array<Scalars['string']['input']>>;
  source_leq?: InputMaybe<Scalars['string']['input']>;
  source_like?: InputMaybe<Scalars['string']['input']>;
  source_lt?: InputMaybe<Scalars['string']['input']>;
  source_neq?: InputMaybe<Scalars['string']['input']>;
  source_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  source_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent?: InputMaybe<Scalars['string']['input']>;
  userAgent_geq?: InputMaybe<Scalars['string']['input']>;
  userAgent_gt?: InputMaybe<Scalars['string']['input']>;
  userAgent_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_leq?: InputMaybe<Scalars['string']['input']>;
  userAgent_like?: InputMaybe<Scalars['string']['input']>;
  userAgent_lt?: InputMaybe<Scalars['string']['input']>;
  userAgent_neq?: InputMaybe<Scalars['string']['input']>;
  userAgent_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScoreClass?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_geq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_gt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_leq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_like?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_lt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_neq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  zoneTag?: InputMaybe<Scalars['string']['input']>;
  zoneTag_geq?: InputMaybe<Scalars['string']['input']>;
  zoneTag_gt?: InputMaybe<Scalars['string']['input']>;
  zoneTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  zoneTag_leq?: InputMaybe<Scalars['string']['input']>;
  zoneTag_like?: InputMaybe<Scalars['string']['input']>;
  zoneTag_lt?: InputMaybe<Scalars['string']['input']>;
  zoneTag_neq?: InputMaybe<Scalars['string']['input']>;
  zoneTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  zoneTag_notlike?: InputMaybe<Scalars['string']['input']>;
  zoneVersion?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  zoneVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

export enum AccountFirewallEventsAdaptiveGroupsOrderBy {
  /** action ascending */
  ActionAsc = 'action_ASC',
  /** action descending */
  ActionDesc = 'action_DESC',
  /** apiGatewayMatchedEndpoint ascending */
  ApiGatewayMatchedEndpointAsc = 'apiGatewayMatchedEndpoint_ASC',
  /** apiGatewayMatchedEndpoint descending */
  ApiGatewayMatchedEndpointDesc = 'apiGatewayMatchedEndpoint_DESC',
  /** apiGatewayMatchedHost ascending */
  ApiGatewayMatchedHostAsc = 'apiGatewayMatchedHost_ASC',
  /** apiGatewayMatchedHost descending */
  ApiGatewayMatchedHostDesc = 'apiGatewayMatchedHost_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** botScoreSrcName ascending */
  BotScoreSrcNameAsc = 'botScoreSrcName_ASC',
  /** botScoreSrcName descending */
  BotScoreSrcNameDesc = 'botScoreSrcName_DESC',
  /** botScore ascending */
  BotScoreAsc = 'botScore_ASC',
  /** botScore descending */
  BotScoreDesc = 'botScore_DESC',
  /** clientASNDescription ascending */
  ClientAsnDescriptionAsc = 'clientASNDescription_ASC',
  /** clientASNDescription descending */
  ClientAsnDescriptionDesc = 'clientASNDescription_DESC',
  /** clientAsn ascending */
  ClientAsnAsc = 'clientAsn_ASC',
  /** clientAsn descending */
  ClientAsnDesc = 'clientAsn_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** clientIPClass ascending */
  ClientIpClassAsc = 'clientIPClass_ASC',
  /** clientIPClass descending */
  ClientIpClassDesc = 'clientIPClass_DESC',
  /** clientIP ascending */
  ClientIpAsc = 'clientIP_ASC',
  /** clientIP descending */
  ClientIpDesc = 'clientIP_DESC',
  /** clientRefererHost ascending */
  ClientRefererHostAsc = 'clientRefererHost_ASC',
  /** clientRefererHost descending */
  ClientRefererHostDesc = 'clientRefererHost_DESC',
  /** clientRefererPath ascending */
  ClientRefererPathAsc = 'clientRefererPath_ASC',
  /** clientRefererPath descending */
  ClientRefererPathDesc = 'clientRefererPath_DESC',
  /** clientRefererQuery ascending */
  ClientRefererQueryAsc = 'clientRefererQuery_ASC',
  /** clientRefererQuery descending */
  ClientRefererQueryDesc = 'clientRefererQuery_DESC',
  /** clientRefererScheme ascending */
  ClientRefererSchemeAsc = 'clientRefererScheme_ASC',
  /** clientRefererScheme descending */
  ClientRefererSchemeDesc = 'clientRefererScheme_DESC',
  /** clientRequestHTTPHost ascending */
  ClientRequestHttpHostAsc = 'clientRequestHTTPHost_ASC',
  /** clientRequestHTTPHost descending */
  ClientRequestHttpHostDesc = 'clientRequestHTTPHost_DESC',
  /** clientRequestHTTPMethodName ascending */
  ClientRequestHttpMethodNameAsc = 'clientRequestHTTPMethodName_ASC',
  /** clientRequestHTTPMethodName descending */
  ClientRequestHttpMethodNameDesc = 'clientRequestHTTPMethodName_DESC',
  /** clientRequestHTTPProtocol ascending */
  ClientRequestHttpProtocolAsc = 'clientRequestHTTPProtocol_ASC',
  /** clientRequestHTTPProtocol descending */
  ClientRequestHttpProtocolDesc = 'clientRequestHTTPProtocol_DESC',
  /** clientRequestPath ascending */
  ClientRequestPathAsc = 'clientRequestPath_ASC',
  /** clientRequestPath descending */
  ClientRequestPathDesc = 'clientRequestPath_DESC',
  /** clientRequestQuery ascending */
  ClientRequestQueryAsc = 'clientRequestQuery_ASC',
  /** clientRequestQuery descending */
  ClientRequestQueryDesc = 'clientRequestQuery_DESC',
  /** clientRequestScheme ascending */
  ClientRequestSchemeAsc = 'clientRequestScheme_ASC',
  /** clientRequestScheme descending */
  ClientRequestSchemeDesc = 'clientRequestScheme_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** description ascending */
  DescriptionAsc = 'description_ASC',
  /** description descending */
  DescriptionDesc = 'description_DESC',
  /** edgeColoName ascending */
  EdgeColoNameAsc = 'edgeColoName_ASC',
  /** edgeColoName descending */
  EdgeColoNameDesc = 'edgeColoName_DESC',
  /** edgeResponseStatus ascending */
  EdgeResponseStatusAsc = 'edgeResponseStatus_ASC',
  /** edgeResponseStatus descending */
  EdgeResponseStatusDesc = 'edgeResponseStatus_DESC',
  /** httpApplicationVersion ascending */
  HttpApplicationVersionAsc = 'httpApplicationVersion_ASC',
  /** httpApplicationVersion descending */
  HttpApplicationVersionDesc = 'httpApplicationVersion_DESC',
  /** ja3Hash ascending */
  Ja3HashAsc = 'ja3Hash_ASC',
  /** ja3Hash descending */
  Ja3HashDesc = 'ja3Hash_DESC',
  /** kind ascending */
  KindAsc = 'kind_ASC',
  /** kind descending */
  KindDesc = 'kind_DESC',
  /** matchIndex ascending */
  MatchIndexAsc = 'matchIndex_ASC',
  /** matchIndex descending */
  MatchIndexDesc = 'matchIndex_DESC',
  /** originResponseStatus ascending */
  OriginResponseStatusAsc = 'originResponseStatus_ASC',
  /** originResponseStatus descending */
  OriginResponseStatusDesc = 'originResponseStatus_DESC',
  /** originatorRayName ascending */
  OriginatorRayNameAsc = 'originatorRayName_ASC',
  /** originatorRayName descending */
  OriginatorRayNameDesc = 'originatorRayName_DESC',
  /** rayName ascending */
  RayNameAsc = 'rayName_ASC',
  /** rayName descending */
  RayNameDesc = 'rayName_DESC',
  /** ref ascending */
  RefAsc = 'ref_ASC',
  /** ref descending */
  RefDesc = 'ref_DESC',
  /** ruleId ascending */
  RuleIdAsc = 'ruleId_ASC',
  /** ruleId descending */
  RuleIdDesc = 'ruleId_DESC',
  /** rulesetId ascending */
  RulesetIdAsc = 'rulesetId_ASC',
  /** rulesetId descending */
  RulesetIdDesc = 'rulesetId_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** source ascending */
  SourceAsc = 'source_ASC',
  /** source descending */
  SourceDesc = 'source_DESC',
  /** userAgent ascending */
  UserAgentAsc = 'userAgent_ASC',
  /** userAgent descending */
  UserAgentDesc = 'userAgent_DESC',
  /** visibility ascending */
  VisibilityAsc = 'visibility_ASC',
  /** visibility descending */
  VisibilityDesc = 'visibility_DESC',
  /** wafAttackScoreClass ascending */
  WafAttackScoreClassAsc = 'wafAttackScoreClass_ASC',
  /** wafAttackScoreClass descending */
  WafAttackScoreClassDesc = 'wafAttackScoreClass_DESC',
  /** wafAttackScore ascending */
  WafAttackScoreAsc = 'wafAttackScore_ASC',
  /** wafAttackScore descending */
  WafAttackScoreDesc = 'wafAttackScore_DESC',
  /** wafMlAttackScore ascending */
  WafMlAttackScoreAsc = 'wafMlAttackScore_ASC',
  /** wafMlAttackScore descending */
  WafMlAttackScoreDesc = 'wafMlAttackScore_DESC',
  /** wafMlSqliAttackScore ascending */
  WafMlSqliAttackScoreAsc = 'wafMlSqliAttackScore_ASC',
  /** wafMlSqliAttackScore descending */
  WafMlSqliAttackScoreDesc = 'wafMlSqliAttackScore_DESC',
  /** wafMlXssAttackScore ascending */
  WafMlXssAttackScoreAsc = 'wafMlXssAttackScore_ASC',
  /** wafMlXssAttackScore descending */
  WafMlXssAttackScoreDesc = 'wafMlXssAttackScore_DESC',
  /** wafRceAttackScore ascending */
  WafRceAttackScoreAsc = 'wafRceAttackScore_ASC',
  /** wafRceAttackScore descending */
  WafRceAttackScoreDesc = 'wafRceAttackScore_DESC',
  /** wafSqliAttackScore ascending */
  WafSqliAttackScoreAsc = 'wafSqliAttackScore_ASC',
  /** wafSqliAttackScore descending */
  WafSqliAttackScoreDesc = 'wafSqliAttackScore_DESC',
  /** wafXssAttackScore ascending */
  WafXssAttackScoreAsc = 'wafXssAttackScore_ASC',
  /** wafXssAttackScore descending */
  WafXssAttackScoreDesc = 'wafXssAttackScore_DESC',
  /** zoneTag ascending */
  ZoneTagAsc = 'zoneTag_ASC',
  /** zoneTag descending */
  ZoneTagDesc = 'zoneTag_DESC',
  /** zoneVersion ascending */
  ZoneVersionAsc = 'zoneVersion_ASC',
  /** zoneVersion descending */
  ZoneVersionDesc = 'zoneVersion_DESC'
}

export type AccountFirewallEventsAdaptiveMetadataElem = {
  __typename?: 'AccountFirewallEventsAdaptiveMetadataElem';
  /** The key of the metadata. Key format can vary by Cloudflare security product and can change over time. */
  key: Scalars['string']['output'];
  /** The value of the metadata. Value format can vary by Cloudflare security product and can change over time. */
  value: Scalars['string']['output'];
};

export enum AccountFirewallEventsAdaptiveOrderBy {
  /** action ascending */
  ActionAsc = 'action_ASC',
  /** action descending */
  ActionDesc = 'action_DESC',
  /** apiGatewayMatchedEndpoint ascending */
  ApiGatewayMatchedEndpointAsc = 'apiGatewayMatchedEndpoint_ASC',
  /** apiGatewayMatchedEndpoint descending */
  ApiGatewayMatchedEndpointDesc = 'apiGatewayMatchedEndpoint_DESC',
  /** apiGatewayMatchedHost ascending */
  ApiGatewayMatchedHostAsc = 'apiGatewayMatchedHost_ASC',
  /** apiGatewayMatchedHost descending */
  ApiGatewayMatchedHostDesc = 'apiGatewayMatchedHost_DESC',
  /** botScoreSrcName ascending */
  BotScoreSrcNameAsc = 'botScoreSrcName_ASC',
  /** botScoreSrcName descending */
  BotScoreSrcNameDesc = 'botScoreSrcName_DESC',
  /** botScore ascending */
  BotScoreAsc = 'botScore_ASC',
  /** botScore descending */
  BotScoreDesc = 'botScore_DESC',
  /** clientASNDescription ascending */
  ClientAsnDescriptionAsc = 'clientASNDescription_ASC',
  /** clientASNDescription descending */
  ClientAsnDescriptionDesc = 'clientASNDescription_DESC',
  /** clientAsn ascending */
  ClientAsnAsc = 'clientAsn_ASC',
  /** clientAsn descending */
  ClientAsnDesc = 'clientAsn_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** clientIPClass ascending */
  ClientIpClassAsc = 'clientIPClass_ASC',
  /** clientIPClass descending */
  ClientIpClassDesc = 'clientIPClass_DESC',
  /** clientIP ascending */
  ClientIpAsc = 'clientIP_ASC',
  /** clientIP descending */
  ClientIpDesc = 'clientIP_DESC',
  /** clientRefererHost ascending */
  ClientRefererHostAsc = 'clientRefererHost_ASC',
  /** clientRefererHost descending */
  ClientRefererHostDesc = 'clientRefererHost_DESC',
  /** clientRefererPath ascending */
  ClientRefererPathAsc = 'clientRefererPath_ASC',
  /** clientRefererPath descending */
  ClientRefererPathDesc = 'clientRefererPath_DESC',
  /** clientRefererQuery ascending */
  ClientRefererQueryAsc = 'clientRefererQuery_ASC',
  /** clientRefererQuery descending */
  ClientRefererQueryDesc = 'clientRefererQuery_DESC',
  /** clientRefererScheme ascending */
  ClientRefererSchemeAsc = 'clientRefererScheme_ASC',
  /** clientRefererScheme descending */
  ClientRefererSchemeDesc = 'clientRefererScheme_DESC',
  /** clientRequestHTTPHost ascending */
  ClientRequestHttpHostAsc = 'clientRequestHTTPHost_ASC',
  /** clientRequestHTTPHost descending */
  ClientRequestHttpHostDesc = 'clientRequestHTTPHost_DESC',
  /** clientRequestHTTPMethodName ascending */
  ClientRequestHttpMethodNameAsc = 'clientRequestHTTPMethodName_ASC',
  /** clientRequestHTTPMethodName descending */
  ClientRequestHttpMethodNameDesc = 'clientRequestHTTPMethodName_DESC',
  /** clientRequestHTTPProtocol ascending */
  ClientRequestHttpProtocolAsc = 'clientRequestHTTPProtocol_ASC',
  /** clientRequestHTTPProtocol descending */
  ClientRequestHttpProtocolDesc = 'clientRequestHTTPProtocol_DESC',
  /** clientRequestPath ascending */
  ClientRequestPathAsc = 'clientRequestPath_ASC',
  /** clientRequestPath descending */
  ClientRequestPathDesc = 'clientRequestPath_DESC',
  /** clientRequestQuery ascending */
  ClientRequestQueryAsc = 'clientRequestQuery_ASC',
  /** clientRequestQuery descending */
  ClientRequestQueryDesc = 'clientRequestQuery_DESC',
  /** clientRequestScheme ascending */
  ClientRequestSchemeAsc = 'clientRequestScheme_ASC',
  /** clientRequestScheme descending */
  ClientRequestSchemeDesc = 'clientRequestScheme_DESC',
  /** contentScanHasFailed ascending */
  ContentScanHasFailedAsc = 'contentScanHasFailed_ASC',
  /** contentScanHasFailed descending */
  ContentScanHasFailedDesc = 'contentScanHasFailed_DESC',
  /** contentScanNumMaliciousObj ascending */
  ContentScanNumMaliciousObjAsc = 'contentScanNumMaliciousObj_ASC',
  /** contentScanNumMaliciousObj descending */
  ContentScanNumMaliciousObjDesc = 'contentScanNumMaliciousObj_DESC',
  /** contentScanNumObj ascending */
  ContentScanNumObjAsc = 'contentScanNumObj_ASC',
  /** contentScanNumObj descending */
  ContentScanNumObjDesc = 'contentScanNumObj_DESC',
  /** contentScanObjResults ascending */
  ContentScanObjResultsAsc = 'contentScanObjResults_ASC',
  /** contentScanObjResults descending */
  ContentScanObjResultsDesc = 'contentScanObjResults_DESC',
  /** contentScanObjTypes ascending */
  ContentScanObjTypesAsc = 'contentScanObjTypes_ASC',
  /** contentScanObjTypes descending */
  ContentScanObjTypesDesc = 'contentScanObjTypes_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** description ascending */
  DescriptionAsc = 'description_ASC',
  /** description descending */
  DescriptionDesc = 'description_DESC',
  /** edgeColoName ascending */
  EdgeColoNameAsc = 'edgeColoName_ASC',
  /** edgeColoName descending */
  EdgeColoNameDesc = 'edgeColoName_DESC',
  /** edgeResponseStatus ascending */
  EdgeResponseStatusAsc = 'edgeResponseStatus_ASC',
  /** edgeResponseStatus descending */
  EdgeResponseStatusDesc = 'edgeResponseStatus_DESC',
  /** httpApplicationVersion ascending */
  HttpApplicationVersionAsc = 'httpApplicationVersion_ASC',
  /** httpApplicationVersion descending */
  HttpApplicationVersionDesc = 'httpApplicationVersion_DESC',
  /** ja3Hash ascending */
  Ja3HashAsc = 'ja3Hash_ASC',
  /** ja3Hash descending */
  Ja3HashDesc = 'ja3Hash_DESC',
  /** kind ascending */
  KindAsc = 'kind_ASC',
  /** kind descending */
  KindDesc = 'kind_DESC',
  /** leakedCredentialCheckResult ascending */
  LeakedCredentialCheckResultAsc = 'leakedCredentialCheckResult_ASC',
  /** leakedCredentialCheckResult descending */
  LeakedCredentialCheckResultDesc = 'leakedCredentialCheckResult_DESC',
  /** matchIndex ascending */
  MatchIndexAsc = 'matchIndex_ASC',
  /** matchIndex descending */
  MatchIndexDesc = 'matchIndex_DESC',
  /** originResponseStatus ascending */
  OriginResponseStatusAsc = 'originResponseStatus_ASC',
  /** originResponseStatus descending */
  OriginResponseStatusDesc = 'originResponseStatus_DESC',
  /** originatorRayName ascending */
  OriginatorRayNameAsc = 'originatorRayName_ASC',
  /** originatorRayName descending */
  OriginatorRayNameDesc = 'originatorRayName_DESC',
  /** rayName ascending */
  RayNameAsc = 'rayName_ASC',
  /** rayName descending */
  RayNameDesc = 'rayName_DESC',
  /** ref ascending */
  RefAsc = 'ref_ASC',
  /** ref descending */
  RefDesc = 'ref_DESC',
  /** ruleId ascending */
  RuleIdAsc = 'ruleId_ASC',
  /** ruleId descending */
  RuleIdDesc = 'ruleId_DESC',
  /** rulesetId ascending */
  RulesetIdAsc = 'rulesetId_ASC',
  /** rulesetId descending */
  RulesetIdDesc = 'rulesetId_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** source ascending */
  SourceAsc = 'source_ASC',
  /** source descending */
  SourceDesc = 'source_DESC',
  /** userAgent ascending */
  UserAgentAsc = 'userAgent_ASC',
  /** userAgent descending */
  UserAgentDesc = 'userAgent_DESC',
  /** visibility ascending */
  VisibilityAsc = 'visibility_ASC',
  /** visibility descending */
  VisibilityDesc = 'visibility_DESC',
  /** wafAttackScoreClass ascending */
  WafAttackScoreClassAsc = 'wafAttackScoreClass_ASC',
  /** wafAttackScoreClass descending */
  WafAttackScoreClassDesc = 'wafAttackScoreClass_DESC',
  /** wafAttackScore ascending */
  WafAttackScoreAsc = 'wafAttackScore_ASC',
  /** wafAttackScore descending */
  WafAttackScoreDesc = 'wafAttackScore_DESC',
  /** wafMlAttackScore ascending */
  WafMlAttackScoreAsc = 'wafMlAttackScore_ASC',
  /** wafMlAttackScore descending */
  WafMlAttackScoreDesc = 'wafMlAttackScore_DESC',
  /** wafMlSqliAttackScore ascending */
  WafMlSqliAttackScoreAsc = 'wafMlSqliAttackScore_ASC',
  /** wafMlSqliAttackScore descending */
  WafMlSqliAttackScoreDesc = 'wafMlSqliAttackScore_DESC',
  /** wafMlXssAttackScore ascending */
  WafMlXssAttackScoreAsc = 'wafMlXssAttackScore_ASC',
  /** wafMlXssAttackScore descending */
  WafMlXssAttackScoreDesc = 'wafMlXssAttackScore_DESC',
  /** wafRceAttackScore ascending */
  WafRceAttackScoreAsc = 'wafRceAttackScore_ASC',
  /** wafRceAttackScore descending */
  WafRceAttackScoreDesc = 'wafRceAttackScore_DESC',
  /** wafSqliAttackScore ascending */
  WafSqliAttackScoreAsc = 'wafSqliAttackScore_ASC',
  /** wafSqliAttackScore descending */
  WafSqliAttackScoreDesc = 'wafSqliAttackScore_DESC',
  /** wafXssAttackScore ascending */
  WafXssAttackScoreAsc = 'wafXssAttackScore_ASC',
  /** wafXssAttackScore descending */
  WafXssAttackScoreDesc = 'wafXssAttackScore_DESC',
  /** zoneTag ascending */
  ZoneTagAsc = 'zoneTag_ASC',
  /** zoneTag descending */
  ZoneTagDesc = 'zoneTag_DESC',
  /** zoneVersion ascending */
  ZoneVersionAsc = 'zoneVersion_ASC',
  /** zoneVersion descending */
  ZoneVersionDesc = 'zoneVersion_DESC'
}

/** Network analytics data for flowtrackd */
export type AccountFlowtrackdNetworkAnalyticsAdaptiveGroups = {
  __typename?: 'AccountFlowtrackdNetworkAnalyticsAdaptiveGroups';
  /** The average of values for a metric per dimension */
  avg?: Maybe<AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsSum>;
};

export type AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsAvg = {
  __typename?: 'AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsAvg';
  /** Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime */
  bitRate: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date */
  bitRateDay: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes */
  bitRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes */
  bitRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour */
  bitRateHour: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute */
  bitRateMinute: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds */
  bitRateTenSeconds: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime */
  packetRate: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date */
  packetRateDay: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes */
  packetRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes */
  packetRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour */
  packetRateHour: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute */
  packetRateMinute: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds */
  packetRateTenSeconds: Scalars['uint64']['output'];
};

export type AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsDimensions = {
  __typename?: 'AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsDimensions';
  /** Application tag associated with the packet */
  applicationTag: Scalars['string']['output'];
  /** City where the Cloudflare datacenter that received the packet is located */
  coloCity: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (nearest IATA airport code) */
  coloCode: Scalars['string']['output'];
  /** Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2) */
  coloCountry: Scalars['string']['output'];
  /** Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding) */
  coloGeohash: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (unique site identifier) */
  coloName: Scalars['string']['output'];
  /** Date that the packet was received */
  date: Scalars['Date']['output'];
  /** Date and time that the packet was received */
  datetime: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest hour */
  datetimeHour: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest ten seconds */
  datetimeTenSeconds: Scalars['Time']['output'];
  /** ASN associated with the destination IP of the packet, or 0 if there was no mapping available */
  destinationAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the destination IP of the packet, if available */
  destinationAsnName: Scalars['string']['output'];
  /** Country where the destination IP of the packet is located (ISO 3166-1 alpha-2) */
  destinationCountry: Scalars['string']['output'];
  /** Latitude and longitude where the destination IP of the packet is located (Geohash encoding) */
  destinationGeohash: Scalars['string']['output'];
  /** Value of the Destination Port header field in the TCP or UDP packet */
  destinationPort: Scalars['uint16']['output'];
  /** Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral) */
  direction: Scalars['string']['output'];
  /** Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6) */
  ethertype: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the GRE packet */
  greChecksum: Scalars['uint16']['output'];
  /** Value of the Ethertype header field in the GRE packet */
  greEthertype: Scalars['uint16']['output'];
  /** Length of the GRE packet header, in bytes */
  greHeaderLength: Scalars['uint16']['output'];
  /** Value of the Key header field in the GRE packet */
  greKey: Scalars['uint32']['output'];
  /** Value of the Sequence Number header field in the GRE packet */
  greSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Version header field in the GRE packet */
  greVersion: Scalars['uint8']['output'];
  /** Value of the Checkusm header field in the ICMP packet */
  icmpChecksum: Scalars['uint16']['output'];
  /** Value of the Code header field in the ICMP packet */
  icmpCode: Scalars['uint8']['output'];
  /** Value of the Type header field in the ICMP packet */
  icmpType: Scalars['uint8']['output'];
  /** Value of the Destination Address header field in the IPv4 or IPv6 packet */
  ipDestinationAddress: Scalars['string']['output'];
  /** Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipDestinationSubnet: Scalars['string']['output'];
  /** Value of the Fragment Offset header field in the IPv4 or IPv6 packet */
  ipFragmentOffset: Scalars['uint16']['output'];
  /** Length of the IPv4 or IPv6 packet header, in bytes */
  ipHeaderLength: Scalars['uint16']['output'];
  /** Value of the More Fragments header field in the IPv4 or IPv6 packet */
  ipMoreFragments: Scalars['uint8']['output'];
  /** Value of the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocol: Scalars['uint8']['output'];
  /** Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocolName: Scalars['string']['output'];
  /** Value of the Source Address header field in the IPv4 or IPv6 packet */
  ipSourceAddress: Scalars['string']['output'];
  /** Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipSourceSubnet: Scalars['string']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes */
  ipTotalLength: Scalars['uint16']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated */
  ipTotalLengthBuckets: Scalars['uint16']['output'];
  /** Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet */
  ipTtl: Scalars['uint8']['output'];
  /**
   * Value of the TTL header field in the IPv4 packet or the Hop Limit header field
   * in the IPv6 packet, with the last digit truncated
   */
  ipTtlBuckets: Scalars['uint8']['output'];
  /** Value of the Checksum header field in the IPv4 packet */
  ipv4Checksum: Scalars['uint16']['output'];
  /** Value of the Don't Fragment header field in the IPv4 packet */
  ipv4DontFragment: Scalars['uint8']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv4 packet */
  ipv4Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv4 packet */
  ipv4Ecn: Scalars['uint8']['output'];
  /** Value of the Identification header field in the IPv4 packet */
  ipv4Identification: Scalars['uint16']['output'];
  /** List of Options numbers included in the IPv4 packet header */
  ipv4Options: Scalars['string']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv6 packet */
  ipv6Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv6 packet */
  ipv6Ecn: Scalars['uint8']['output'];
  /** List of Extension Header numbers included in the IPv6 packet header */
  ipv6ExtensionHeaders: Scalars['string']['output'];
  /** Value of the Flow Label header field in the IPv6 packet */
  ipv6FlowLabel: Scalars['uint32']['output'];
  /** Value of the Identification extension header field in the IPv6 packet */
  ipv6Identification: Scalars['uint32']['output'];
  /** IP lease tag associated with the packet */
  leaseTag: Scalars['string']['output'];
  /** Reason for applying a mitigation to the packet, if any */
  mitigationReason: Scalars['string']['output'];
  /** Whether the packet matched a local or global mitigation, if any (possible values: local, global) */
  mitigationScope: Scalars['string']['output'];
  /** The action that was taken on the packet (possible values: pass, drop) */
  outcome: Scalars['string']['output'];
  /** IP prefix tag associated with the packet */
  prefixTag: Scalars['string']['output'];
  /** State of the packet in the context of the protocol, if available */
  protocolState: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** ASN associated with the source IP of the packet, or 0 if there was no mapping available */
  sourceAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the source IP of the packet, if available */
  sourceAsnName: Scalars['string']['output'];
  /** Country where the source IP of the packet is located (ISO 3166-1 alpha-2) */
  sourceCountry: Scalars['string']['output'];
  /** Latitude and longitude where the source IP of the packet is located (Geohash encoding) */
  sourceGeohash: Scalars['string']['output'];
  /** Value of the Source Port header field in the TCP or UDP packet */
  sourcePort: Scalars['uint16']['output'];
  /** Value of the Acknowledgement Number header field in the TCP packet */
  tcpAcknowledgementNumber: Scalars['uint32']['output'];
  /** Value of the Checkusm header field in the TCP packet */
  tcpChecksum: Scalars['uint16']['output'];
  /** Value of the Data Offset header field in the TCP packet */
  tcpDataOffset: Scalars['uint16']['output'];
  /** Value of the Flags header field in the TCP packet */
  tcpFlags: Scalars['uint8']['output'];
  /** Human-readable string representation of the Flags header field in the TCP packet */
  tcpFlagsString: Scalars['string']['output'];
  /** Value of the MSS option header field in the TCP packet */
  tcpMss: Scalars['uint16']['output'];
  /** List of Options numbers included in the TCP packet header */
  tcpOptions: Scalars['string']['output'];
  /** Value of the SACK Blocks option header field in the TCP packet */
  tcpSackBlocks: Scalars['string']['output'];
  /** Value of the SACK Permitted option header field in the TCP packet */
  tcpSackPermitted: Scalars['uint8']['output'];
  /** Value of the Sequence Number header field in the TCP packet */
  tcpSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Timestamp Echo Reply option header field in the TCP packet */
  tcpTimestampEcr: Scalars['uint32']['output'];
  /** Value of the Timestamp option header field in the TCP packet */
  tcpTimestampValue: Scalars['uint32']['output'];
  /** Value of the Urgent Pointer header field in the TCP packet */
  tcpUrgentPointer: Scalars['uint16']['output'];
  /** Value of the Window Scale option header field in the TCP packet */
  tcpWindowScale: Scalars['uint16']['output'];
  /** Value of the Window Size header field in the TCP packet */
  tcpWindowSize: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the UDP packet */
  udpChecksum: Scalars['uint16']['output'];
  /** Value of the Payload Length header field in the UDP packet */
  udpPayloadLength: Scalars['uint16']['output'];
  /** The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop) */
  verdict: Scalars['string']['output'];
};

export type AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  applicationTag?: InputMaybe<Scalars['string']['input']>;
  applicationTag_geq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_gt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_leq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_like?: InputMaybe<Scalars['string']['input']>;
  applicationTag_lt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_neq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCity?: InputMaybe<Scalars['string']['input']>;
  coloCity_geq?: InputMaybe<Scalars['string']['input']>;
  coloCity_gt?: InputMaybe<Scalars['string']['input']>;
  coloCity_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_leq?: InputMaybe<Scalars['string']['input']>;
  coloCity_like?: InputMaybe<Scalars['string']['input']>;
  coloCity_lt?: InputMaybe<Scalars['string']['input']>;
  coloCity_neq?: InputMaybe<Scalars['string']['input']>;
  coloCity_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCountry?: InputMaybe<Scalars['string']['input']>;
  coloCountry_geq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_gt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_leq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_like?: InputMaybe<Scalars['string']['input']>;
  coloCountry_lt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_neq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  coloGeohash?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_like?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  coloName?: InputMaybe<Scalars['string']['input']>;
  coloName_geq?: InputMaybe<Scalars['string']['input']>;
  coloName_gt?: InputMaybe<Scalars['string']['input']>;
  coloName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_leq?: InputMaybe<Scalars['string']['input']>;
  coloName_like?: InputMaybe<Scalars['string']['input']>;
  coloName_lt?: InputMaybe<Scalars['string']['input']>;
  coloName_neq?: InputMaybe<Scalars['string']['input']>;
  coloName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationAsn?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsnName?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_like?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationCountry?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_geq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_gt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_leq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_like?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_lt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_neq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_like?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  direction?: InputMaybe<Scalars['string']['input']>;
  direction_geq?: InputMaybe<Scalars['string']['input']>;
  direction_gt?: InputMaybe<Scalars['string']['input']>;
  direction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_leq?: InputMaybe<Scalars['string']['input']>;
  direction_like?: InputMaybe<Scalars['string']['input']>;
  direction_lt?: InputMaybe<Scalars['string']['input']>;
  direction_neq?: InputMaybe<Scalars['string']['input']>;
  direction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_notlike?: InputMaybe<Scalars['string']['input']>;
  ethertype?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ethertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greKey?: InputMaybe<Scalars['uint32']['input']>;
  greKey_geq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_gt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greKey_leq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_lt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_neq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greVersion?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  greVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpCode?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpCode_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpType?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpType_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipDestinationAddress?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipFragmentOffset?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipFragmentOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipMoreFragments?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_in?: InputMaybe<Scalars['bytes']['input']>;
  ipMoreFragments_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocolName?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_geq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_gt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_leq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_like?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_lt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_neq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipProtocol_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_in?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipSourceAddress?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipTotalLength?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLengthBuckets_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTtl?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtlBuckets_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Checksum?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Checksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4DontFragment?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4DontFragment_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Identification?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Identification_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Options?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_geq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_gt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_leq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_like?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_lt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_neq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6ExtensionHeaders?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_geq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_gt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_leq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_like?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_lt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_neq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6FlowLabel?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6FlowLabel_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  leaseTag?: InputMaybe<Scalars['string']['input']>;
  leaseTag_geq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_gt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_leq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_like?: InputMaybe<Scalars['string']['input']>;
  leaseTag_lt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_neq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationReason?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationReason_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_like?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationReason_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationReason_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationScope?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationScope_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_like?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationScope_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationScope_notlike?: InputMaybe<Scalars['string']['input']>;
  outcome?: InputMaybe<Scalars['string']['input']>;
  outcome_geq?: InputMaybe<Scalars['string']['input']>;
  outcome_gt?: InputMaybe<Scalars['string']['input']>;
  outcome_in?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_leq?: InputMaybe<Scalars['string']['input']>;
  outcome_like?: InputMaybe<Scalars['string']['input']>;
  outcome_lt?: InputMaybe<Scalars['string']['input']>;
  outcome_neq?: InputMaybe<Scalars['string']['input']>;
  outcome_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_notlike?: InputMaybe<Scalars['string']['input']>;
  prefixTag?: InputMaybe<Scalars['string']['input']>;
  prefixTag_geq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_gt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_leq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_like?: InputMaybe<Scalars['string']['input']>;
  prefixTag_lt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_neq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_notlike?: InputMaybe<Scalars['string']['input']>;
  protocolState?: InputMaybe<Scalars['string']['input']>;
  protocolState_geq?: InputMaybe<Scalars['string']['input']>;
  protocolState_gt?: InputMaybe<Scalars['string']['input']>;
  protocolState_in?: InputMaybe<Array<Scalars['string']['input']>>;
  protocolState_leq?: InputMaybe<Scalars['string']['input']>;
  protocolState_like?: InputMaybe<Scalars['string']['input']>;
  protocolState_lt?: InputMaybe<Scalars['string']['input']>;
  protocolState_neq?: InputMaybe<Scalars['string']['input']>;
  protocolState_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  protocolState_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsnName?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_like?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceCountry?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_geq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_gt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_leq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_like?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_lt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_neq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_like?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpAcknowledgementNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpAcknowledgementNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlagsString?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_geq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_gt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_leq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_like?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_lt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_neq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpMss?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpMss_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpOptions?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_geq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_gt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_leq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_like?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_lt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_neq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_geq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_gt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_leq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_like?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_lt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_neq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackPermitted?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpSackPermitted_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpUrgentPointer?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpUrgentPointer_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  verdict?: InputMaybe<Scalars['string']['input']>;
  verdict_geq?: InputMaybe<Scalars['string']['input']>;
  verdict_gt?: InputMaybe<Scalars['string']['input']>;
  verdict_in?: InputMaybe<Array<Scalars['string']['input']>>;
  verdict_leq?: InputMaybe<Scalars['string']['input']>;
  verdict_like?: InputMaybe<Scalars['string']['input']>;
  verdict_lt?: InputMaybe<Scalars['string']['input']>;
  verdict_neq?: InputMaybe<Scalars['string']['input']>;
  verdict_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  verdict_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsOrderBy {
  /** applicationTag ascending */
  ApplicationTagAsc = 'applicationTag_ASC',
  /** applicationTag descending */
  ApplicationTagDesc = 'applicationTag_DESC',
  /** avg(bitRateDay) ascending */
  AvgBitRateDayAsc = 'avg_bitRateDay_ASC',
  /** avg(bitRateDay) descending */
  AvgBitRateDayDesc = 'avg_bitRateDay_DESC',
  /** avg(bitRateFifteenMinutes) ascending */
  AvgBitRateFifteenMinutesAsc = 'avg_bitRateFifteenMinutes_ASC',
  /** avg(bitRateFifteenMinutes) descending */
  AvgBitRateFifteenMinutesDesc = 'avg_bitRateFifteenMinutes_DESC',
  /** avg(bitRateFiveMinutes) ascending */
  AvgBitRateFiveMinutesAsc = 'avg_bitRateFiveMinutes_ASC',
  /** avg(bitRateFiveMinutes) descending */
  AvgBitRateFiveMinutesDesc = 'avg_bitRateFiveMinutes_DESC',
  /** avg(bitRateHour) ascending */
  AvgBitRateHourAsc = 'avg_bitRateHour_ASC',
  /** avg(bitRateHour) descending */
  AvgBitRateHourDesc = 'avg_bitRateHour_DESC',
  /** avg(bitRateMinute) ascending */
  AvgBitRateMinuteAsc = 'avg_bitRateMinute_ASC',
  /** avg(bitRateMinute) descending */
  AvgBitRateMinuteDesc = 'avg_bitRateMinute_DESC',
  /** avg(bitRateTenSeconds) ascending */
  AvgBitRateTenSecondsAsc = 'avg_bitRateTenSeconds_ASC',
  /** avg(bitRateTenSeconds) descending */
  AvgBitRateTenSecondsDesc = 'avg_bitRateTenSeconds_DESC',
  /** avg(bitRate) ascending */
  AvgBitRateAsc = 'avg_bitRate_ASC',
  /** avg(bitRate) descending */
  AvgBitRateDesc = 'avg_bitRate_DESC',
  /** avg(packetRateDay) ascending */
  AvgPacketRateDayAsc = 'avg_packetRateDay_ASC',
  /** avg(packetRateDay) descending */
  AvgPacketRateDayDesc = 'avg_packetRateDay_DESC',
  /** avg(packetRateFifteenMinutes) ascending */
  AvgPacketRateFifteenMinutesAsc = 'avg_packetRateFifteenMinutes_ASC',
  /** avg(packetRateFifteenMinutes) descending */
  AvgPacketRateFifteenMinutesDesc = 'avg_packetRateFifteenMinutes_DESC',
  /** avg(packetRateFiveMinutes) ascending */
  AvgPacketRateFiveMinutesAsc = 'avg_packetRateFiveMinutes_ASC',
  /** avg(packetRateFiveMinutes) descending */
  AvgPacketRateFiveMinutesDesc = 'avg_packetRateFiveMinutes_DESC',
  /** avg(packetRateHour) ascending */
  AvgPacketRateHourAsc = 'avg_packetRateHour_ASC',
  /** avg(packetRateHour) descending */
  AvgPacketRateHourDesc = 'avg_packetRateHour_DESC',
  /** avg(packetRateMinute) ascending */
  AvgPacketRateMinuteAsc = 'avg_packetRateMinute_ASC',
  /** avg(packetRateMinute) descending */
  AvgPacketRateMinuteDesc = 'avg_packetRateMinute_DESC',
  /** avg(packetRateTenSeconds) ascending */
  AvgPacketRateTenSecondsAsc = 'avg_packetRateTenSeconds_ASC',
  /** avg(packetRateTenSeconds) descending */
  AvgPacketRateTenSecondsDesc = 'avg_packetRateTenSeconds_DESC',
  /** avg(packetRate) ascending */
  AvgPacketRateAsc = 'avg_packetRate_ASC',
  /** avg(packetRate) descending */
  AvgPacketRateDesc = 'avg_packetRate_DESC',
  /** coloCity ascending */
  ColoCityAsc = 'coloCity_ASC',
  /** coloCity descending */
  ColoCityDesc = 'coloCity_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** coloCountry ascending */
  ColoCountryAsc = 'coloCountry_ASC',
  /** coloCountry descending */
  ColoCountryDesc = 'coloCountry_DESC',
  /** coloGeohash ascending */
  ColoGeohashAsc = 'coloGeohash_ASC',
  /** coloGeohash descending */
  ColoGeohashDesc = 'coloGeohash_DESC',
  /** coloName ascending */
  ColoNameAsc = 'coloName_ASC',
  /** coloName descending */
  ColoNameDesc = 'coloName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetimeTenSeconds ascending */
  DatetimeTenSecondsAsc = 'datetimeTenSeconds_ASC',
  /** datetimeTenSeconds descending */
  DatetimeTenSecondsDesc = 'datetimeTenSeconds_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationAsnName ascending */
  DestinationAsnNameAsc = 'destinationAsnName_ASC',
  /** destinationAsnName descending */
  DestinationAsnNameDesc = 'destinationAsnName_DESC',
  /** destinationAsn ascending */
  DestinationAsnAsc = 'destinationAsn_ASC',
  /** destinationAsn descending */
  DestinationAsnDesc = 'destinationAsn_DESC',
  /** destinationCountry ascending */
  DestinationCountryAsc = 'destinationCountry_ASC',
  /** destinationCountry descending */
  DestinationCountryDesc = 'destinationCountry_DESC',
  /** destinationGeohash ascending */
  DestinationGeohashAsc = 'destinationGeohash_ASC',
  /** destinationGeohash descending */
  DestinationGeohashDesc = 'destinationGeohash_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** direction ascending */
  DirectionAsc = 'direction_ASC',
  /** direction descending */
  DirectionDesc = 'direction_DESC',
  /** ethertype ascending */
  EthertypeAsc = 'ethertype_ASC',
  /** ethertype descending */
  EthertypeDesc = 'ethertype_DESC',
  /** greChecksum ascending */
  GreChecksumAsc = 'greChecksum_ASC',
  /** greChecksum descending */
  GreChecksumDesc = 'greChecksum_DESC',
  /** greEthertype ascending */
  GreEthertypeAsc = 'greEthertype_ASC',
  /** greEthertype descending */
  GreEthertypeDesc = 'greEthertype_DESC',
  /** greHeaderLength ascending */
  GreHeaderLengthAsc = 'greHeaderLength_ASC',
  /** greHeaderLength descending */
  GreHeaderLengthDesc = 'greHeaderLength_DESC',
  /** greKey ascending */
  GreKeyAsc = 'greKey_ASC',
  /** greKey descending */
  GreKeyDesc = 'greKey_DESC',
  /** greSequenceNumber ascending */
  GreSequenceNumberAsc = 'greSequenceNumber_ASC',
  /** greSequenceNumber descending */
  GreSequenceNumberDesc = 'greSequenceNumber_DESC',
  /** greVersion ascending */
  GreVersionAsc = 'greVersion_ASC',
  /** greVersion descending */
  GreVersionDesc = 'greVersion_DESC',
  /** icmpChecksum ascending */
  IcmpChecksumAsc = 'icmpChecksum_ASC',
  /** icmpChecksum descending */
  IcmpChecksumDesc = 'icmpChecksum_DESC',
  /** icmpCode ascending */
  IcmpCodeAsc = 'icmpCode_ASC',
  /** icmpCode descending */
  IcmpCodeDesc = 'icmpCode_DESC',
  /** icmpType ascending */
  IcmpTypeAsc = 'icmpType_ASC',
  /** icmpType descending */
  IcmpTypeDesc = 'icmpType_DESC',
  /** ipDestinationAddress ascending */
  IpDestinationAddressAsc = 'ipDestinationAddress_ASC',
  /** ipDestinationAddress descending */
  IpDestinationAddressDesc = 'ipDestinationAddress_DESC',
  /** ipDestinationSubnet ascending */
  IpDestinationSubnetAsc = 'ipDestinationSubnet_ASC',
  /** ipDestinationSubnet descending */
  IpDestinationSubnetDesc = 'ipDestinationSubnet_DESC',
  /** ipFragmentOffset ascending */
  IpFragmentOffsetAsc = 'ipFragmentOffset_ASC',
  /** ipFragmentOffset descending */
  IpFragmentOffsetDesc = 'ipFragmentOffset_DESC',
  /** ipHeaderLength ascending */
  IpHeaderLengthAsc = 'ipHeaderLength_ASC',
  /** ipHeaderLength descending */
  IpHeaderLengthDesc = 'ipHeaderLength_DESC',
  /** ipMoreFragments ascending */
  IpMoreFragmentsAsc = 'ipMoreFragments_ASC',
  /** ipMoreFragments descending */
  IpMoreFragmentsDesc = 'ipMoreFragments_DESC',
  /** ipProtocolName ascending */
  IpProtocolNameAsc = 'ipProtocolName_ASC',
  /** ipProtocolName descending */
  IpProtocolNameDesc = 'ipProtocolName_DESC',
  /** ipProtocol ascending */
  IpProtocolAsc = 'ipProtocol_ASC',
  /** ipProtocol descending */
  IpProtocolDesc = 'ipProtocol_DESC',
  /** ipSourceAddress ascending */
  IpSourceAddressAsc = 'ipSourceAddress_ASC',
  /** ipSourceAddress descending */
  IpSourceAddressDesc = 'ipSourceAddress_DESC',
  /** ipSourceSubnet ascending */
  IpSourceSubnetAsc = 'ipSourceSubnet_ASC',
  /** ipSourceSubnet descending */
  IpSourceSubnetDesc = 'ipSourceSubnet_DESC',
  /** ipTotalLengthBuckets ascending */
  IpTotalLengthBucketsAsc = 'ipTotalLengthBuckets_ASC',
  /** ipTotalLengthBuckets descending */
  IpTotalLengthBucketsDesc = 'ipTotalLengthBuckets_DESC',
  /** ipTotalLength ascending */
  IpTotalLengthAsc = 'ipTotalLength_ASC',
  /** ipTotalLength descending */
  IpTotalLengthDesc = 'ipTotalLength_DESC',
  /** ipTtlBuckets ascending */
  IpTtlBucketsAsc = 'ipTtlBuckets_ASC',
  /** ipTtlBuckets descending */
  IpTtlBucketsDesc = 'ipTtlBuckets_DESC',
  /** ipTtl ascending */
  IpTtlAsc = 'ipTtl_ASC',
  /** ipTtl descending */
  IpTtlDesc = 'ipTtl_DESC',
  /** ipv4Checksum ascending */
  Ipv4ChecksumAsc = 'ipv4Checksum_ASC',
  /** ipv4Checksum descending */
  Ipv4ChecksumDesc = 'ipv4Checksum_DESC',
  /** ipv4DontFragment ascending */
  Ipv4DontFragmentAsc = 'ipv4DontFragment_ASC',
  /** ipv4DontFragment descending */
  Ipv4DontFragmentDesc = 'ipv4DontFragment_DESC',
  /** ipv4Dscp ascending */
  Ipv4DscpAsc = 'ipv4Dscp_ASC',
  /** ipv4Dscp descending */
  Ipv4DscpDesc = 'ipv4Dscp_DESC',
  /** ipv4Ecn ascending */
  Ipv4EcnAsc = 'ipv4Ecn_ASC',
  /** ipv4Ecn descending */
  Ipv4EcnDesc = 'ipv4Ecn_DESC',
  /** ipv4Identification ascending */
  Ipv4IdentificationAsc = 'ipv4Identification_ASC',
  /** ipv4Identification descending */
  Ipv4IdentificationDesc = 'ipv4Identification_DESC',
  /** ipv4Options ascending */
  Ipv4OptionsAsc = 'ipv4Options_ASC',
  /** ipv4Options descending */
  Ipv4OptionsDesc = 'ipv4Options_DESC',
  /** ipv6Dscp ascending */
  Ipv6DscpAsc = 'ipv6Dscp_ASC',
  /** ipv6Dscp descending */
  Ipv6DscpDesc = 'ipv6Dscp_DESC',
  /** ipv6Ecn ascending */
  Ipv6EcnAsc = 'ipv6Ecn_ASC',
  /** ipv6Ecn descending */
  Ipv6EcnDesc = 'ipv6Ecn_DESC',
  /** ipv6ExtensionHeaders ascending */
  Ipv6ExtensionHeadersAsc = 'ipv6ExtensionHeaders_ASC',
  /** ipv6ExtensionHeaders descending */
  Ipv6ExtensionHeadersDesc = 'ipv6ExtensionHeaders_DESC',
  /** ipv6FlowLabel ascending */
  Ipv6FlowLabelAsc = 'ipv6FlowLabel_ASC',
  /** ipv6FlowLabel descending */
  Ipv6FlowLabelDesc = 'ipv6FlowLabel_DESC',
  /** ipv6Identification ascending */
  Ipv6IdentificationAsc = 'ipv6Identification_ASC',
  /** ipv6Identification descending */
  Ipv6IdentificationDesc = 'ipv6Identification_DESC',
  /** leaseTag ascending */
  LeaseTagAsc = 'leaseTag_ASC',
  /** leaseTag descending */
  LeaseTagDesc = 'leaseTag_DESC',
  /** mitigationReason ascending */
  MitigationReasonAsc = 'mitigationReason_ASC',
  /** mitigationReason descending */
  MitigationReasonDesc = 'mitigationReason_DESC',
  /** mitigationScope ascending */
  MitigationScopeAsc = 'mitigationScope_ASC',
  /** mitigationScope descending */
  MitigationScopeDesc = 'mitigationScope_DESC',
  /** outcome ascending */
  OutcomeAsc = 'outcome_ASC',
  /** outcome descending */
  OutcomeDesc = 'outcome_DESC',
  /** prefixTag ascending */
  PrefixTagAsc = 'prefixTag_ASC',
  /** prefixTag descending */
  PrefixTagDesc = 'prefixTag_DESC',
  /** protocolState ascending */
  ProtocolStateAsc = 'protocolState_ASC',
  /** protocolState descending */
  ProtocolStateDesc = 'protocolState_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sourceAsnName ascending */
  SourceAsnNameAsc = 'sourceAsnName_ASC',
  /** sourceAsnName descending */
  SourceAsnNameDesc = 'sourceAsnName_DESC',
  /** sourceAsn ascending */
  SourceAsnAsc = 'sourceAsn_ASC',
  /** sourceAsn descending */
  SourceAsnDesc = 'sourceAsn_DESC',
  /** sourceCountry ascending */
  SourceCountryAsc = 'sourceCountry_ASC',
  /** sourceCountry descending */
  SourceCountryDesc = 'sourceCountry_DESC',
  /** sourceGeohash ascending */
  SourceGeohashAsc = 'sourceGeohash_ASC',
  /** sourceGeohash descending */
  SourceGeohashDesc = 'sourceGeohash_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** sum(bits) ascending */
  SumBitsAsc = 'sum_bits_ASC',
  /** sum(bits) descending */
  SumBitsDesc = 'sum_bits_DESC',
  /** sum(packets) ascending */
  SumPacketsAsc = 'sum_packets_ASC',
  /** sum(packets) descending */
  SumPacketsDesc = 'sum_packets_DESC',
  /** system ascending */
  SystemAsc = 'system_ASC',
  /** system descending */
  SystemDesc = 'system_DESC',
  /** tcpAcknowledgementNumber ascending */
  TcpAcknowledgementNumberAsc = 'tcpAcknowledgementNumber_ASC',
  /** tcpAcknowledgementNumber descending */
  TcpAcknowledgementNumberDesc = 'tcpAcknowledgementNumber_DESC',
  /** tcpChecksum ascending */
  TcpChecksumAsc = 'tcpChecksum_ASC',
  /** tcpChecksum descending */
  TcpChecksumDesc = 'tcpChecksum_DESC',
  /** tcpDataOffset ascending */
  TcpDataOffsetAsc = 'tcpDataOffset_ASC',
  /** tcpDataOffset descending */
  TcpDataOffsetDesc = 'tcpDataOffset_DESC',
  /** tcpFlagsString ascending */
  TcpFlagsStringAsc = 'tcpFlagsString_ASC',
  /** tcpFlagsString descending */
  TcpFlagsStringDesc = 'tcpFlagsString_DESC',
  /** tcpFlags ascending */
  TcpFlagsAsc = 'tcpFlags_ASC',
  /** tcpFlags descending */
  TcpFlagsDesc = 'tcpFlags_DESC',
  /** tcpMss ascending */
  TcpMssAsc = 'tcpMss_ASC',
  /** tcpMss descending */
  TcpMssDesc = 'tcpMss_DESC',
  /** tcpOptions ascending */
  TcpOptionsAsc = 'tcpOptions_ASC',
  /** tcpOptions descending */
  TcpOptionsDesc = 'tcpOptions_DESC',
  /** tcpSackBlocks ascending */
  TcpSackBlocksAsc = 'tcpSackBlocks_ASC',
  /** tcpSackBlocks descending */
  TcpSackBlocksDesc = 'tcpSackBlocks_DESC',
  /** tcpSackPermitted ascending */
  TcpSackPermittedAsc = 'tcpSackPermitted_ASC',
  /** tcpSackPermitted descending */
  TcpSackPermittedDesc = 'tcpSackPermitted_DESC',
  /** tcpSequenceNumber ascending */
  TcpSequenceNumberAsc = 'tcpSequenceNumber_ASC',
  /** tcpSequenceNumber descending */
  TcpSequenceNumberDesc = 'tcpSequenceNumber_DESC',
  /** tcpTimestampEcr ascending */
  TcpTimestampEcrAsc = 'tcpTimestampEcr_ASC',
  /** tcpTimestampEcr descending */
  TcpTimestampEcrDesc = 'tcpTimestampEcr_DESC',
  /** tcpTimestampValue ascending */
  TcpTimestampValueAsc = 'tcpTimestampValue_ASC',
  /** tcpTimestampValue descending */
  TcpTimestampValueDesc = 'tcpTimestampValue_DESC',
  /** tcpUrgentPointer ascending */
  TcpUrgentPointerAsc = 'tcpUrgentPointer_ASC',
  /** tcpUrgentPointer descending */
  TcpUrgentPointerDesc = 'tcpUrgentPointer_DESC',
  /** tcpWindowScale ascending */
  TcpWindowScaleAsc = 'tcpWindowScale_ASC',
  /** tcpWindowScale descending */
  TcpWindowScaleDesc = 'tcpWindowScale_DESC',
  /** tcpWindowSize ascending */
  TcpWindowSizeAsc = 'tcpWindowSize_ASC',
  /** tcpWindowSize descending */
  TcpWindowSizeDesc = 'tcpWindowSize_DESC',
  /** udpChecksum ascending */
  UdpChecksumAsc = 'udpChecksum_ASC',
  /** udpChecksum descending */
  UdpChecksumDesc = 'udpChecksum_DESC',
  /** udpPayloadLength ascending */
  UdpPayloadLengthAsc = 'udpPayloadLength_ASC',
  /** udpPayloadLength descending */
  UdpPayloadLengthDesc = 'udpPayloadLength_DESC',
  /** verdict ascending */
  VerdictAsc = 'verdict_ASC',
  /** verdict descending */
  VerdictDesc = 'verdict_DESC'
}

export type AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsSum = {
  __typename?: 'AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsSum';
  /** Sum of bits received */
  bits: Scalars['uint64']['output'];
  /** Sum of packets received */
  packets: Scalars['uint64']['output'];
};

/** Aggregated metrics about downstream (client to edge) L4 Gateway Sessions. Metrics are reported on TCP or UDP session close */
export type AccountGatewayL4DownstreamSessionsAdaptiveGroups = {
  __typename?: 'AccountGatewayL4DownstreamSessionsAdaptiveGroups';
  /** The number of downstream sessions */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountGatewayL4DownstreamSessionsAdaptiveGroupsDimensions>;
  quantiles?: Maybe<AccountGatewayL4DownstreamSessionsAdaptiveGroupsQuantiles>;
  sum?: Maybe<AccountGatewayL4DownstreamSessionsAdaptiveGroupsSum>;
};

export type AccountGatewayL4DownstreamSessionsAdaptiveGroupsDimensions = {
  __typename?: 'AccountGatewayL4DownstreamSessionsAdaptiveGroupsDimensions';
  /** IATA Airport code that represents the city in which a Cloudflare data center (colo) is located */
  coloCode: Scalars['string']['output'];
  /** ISO 3166-1 alpha-2 code that represents the country in which a Cloudflare data center (colo) is located */
  coloCountry: Scalars['string']['output'];
  /** Start timestamp of this session, truncated to date */
  date: Scalars['Date']['output'];
  /** Start timestamp of this session, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Start timestamp of this session, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Start timestamp of this session, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Start timestamp of this session, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** QUIC specific error code. Possible values are https://www.iana.org/assignments/quic/quic.xhtml#quic-transport-error-codes */
  quicErrorCode: Scalars['uint64']['output'];
  /** Last Round Trip Time estimation for this session in microseconds */
  rttUs: Scalars['int64']['output'];
  /** Identifier for this session */
  sessionId: Scalars['string']['output'];
  /** IP address of the client making this session */
  sourceIP: Scalars['string']['output'];
  /**
   * Client token authentication status. Possible values are success | failed with
   * invalid token and upto date token key ID | failed with invalid token due to
   * outdated/missing token key ID | failed due to reused token
   */
  tokenAuthStatus: Scalars['string']['output'];
  /** Broad location assigned to client in this session */
  tokenSigningRegion: Scalars['string']['output'];
  /** Transport protocol used for this session. Possible values are tcp | quic | udp */
  transport: Scalars['string']['output'];
  /** Time taken for TCP/TLS or QUIC handshake in microsecond */
  transportHandshakeDurationUs: Scalars['int64']['output'];
  /** Transport Status. Possible values are unknown | success | failure */
  transportStatus: Scalars['string']['output'];
};

export type AccountGatewayL4DownstreamSessionsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountGatewayL4DownstreamSessionsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountGatewayL4DownstreamSessionsAdaptiveGroupsFilter_InputObject>>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCountry?: InputMaybe<Scalars['string']['input']>;
  coloCountry_geq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_gt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_leq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_like?: InputMaybe<Scalars['string']['input']>;
  coloCountry_lt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_neq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  quicErrorCode?: InputMaybe<Scalars['uint64']['input']>;
  quicErrorCode_geq?: InputMaybe<Scalars['uint64']['input']>;
  quicErrorCode_gt?: InputMaybe<Scalars['uint64']['input']>;
  quicErrorCode_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  quicErrorCode_leq?: InputMaybe<Scalars['uint64']['input']>;
  quicErrorCode_lt?: InputMaybe<Scalars['uint64']['input']>;
  quicErrorCode_neq?: InputMaybe<Scalars['uint64']['input']>;
  quicErrorCode_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  rttUs?: InputMaybe<Scalars['int64']['input']>;
  rttUs_geq?: InputMaybe<Scalars['int64']['input']>;
  rttUs_gt?: InputMaybe<Scalars['int64']['input']>;
  rttUs_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  rttUs_leq?: InputMaybe<Scalars['int64']['input']>;
  rttUs_lt?: InputMaybe<Scalars['int64']['input']>;
  rttUs_neq?: InputMaybe<Scalars['int64']['input']>;
  rttUs_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  sessionId?: InputMaybe<Scalars['string']['input']>;
  sessionId_geq?: InputMaybe<Scalars['string']['input']>;
  sessionId_gt?: InputMaybe<Scalars['string']['input']>;
  sessionId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sessionId_leq?: InputMaybe<Scalars['string']['input']>;
  sessionId_like?: InputMaybe<Scalars['string']['input']>;
  sessionId_lt?: InputMaybe<Scalars['string']['input']>;
  sessionId_neq?: InputMaybe<Scalars['string']['input']>;
  sessionId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sessionId_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceIP?: InputMaybe<Scalars['string']['input']>;
  sourceIP_geq?: InputMaybe<Scalars['string']['input']>;
  sourceIP_gt?: InputMaybe<Scalars['string']['input']>;
  sourceIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceIP_leq?: InputMaybe<Scalars['string']['input']>;
  sourceIP_like?: InputMaybe<Scalars['string']['input']>;
  sourceIP_lt?: InputMaybe<Scalars['string']['input']>;
  sourceIP_neq?: InputMaybe<Scalars['string']['input']>;
  sourceIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceIP_notlike?: InputMaybe<Scalars['string']['input']>;
  tokenAuthStatus?: InputMaybe<Scalars['string']['input']>;
  tokenAuthStatus_geq?: InputMaybe<Scalars['string']['input']>;
  tokenAuthStatus_gt?: InputMaybe<Scalars['string']['input']>;
  tokenAuthStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tokenAuthStatus_leq?: InputMaybe<Scalars['string']['input']>;
  tokenAuthStatus_like?: InputMaybe<Scalars['string']['input']>;
  tokenAuthStatus_lt?: InputMaybe<Scalars['string']['input']>;
  tokenAuthStatus_neq?: InputMaybe<Scalars['string']['input']>;
  tokenAuthStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tokenAuthStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_geq?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_gt?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tokenSigningRegion_leq?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_like?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_lt?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_neq?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tokenSigningRegion_notlike?: InputMaybe<Scalars['string']['input']>;
  transport?: InputMaybe<Scalars['string']['input']>;
  transportHandshakeDurationUs?: InputMaybe<Scalars['int64']['input']>;
  transportHandshakeDurationUs_geq?: InputMaybe<Scalars['int64']['input']>;
  transportHandshakeDurationUs_gt?: InputMaybe<Scalars['int64']['input']>;
  transportHandshakeDurationUs_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  transportHandshakeDurationUs_leq?: InputMaybe<Scalars['int64']['input']>;
  transportHandshakeDurationUs_lt?: InputMaybe<Scalars['int64']['input']>;
  transportHandshakeDurationUs_neq?: InputMaybe<Scalars['int64']['input']>;
  transportHandshakeDurationUs_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  transportStatus?: InputMaybe<Scalars['string']['input']>;
  transportStatus_geq?: InputMaybe<Scalars['string']['input']>;
  transportStatus_gt?: InputMaybe<Scalars['string']['input']>;
  transportStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  transportStatus_leq?: InputMaybe<Scalars['string']['input']>;
  transportStatus_like?: InputMaybe<Scalars['string']['input']>;
  transportStatus_lt?: InputMaybe<Scalars['string']['input']>;
  transportStatus_neq?: InputMaybe<Scalars['string']['input']>;
  transportStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  transportStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  transport_geq?: InputMaybe<Scalars['string']['input']>;
  transport_gt?: InputMaybe<Scalars['string']['input']>;
  transport_in?: InputMaybe<Array<Scalars['string']['input']>>;
  transport_leq?: InputMaybe<Scalars['string']['input']>;
  transport_like?: InputMaybe<Scalars['string']['input']>;
  transport_lt?: InputMaybe<Scalars['string']['input']>;
  transport_neq?: InputMaybe<Scalars['string']['input']>;
  transport_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  transport_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountGatewayL4DownstreamSessionsAdaptiveGroupsOrderBy {
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** coloCountry ascending */
  ColoCountryAsc = 'coloCountry_ASC',
  /** coloCountry descending */
  ColoCountryDesc = 'coloCountry_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** quantiles(tokenAuthDurationUsP50) ascending */
  QuantilesTokenAuthDurationUsP50Asc = 'quantiles_tokenAuthDurationUsP50_ASC',
  /** quantiles(tokenAuthDurationUsP50) descending */
  QuantilesTokenAuthDurationUsP50Desc = 'quantiles_tokenAuthDurationUsP50_DESC',
  /** quantiles(transportHandshakeDurationUsP50) ascending */
  QuantilesTransportHandshakeDurationUsP50Asc = 'quantiles_transportHandshakeDurationUsP50_ASC',
  /** quantiles(transportHandshakeDurationUsP50) descending */
  QuantilesTransportHandshakeDurationUsP50Desc = 'quantiles_transportHandshakeDurationUsP50_DESC',
  /** quicErrorCode ascending */
  QuicErrorCodeAsc = 'quicErrorCode_ASC',
  /** quicErrorCode descending */
  QuicErrorCodeDesc = 'quicErrorCode_DESC',
  /** rttUs ascending */
  RttUsAsc = 'rttUs_ASC',
  /** rttUs descending */
  RttUsDesc = 'rttUs_DESC',
  /** sessionId ascending */
  SessionIdAsc = 'sessionId_ASC',
  /** sessionId descending */
  SessionIdDesc = 'sessionId_DESC',
  /** sourceIP ascending */
  SourceIpAsc = 'sourceIP_ASC',
  /** sourceIP descending */
  SourceIpDesc = 'sourceIP_DESC',
  /** sum(bytesRecvd) ascending */
  SumBytesRecvdAsc = 'sum_bytesRecvd_ASC',
  /** sum(bytesRecvd) descending */
  SumBytesRecvdDesc = 'sum_bytesRecvd_DESC',
  /** sum(bytesSent) ascending */
  SumBytesSentAsc = 'sum_bytesSent_ASC',
  /** sum(bytesSent) descending */
  SumBytesSentDesc = 'sum_bytesSent_DESC',
  /** sum(clientBytesRetransmitted) ascending */
  SumClientBytesRetransmittedAsc = 'sum_clientBytesRetransmitted_ASC',
  /** sum(clientBytesRetransmitted) descending */
  SumClientBytesRetransmittedDesc = 'sum_clientBytesRetransmitted_DESC',
  /** sum(packetsRecvd) ascending */
  SumPacketsRecvdAsc = 'sum_packetsRecvd_ASC',
  /** sum(packetsRecvd) descending */
  SumPacketsRecvdDesc = 'sum_packetsRecvd_DESC',
  /** sum(packetsSent) ascending */
  SumPacketsSentAsc = 'sum_packetsSent_ASC',
  /** sum(packetsSent) descending */
  SumPacketsSentDesc = 'sum_packetsSent_DESC',
  /** sum(tokenAuthDurationUs) ascending */
  SumTokenAuthDurationUsAsc = 'sum_tokenAuthDurationUs_ASC',
  /** sum(tokenAuthDurationUs) descending */
  SumTokenAuthDurationUsDesc = 'sum_tokenAuthDurationUs_DESC',
  /** tokenAuthStatus ascending */
  TokenAuthStatusAsc = 'tokenAuthStatus_ASC',
  /** tokenAuthStatus descending */
  TokenAuthStatusDesc = 'tokenAuthStatus_DESC',
  /** tokenSigningRegion ascending */
  TokenSigningRegionAsc = 'tokenSigningRegion_ASC',
  /** tokenSigningRegion descending */
  TokenSigningRegionDesc = 'tokenSigningRegion_DESC',
  /** transportHandshakeDurationUs ascending */
  TransportHandshakeDurationUsAsc = 'transportHandshakeDurationUs_ASC',
  /** transportHandshakeDurationUs descending */
  TransportHandshakeDurationUsDesc = 'transportHandshakeDurationUs_DESC',
  /** transportStatus ascending */
  TransportStatusAsc = 'transportStatus_ASC',
  /** transportStatus descending */
  TransportStatusDesc = 'transportStatus_DESC',
  /** transport ascending */
  TransportAsc = 'transport_ASC',
  /** transport descending */
  TransportDesc = 'transport_DESC'
}

export type AccountGatewayL4DownstreamSessionsAdaptiveGroupsQuantiles = {
  __typename?: 'AccountGatewayL4DownstreamSessionsAdaptiveGroupsQuantiles';
  /** Time taken for Client Token Authentication in microseconds */
  tokenAuthDurationUsP50: Scalars['int64']['output'];
  /** Time taken for TCP/TLS or QUIC handshake in microseconds */
  transportHandshakeDurationUsP50: Scalars['int64']['output'];
};

export type AccountGatewayL4DownstreamSessionsAdaptiveGroupsSum = {
  __typename?: 'AccountGatewayL4DownstreamSessionsAdaptiveGroupsSum';
  /** Total bytes received in this session */
  bytesRecvd: Scalars['uint64']['output'];
  /** Total bytes sent in this session */
  bytesSent: Scalars['uint64']['output'];
  /** Total bytes retransmitted by client in this session */
  clientBytesRetransmitted: Scalars['uint64']['output'];
  /** Total number of packets received in this session */
  packetsRecvd: Scalars['uint64']['output'];
  /** Total number of packets sent in this session */
  packetsSent: Scalars['uint64']['output'];
  /** Time taken for client token authentication in microseconds */
  tokenAuthDurationUs: Scalars['int64']['output'];
};

/** BETA - Aggregate counts of Gateway L4 sessions with adaptive sampling */
export type AccountGatewayL4SessionsAdaptiveGroups = {
  __typename?: 'AccountGatewayL4SessionsAdaptiveGroups';
  /** The number of Gateway L4 sessions */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountGatewayL4SessionsAdaptiveGroupsDimensions>;
};

export type AccountGatewayL4SessionsAdaptiveGroupsDimensions = {
  __typename?: 'AccountGatewayL4SessionsAdaptiveGroupsDimensions';
  /** action taken by gateway */
  action: Scalars['string']['output'];
  /** Colo Code of edge server */
  coloCode: Scalars['string']['output'];
  /** Datetime that the session was started */
  datetime: Scalars['Time']['output'];
  /** Datetime that the session was started truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** Datetime that the session was started truncated to minutes */
  datetimeMinute: Scalars['Time']['output'];
  /** The destination IP address for the session */
  destinationIp: Scalars['string']['output'];
  /** The destination port for the session */
  destinationPort: Scalars['uint16']['output'];
  /** The detected protocol of network traffic */
  detectedProtocol: Scalars['string']['output'];
  /** The device ID of the gateway user who initiated the session */
  deviceId: Scalars['string']['output'];
  /** The email address of the gateway user who initiated the session */
  email: Scalars['string']['output'];
  /** The SNI pulled from the session tls handshake, if present */
  sni: Scalars['string']['output'];
  /** Local LAN IP of the device. Only available when connected via a GRE/IPsec tunnel on-ramp */
  sourceInternalIp: Scalars['string']['output'];
  /** The source IP address for the session */
  sourceIp: Scalars['string']['output'];
  /** The source port for the session */
  sourcePort: Scalars['uint16']['output'];
  /** The transport protocol used in the session, one of (0, tcp) (1, quic) (2, udp) */
  transport: Scalars['uint16']['output'];
  /** The ID of the gateway user who initiated the session */
  userId: Scalars['string']['output'];
};

export type AccountGatewayL4SessionsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountGatewayL4SessionsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountGatewayL4SessionsAdaptiveGroupsFilter_InputObject>>;
  action?: InputMaybe<Scalars['string']['input']>;
  action_geq?: InputMaybe<Scalars['string']['input']>;
  action_gt?: InputMaybe<Scalars['string']['input']>;
  action_in?: InputMaybe<Array<Scalars['string']['input']>>;
  action_leq?: InputMaybe<Scalars['string']['input']>;
  action_like?: InputMaybe<Scalars['string']['input']>;
  action_lt?: InputMaybe<Scalars['string']['input']>;
  action_neq?: InputMaybe<Scalars['string']['input']>;
  action_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  action_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationIp?: InputMaybe<Scalars['string']['input']>;
  destinationIp_geq?: InputMaybe<Scalars['string']['input']>;
  destinationIp_gt?: InputMaybe<Scalars['string']['input']>;
  destinationIp_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationIp_leq?: InputMaybe<Scalars['string']['input']>;
  destinationIp_like?: InputMaybe<Scalars['string']['input']>;
  destinationIp_lt?: InputMaybe<Scalars['string']['input']>;
  destinationIp_neq?: InputMaybe<Scalars['string']['input']>;
  destinationIp_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationIp_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  detectedProtocol?: InputMaybe<Scalars['string']['input']>;
  detectedProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  detectedProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  detectedProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  detectedProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  detectedProtocol_like?: InputMaybe<Scalars['string']['input']>;
  detectedProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  detectedProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  detectedProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  detectedProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  deviceId?: InputMaybe<Scalars['string']['input']>;
  deviceId_geq?: InputMaybe<Scalars['string']['input']>;
  deviceId_gt?: InputMaybe<Scalars['string']['input']>;
  deviceId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceId_leq?: InputMaybe<Scalars['string']['input']>;
  deviceId_like?: InputMaybe<Scalars['string']['input']>;
  deviceId_lt?: InputMaybe<Scalars['string']['input']>;
  deviceId_neq?: InputMaybe<Scalars['string']['input']>;
  deviceId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceId_notlike?: InputMaybe<Scalars['string']['input']>;
  email?: InputMaybe<Scalars['string']['input']>;
  email_geq?: InputMaybe<Scalars['string']['input']>;
  email_gt?: InputMaybe<Scalars['string']['input']>;
  email_in?: InputMaybe<Array<Scalars['string']['input']>>;
  email_leq?: InputMaybe<Scalars['string']['input']>;
  email_like?: InputMaybe<Scalars['string']['input']>;
  email_lt?: InputMaybe<Scalars['string']['input']>;
  email_neq?: InputMaybe<Scalars['string']['input']>;
  email_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  email_notlike?: InputMaybe<Scalars['string']['input']>;
  sni?: InputMaybe<Scalars['string']['input']>;
  sni_geq?: InputMaybe<Scalars['string']['input']>;
  sni_gt?: InputMaybe<Scalars['string']['input']>;
  sni_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sni_leq?: InputMaybe<Scalars['string']['input']>;
  sni_like?: InputMaybe<Scalars['string']['input']>;
  sni_lt?: InputMaybe<Scalars['string']['input']>;
  sni_neq?: InputMaybe<Scalars['string']['input']>;
  sni_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sni_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_geq?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_gt?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceInternalIp_leq?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_like?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_lt?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_neq?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceInternalIp_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceIp?: InputMaybe<Scalars['string']['input']>;
  sourceIp_geq?: InputMaybe<Scalars['string']['input']>;
  sourceIp_gt?: InputMaybe<Scalars['string']['input']>;
  sourceIp_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceIp_leq?: InputMaybe<Scalars['string']['input']>;
  sourceIp_like?: InputMaybe<Scalars['string']['input']>;
  sourceIp_lt?: InputMaybe<Scalars['string']['input']>;
  sourceIp_neq?: InputMaybe<Scalars['string']['input']>;
  sourceIp_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceIp_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  transport?: InputMaybe<Scalars['uint16']['input']>;
  transport_geq?: InputMaybe<Scalars['uint16']['input']>;
  transport_gt?: InputMaybe<Scalars['uint16']['input']>;
  transport_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  transport_leq?: InputMaybe<Scalars['uint16']['input']>;
  transport_lt?: InputMaybe<Scalars['uint16']['input']>;
  transport_neq?: InputMaybe<Scalars['uint16']['input']>;
  transport_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  userId?: InputMaybe<Scalars['string']['input']>;
  userId_geq?: InputMaybe<Scalars['string']['input']>;
  userId_gt?: InputMaybe<Scalars['string']['input']>;
  userId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userId_leq?: InputMaybe<Scalars['string']['input']>;
  userId_like?: InputMaybe<Scalars['string']['input']>;
  userId_lt?: InputMaybe<Scalars['string']['input']>;
  userId_neq?: InputMaybe<Scalars['string']['input']>;
  userId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userId_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountGatewayL4SessionsAdaptiveGroupsOrderBy {
  /** action ascending */
  ActionAsc = 'action_ASC',
  /** action descending */
  ActionDesc = 'action_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationIp ascending */
  DestinationIpAsc = 'destinationIp_ASC',
  /** destinationIp descending */
  DestinationIpDesc = 'destinationIp_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** detectedProtocol ascending */
  DetectedProtocolAsc = 'detectedProtocol_ASC',
  /** detectedProtocol descending */
  DetectedProtocolDesc = 'detectedProtocol_DESC',
  /** deviceId ascending */
  DeviceIdAsc = 'deviceId_ASC',
  /** deviceId descending */
  DeviceIdDesc = 'deviceId_DESC',
  /** email ascending */
  EmailAsc = 'email_ASC',
  /** email descending */
  EmailDesc = 'email_DESC',
  /** sni ascending */
  SniAsc = 'sni_ASC',
  /** sni descending */
  SniDesc = 'sni_DESC',
  /** sourceInternalIp ascending */
  SourceInternalIpAsc = 'sourceInternalIp_ASC',
  /** sourceInternalIp descending */
  SourceInternalIpDesc = 'sourceInternalIp_DESC',
  /** sourceIp ascending */
  SourceIpAsc = 'sourceIp_ASC',
  /** sourceIp descending */
  SourceIpDesc = 'sourceIp_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** transport ascending */
  TransportAsc = 'transport_ASC',
  /** transport descending */
  TransportDesc = 'transport_DESC',
  /** userId ascending */
  UserIdAsc = 'userId_ASC',
  /** userId descending */
  UserIdDesc = 'userId_DESC'
}

/**
 * Aggregated metrics about upstream (edge to client) L4 Gateway Sessions. Metrics
 * are reported on TCP, QUIC or UDP session close
 */
export type AccountGatewayL4UpstreamSessionsAdaptiveGroups = {
  __typename?: 'AccountGatewayL4UpstreamSessionsAdaptiveGroups';
  /** The number of upstream sessions */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountGatewayL4UpstreamSessionsAdaptiveGroupsDimensions>;
  quantiles?: Maybe<AccountGatewayL4UpstreamSessionsAdaptiveGroupsQuantiles>;
  sum?: Maybe<AccountGatewayL4UpstreamSessionsAdaptiveGroupsSum>;
};

export type AccountGatewayL4UpstreamSessionsAdaptiveGroupsDimensions = {
  __typename?: 'AccountGatewayL4UpstreamSessionsAdaptiveGroupsDimensions';
  /** IATA Airport code that represents the city in which a Cloudflare data center (colo) is located */
  coloCode: Scalars['string']['output'];
  /** ISO 3166-1 alpha-2 code that represents the country in which a Cloudflare data center (colo) is located */
  coloCountry: Scalars['string']['output'];
  /** Start timestamp of this session, truncated to date */
  date: Scalars['Date']['output'];
  /** Start timestamp of this session, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Start timestamp of this session, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Start timestamp of this session, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Start timestamp of this session, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** IP address of the origin server */
  destinationIP: Scalars['string']['output'];
  /** SNI domain name for this session */
  domainName: Scalars['string']['output'];
  /** Downstream session identifier of this session */
  downstreamSessionId: Scalars['string']['output'];
  /** Client HTTP CONNECT request status. Possible values are unknown | success | failure */
  httpConnectReqStatus: Scalars['string']['output'];
  /** QUIC error code. Possible values are https://www.iana.org/assignments/quic/quic.xhtml#quic-transport-error-codes */
  quicErrorCode: Scalars['uint64']['output'];
  /** Last Round Trip Time estimation for this session in microseconds */
  rttUs: Scalars['int64']['output'];
  /** Broad location assigned to client in this session */
  tokenSigningRegion: Scalars['string']['output'];
  /** Total time taken for tunnel setup in microseconds */
  totalTunnelSetupDurationUs: Scalars['int64']['output'];
  /** Transport protocol used for this session. Possible values are tcp | quic | udp */
  transport: Scalars['string']['output'];
  /** Transport status. Possible values are unknown | success | failure */
  transportStatus: Scalars['string']['output'];
};

export type AccountGatewayL4UpstreamSessionsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountGatewayL4UpstreamSessionsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountGatewayL4UpstreamSessionsAdaptiveGroupsFilter_InputObject>>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCountry?: InputMaybe<Scalars['string']['input']>;
  coloCountry_geq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_gt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_leq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_like?: InputMaybe<Scalars['string']['input']>;
  coloCountry_lt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_neq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationIP?: InputMaybe<Scalars['string']['input']>;
  destinationIP_geq?: InputMaybe<Scalars['string']['input']>;
  destinationIP_gt?: InputMaybe<Scalars['string']['input']>;
  destinationIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationIP_leq?: InputMaybe<Scalars['string']['input']>;
  destinationIP_like?: InputMaybe<Scalars['string']['input']>;
  destinationIP_lt?: InputMaybe<Scalars['string']['input']>;
  destinationIP_neq?: InputMaybe<Scalars['string']['input']>;
  destinationIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationIP_notlike?: InputMaybe<Scalars['string']['input']>;
  domainName?: InputMaybe<Scalars['string']['input']>;
  domainName_geq?: InputMaybe<Scalars['string']['input']>;
  domainName_gt?: InputMaybe<Scalars['string']['input']>;
  domainName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  domainName_leq?: InputMaybe<Scalars['string']['input']>;
  domainName_like?: InputMaybe<Scalars['string']['input']>;
  domainName_lt?: InputMaybe<Scalars['string']['input']>;
  domainName_neq?: InputMaybe<Scalars['string']['input']>;
  domainName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  domainName_notlike?: InputMaybe<Scalars['string']['input']>;
  downstreamSessionId?: InputMaybe<Scalars['string']['input']>;
  downstreamSessionId_geq?: InputMaybe<Scalars['string']['input']>;
  downstreamSessionId_gt?: InputMaybe<Scalars['string']['input']>;
  downstreamSessionId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  downstreamSessionId_leq?: InputMaybe<Scalars['string']['input']>;
  downstreamSessionId_like?: InputMaybe<Scalars['string']['input']>;
  downstreamSessionId_lt?: InputMaybe<Scalars['string']['input']>;
  downstreamSessionId_neq?: InputMaybe<Scalars['string']['input']>;
  downstreamSessionId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  downstreamSessionId_notlike?: InputMaybe<Scalars['string']['input']>;
  httpConnectReqStatus?: InputMaybe<Scalars['string']['input']>;
  httpConnectReqStatus_geq?: InputMaybe<Scalars['string']['input']>;
  httpConnectReqStatus_gt?: InputMaybe<Scalars['string']['input']>;
  httpConnectReqStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  httpConnectReqStatus_leq?: InputMaybe<Scalars['string']['input']>;
  httpConnectReqStatus_like?: InputMaybe<Scalars['string']['input']>;
  httpConnectReqStatus_lt?: InputMaybe<Scalars['string']['input']>;
  httpConnectReqStatus_neq?: InputMaybe<Scalars['string']['input']>;
  httpConnectReqStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  httpConnectReqStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  quicErrorCode?: InputMaybe<Scalars['uint64']['input']>;
  quicErrorCode_geq?: InputMaybe<Scalars['uint64']['input']>;
  quicErrorCode_gt?: InputMaybe<Scalars['uint64']['input']>;
  quicErrorCode_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  quicErrorCode_leq?: InputMaybe<Scalars['uint64']['input']>;
  quicErrorCode_lt?: InputMaybe<Scalars['uint64']['input']>;
  quicErrorCode_neq?: InputMaybe<Scalars['uint64']['input']>;
  quicErrorCode_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  rttUs?: InputMaybe<Scalars['int64']['input']>;
  rttUs_geq?: InputMaybe<Scalars['int64']['input']>;
  rttUs_gt?: InputMaybe<Scalars['int64']['input']>;
  rttUs_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  rttUs_leq?: InputMaybe<Scalars['int64']['input']>;
  rttUs_lt?: InputMaybe<Scalars['int64']['input']>;
  rttUs_neq?: InputMaybe<Scalars['int64']['input']>;
  rttUs_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  tokenSigningRegion?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_geq?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_gt?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tokenSigningRegion_leq?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_like?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_lt?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_neq?: InputMaybe<Scalars['string']['input']>;
  tokenSigningRegion_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tokenSigningRegion_notlike?: InputMaybe<Scalars['string']['input']>;
  totalTunnelSetupDurationUs?: InputMaybe<Scalars['int64']['input']>;
  totalTunnelSetupDurationUs_geq?: InputMaybe<Scalars['int64']['input']>;
  totalTunnelSetupDurationUs_gt?: InputMaybe<Scalars['int64']['input']>;
  totalTunnelSetupDurationUs_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalTunnelSetupDurationUs_leq?: InputMaybe<Scalars['int64']['input']>;
  totalTunnelSetupDurationUs_lt?: InputMaybe<Scalars['int64']['input']>;
  totalTunnelSetupDurationUs_neq?: InputMaybe<Scalars['int64']['input']>;
  totalTunnelSetupDurationUs_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  transport?: InputMaybe<Scalars['string']['input']>;
  transportStatus?: InputMaybe<Scalars['string']['input']>;
  transportStatus_geq?: InputMaybe<Scalars['string']['input']>;
  transportStatus_gt?: InputMaybe<Scalars['string']['input']>;
  transportStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  transportStatus_leq?: InputMaybe<Scalars['string']['input']>;
  transportStatus_like?: InputMaybe<Scalars['string']['input']>;
  transportStatus_lt?: InputMaybe<Scalars['string']['input']>;
  transportStatus_neq?: InputMaybe<Scalars['string']['input']>;
  transportStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  transportStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  transport_geq?: InputMaybe<Scalars['string']['input']>;
  transport_gt?: InputMaybe<Scalars['string']['input']>;
  transport_in?: InputMaybe<Array<Scalars['string']['input']>>;
  transport_leq?: InputMaybe<Scalars['string']['input']>;
  transport_like?: InputMaybe<Scalars['string']['input']>;
  transport_lt?: InputMaybe<Scalars['string']['input']>;
  transport_neq?: InputMaybe<Scalars['string']['input']>;
  transport_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  transport_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountGatewayL4UpstreamSessionsAdaptiveGroupsOrderBy {
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** coloCountry ascending */
  ColoCountryAsc = 'coloCountry_ASC',
  /** coloCountry descending */
  ColoCountryDesc = 'coloCountry_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** destinationIP ascending */
  DestinationIpAsc = 'destinationIP_ASC',
  /** destinationIP descending */
  DestinationIpDesc = 'destinationIP_DESC',
  /** domainName ascending */
  DomainNameAsc = 'domainName_ASC',
  /** domainName descending */
  DomainNameDesc = 'domainName_DESC',
  /** downstreamSessionId ascending */
  DownstreamSessionIdAsc = 'downstreamSessionId_ASC',
  /** downstreamSessionId descending */
  DownstreamSessionIdDesc = 'downstreamSessionId_DESC',
  /** httpConnectReqStatus ascending */
  HttpConnectReqStatusAsc = 'httpConnectReqStatus_ASC',
  /** httpConnectReqStatus descending */
  HttpConnectReqStatusDesc = 'httpConnectReqStatus_DESC',
  /** quantiles(connectReqHandlingDurationUsP50) ascending */
  QuantilesConnectReqHandlingDurationUsP50Asc = 'quantiles_connectReqHandlingDurationUsP50_ASC',
  /** quantiles(connectReqHandlingDurationUsP50) descending */
  QuantilesConnectReqHandlingDurationUsP50Desc = 'quantiles_connectReqHandlingDurationUsP50_DESC',
  /** quantiles(totalTunnelSetupDurationUsP50) ascending */
  QuantilesTotalTunnelSetupDurationUsP50Asc = 'quantiles_totalTunnelSetupDurationUsP50_ASC',
  /** quantiles(totalTunnelSetupDurationUsP50) descending */
  QuantilesTotalTunnelSetupDurationUsP50Desc = 'quantiles_totalTunnelSetupDurationUsP50_DESC',
  /** quantiles(tunnelSetupDurationUsP50) ascending */
  QuantilesTunnelSetupDurationUsP50Asc = 'quantiles_tunnelSetupDurationUsP50_ASC',
  /** quantiles(tunnelSetupDurationUsP50) descending */
  QuantilesTunnelSetupDurationUsP50Desc = 'quantiles_tunnelSetupDurationUsP50_DESC',
  /** quicErrorCode ascending */
  QuicErrorCodeAsc = 'quicErrorCode_ASC',
  /** quicErrorCode descending */
  QuicErrorCodeDesc = 'quicErrorCode_DESC',
  /** rttUs ascending */
  RttUsAsc = 'rttUs_ASC',
  /** rttUs descending */
  RttUsDesc = 'rttUs_DESC',
  /** sum(bytesRecvd) ascending */
  SumBytesRecvdAsc = 'sum_bytesRecvd_ASC',
  /** sum(bytesRecvd) descending */
  SumBytesRecvdDesc = 'sum_bytesRecvd_DESC',
  /** sum(bytesSent) ascending */
  SumBytesSentAsc = 'sum_bytesSent_ASC',
  /** sum(bytesSent) descending */
  SumBytesSentDesc = 'sum_bytesSent_DESC',
  /** sum(connectReqHandlingDurationUs) ascending */
  SumConnectReqHandlingDurationUsAsc = 'sum_connectReqHandlingDurationUs_ASC',
  /** sum(connectReqHandlingDurationUs) descending */
  SumConnectReqHandlingDurationUsDesc = 'sum_connectReqHandlingDurationUs_DESC',
  /** sum(originBytesRetransmitted) ascending */
  SumOriginBytesRetransmittedAsc = 'sum_originBytesRetransmitted_ASC',
  /** sum(originBytesRetransmitted) descending */
  SumOriginBytesRetransmittedDesc = 'sum_originBytesRetransmitted_DESC',
  /** sum(packetsRecvd) ascending */
  SumPacketsRecvdAsc = 'sum_packetsRecvd_ASC',
  /** sum(packetsRecvd) descending */
  SumPacketsRecvdDesc = 'sum_packetsRecvd_DESC',
  /** sum(packetsSent) ascending */
  SumPacketsSentAsc = 'sum_packetsSent_ASC',
  /** sum(packetsSent) descending */
  SumPacketsSentDesc = 'sum_packetsSent_DESC',
  /** sum(totalTunnelSetupDurationUs) ascending */
  SumTotalTunnelSetupDurationUsAsc = 'sum_totalTunnelSetupDurationUs_ASC',
  /** sum(totalTunnelSetupDurationUs) descending */
  SumTotalTunnelSetupDurationUsDesc = 'sum_totalTunnelSetupDurationUs_DESC',
  /** sum(tunnelSetupDurationUs) ascending */
  SumTunnelSetupDurationUsAsc = 'sum_tunnelSetupDurationUs_ASC',
  /** sum(tunnelSetupDurationUs) descending */
  SumTunnelSetupDurationUsDesc = 'sum_tunnelSetupDurationUs_DESC',
  /** tokenSigningRegion ascending */
  TokenSigningRegionAsc = 'tokenSigningRegion_ASC',
  /** tokenSigningRegion descending */
  TokenSigningRegionDesc = 'tokenSigningRegion_DESC',
  /** totalTunnelSetupDurationUs ascending */
  TotalTunnelSetupDurationUsAsc = 'totalTunnelSetupDurationUs_ASC',
  /** totalTunnelSetupDurationUs descending */
  TotalTunnelSetupDurationUsDesc = 'totalTunnelSetupDurationUs_DESC',
  /** transportStatus ascending */
  TransportStatusAsc = 'transportStatus_ASC',
  /** transportStatus descending */
  TransportStatusDesc = 'transportStatus_DESC',
  /** transport ascending */
  TransportAsc = 'transport_ASC',
  /** transport descending */
  TransportDesc = 'transport_DESC'
}

export type AccountGatewayL4UpstreamSessionsAdaptiveGroupsQuantiles = {
  __typename?: 'AccountGatewayL4UpstreamSessionsAdaptiveGroupsQuantiles';
  /** Time taken for CONNECT request handling in microseconds */
  connectReqHandlingDurationUsP50: Scalars['int64']['output'];
  /** Total time taken for tunnel setup in microseconds */
  totalTunnelSetupDurationUsP50: Scalars['int64']['output'];
  /** Time taken to setup the tunnel in microseconds */
  tunnelSetupDurationUsP50: Scalars['int64']['output'];
};

export type AccountGatewayL4UpstreamSessionsAdaptiveGroupsSum = {
  __typename?: 'AccountGatewayL4UpstreamSessionsAdaptiveGroupsSum';
  /** Total bytes received in this session */
  bytesRecvd: Scalars['uint64']['output'];
  /** Total bytes sent in this session */
  bytesSent: Scalars['uint64']['output'];
  /** Time taken for CONNECT request handling in microseconds */
  connectReqHandlingDurationUs: Scalars['int64']['output'];
  /** Total bytes retransmitted by origin in this session */
  originBytesRetransmitted: Scalars['uint64']['output'];
  /** Total number of packets received in this session */
  packetsRecvd: Scalars['uint64']['output'];
  /** Total number of packets sent in this session */
  packetsSent: Scalars['uint64']['output'];
  /** Total time taken for tunnel setup in microseconds */
  totalTunnelSetupDurationUs: Scalars['int64']['output'];
  /** Time taken for tunnel setup in microseconds */
  tunnelSetupDurationUs: Scalars['int64']['output'];
};

/** BETA - Aggregate counts of Gateway L7 requests with adaptive sampling */
export type AccountGatewayL7RequestsAdaptiveGroups = {
  __typename?: 'AccountGatewayL7RequestsAdaptiveGroups';
  /** The number of Gateway L7 requests */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountGatewayL7RequestsAdaptiveGroupsDimensions>;
};

export type AccountGatewayL7RequestsAdaptiveGroupsDimensions = {
  __typename?: 'AccountGatewayL7RequestsAdaptiveGroupsDimensions';
  /** action taken by gateway */
  action: Scalars['string']['output'];
  /** Colo Code of edge server */
  coloCode: Scalars['string']['output'];
  /** Datetime that the request happened */
  datetime: Scalars['Time']['output'];
  /** Datetime that the request happened truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** Datetime that the request happened truncated to minutes */
  datetimeMinute: Scalars['Time']['output'];
  /** The device ID of the gateway user who made the request */
  deviceId: Scalars['string']['output'];
  /** The email address of the gateway user who made the request */
  email: Scalars['string']['output'];
  /** The destination host for the request */
  httpHost: Scalars['string']['output'];
  /** HTTP status code gateway returned to the user. 0 if nothing was returned(e.g client disconnected) */
  httpStatusCode: Scalars['float64']['output'];
  /** Indicates whether this request was made through an isolated link */
  isIsolated: Scalars['uint16']['output'];
  /** Local LAN IP of the device. Only available when connected via a GRE/IPsec tunnel on-ramp */
  sourceInternalIp: Scalars['string']['output'];
  /** Action taken when an untrusted origin certificate error occurs */
  untrustedCertificateAction: Scalars['string']['output'];
  /** The ID of the gateway user who made the request */
  userId: Scalars['string']['output'];
};

export type AccountGatewayL7RequestsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountGatewayL7RequestsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountGatewayL7RequestsAdaptiveGroupsFilter_InputObject>>;
  action?: InputMaybe<Scalars['string']['input']>;
  action_geq?: InputMaybe<Scalars['string']['input']>;
  action_gt?: InputMaybe<Scalars['string']['input']>;
  action_in?: InputMaybe<Array<Scalars['string']['input']>>;
  action_leq?: InputMaybe<Scalars['string']['input']>;
  action_like?: InputMaybe<Scalars['string']['input']>;
  action_lt?: InputMaybe<Scalars['string']['input']>;
  action_neq?: InputMaybe<Scalars['string']['input']>;
  action_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  action_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  deviceId?: InputMaybe<Scalars['string']['input']>;
  deviceId_geq?: InputMaybe<Scalars['string']['input']>;
  deviceId_gt?: InputMaybe<Scalars['string']['input']>;
  deviceId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceId_leq?: InputMaybe<Scalars['string']['input']>;
  deviceId_like?: InputMaybe<Scalars['string']['input']>;
  deviceId_lt?: InputMaybe<Scalars['string']['input']>;
  deviceId_neq?: InputMaybe<Scalars['string']['input']>;
  deviceId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceId_notlike?: InputMaybe<Scalars['string']['input']>;
  email?: InputMaybe<Scalars['string']['input']>;
  email_geq?: InputMaybe<Scalars['string']['input']>;
  email_gt?: InputMaybe<Scalars['string']['input']>;
  email_in?: InputMaybe<Array<Scalars['string']['input']>>;
  email_leq?: InputMaybe<Scalars['string']['input']>;
  email_like?: InputMaybe<Scalars['string']['input']>;
  email_lt?: InputMaybe<Scalars['string']['input']>;
  email_neq?: InputMaybe<Scalars['string']['input']>;
  email_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  email_notlike?: InputMaybe<Scalars['string']['input']>;
  httpHost?: InputMaybe<Scalars['string']['input']>;
  httpHost_geq?: InputMaybe<Scalars['string']['input']>;
  httpHost_gt?: InputMaybe<Scalars['string']['input']>;
  httpHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  httpHost_leq?: InputMaybe<Scalars['string']['input']>;
  httpHost_like?: InputMaybe<Scalars['string']['input']>;
  httpHost_lt?: InputMaybe<Scalars['string']['input']>;
  httpHost_neq?: InputMaybe<Scalars['string']['input']>;
  httpHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  httpHost_notlike?: InputMaybe<Scalars['string']['input']>;
  httpStatusCode?: InputMaybe<Scalars['float64']['input']>;
  httpStatusCode_geq?: InputMaybe<Scalars['float64']['input']>;
  httpStatusCode_gt?: InputMaybe<Scalars['float64']['input']>;
  httpStatusCode_in?: InputMaybe<Array<Scalars['float64']['input']>>;
  httpStatusCode_leq?: InputMaybe<Scalars['float64']['input']>;
  httpStatusCode_lt?: InputMaybe<Scalars['float64']['input']>;
  httpStatusCode_neq?: InputMaybe<Scalars['float64']['input']>;
  httpStatusCode_notin?: InputMaybe<Array<Scalars['float64']['input']>>;
  isIsolated?: InputMaybe<Scalars['uint16']['input']>;
  isIsolated_geq?: InputMaybe<Scalars['uint16']['input']>;
  isIsolated_gt?: InputMaybe<Scalars['uint16']['input']>;
  isIsolated_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  isIsolated_leq?: InputMaybe<Scalars['uint16']['input']>;
  isIsolated_lt?: InputMaybe<Scalars['uint16']['input']>;
  isIsolated_neq?: InputMaybe<Scalars['uint16']['input']>;
  isIsolated_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourceInternalIp?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_geq?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_gt?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceInternalIp_leq?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_like?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_lt?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_neq?: InputMaybe<Scalars['string']['input']>;
  sourceInternalIp_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceInternalIp_notlike?: InputMaybe<Scalars['string']['input']>;
  untrustedCertificateAction?: InputMaybe<Scalars['string']['input']>;
  untrustedCertificateAction_geq?: InputMaybe<Scalars['string']['input']>;
  untrustedCertificateAction_gt?: InputMaybe<Scalars['string']['input']>;
  untrustedCertificateAction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  untrustedCertificateAction_leq?: InputMaybe<Scalars['string']['input']>;
  untrustedCertificateAction_like?: InputMaybe<Scalars['string']['input']>;
  untrustedCertificateAction_lt?: InputMaybe<Scalars['string']['input']>;
  untrustedCertificateAction_neq?: InputMaybe<Scalars['string']['input']>;
  untrustedCertificateAction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  untrustedCertificateAction_notlike?: InputMaybe<Scalars['string']['input']>;
  userId?: InputMaybe<Scalars['string']['input']>;
  userId_geq?: InputMaybe<Scalars['string']['input']>;
  userId_gt?: InputMaybe<Scalars['string']['input']>;
  userId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userId_leq?: InputMaybe<Scalars['string']['input']>;
  userId_like?: InputMaybe<Scalars['string']['input']>;
  userId_lt?: InputMaybe<Scalars['string']['input']>;
  userId_neq?: InputMaybe<Scalars['string']['input']>;
  userId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userId_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountGatewayL7RequestsAdaptiveGroupsOrderBy {
  /** action ascending */
  ActionAsc = 'action_ASC',
  /** action descending */
  ActionDesc = 'action_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** deviceId ascending */
  DeviceIdAsc = 'deviceId_ASC',
  /** deviceId descending */
  DeviceIdDesc = 'deviceId_DESC',
  /** email ascending */
  EmailAsc = 'email_ASC',
  /** email descending */
  EmailDesc = 'email_DESC',
  /** httpHost ascending */
  HttpHostAsc = 'httpHost_ASC',
  /** httpHost descending */
  HttpHostDesc = 'httpHost_DESC',
  /** httpStatusCode ascending */
  HttpStatusCodeAsc = 'httpStatusCode_ASC',
  /** httpStatusCode descending */
  HttpStatusCodeDesc = 'httpStatusCode_DESC',
  /** isIsolated ascending */
  IsIsolatedAsc = 'isIsolated_ASC',
  /** isIsolated descending */
  IsIsolatedDesc = 'isIsolated_DESC',
  /** sourceInternalIp ascending */
  SourceInternalIpAsc = 'sourceInternalIp_ASC',
  /** sourceInternalIp descending */
  SourceInternalIpDesc = 'sourceInternalIp_DESC',
  /** untrustedCertificateAction ascending */
  UntrustedCertificateActionAsc = 'untrustedCertificateAction_ASC',
  /** untrustedCertificateAction descending */
  UntrustedCertificateActionDesc = 'untrustedCertificateAction_DESC',
  /** userId ascending */
  UserIdAsc = 'userId_ASC',
  /** userId descending */
  UserIdDesc = 'userId_DESC'
}

/** BETA - Aggregate counts of Gateway Resolver queries by category with adaptive sampling */
export type AccountGatewayResolverByCategoryAdaptiveGroups = {
  __typename?: 'AccountGatewayResolverByCategoryAdaptiveGroups';
  /** The number of Gateway Resolver queries */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountGatewayResolverByCategoryAdaptiveGroupsDimensions>;
};

export type AccountGatewayResolverByCategoryAdaptiveGroupsDimensions = {
  __typename?: 'AccountGatewayResolverByCategoryAdaptiveGroupsDimensions';
  /** ID of the category that was assigned to the domain */
  categoryId: Scalars['uint16']['output'];
  /** The date and time the DNS query was resolved */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to minutes */
  datetimeMinute: Scalars['Time']['output'];
  /** The uuid identifying the customer Location used when resolving */
  locationId: Scalars['string']['output'];
  /**
   * Enum identifier for the decision made by gateway-resolver, one of: (0,
   * unknown) (1, allowedByQueryName) (2, blockedByQueryName) (3,
   * blockedByCategory) (4, allowedOnNoLocation) (5, allowedOnNoPolicyMatch) (6,
   * blockedAlwaysCategory) (7, overrideForSafeSearch) (8, overrideApplied) (9,
   * blockedRule) (10, allowedRule)
   */
  resolverDecision: Scalars['uint16']['output'];
};

export type AccountGatewayResolverByCategoryAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountGatewayResolverByCategoryAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountGatewayResolverByCategoryAdaptiveGroupsFilter_InputObject>>;
  categoryId?: InputMaybe<Scalars['uint16']['input']>;
  categoryId_geq?: InputMaybe<Scalars['uint16']['input']>;
  categoryId_gt?: InputMaybe<Scalars['uint16']['input']>;
  categoryId_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  categoryId_leq?: InputMaybe<Scalars['uint16']['input']>;
  categoryId_lt?: InputMaybe<Scalars['uint16']['input']>;
  categoryId_neq?: InputMaybe<Scalars['uint16']['input']>;
  categoryId_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  locationId?: InputMaybe<Scalars['string']['input']>;
  locationId_geq?: InputMaybe<Scalars['string']['input']>;
  locationId_gt?: InputMaybe<Scalars['string']['input']>;
  locationId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  locationId_leq?: InputMaybe<Scalars['string']['input']>;
  locationId_like?: InputMaybe<Scalars['string']['input']>;
  locationId_lt?: InputMaybe<Scalars['string']['input']>;
  locationId_neq?: InputMaybe<Scalars['string']['input']>;
  locationId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  locationId_notlike?: InputMaybe<Scalars['string']['input']>;
  resolverDecision?: InputMaybe<Scalars['uint16']['input']>;
  resolverDecision_geq?: InputMaybe<Scalars['uint16']['input']>;
  resolverDecision_gt?: InputMaybe<Scalars['uint16']['input']>;
  resolverDecision_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  resolverDecision_leq?: InputMaybe<Scalars['uint16']['input']>;
  resolverDecision_lt?: InputMaybe<Scalars['uint16']['input']>;
  resolverDecision_neq?: InputMaybe<Scalars['uint16']['input']>;
  resolverDecision_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
};

export enum AccountGatewayResolverByCategoryAdaptiveGroupsOrderBy {
  /** categoryId ascending */
  CategoryIdAsc = 'categoryId_ASC',
  /** categoryId descending */
  CategoryIdDesc = 'categoryId_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** locationId ascending */
  LocationIdAsc = 'locationId_ASC',
  /** locationId descending */
  LocationIdDesc = 'locationId_DESC',
  /** resolverDecision ascending */
  ResolverDecisionAsc = 'resolverDecision_ASC',
  /** resolverDecision descending */
  ResolverDecisionDesc = 'resolverDecision_DESC'
}

/** Total time spent on executing firewall rules at the edge */
export type AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroups = {
  __typename?: 'AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsAvg>;
  /** The number of Gateway Resolver queries */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsDimensions>;
  /** Maximum execution time */
  max?: Maybe<AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsMax>;
  /** Quantiles of a rule execution performance */
  quantiles?: Maybe<AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsQuantiles>;
};

export type AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsAvg = {
  __typename?: 'AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsDimensions = {
  __typename?: 'AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsDimensions';
  /** Request timestamp */
  datetime: Scalars['Time']['output'];
  /** Request timestamp month */
  datetimeMonth: Scalars['Time']['output'];
};

export type AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsFilter_InputObject>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMonth_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsMax = {
  __typename?: 'AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsMax';
  /** Maximum execution time */
  executionTime: Scalars['float64']['output'];
};

export enum AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** datetimeMonth ascending */
  DatetimeMonthAsc = 'datetimeMonth_ASC',
  /** datetimeMonth descending */
  DatetimeMonthDesc = 'datetimeMonth_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** max(executionTime) ascending */
  MaxExecutionTimeAsc = 'max_executionTime_ASC',
  /** max(executionTime) descending */
  MaxExecutionTimeDesc = 'max_executionTime_DESC',
  /** quantiles(executionTimeMsP25) ascending */
  QuantilesExecutionTimeMsP25Asc = 'quantiles_executionTimeMsP25_ASC',
  /** quantiles(executionTimeMsP25) descending */
  QuantilesExecutionTimeMsP25Desc = 'quantiles_executionTimeMsP25_DESC',
  /** quantiles(executionTimeMsP50) ascending */
  QuantilesExecutionTimeMsP50Asc = 'quantiles_executionTimeMsP50_ASC',
  /** quantiles(executionTimeMsP50) descending */
  QuantilesExecutionTimeMsP50Desc = 'quantiles_executionTimeMsP50_DESC',
  /** quantiles(executionTimeMsP75) ascending */
  QuantilesExecutionTimeMsP75Asc = 'quantiles_executionTimeMsP75_ASC',
  /** quantiles(executionTimeMsP75) descending */
  QuantilesExecutionTimeMsP75Desc = 'quantiles_executionTimeMsP75_DESC',
  /** quantiles(executionTimeMsP90) ascending */
  QuantilesExecutionTimeMsP90Asc = 'quantiles_executionTimeMsP90_ASC',
  /** quantiles(executionTimeMsP90) descending */
  QuantilesExecutionTimeMsP90Desc = 'quantiles_executionTimeMsP90_DESC',
  /** quantiles(executionTimeMsP95) ascending */
  QuantilesExecutionTimeMsP95Asc = 'quantiles_executionTimeMsP95_ASC',
  /** quantiles(executionTimeMsP95) descending */
  QuantilesExecutionTimeMsP95Desc = 'quantiles_executionTimeMsP95_DESC',
  /** quantiles(executionTimeMsP98) ascending */
  QuantilesExecutionTimeMsP98Asc = 'quantiles_executionTimeMsP98_ASC',
  /** quantiles(executionTimeMsP98) descending */
  QuantilesExecutionTimeMsP98Desc = 'quantiles_executionTimeMsP98_DESC',
  /** quantiles(executionTimeMsP99) ascending */
  QuantilesExecutionTimeMsP99Asc = 'quantiles_executionTimeMsP99_ASC',
  /** quantiles(executionTimeMsP99) descending */
  QuantilesExecutionTimeMsP99Desc = 'quantiles_executionTimeMsP99_DESC'
}

export type AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsQuantiles = {
  __typename?: 'AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsQuantiles';
  /** Execution time performance of 25th percentile in milliseconds */
  executionTimeMsP25: Scalars['float64']['output'];
  /** Execution time performance of 50th percentile in milliseconds */
  executionTimeMsP50: Scalars['float64']['output'];
  /** Execution time performance of 75th percentile in milliseconds */
  executionTimeMsP75: Scalars['float64']['output'];
  /** Execution time performance of 90th percentile in milliseconds */
  executionTimeMsP90: Scalars['float64']['output'];
  /** Execution time performance of 95th percentile in milliseconds */
  executionTimeMsP95: Scalars['float64']['output'];
  /** Execution time performance of 98th percentile in milliseconds */
  executionTimeMsP98: Scalars['float64']['output'];
  /** Execution time performance of 99th percentile in milliseconds */
  executionTimeMsP99: Scalars['float64']['output'];
};

/** BETA - Aggregate counts of Gateway Resolver queries with adaptive sampling */
export type AccountGatewayResolverQueriesAdaptiveGroups = {
  __typename?: 'AccountGatewayResolverQueriesAdaptiveGroups';
  /** The number of Gateway Resolver queries */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountGatewayResolverQueriesAdaptiveGroupsDimensions>;
};

export type AccountGatewayResolverQueriesAdaptiveGroupsDimensions = {
  __typename?: 'AccountGatewayResolverQueriesAdaptiveGroupsDimensions';
  /** Json array of categories for this query */
  categoryIds: Scalars['string']['output'];
  /** The date and time the DNS query was resolved */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to minutes */
  datetimeMinute: Scalars['Time']['output'];
  /** The uuid identifying the customer Location used when resolving */
  locationId: Scalars['string']['output'];
  /** Json array of indicator feed IDs for this query that matched rule */
  matchedIndicatorFeedIds: Scalars['string']['output'];
  /** Name of the query, e.g. one.dash.cloudflare.com */
  queryName: Scalars['string']['output'];
  /** Name of the query in reverse order, e.g. com.cloudflare.dash.one */
  queryNameReversed: Scalars['string']['output'];
  /**
   * Enum identifier for the decision made by gateway-resolver, one of: (0,
   * unknown) (1, allowedByQueryName) (2, blockedByQueryName) (3,
   * blockedByCategory) (4, allowedOnNoLocation) (5, allowedOnNoPolicyMatch) (6,
   * blockedAlwaysCategory) (7, overrideForSafeSearch) (8, overrideApplied) (9,
   * blockedRule) (10, allowedRule)
   */
  resolverDecision: Scalars['uint16']['output'];
  /** Json object of schedule releated information */
  scheduleInfo: Scalars['string']['output'];
};

export type AccountGatewayResolverQueriesAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountGatewayResolverQueriesAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountGatewayResolverQueriesAdaptiveGroupsFilter_InputObject>>;
  categoryIds?: InputMaybe<Scalars['string']['input']>;
  categoryIds_geq?: InputMaybe<Scalars['string']['input']>;
  categoryIds_gt?: InputMaybe<Scalars['string']['input']>;
  categoryIds_in?: InputMaybe<Array<Scalars['string']['input']>>;
  categoryIds_leq?: InputMaybe<Scalars['string']['input']>;
  categoryIds_like?: InputMaybe<Scalars['string']['input']>;
  categoryIds_lt?: InputMaybe<Scalars['string']['input']>;
  categoryIds_neq?: InputMaybe<Scalars['string']['input']>;
  categoryIds_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  categoryIds_notlike?: InputMaybe<Scalars['string']['input']>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  locationId?: InputMaybe<Scalars['string']['input']>;
  locationId_geq?: InputMaybe<Scalars['string']['input']>;
  locationId_gt?: InputMaybe<Scalars['string']['input']>;
  locationId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  locationId_leq?: InputMaybe<Scalars['string']['input']>;
  locationId_like?: InputMaybe<Scalars['string']['input']>;
  locationId_lt?: InputMaybe<Scalars['string']['input']>;
  locationId_neq?: InputMaybe<Scalars['string']['input']>;
  locationId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  locationId_notlike?: InputMaybe<Scalars['string']['input']>;
  matchedIndicatorFeedIds?: InputMaybe<Scalars['string']['input']>;
  matchedIndicatorFeedIds_geq?: InputMaybe<Scalars['string']['input']>;
  matchedIndicatorFeedIds_gt?: InputMaybe<Scalars['string']['input']>;
  matchedIndicatorFeedIds_in?: InputMaybe<Array<Scalars['string']['input']>>;
  matchedIndicatorFeedIds_leq?: InputMaybe<Scalars['string']['input']>;
  matchedIndicatorFeedIds_like?: InputMaybe<Scalars['string']['input']>;
  matchedIndicatorFeedIds_lt?: InputMaybe<Scalars['string']['input']>;
  matchedIndicatorFeedIds_neq?: InputMaybe<Scalars['string']['input']>;
  matchedIndicatorFeedIds_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  matchedIndicatorFeedIds_notlike?: InputMaybe<Scalars['string']['input']>;
  queryName?: InputMaybe<Scalars['string']['input']>;
  queryNameReversed?: InputMaybe<Scalars['string']['input']>;
  queryNameReversed_geq?: InputMaybe<Scalars['string']['input']>;
  queryNameReversed_gt?: InputMaybe<Scalars['string']['input']>;
  queryNameReversed_in?: InputMaybe<Array<Scalars['string']['input']>>;
  queryNameReversed_leq?: InputMaybe<Scalars['string']['input']>;
  queryNameReversed_like?: InputMaybe<Scalars['string']['input']>;
  queryNameReversed_lt?: InputMaybe<Scalars['string']['input']>;
  queryNameReversed_neq?: InputMaybe<Scalars['string']['input']>;
  queryNameReversed_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  queryNameReversed_notlike?: InputMaybe<Scalars['string']['input']>;
  queryName_geq?: InputMaybe<Scalars['string']['input']>;
  queryName_gt?: InputMaybe<Scalars['string']['input']>;
  queryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  queryName_leq?: InputMaybe<Scalars['string']['input']>;
  queryName_like?: InputMaybe<Scalars['string']['input']>;
  queryName_lt?: InputMaybe<Scalars['string']['input']>;
  queryName_neq?: InputMaybe<Scalars['string']['input']>;
  queryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  queryName_notlike?: InputMaybe<Scalars['string']['input']>;
  resolverDecision?: InputMaybe<Scalars['uint16']['input']>;
  resolverDecision_geq?: InputMaybe<Scalars['uint16']['input']>;
  resolverDecision_gt?: InputMaybe<Scalars['uint16']['input']>;
  resolverDecision_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  resolverDecision_leq?: InputMaybe<Scalars['uint16']['input']>;
  resolverDecision_lt?: InputMaybe<Scalars['uint16']['input']>;
  resolverDecision_neq?: InputMaybe<Scalars['uint16']['input']>;
  resolverDecision_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  scheduleInfo?: InputMaybe<Scalars['string']['input']>;
  scheduleInfo_geq?: InputMaybe<Scalars['string']['input']>;
  scheduleInfo_gt?: InputMaybe<Scalars['string']['input']>;
  scheduleInfo_in?: InputMaybe<Array<Scalars['string']['input']>>;
  scheduleInfo_leq?: InputMaybe<Scalars['string']['input']>;
  scheduleInfo_like?: InputMaybe<Scalars['string']['input']>;
  scheduleInfo_lt?: InputMaybe<Scalars['string']['input']>;
  scheduleInfo_neq?: InputMaybe<Scalars['string']['input']>;
  scheduleInfo_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  scheduleInfo_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountGatewayResolverQueriesAdaptiveGroupsOrderBy {
  /** categoryIds ascending */
  CategoryIdsAsc = 'categoryIds_ASC',
  /** categoryIds descending */
  CategoryIdsDesc = 'categoryIds_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** locationId ascending */
  LocationIdAsc = 'locationId_ASC',
  /** locationId descending */
  LocationIdDesc = 'locationId_DESC',
  /** matchedIndicatorFeedIds ascending */
  MatchedIndicatorFeedIdsAsc = 'matchedIndicatorFeedIds_ASC',
  /** matchedIndicatorFeedIds descending */
  MatchedIndicatorFeedIdsDesc = 'matchedIndicatorFeedIds_DESC',
  /** queryNameReversed ascending */
  QueryNameReversedAsc = 'queryNameReversed_ASC',
  /** queryNameReversed descending */
  QueryNameReversedDesc = 'queryNameReversed_DESC',
  /** queryName ascending */
  QueryNameAsc = 'queryName_ASC',
  /** queryName descending */
  QueryNameDesc = 'queryName_DESC',
  /** resolverDecision ascending */
  ResolverDecisionAsc = 'resolverDecision_ASC',
  /** resolverDecision descending */
  ResolverDecisionDesc = 'resolverDecision_DESC',
  /** scheduleInfo ascending */
  ScheduleInfoAsc = 'scheduleInfo_ASC',
  /** scheduleInfo descending */
  ScheduleInfoDesc = 'scheduleInfo_DESC'
}

/** Daily rollups of request data */
export type AccountHttpRequests1dGroups = {
  __typename?: 'AccountHttpRequests1dGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<AccountHttpRequests1dGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountHttpRequests1dGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountHttpRequests1dGroupsSum>;
  /** The number of unique values for a metric per dimension */
  uniq?: Maybe<AccountHttpRequests1dGroupsUniq>;
};

export type AccountHttpRequests1dGroupsAvg = {
  __typename?: 'AccountHttpRequests1dGroupsAvg';
  bytes: Scalars['float64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountHttpRequests1dGroupsBrowserMapElem = {
  __typename?: 'AccountHttpRequests1dGroupsBrowserMapElem';
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  /** Browser type */
  uaBrowserFamily: Scalars['string']['output'];
};

export type AccountHttpRequests1dGroupsClientHttpVersionMapElem = {
  __typename?: 'AccountHttpRequests1dGroupsClientHTTPVersionMapElem';
  /** HTTP version */
  clientHTTPProtocol: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type AccountHttpRequests1dGroupsClientSslMapElem = {
  __typename?: 'AccountHttpRequests1dGroupsClientSSLMapElem';
  /** Protocol version */
  clientSSLProtocol: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type AccountHttpRequests1dGroupsContentTypeMapElem = {
  __typename?: 'AccountHttpRequests1dGroupsContentTypeMapElem';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Content type returned to client */
  edgeResponseContentTypeName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type AccountHttpRequests1dGroupsCountryMapElem = {
  __typename?: 'AccountHttpRequests1dGroupsCountryMapElem';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type AccountHttpRequests1dGroupsDimensions = {
  __typename?: 'AccountHttpRequests1dGroupsDimensions';
  /** Request date */
  date: Scalars['Date']['output'];
};

export type AccountHttpRequests1dGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountHttpRequests1dGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountHttpRequests1dGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
};

export type AccountHttpRequests1dGroupsIpClassMapElem = {
  __typename?: 'AccountHttpRequests1dGroupsIpClassMapElem';
  /** IP class */
  ipType: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export enum AccountHttpRequests1dGroupsOrderBy {
  /** avg(bytes) ascending */
  AvgBytesAsc = 'avg_bytes_ASC',
  /** avg(bytes) descending */
  AvgBytesDesc = 'avg_bytes_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC',
  /** sum(cachedBytes) ascending */
  SumCachedBytesAsc = 'sum_cachedBytes_ASC',
  /** sum(cachedBytes) descending */
  SumCachedBytesDesc = 'sum_cachedBytes_DESC',
  /** sum(cachedRequests) ascending */
  SumCachedRequestsAsc = 'sum_cachedRequests_ASC',
  /** sum(cachedRequests) descending */
  SumCachedRequestsDesc = 'sum_cachedRequests_DESC',
  /** sum(encryptedBytes) ascending */
  SumEncryptedBytesAsc = 'sum_encryptedBytes_ASC',
  /** sum(encryptedBytes) descending */
  SumEncryptedBytesDesc = 'sum_encryptedBytes_DESC',
  /** sum(encryptedRequests) ascending */
  SumEncryptedRequestsAsc = 'sum_encryptedRequests_ASC',
  /** sum(encryptedRequests) descending */
  SumEncryptedRequestsDesc = 'sum_encryptedRequests_DESC',
  /** sum(pageViews) ascending */
  SumPageViewsAsc = 'sum_pageViews_ASC',
  /** sum(pageViews) descending */
  SumPageViewsDesc = 'sum_pageViews_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(threats) ascending */
  SumThreatsAsc = 'sum_threats_ASC',
  /** sum(threats) descending */
  SumThreatsDesc = 'sum_threats_DESC',
  /** uniq(uniques) ascending */
  UniqUniquesAsc = 'uniq_uniques_ASC',
  /** uniq(uniques) descending */
  UniqUniquesDesc = 'uniq_uniques_DESC'
}

export type AccountHttpRequests1dGroupsResponseStatusMapElem = {
  __typename?: 'AccountHttpRequests1dGroupsResponseStatusMapElem';
  /** HTTP response status code returned to client */
  edgeResponseStatus: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
};

export type AccountHttpRequests1dGroupsSum = {
  __typename?: 'AccountHttpRequests1dGroupsSum';
  browserMap: Array<AccountHttpRequests1dGroupsBrowserMapElem>;
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Bytes returned to client from cache */
  cachedBytes: Scalars['uint64']['output'];
  /** Requests served from cache */
  cachedRequests: Scalars['uint64']['output'];
  clientHTTPVersionMap: Array<AccountHttpRequests1dGroupsClientHttpVersionMapElem>;
  clientSSLMap: Array<AccountHttpRequests1dGroupsClientSslMapElem>;
  contentTypeMap: Array<AccountHttpRequests1dGroupsContentTypeMapElem>;
  countryMap: Array<AccountHttpRequests1dGroupsCountryMapElem>;
  /** Bytes returned to client using SSL/TLS protocol */
  encryptedBytes: Scalars['uint64']['output'];
  /** Requests served using SSL/TLS protocol */
  encryptedRequests: Scalars['uint64']['output'];
  ipClassMap: Array<AccountHttpRequests1dGroupsIpClassMapElem>;
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
  responseStatusMap: Array<AccountHttpRequests1dGroupsResponseStatusMapElem>;
  threatPathingMap: Array<AccountHttpRequests1dGroupsThreatPathingMapElem>;
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type AccountHttpRequests1dGroupsThreatPathingMapElem = {
  __typename?: 'AccountHttpRequests1dGroupsThreatPathingMapElem';
  requests: Scalars['uint64']['output'];
  /** Threat type */
  threatPathingName: Scalars['string']['output'];
};

export type AccountHttpRequests1dGroupsUniq = {
  __typename?: 'AccountHttpRequests1dGroupsUniq';
  /** A number of unique IPs */
  uniques: Scalars['uint64']['output'];
};

/** Hourly rollups of request data */
export type AccountHttpRequests1hGroups = {
  __typename?: 'AccountHttpRequests1hGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<AccountHttpRequests1hGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountHttpRequests1hGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountHttpRequests1hGroupsSum>;
  /** The number of unique values for a metric per dimension */
  uniq?: Maybe<AccountHttpRequests1hGroupsUniq>;
};

export type AccountHttpRequests1hGroupsAvg = {
  __typename?: 'AccountHttpRequests1hGroupsAvg';
  bytes: Scalars['float64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountHttpRequests1hGroupsBrowserMapElem = {
  __typename?: 'AccountHttpRequests1hGroupsBrowserMapElem';
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  /** Browser type */
  uaBrowserFamily: Scalars['string']['output'];
};

export type AccountHttpRequests1hGroupsClientHttpVersionMapElem = {
  __typename?: 'AccountHttpRequests1hGroupsClientHTTPVersionMapElem';
  /** HTTP version */
  clientHTTPProtocol: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type AccountHttpRequests1hGroupsClientSslMapElem = {
  __typename?: 'AccountHttpRequests1hGroupsClientSSLMapElem';
  /** Protocol version */
  clientSSLProtocol: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type AccountHttpRequests1hGroupsContentTypeMapElem = {
  __typename?: 'AccountHttpRequests1hGroupsContentTypeMapElem';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Content type returned to client */
  edgeResponseContentTypeName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type AccountHttpRequests1hGroupsCountryMapElem = {
  __typename?: 'AccountHttpRequests1hGroupsCountryMapElem';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type AccountHttpRequests1hGroupsDimensions = {
  __typename?: 'AccountHttpRequests1hGroupsDimensions';
  /** Request date */
  date: Scalars['Date']['output'];
  /** Request datetime truncated to the hour */
  datetime: Scalars['Time']['output'];
};

export type AccountHttpRequests1hGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountHttpRequests1hGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountHttpRequests1hGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type AccountHttpRequests1hGroupsIpClassMapElem = {
  __typename?: 'AccountHttpRequests1hGroupsIpClassMapElem';
  /** IP class */
  ipType: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export enum AccountHttpRequests1hGroupsOrderBy {
  /** avg(bytes) ascending */
  AvgBytesAsc = 'avg_bytes_ASC',
  /** avg(bytes) descending */
  AvgBytesDesc = 'avg_bytes_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC',
  /** sum(cachedBytes) ascending */
  SumCachedBytesAsc = 'sum_cachedBytes_ASC',
  /** sum(cachedBytes) descending */
  SumCachedBytesDesc = 'sum_cachedBytes_DESC',
  /** sum(cachedRequests) ascending */
  SumCachedRequestsAsc = 'sum_cachedRequests_ASC',
  /** sum(cachedRequests) descending */
  SumCachedRequestsDesc = 'sum_cachedRequests_DESC',
  /** sum(encryptedBytes) ascending */
  SumEncryptedBytesAsc = 'sum_encryptedBytes_ASC',
  /** sum(encryptedBytes) descending */
  SumEncryptedBytesDesc = 'sum_encryptedBytes_DESC',
  /** sum(encryptedRequests) ascending */
  SumEncryptedRequestsAsc = 'sum_encryptedRequests_ASC',
  /** sum(encryptedRequests) descending */
  SumEncryptedRequestsDesc = 'sum_encryptedRequests_DESC',
  /** sum(pageViews) ascending */
  SumPageViewsAsc = 'sum_pageViews_ASC',
  /** sum(pageViews) descending */
  SumPageViewsDesc = 'sum_pageViews_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(threats) ascending */
  SumThreatsAsc = 'sum_threats_ASC',
  /** sum(threats) descending */
  SumThreatsDesc = 'sum_threats_DESC',
  /** uniq(uniques) ascending */
  UniqUniquesAsc = 'uniq_uniques_ASC',
  /** uniq(uniques) descending */
  UniqUniquesDesc = 'uniq_uniques_DESC'
}

export type AccountHttpRequests1hGroupsResponseStatusMapElem = {
  __typename?: 'AccountHttpRequests1hGroupsResponseStatusMapElem';
  /** HTTP response status code returned to client */
  edgeResponseStatus: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
};

export type AccountHttpRequests1hGroupsSum = {
  __typename?: 'AccountHttpRequests1hGroupsSum';
  browserMap: Array<AccountHttpRequests1hGroupsBrowserMapElem>;
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Bytes returned to client from cache */
  cachedBytes: Scalars['uint64']['output'];
  /** Requests served from cache */
  cachedRequests: Scalars['uint64']['output'];
  clientHTTPVersionMap: Array<AccountHttpRequests1hGroupsClientHttpVersionMapElem>;
  clientSSLMap: Array<AccountHttpRequests1hGroupsClientSslMapElem>;
  contentTypeMap: Array<AccountHttpRequests1hGroupsContentTypeMapElem>;
  countryMap: Array<AccountHttpRequests1hGroupsCountryMapElem>;
  /** Bytes returned to client using SSL/TLS protocol */
  encryptedBytes: Scalars['uint64']['output'];
  /** Requests served using SSL/TLS protocol */
  encryptedRequests: Scalars['uint64']['output'];
  ipClassMap: Array<AccountHttpRequests1hGroupsIpClassMapElem>;
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
  responseStatusMap: Array<AccountHttpRequests1hGroupsResponseStatusMapElem>;
  threatPathingMap: Array<AccountHttpRequests1hGroupsThreatPathingMapElem>;
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type AccountHttpRequests1hGroupsThreatPathingMapElem = {
  __typename?: 'AccountHttpRequests1hGroupsThreatPathingMapElem';
  requests: Scalars['uint64']['output'];
  /** Threat type */
  threatPathingName: Scalars['string']['output'];
};

export type AccountHttpRequests1hGroupsUniq = {
  __typename?: 'AccountHttpRequests1hGroupsUniq';
  /** A number of unique IPs */
  uniques: Scalars['uint64']['output'];
};

/** Minutely rollups of request data */
export type AccountHttpRequests1mGroups = {
  __typename?: 'AccountHttpRequests1mGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<AccountHttpRequests1mGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountHttpRequests1mGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountHttpRequests1mGroupsSum>;
  /** The number of unique values for a metric per dimension */
  uniq?: Maybe<AccountHttpRequests1mGroupsUniq>;
};

export type AccountHttpRequests1mGroupsAvg = {
  __typename?: 'AccountHttpRequests1mGroupsAvg';
  bytes: Scalars['float64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountHttpRequests1mGroupsBrowserMapElem = {
  __typename?: 'AccountHttpRequests1mGroupsBrowserMapElem';
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  /** Browser type */
  uaBrowserFamily: Scalars['string']['output'];
};

export type AccountHttpRequests1mGroupsClientHttpVersionMapElem = {
  __typename?: 'AccountHttpRequests1mGroupsClientHTTPVersionMapElem';
  /** HTTP version */
  clientHTTPProtocol: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type AccountHttpRequests1mGroupsClientSslMapElem = {
  __typename?: 'AccountHttpRequests1mGroupsClientSSLMapElem';
  /** Protocol version */
  clientSSLProtocol: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type AccountHttpRequests1mGroupsContentTypeMapElem = {
  __typename?: 'AccountHttpRequests1mGroupsContentTypeMapElem';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Content type returned to client */
  edgeResponseContentTypeName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type AccountHttpRequests1mGroupsCountryMapElem = {
  __typename?: 'AccountHttpRequests1mGroupsCountryMapElem';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type AccountHttpRequests1mGroupsDimensions = {
  __typename?: 'AccountHttpRequests1mGroupsDimensions';
  /** Request date */
  date: Scalars['Date']['output'];
  /** Request datetime, truncated to the minute */
  datetime: Scalars['Time']['output'];
  /** Request datetime truncated to the day */
  datetimeDay: Scalars['Time']['output'];
  /** Request datetime truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request datetime truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /**
   * Request datetime truncated to the minute
   * @deprecated Field is replaced with <code>datetime</code>
   */
  datetimeMinute: Scalars['Time']['output'];
};

export type AccountHttpRequests1mGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountHttpRequests1mGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountHttpRequests1mGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeDay_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type AccountHttpRequests1mGroupsIpClassMapElem = {
  __typename?: 'AccountHttpRequests1mGroupsIpClassMapElem';
  /** IP class */
  ipType: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export enum AccountHttpRequests1mGroupsOrderBy {
  /** avg(bytes) ascending */
  AvgBytesAsc = 'avg_bytes_ASC',
  /** avg(bytes) descending */
  AvgBytesDesc = 'avg_bytes_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeDay ascending */
  DatetimeDayAsc = 'datetimeDay_ASC',
  /** datetimeDay descending */
  DatetimeDayDesc = 'datetimeDay_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC',
  /** sum(cachedBytes) ascending */
  SumCachedBytesAsc = 'sum_cachedBytes_ASC',
  /** sum(cachedBytes) descending */
  SumCachedBytesDesc = 'sum_cachedBytes_DESC',
  /** sum(cachedRequests) ascending */
  SumCachedRequestsAsc = 'sum_cachedRequests_ASC',
  /** sum(cachedRequests) descending */
  SumCachedRequestsDesc = 'sum_cachedRequests_DESC',
  /** sum(encryptedBytes) ascending */
  SumEncryptedBytesAsc = 'sum_encryptedBytes_ASC',
  /** sum(encryptedBytes) descending */
  SumEncryptedBytesDesc = 'sum_encryptedBytes_DESC',
  /** sum(encryptedRequests) ascending */
  SumEncryptedRequestsAsc = 'sum_encryptedRequests_ASC',
  /** sum(encryptedRequests) descending */
  SumEncryptedRequestsDesc = 'sum_encryptedRequests_DESC',
  /** sum(pageViews) ascending */
  SumPageViewsAsc = 'sum_pageViews_ASC',
  /** sum(pageViews) descending */
  SumPageViewsDesc = 'sum_pageViews_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(threats) ascending */
  SumThreatsAsc = 'sum_threats_ASC',
  /** sum(threats) descending */
  SumThreatsDesc = 'sum_threats_DESC',
  /** uniq(uniques) ascending */
  UniqUniquesAsc = 'uniq_uniques_ASC',
  /** uniq(uniques) descending */
  UniqUniquesDesc = 'uniq_uniques_DESC'
}

export type AccountHttpRequests1mGroupsResponseStatusMapElem = {
  __typename?: 'AccountHttpRequests1mGroupsResponseStatusMapElem';
  /** HTTP response status code returned to client */
  edgeResponseStatus: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
};

export type AccountHttpRequests1mGroupsSum = {
  __typename?: 'AccountHttpRequests1mGroupsSum';
  browserMap: Array<AccountHttpRequests1mGroupsBrowserMapElem>;
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Bytes returned to client from cache */
  cachedBytes: Scalars['uint64']['output'];
  /** Requests served from cache */
  cachedRequests: Scalars['uint64']['output'];
  clientHTTPVersionMap: Array<AccountHttpRequests1mGroupsClientHttpVersionMapElem>;
  clientSSLMap: Array<AccountHttpRequests1mGroupsClientSslMapElem>;
  contentTypeMap: Array<AccountHttpRequests1mGroupsContentTypeMapElem>;
  countryMap: Array<AccountHttpRequests1mGroupsCountryMapElem>;
  /** Bytes returned to client using SSL/TLS protocol */
  encryptedBytes: Scalars['uint64']['output'];
  /** Requests served using SSL/TLS protocol */
  encryptedRequests: Scalars['uint64']['output'];
  ipClassMap: Array<AccountHttpRequests1mGroupsIpClassMapElem>;
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
  responseStatusMap: Array<AccountHttpRequests1mGroupsResponseStatusMapElem>;
  threatPathingMap: Array<AccountHttpRequests1mGroupsThreatPathingMapElem>;
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type AccountHttpRequests1mGroupsThreatPathingMapElem = {
  __typename?: 'AccountHttpRequests1mGroupsThreatPathingMapElem';
  requests: Scalars['uint64']['output'];
  /** Threat type */
  threatPathingName: Scalars['string']['output'];
};

export type AccountHttpRequests1mGroupsUniq = {
  __typename?: 'AccountHttpRequests1mGroupsUniq';
  /** A number of unique IPs */
  uniques: Scalars['uint64']['output'];
};

/** Raw HTTP requests with adaptive sampling */
export type AccountHttpRequestsAdaptive = {
  __typename?: 'AccountHttpRequestsAdaptive';
  /** API Gateway endpoint matched at the edge */
  apiGatewayMatchedEndpoint: Scalars['string']['output'];
  /** API Gateway host matched at the edge */
  apiGatewayMatchedHost: Scalars['string']['output'];
  /** Judgement of the bot management system */
  botManagementDecision: Scalars['string']['output'];
  /** The final score originated from bot management detections. */
  botScore: Scalars['uint8']['output'];
  /** Range of the bot management score */
  botScoreBucketBy10: Scalars['uint8']['output'];
  /** Name of the source detection which generated the bot management score. */
  botScoreSrcName: Scalars['string']['output'];
  /** Used Cache Reserve to serve the response */
  cacheReserveUsed: Scalars['uint8']['output'];
  /** Cache status */
  cacheStatus: Scalars['string']['output'];
  /** The ASN of the visitor as string */
  clientASNDescription: Scalars['string']['output'];
  /** The ASN number of the visitor */
  clientAsn: Scalars['string']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  clientDeviceType: Scalars['string']['output'];
  /** The visitor's IP address (IPv4 or IPv6) */
  clientIP: Scalars['string']['output'];
  /** The referrer host */
  clientRefererHost: Scalars['string']['output'];
  /** The HTTP hostname requested by the visitor */
  clientRequestHTTPHost: Scalars['string']['output'];
  /** HTTP method of client request */
  clientRequestHTTPMethodName: Scalars['string']['output'];
  /** The version of HTTP protocol requested by the visitor */
  clientRequestHTTPProtocol: Scalars['string']['output'];
  /** The path requested by visitor */
  clientRequestPath: Scalars['string']['output'];
  /** Query parameters of client request */
  clientRequestQuery: Scalars['string']['output'];
  /** HTTP request referrer */
  clientRequestReferer: Scalars['string']['output'];
  /** The url scheme requested by the visitor */
  clientRequestScheme: Scalars['string']['output'];
  /** SSL protocol version */
  clientSSLProtocol: Scalars['string']['output'];
  coloCode: Scalars['string']['output'];
  /** 1 if not all contents for this request where successfully scanned, else 0 */
  contentScanHasFailed: Scalars['uint8']['output'];
  /** Number of scannable content objects that are malicious */
  contentScanNumMaliciousObj: Scalars['uint8']['output'];
  /** Number of scannable content objects */
  contentScanNumObj: Scalars['uint8']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The time elapsed resolving a CNAME if it was required to reach your origin */
  edgeDnsResponseTimeMs: Scalars['uint16']['output'];
  edgeResponseContentTypeName: Scalars['string']['output'];
  /** HTTP response status code returned to browser */
  edgeResponseStatus: Scalars['uint16']['output'];
  /** The time elapsed between processing the first byte of the request until when we started sending a response */
  edgeTimeToFirstByteMs: Scalars['uint16']['output'];
  /**
   * Version associated with HTTP Application
   * @deprecated Field is replaced with <code>zoneVersion</code>
   */
  httpApplicationVersion: Scalars['uint64']['output'];
  /** '1' if a request was inititiated by a Cloudflare Worker on another zone; '0' otherwise. */
  isCrossZoneSubrequest: Scalars['uint8']['output'];
  /** MD5 hash of the JA3 TLS fingerprint */
  ja3Hash: Scalars['string']['output'];
  /** The distinct result of checking for leaked credentials */
  leakedCredentialCheckResult: Scalars['string']['output'];
  originASN: Scalars['uint32']['output'];
  /** ASN associated with origin */
  originASNDescription: Scalars['string']['output'];
  originIP: Scalars['string']['output'];
  originResponseDurationMs: Scalars['uint64']['output'];
  /** HTTP origin response status code returned to browser */
  originResponseStatus: Scalars['uint16']['output'];
  requestSource: Scalars['string']['output'];
  /** The code of the first-class action the Cloudflare Firewall took on this request */
  securityAction: Scalars['string']['output'];
  /** The Cloudflare security product triggered by this request */
  securitySource: Scalars['string']['output'];
  upperTierColoName: Scalars['string']['output'];
  /** visitor's user-agent string */
  userAgent: Scalars['string']['output'];
  /** Browser parsed from the user agent */
  userAgentBrowser: Scalars['string']['output'];
  /** OS parsed from the user agent */
  userAgentOS: Scalars['string']['output'];
  /** Beta. Overall request score generated by the WAF detection module */
  wafAttackScore: Scalars['uint8']['output'];
  /** Beta. Overall request score class generated by the WAF detection module */
  wafAttackScoreClass: Scalars['string']['output'];
  /** Beta. WAF score for a RCE attack */
  wafRceAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a SQLi attack */
  wafSqliAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a XSS attack */
  wafXssAttackScore: Scalars['uint8']['output'];
  /** The X-Requested-With header of the client request */
  xRequestedWith: Scalars['string']['output'];
  /** Associated zone */
  zoneTag: Scalars['string']['output'];
  /** The version of a zone */
  zoneVersion: Scalars['uint64']['output'];
};

export type AccountHttpRequestsAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<AccountHttpRequestsAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountHttpRequestsAdaptiveFilter_InputObject>>;
  apiGatewayMatchedEndpoint?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_notlike?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_geq?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_gt?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botManagementDecision_leq?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_like?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_lt?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_neq?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botManagementDecision_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_in?: InputMaybe<Scalars['bytes']['input']>;
  botScoreBucketBy10_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_notin?: InputMaybe<Scalars['bytes']['input']>;
  botScoreSrcName?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_geq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_gt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_leq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_like?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_lt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_neq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_in?: InputMaybe<Scalars['bytes']['input']>;
  botScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  cacheReserveUsed?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_geq?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_gt?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_in?: InputMaybe<Scalars['bytes']['input']>;
  cacheReserveUsed_leq?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_lt?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_neq?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_notin?: InputMaybe<Scalars['bytes']['input']>;
  cacheStatus?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_geq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_gt?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cacheStatus_leq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_like?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_lt?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_neq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cacheStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  clientAsn?: InputMaybe<Scalars['string']['input']>;
  clientAsn_geq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_gt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_leq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_like?: InputMaybe<Scalars['string']['input']>;
  clientAsn_lt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_neq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_notlike?: InputMaybe<Scalars['string']['input']>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_geq?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_gt?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientDeviceType_leq?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_like?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_lt?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_neq?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientDeviceType_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP?: InputMaybe<Scalars['string']['input']>;
  clientIP_geq?: InputMaybe<Scalars['string']['input']>;
  clientIP_gt?: InputMaybe<Scalars['string']['input']>;
  clientIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_leq?: InputMaybe<Scalars['string']['input']>;
  clientIP_like?: InputMaybe<Scalars['string']['input']>;
  clientIP_lt?: InputMaybe<Scalars['string']['input']>;
  clientIP_neq?: InputMaybe<Scalars['string']['input']>;
  clientIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestReferer_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestReferer_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientSSLProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientSSLProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  contentScanHasFailed?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanHasFailed_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumMaliciousObj?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumMaliciousObj_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumObj?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumObj_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_notin?: InputMaybe<Scalars['bytes']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  edgeDnsResponseTimeMs?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeDnsResponseTimeMs_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseContentTypeName?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_like?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeTimeToFirstByteMs?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeTimeToFirstByteMs_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpApplicationVersion?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  httpApplicationVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  isCrossZoneSubrequest?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_geq?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_gt?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_in?: InputMaybe<Scalars['bytes']['input']>;
  isCrossZoneSubrequest_leq?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_lt?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_neq?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_notin?: InputMaybe<Scalars['bytes']['input']>;
  ja3Hash?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_geq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_gt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_leq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_like?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_lt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_neq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_notlike?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_geq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_gt?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leakedCredentialCheckResult_leq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_like?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_lt?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_neq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leakedCredentialCheckResult_notlike?: InputMaybe<Scalars['string']['input']>;
  originASN?: InputMaybe<Scalars['uint32']['input']>;
  originASNDescription?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  originASN_geq?: InputMaybe<Scalars['uint32']['input']>;
  originASN_gt?: InputMaybe<Scalars['uint32']['input']>;
  originASN_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  originASN_leq?: InputMaybe<Scalars['uint32']['input']>;
  originASN_lt?: InputMaybe<Scalars['uint32']['input']>;
  originASN_neq?: InputMaybe<Scalars['uint32']['input']>;
  originASN_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  originIP?: InputMaybe<Scalars['string']['input']>;
  originIP_geq?: InputMaybe<Scalars['string']['input']>;
  originIP_gt?: InputMaybe<Scalars['string']['input']>;
  originIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originIP_leq?: InputMaybe<Scalars['string']['input']>;
  originIP_like?: InputMaybe<Scalars['string']['input']>;
  originIP_lt?: InputMaybe<Scalars['string']['input']>;
  originIP_neq?: InputMaybe<Scalars['string']['input']>;
  originIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originIP_notlike?: InputMaybe<Scalars['string']['input']>;
  originResponseDurationMs?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_geq?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_gt?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  originResponseDurationMs_leq?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_lt?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_neq?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  originResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  requestSource?: InputMaybe<Scalars['string']['input']>;
  requestSource_geq?: InputMaybe<Scalars['string']['input']>;
  requestSource_gt?: InputMaybe<Scalars['string']['input']>;
  requestSource_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestSource_leq?: InputMaybe<Scalars['string']['input']>;
  requestSource_like?: InputMaybe<Scalars['string']['input']>;
  requestSource_lt?: InputMaybe<Scalars['string']['input']>;
  requestSource_neq?: InputMaybe<Scalars['string']['input']>;
  requestSource_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestSource_notlike?: InputMaybe<Scalars['string']['input']>;
  securityAction?: InputMaybe<Scalars['string']['input']>;
  securityAction_geq?: InputMaybe<Scalars['string']['input']>;
  securityAction_gt?: InputMaybe<Scalars['string']['input']>;
  securityAction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  securityAction_leq?: InputMaybe<Scalars['string']['input']>;
  securityAction_like?: InputMaybe<Scalars['string']['input']>;
  securityAction_lt?: InputMaybe<Scalars['string']['input']>;
  securityAction_neq?: InputMaybe<Scalars['string']['input']>;
  securityAction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  securityAction_notlike?: InputMaybe<Scalars['string']['input']>;
  securitySource?: InputMaybe<Scalars['string']['input']>;
  securitySource_geq?: InputMaybe<Scalars['string']['input']>;
  securitySource_gt?: InputMaybe<Scalars['string']['input']>;
  securitySource_in?: InputMaybe<Array<Scalars['string']['input']>>;
  securitySource_leq?: InputMaybe<Scalars['string']['input']>;
  securitySource_like?: InputMaybe<Scalars['string']['input']>;
  securitySource_lt?: InputMaybe<Scalars['string']['input']>;
  securitySource_neq?: InputMaybe<Scalars['string']['input']>;
  securitySource_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  securitySource_notlike?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_geq?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_gt?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  upperTierColoName_leq?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_like?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_lt?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_neq?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  upperTierColoName_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_like?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgentOS?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_like?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent_geq?: InputMaybe<Scalars['string']['input']>;
  userAgent_gt?: InputMaybe<Scalars['string']['input']>;
  userAgent_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_leq?: InputMaybe<Scalars['string']['input']>;
  userAgent_like?: InputMaybe<Scalars['string']['input']>;
  userAgent_lt?: InputMaybe<Scalars['string']['input']>;
  userAgent_neq?: InputMaybe<Scalars['string']['input']>;
  userAgent_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScoreClass?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_geq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_gt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_leq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_like?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_lt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_neq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  xRequestedWith?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_geq?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_gt?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_in?: InputMaybe<Array<Scalars['string']['input']>>;
  xRequestedWith_leq?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_like?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_lt?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_neq?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  xRequestedWith_notlike?: InputMaybe<Scalars['string']['input']>;
  zoneTag?: InputMaybe<Scalars['string']['input']>;
  zoneTag_geq?: InputMaybe<Scalars['string']['input']>;
  zoneTag_gt?: InputMaybe<Scalars['string']['input']>;
  zoneTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  zoneTag_leq?: InputMaybe<Scalars['string']['input']>;
  zoneTag_like?: InputMaybe<Scalars['string']['input']>;
  zoneTag_lt?: InputMaybe<Scalars['string']['input']>;
  zoneTag_neq?: InputMaybe<Scalars['string']['input']>;
  zoneTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  zoneTag_notlike?: InputMaybe<Scalars['string']['input']>;
  zoneVersion?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  zoneVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

/** Aggregated HTTP requests data with adaptive sampling */
export type AccountHttpRequestsAdaptiveGroups = {
  __typename?: 'AccountHttpRequestsAdaptiveGroups';
  /** The average value used for sample interval */
  avg?: Maybe<AccountHttpRequestsAdaptiveGroupsAvg>;
  /** ALPHA - DO NOT USE */
  confidence: AccountHttpRequestsAdaptiveGroupsConfidence;
  /** The number of values for a metric per dimension */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountHttpRequestsAdaptiveGroupsDimensions>;
  /** Quantiles of a metric per dimension */
  quantiles?: Maybe<AccountHttpRequestsAdaptiveGroupsQuantiles>;
  /** The ratio of a range of status codes, between 0 and 1 */
  ratio?: Maybe<AccountHttpRequestsAdaptiveGroupsRatio>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountHttpRequestsAdaptiveGroupsSum>;
};


/** Aggregated HTTP requests data with adaptive sampling */
export type AccountHttpRequestsAdaptiveGroupsConfidenceArgs = {
  level: Scalars['float64']['input'];
};

export type AccountHttpRequestsAdaptiveGroupsAvg = {
  __typename?: 'AccountHttpRequestsAdaptiveGroupsAvg';
  /** The proportion of requests that were inititiated by a Cloudflare Worker on another zone */
  crossZoneSubrequests: Scalars['float64']['output'];
  edgeDnsResponseTimeMs: Scalars['float64']['output'];
  edgeTimeToFirstByteMs: Scalars['float64']['output'];
  /** The average originResponseDuration, in milliseconds, excluding 0 values (i.e. cached ones) */
  originResponseDurationMs: Scalars['float64']['output'];
  sampleInterval: Scalars['float64']['output'];
};

export type AccountHttpRequestsAdaptiveGroupsConfidence = {
  __typename?: 'AccountHttpRequestsAdaptiveGroupsConfidence';
  /** The number of values for a metric per dimension, with confidence intervals */
  count: Confidence;
  /** Confidence level that was requested */
  level: Scalars['float64']['output'];
  /** The sum of values for a metric per dimension, with confidence intervals */
  sum?: Maybe<AccountHttpRequestsAdaptiveGroupsSumConfidence>;
};

export type AccountHttpRequestsAdaptiveGroupsDimensions = {
  __typename?: 'AccountHttpRequestsAdaptiveGroupsDimensions';
  /** API Gateway endpoint matched at the edge */
  apiGatewayMatchedEndpoint: Scalars['string']['output'];
  /** API Gateway host matched at the edge */
  apiGatewayMatchedHost: Scalars['string']['output'];
  /** Judgement of the bot management system */
  botManagementDecision: Scalars['string']['output'];
  /** The final score originated from bot management detections. */
  botScore: Scalars['uint8']['output'];
  /** Range of the bot management score */
  botScoreBucketBy10: Scalars['uint8']['output'];
  /** Name of the source detection which generated the bot management score. */
  botScoreSrcName: Scalars['string']['output'];
  /** Used Cache Reserve to serve the response */
  cacheReserveUsed: Scalars['uint8']['output'];
  cacheStatus: Scalars['string']['output'];
  /** The ASN of the visitor as string */
  clientASNDescription: Scalars['string']['output'];
  clientAsn: Scalars['string']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  clientDeviceType: Scalars['string']['output'];
  clientIP: Scalars['string']['output'];
  /** The referrer host */
  clientRefererHost: Scalars['string']['output'];
  /** Host requested by the client */
  clientRequestHTTPHost: Scalars['string']['output'];
  /** HTTP method of client request */
  clientRequestHTTPMethodName: Scalars['string']['output'];
  /** HTTP protocol version */
  clientRequestHTTPProtocol: Scalars['string']['output'];
  /** Path of client request */
  clientRequestPath: Scalars['string']['output'];
  /** Query parameters of client request */
  clientRequestQuery: Scalars['string']['output'];
  /** HTTP request referrer */
  clientRequestReferer: Scalars['string']['output'];
  /** HTTP request URI scheme (http/https) */
  clientRequestScheme: Scalars['string']['output'];
  /** SSL protocol version */
  clientSSLProtocol: Scalars['string']['output'];
  coloCode: Scalars['string']['output'];
  /** 1 if not all contents for this request where successfully scanned, else 0 */
  contentScanHasFailed: Scalars['uint8']['output'];
  /** Number of scannable content objects that are malicious */
  contentScanNumMaliciousObj: Scalars['uint8']['output'];
  /** Number of scannable content objects */
  contentScanNumObj: Scalars['uint8']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The time elapsed resolving a CNAME if it was required to reach your origin */
  edgeDnsResponseTimeMs: Scalars['uint16']['output'];
  edgeResponseContentTypeName: Scalars['string']['output'];
  edgeResponseStatus: Scalars['uint16']['output'];
  /** The time elapsed between processing the first byte of the request until when we started sending a response */
  edgeTimeToFirstByteMs: Scalars['uint16']['output'];
  /**
   * Version associated with HTTP Application
   * @deprecated Field is replaced with <code>zoneVersion</code>
   */
  httpApplicationVersion: Scalars['uint64']['output'];
  /** '1' if a request was inititiated by a Cloudflare Worker on another zone; '0' otherwise. */
  isCrossZoneSubrequest: Scalars['uint8']['output'];
  /** MD5 hash of the JA3 TLS fingerprint */
  ja3Hash: Scalars['string']['output'];
  /** The distinct result of checking for leaked credentials */
  leakedCredentialCheckResult: Scalars['string']['output'];
  originASN: Scalars['uint32']['output'];
  /** ASN associated with origin */
  originASNDescription: Scalars['string']['output'];
  originIP: Scalars['string']['output'];
  originResponseDurationMs: Scalars['uint64']['output'];
  /** HTTP response status code returned by the origin */
  originResponseStatus: Scalars['uint16']['output'];
  requestSource: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** The code of the first-class action the Cloudflare Firewall took on this request */
  securityAction: Scalars['string']['output'];
  /** The Cloudflare security product triggered by this request */
  securitySource: Scalars['string']['output'];
  upperTierColoName: Scalars['string']['output'];
  userAgent: Scalars['string']['output'];
  /** Browser parsed from the user agent */
  userAgentBrowser: Scalars['string']['output'];
  /** OS parsed from the user agent */
  userAgentOS: Scalars['string']['output'];
  /** Beta. Overall request score generated by the WAF detection module */
  wafAttackScore: Scalars['uint8']['output'];
  /** Beta. Overall request score class generated by the WAF detection module */
  wafAttackScoreClass: Scalars['string']['output'];
  /** Beta. WAF score for a RCE attack */
  wafRceAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a SQLi attack */
  wafSqliAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a XSS attack */
  wafXssAttackScore: Scalars['uint8']['output'];
  /** The X-Requested-With header of the client request */
  xRequestedWith: Scalars['string']['output'];
  /** Associated zone */
  zoneTag: Scalars['string']['output'];
  /** The version of a zone */
  zoneVersion: Scalars['uint64']['output'];
};

export type AccountHttpRequestsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountHttpRequestsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountHttpRequestsAdaptiveGroupsFilter_InputObject>>;
  apiGatewayMatchedEndpoint?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_notlike?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_geq?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_gt?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botManagementDecision_leq?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_like?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_lt?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_neq?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botManagementDecision_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_in?: InputMaybe<Scalars['bytes']['input']>;
  botScoreBucketBy10_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_notin?: InputMaybe<Scalars['bytes']['input']>;
  botScoreSrcName?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_geq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_gt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_leq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_like?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_lt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_neq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_in?: InputMaybe<Scalars['bytes']['input']>;
  botScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  cacheReserveUsed?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_geq?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_gt?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_in?: InputMaybe<Scalars['bytes']['input']>;
  cacheReserveUsed_leq?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_lt?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_neq?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_notin?: InputMaybe<Scalars['bytes']['input']>;
  cacheStatus?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_geq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_gt?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cacheStatus_leq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_like?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_lt?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_neq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cacheStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  clientAsn?: InputMaybe<Scalars['string']['input']>;
  clientAsn_geq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_gt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_leq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_like?: InputMaybe<Scalars['string']['input']>;
  clientAsn_lt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_neq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_notlike?: InputMaybe<Scalars['string']['input']>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_geq?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_gt?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientDeviceType_leq?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_like?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_lt?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_neq?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientDeviceType_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP?: InputMaybe<Scalars['string']['input']>;
  clientIP_geq?: InputMaybe<Scalars['string']['input']>;
  clientIP_gt?: InputMaybe<Scalars['string']['input']>;
  clientIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_leq?: InputMaybe<Scalars['string']['input']>;
  clientIP_like?: InputMaybe<Scalars['string']['input']>;
  clientIP_lt?: InputMaybe<Scalars['string']['input']>;
  clientIP_neq?: InputMaybe<Scalars['string']['input']>;
  clientIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestReferer_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestReferer_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientSSLProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientSSLProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  contentScanHasFailed?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanHasFailed_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumMaliciousObj?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumMaliciousObj_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumObj?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumObj_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_notin?: InputMaybe<Scalars['bytes']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  edgeDnsResponseTimeMs?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeDnsResponseTimeMs_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseContentTypeName?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_like?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeTimeToFirstByteMs?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeTimeToFirstByteMs_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpApplicationVersion?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  httpApplicationVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  isCrossZoneSubrequest?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_geq?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_gt?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_in?: InputMaybe<Scalars['bytes']['input']>;
  isCrossZoneSubrequest_leq?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_lt?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_neq?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_notin?: InputMaybe<Scalars['bytes']['input']>;
  ja3Hash?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_geq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_gt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_leq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_like?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_lt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_neq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_notlike?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_geq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_gt?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leakedCredentialCheckResult_leq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_like?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_lt?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_neq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leakedCredentialCheckResult_notlike?: InputMaybe<Scalars['string']['input']>;
  originASN?: InputMaybe<Scalars['uint32']['input']>;
  originASNDescription?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  originASN_geq?: InputMaybe<Scalars['uint32']['input']>;
  originASN_gt?: InputMaybe<Scalars['uint32']['input']>;
  originASN_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  originASN_leq?: InputMaybe<Scalars['uint32']['input']>;
  originASN_lt?: InputMaybe<Scalars['uint32']['input']>;
  originASN_neq?: InputMaybe<Scalars['uint32']['input']>;
  originASN_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  originIP?: InputMaybe<Scalars['string']['input']>;
  originIP_geq?: InputMaybe<Scalars['string']['input']>;
  originIP_gt?: InputMaybe<Scalars['string']['input']>;
  originIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originIP_leq?: InputMaybe<Scalars['string']['input']>;
  originIP_like?: InputMaybe<Scalars['string']['input']>;
  originIP_lt?: InputMaybe<Scalars['string']['input']>;
  originIP_neq?: InputMaybe<Scalars['string']['input']>;
  originIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originIP_notlike?: InputMaybe<Scalars['string']['input']>;
  originResponseDurationMs?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_geq?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_gt?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  originResponseDurationMs_leq?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_lt?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_neq?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  originResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  requestSource?: InputMaybe<Scalars['string']['input']>;
  requestSource_geq?: InputMaybe<Scalars['string']['input']>;
  requestSource_gt?: InputMaybe<Scalars['string']['input']>;
  requestSource_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestSource_leq?: InputMaybe<Scalars['string']['input']>;
  requestSource_like?: InputMaybe<Scalars['string']['input']>;
  requestSource_lt?: InputMaybe<Scalars['string']['input']>;
  requestSource_neq?: InputMaybe<Scalars['string']['input']>;
  requestSource_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestSource_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  securityAction?: InputMaybe<Scalars['string']['input']>;
  securityAction_geq?: InputMaybe<Scalars['string']['input']>;
  securityAction_gt?: InputMaybe<Scalars['string']['input']>;
  securityAction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  securityAction_leq?: InputMaybe<Scalars['string']['input']>;
  securityAction_like?: InputMaybe<Scalars['string']['input']>;
  securityAction_lt?: InputMaybe<Scalars['string']['input']>;
  securityAction_neq?: InputMaybe<Scalars['string']['input']>;
  securityAction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  securityAction_notlike?: InputMaybe<Scalars['string']['input']>;
  securitySource?: InputMaybe<Scalars['string']['input']>;
  securitySource_geq?: InputMaybe<Scalars['string']['input']>;
  securitySource_gt?: InputMaybe<Scalars['string']['input']>;
  securitySource_in?: InputMaybe<Array<Scalars['string']['input']>>;
  securitySource_leq?: InputMaybe<Scalars['string']['input']>;
  securitySource_like?: InputMaybe<Scalars['string']['input']>;
  securitySource_lt?: InputMaybe<Scalars['string']['input']>;
  securitySource_neq?: InputMaybe<Scalars['string']['input']>;
  securitySource_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  securitySource_notlike?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_geq?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_gt?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  upperTierColoName_leq?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_like?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_lt?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_neq?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  upperTierColoName_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_like?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgentOS?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_like?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent_geq?: InputMaybe<Scalars['string']['input']>;
  userAgent_gt?: InputMaybe<Scalars['string']['input']>;
  userAgent_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_leq?: InputMaybe<Scalars['string']['input']>;
  userAgent_like?: InputMaybe<Scalars['string']['input']>;
  userAgent_lt?: InputMaybe<Scalars['string']['input']>;
  userAgent_neq?: InputMaybe<Scalars['string']['input']>;
  userAgent_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScoreClass?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_geq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_gt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_leq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_like?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_lt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_neq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  xRequestedWith?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_geq?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_gt?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_in?: InputMaybe<Array<Scalars['string']['input']>>;
  xRequestedWith_leq?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_like?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_lt?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_neq?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  xRequestedWith_notlike?: InputMaybe<Scalars['string']['input']>;
  zoneTag?: InputMaybe<Scalars['string']['input']>;
  zoneTag_geq?: InputMaybe<Scalars['string']['input']>;
  zoneTag_gt?: InputMaybe<Scalars['string']['input']>;
  zoneTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  zoneTag_leq?: InputMaybe<Scalars['string']['input']>;
  zoneTag_like?: InputMaybe<Scalars['string']['input']>;
  zoneTag_lt?: InputMaybe<Scalars['string']['input']>;
  zoneTag_neq?: InputMaybe<Scalars['string']['input']>;
  zoneTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  zoneTag_notlike?: InputMaybe<Scalars['string']['input']>;
  zoneVersion?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  zoneVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

export enum AccountHttpRequestsAdaptiveGroupsOrderBy {
  /** apiGatewayMatchedEndpoint ascending */
  ApiGatewayMatchedEndpointAsc = 'apiGatewayMatchedEndpoint_ASC',
  /** apiGatewayMatchedEndpoint descending */
  ApiGatewayMatchedEndpointDesc = 'apiGatewayMatchedEndpoint_DESC',
  /** apiGatewayMatchedHost ascending */
  ApiGatewayMatchedHostAsc = 'apiGatewayMatchedHost_ASC',
  /** apiGatewayMatchedHost descending */
  ApiGatewayMatchedHostDesc = 'apiGatewayMatchedHost_DESC',
  /** avg(crossZoneSubrequests) ascending */
  AvgCrossZoneSubrequestsAsc = 'avg_crossZoneSubrequests_ASC',
  /** avg(crossZoneSubrequests) descending */
  AvgCrossZoneSubrequestsDesc = 'avg_crossZoneSubrequests_DESC',
  /** avg(edgeDnsResponseTimeMs) ascending */
  AvgEdgeDnsResponseTimeMsAsc = 'avg_edgeDnsResponseTimeMs_ASC',
  /** avg(edgeDnsResponseTimeMs) descending */
  AvgEdgeDnsResponseTimeMsDesc = 'avg_edgeDnsResponseTimeMs_DESC',
  /** avg(edgeTimeToFirstByteMs) ascending */
  AvgEdgeTimeToFirstByteMsAsc = 'avg_edgeTimeToFirstByteMs_ASC',
  /** avg(edgeTimeToFirstByteMs) descending */
  AvgEdgeTimeToFirstByteMsDesc = 'avg_edgeTimeToFirstByteMs_DESC',
  /** avg(originResponseDurationMs) ascending */
  AvgOriginResponseDurationMsAsc = 'avg_originResponseDurationMs_ASC',
  /** avg(originResponseDurationMs) descending */
  AvgOriginResponseDurationMsDesc = 'avg_originResponseDurationMs_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** botManagementDecision ascending */
  BotManagementDecisionAsc = 'botManagementDecision_ASC',
  /** botManagementDecision descending */
  BotManagementDecisionDesc = 'botManagementDecision_DESC',
  /** botScoreBucketBy10 ascending */
  BotScoreBucketBy10Asc = 'botScoreBucketBy10_ASC',
  /** botScoreBucketBy10 descending */
  BotScoreBucketBy10Desc = 'botScoreBucketBy10_DESC',
  /** botScoreSrcName ascending */
  BotScoreSrcNameAsc = 'botScoreSrcName_ASC',
  /** botScoreSrcName descending */
  BotScoreSrcNameDesc = 'botScoreSrcName_DESC',
  /** botScore ascending */
  BotScoreAsc = 'botScore_ASC',
  /** botScore descending */
  BotScoreDesc = 'botScore_DESC',
  /** cacheReserveUsed ascending */
  CacheReserveUsedAsc = 'cacheReserveUsed_ASC',
  /** cacheReserveUsed descending */
  CacheReserveUsedDesc = 'cacheReserveUsed_DESC',
  /** cacheStatus ascending */
  CacheStatusAsc = 'cacheStatus_ASC',
  /** cacheStatus descending */
  CacheStatusDesc = 'cacheStatus_DESC',
  /** clientASNDescription ascending */
  ClientAsnDescriptionAsc = 'clientASNDescription_ASC',
  /** clientASNDescription descending */
  ClientAsnDescriptionDesc = 'clientASNDescription_DESC',
  /** clientAsn ascending */
  ClientAsnAsc = 'clientAsn_ASC',
  /** clientAsn descending */
  ClientAsnDesc = 'clientAsn_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** clientDeviceType ascending */
  ClientDeviceTypeAsc = 'clientDeviceType_ASC',
  /** clientDeviceType descending */
  ClientDeviceTypeDesc = 'clientDeviceType_DESC',
  /** clientIP ascending */
  ClientIpAsc = 'clientIP_ASC',
  /** clientIP descending */
  ClientIpDesc = 'clientIP_DESC',
  /** clientRefererHost ascending */
  ClientRefererHostAsc = 'clientRefererHost_ASC',
  /** clientRefererHost descending */
  ClientRefererHostDesc = 'clientRefererHost_DESC',
  /** clientRequestHTTPHost ascending */
  ClientRequestHttpHostAsc = 'clientRequestHTTPHost_ASC',
  /** clientRequestHTTPHost descending */
  ClientRequestHttpHostDesc = 'clientRequestHTTPHost_DESC',
  /** clientRequestHTTPMethodName ascending */
  ClientRequestHttpMethodNameAsc = 'clientRequestHTTPMethodName_ASC',
  /** clientRequestHTTPMethodName descending */
  ClientRequestHttpMethodNameDesc = 'clientRequestHTTPMethodName_DESC',
  /** clientRequestHTTPProtocol ascending */
  ClientRequestHttpProtocolAsc = 'clientRequestHTTPProtocol_ASC',
  /** clientRequestHTTPProtocol descending */
  ClientRequestHttpProtocolDesc = 'clientRequestHTTPProtocol_DESC',
  /** clientRequestPath ascending */
  ClientRequestPathAsc = 'clientRequestPath_ASC',
  /** clientRequestPath descending */
  ClientRequestPathDesc = 'clientRequestPath_DESC',
  /** clientRequestQuery ascending */
  ClientRequestQueryAsc = 'clientRequestQuery_ASC',
  /** clientRequestQuery descending */
  ClientRequestQueryDesc = 'clientRequestQuery_DESC',
  /** clientRequestReferer ascending */
  ClientRequestRefererAsc = 'clientRequestReferer_ASC',
  /** clientRequestReferer descending */
  ClientRequestRefererDesc = 'clientRequestReferer_DESC',
  /** clientRequestScheme ascending */
  ClientRequestSchemeAsc = 'clientRequestScheme_ASC',
  /** clientRequestScheme descending */
  ClientRequestSchemeDesc = 'clientRequestScheme_DESC',
  /** clientSSLProtocol ascending */
  ClientSslProtocolAsc = 'clientSSLProtocol_ASC',
  /** clientSSLProtocol descending */
  ClientSslProtocolDesc = 'clientSSLProtocol_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** contentScanHasFailed ascending */
  ContentScanHasFailedAsc = 'contentScanHasFailed_ASC',
  /** contentScanHasFailed descending */
  ContentScanHasFailedDesc = 'contentScanHasFailed_DESC',
  /** contentScanNumMaliciousObj ascending */
  ContentScanNumMaliciousObjAsc = 'contentScanNumMaliciousObj_ASC',
  /** contentScanNumMaliciousObj descending */
  ContentScanNumMaliciousObjDesc = 'contentScanNumMaliciousObj_DESC',
  /** contentScanNumObj ascending */
  ContentScanNumObjAsc = 'contentScanNumObj_ASC',
  /** contentScanNumObj descending */
  ContentScanNumObjDesc = 'contentScanNumObj_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** edgeDnsResponseTimeMs ascending */
  EdgeDnsResponseTimeMsAsc = 'edgeDnsResponseTimeMs_ASC',
  /** edgeDnsResponseTimeMs descending */
  EdgeDnsResponseTimeMsDesc = 'edgeDnsResponseTimeMs_DESC',
  /** edgeResponseContentTypeName ascending */
  EdgeResponseContentTypeNameAsc = 'edgeResponseContentTypeName_ASC',
  /** edgeResponseContentTypeName descending */
  EdgeResponseContentTypeNameDesc = 'edgeResponseContentTypeName_DESC',
  /** edgeResponseStatus ascending */
  EdgeResponseStatusAsc = 'edgeResponseStatus_ASC',
  /** edgeResponseStatus descending */
  EdgeResponseStatusDesc = 'edgeResponseStatus_DESC',
  /** edgeTimeToFirstByteMs ascending */
  EdgeTimeToFirstByteMsAsc = 'edgeTimeToFirstByteMs_ASC',
  /** edgeTimeToFirstByteMs descending */
  EdgeTimeToFirstByteMsDesc = 'edgeTimeToFirstByteMs_DESC',
  /** httpApplicationVersion ascending */
  HttpApplicationVersionAsc = 'httpApplicationVersion_ASC',
  /** httpApplicationVersion descending */
  HttpApplicationVersionDesc = 'httpApplicationVersion_DESC',
  /** isCrossZoneSubrequest ascending */
  IsCrossZoneSubrequestAsc = 'isCrossZoneSubrequest_ASC',
  /** isCrossZoneSubrequest descending */
  IsCrossZoneSubrequestDesc = 'isCrossZoneSubrequest_DESC',
  /** ja3Hash ascending */
  Ja3HashAsc = 'ja3Hash_ASC',
  /** ja3Hash descending */
  Ja3HashDesc = 'ja3Hash_DESC',
  /** leakedCredentialCheckResult ascending */
  LeakedCredentialCheckResultAsc = 'leakedCredentialCheckResult_ASC',
  /** leakedCredentialCheckResult descending */
  LeakedCredentialCheckResultDesc = 'leakedCredentialCheckResult_DESC',
  /** originASNDescription ascending */
  OriginAsnDescriptionAsc = 'originASNDescription_ASC',
  /** originASNDescription descending */
  OriginAsnDescriptionDesc = 'originASNDescription_DESC',
  /** originASN ascending */
  OriginAsnAsc = 'originASN_ASC',
  /** originASN descending */
  OriginAsnDesc = 'originASN_DESC',
  /** originIP ascending */
  OriginIpAsc = 'originIP_ASC',
  /** originIP descending */
  OriginIpDesc = 'originIP_DESC',
  /** originResponseDurationMs ascending */
  OriginResponseDurationMsAsc = 'originResponseDurationMs_ASC',
  /** originResponseDurationMs descending */
  OriginResponseDurationMsDesc = 'originResponseDurationMs_DESC',
  /** originResponseStatus ascending */
  OriginResponseStatusAsc = 'originResponseStatus_ASC',
  /** originResponseStatus descending */
  OriginResponseStatusDesc = 'originResponseStatus_DESC',
  /** quantiles(edgeDnsResponseTimeMsP50) ascending */
  QuantilesEdgeDnsResponseTimeMsP50Asc = 'quantiles_edgeDnsResponseTimeMsP50_ASC',
  /** quantiles(edgeDnsResponseTimeMsP50) descending */
  QuantilesEdgeDnsResponseTimeMsP50Desc = 'quantiles_edgeDnsResponseTimeMsP50_DESC',
  /** quantiles(edgeDnsResponseTimeMsP95) ascending */
  QuantilesEdgeDnsResponseTimeMsP95Asc = 'quantiles_edgeDnsResponseTimeMsP95_ASC',
  /** quantiles(edgeDnsResponseTimeMsP95) descending */
  QuantilesEdgeDnsResponseTimeMsP95Desc = 'quantiles_edgeDnsResponseTimeMsP95_DESC',
  /** quantiles(edgeDnsResponseTimeMsP99) ascending */
  QuantilesEdgeDnsResponseTimeMsP99Asc = 'quantiles_edgeDnsResponseTimeMsP99_ASC',
  /** quantiles(edgeDnsResponseTimeMsP99) descending */
  QuantilesEdgeDnsResponseTimeMsP99Desc = 'quantiles_edgeDnsResponseTimeMsP99_DESC',
  /** quantiles(edgeTimeToFirstByteMsP50) ascending */
  QuantilesEdgeTimeToFirstByteMsP50Asc = 'quantiles_edgeTimeToFirstByteMsP50_ASC',
  /** quantiles(edgeTimeToFirstByteMsP50) descending */
  QuantilesEdgeTimeToFirstByteMsP50Desc = 'quantiles_edgeTimeToFirstByteMsP50_DESC',
  /** quantiles(edgeTimeToFirstByteMsP95) ascending */
  QuantilesEdgeTimeToFirstByteMsP95Asc = 'quantiles_edgeTimeToFirstByteMsP95_ASC',
  /** quantiles(edgeTimeToFirstByteMsP95) descending */
  QuantilesEdgeTimeToFirstByteMsP95Desc = 'quantiles_edgeTimeToFirstByteMsP95_DESC',
  /** quantiles(edgeTimeToFirstByteMsP99) ascending */
  QuantilesEdgeTimeToFirstByteMsP99Asc = 'quantiles_edgeTimeToFirstByteMsP99_ASC',
  /** quantiles(edgeTimeToFirstByteMsP99) descending */
  QuantilesEdgeTimeToFirstByteMsP99Desc = 'quantiles_edgeTimeToFirstByteMsP99_DESC',
  /** quantiles(originResponseDurationMsP50) ascending */
  QuantilesOriginResponseDurationMsP50Asc = 'quantiles_originResponseDurationMsP50_ASC',
  /** quantiles(originResponseDurationMsP50) descending */
  QuantilesOriginResponseDurationMsP50Desc = 'quantiles_originResponseDurationMsP50_DESC',
  /** quantiles(originResponseDurationMsP95) ascending */
  QuantilesOriginResponseDurationMsP95Asc = 'quantiles_originResponseDurationMsP95_ASC',
  /** quantiles(originResponseDurationMsP95) descending */
  QuantilesOriginResponseDurationMsP95Desc = 'quantiles_originResponseDurationMsP95_DESC',
  /** quantiles(originResponseDurationMsP99) ascending */
  QuantilesOriginResponseDurationMsP99Asc = 'quantiles_originResponseDurationMsP99_ASC',
  /** quantiles(originResponseDurationMsP99) descending */
  QuantilesOriginResponseDurationMsP99Desc = 'quantiles_originResponseDurationMsP99_DESC',
  /** ratio(status4xx) ascending */
  RatioStatus4xxAsc = 'ratio_status4xx_ASC',
  /** ratio(status4xx) descending */
  RatioStatus4xxDesc = 'ratio_status4xx_DESC',
  /** ratio(status5xx) ascending */
  RatioStatus5xxAsc = 'ratio_status5xx_ASC',
  /** ratio(status5xx) descending */
  RatioStatus5xxDesc = 'ratio_status5xx_DESC',
  /** requestSource ascending */
  RequestSourceAsc = 'requestSource_ASC',
  /** requestSource descending */
  RequestSourceDesc = 'requestSource_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** securityAction ascending */
  SecurityActionAsc = 'securityAction_ASC',
  /** securityAction descending */
  SecurityActionDesc = 'securityAction_DESC',
  /** securitySource ascending */
  SecuritySourceAsc = 'securitySource_ASC',
  /** securitySource descending */
  SecuritySourceDesc = 'securitySource_DESC',
  /** sum(crossZoneSubrequests) ascending */
  SumCrossZoneSubrequestsAsc = 'sum_crossZoneSubrequests_ASC',
  /** sum(crossZoneSubrequests) descending */
  SumCrossZoneSubrequestsDesc = 'sum_crossZoneSubrequests_DESC',
  /** sum(edgeDnsResponseTimeMs) ascending */
  SumEdgeDnsResponseTimeMsAsc = 'sum_edgeDnsResponseTimeMs_ASC',
  /** sum(edgeDnsResponseTimeMs) descending */
  SumEdgeDnsResponseTimeMsDesc = 'sum_edgeDnsResponseTimeMs_DESC',
  /** sum(edgeResponseBytes) ascending */
  SumEdgeResponseBytesAsc = 'sum_edgeResponseBytes_ASC',
  /** sum(edgeResponseBytes) descending */
  SumEdgeResponseBytesDesc = 'sum_edgeResponseBytes_DESC',
  /** sum(edgeTimeToFirstByteMs) ascending */
  SumEdgeTimeToFirstByteMsAsc = 'sum_edgeTimeToFirstByteMs_ASC',
  /** sum(edgeTimeToFirstByteMs) descending */
  SumEdgeTimeToFirstByteMsDesc = 'sum_edgeTimeToFirstByteMs_DESC',
  /** sum(originResponseDurationMs) ascending */
  SumOriginResponseDurationMsAsc = 'sum_originResponseDurationMs_ASC',
  /** sum(originResponseDurationMs) descending */
  SumOriginResponseDurationMsDesc = 'sum_originResponseDurationMs_DESC',
  /** sum(visits) ascending */
  SumVisitsAsc = 'sum_visits_ASC',
  /** sum(visits) descending */
  SumVisitsDesc = 'sum_visits_DESC',
  /** upperTierColoName ascending */
  UpperTierColoNameAsc = 'upperTierColoName_ASC',
  /** upperTierColoName descending */
  UpperTierColoNameDesc = 'upperTierColoName_DESC',
  /** userAgentBrowser ascending */
  UserAgentBrowserAsc = 'userAgentBrowser_ASC',
  /** userAgentBrowser descending */
  UserAgentBrowserDesc = 'userAgentBrowser_DESC',
  /** userAgentOS ascending */
  UserAgentOsAsc = 'userAgentOS_ASC',
  /** userAgentOS descending */
  UserAgentOsDesc = 'userAgentOS_DESC',
  /** userAgent ascending */
  UserAgentAsc = 'userAgent_ASC',
  /** userAgent descending */
  UserAgentDesc = 'userAgent_DESC',
  /** wafAttackScoreClass ascending */
  WafAttackScoreClassAsc = 'wafAttackScoreClass_ASC',
  /** wafAttackScoreClass descending */
  WafAttackScoreClassDesc = 'wafAttackScoreClass_DESC',
  /** wafAttackScore ascending */
  WafAttackScoreAsc = 'wafAttackScore_ASC',
  /** wafAttackScore descending */
  WafAttackScoreDesc = 'wafAttackScore_DESC',
  /** wafRceAttackScore ascending */
  WafRceAttackScoreAsc = 'wafRceAttackScore_ASC',
  /** wafRceAttackScore descending */
  WafRceAttackScoreDesc = 'wafRceAttackScore_DESC',
  /** wafSqliAttackScore ascending */
  WafSqliAttackScoreAsc = 'wafSqliAttackScore_ASC',
  /** wafSqliAttackScore descending */
  WafSqliAttackScoreDesc = 'wafSqliAttackScore_DESC',
  /** wafXssAttackScore ascending */
  WafXssAttackScoreAsc = 'wafXssAttackScore_ASC',
  /** wafXssAttackScore descending */
  WafXssAttackScoreDesc = 'wafXssAttackScore_DESC',
  /** xRequestedWith ascending */
  XRequestedWithAsc = 'xRequestedWith_ASC',
  /** xRequestedWith descending */
  XRequestedWithDesc = 'xRequestedWith_DESC',
  /** zoneTag ascending */
  ZoneTagAsc = 'zoneTag_ASC',
  /** zoneTag descending */
  ZoneTagDesc = 'zoneTag_DESC',
  /** zoneVersion ascending */
  ZoneVersionAsc = 'zoneVersion_ASC',
  /** zoneVersion descending */
  ZoneVersionDesc = 'zoneVersion_DESC'
}

export type AccountHttpRequestsAdaptiveGroupsQuantiles = {
  __typename?: 'AccountHttpRequestsAdaptiveGroupsQuantiles';
  /** 50th percentile DNS Response Time (milliseconds) */
  edgeDnsResponseTimeMsP50: Scalars['float64']['output'];
  /** 95th percentile DNS Response Time (milliseconds) */
  edgeDnsResponseTimeMsP95: Scalars['float64']['output'];
  /** 99th percentile DNS Response Time (milliseconds) */
  edgeDnsResponseTimeMsP99: Scalars['float64']['output'];
  /** 50th percentile Time To First Byte (milliseconds) */
  edgeTimeToFirstByteMsP50: Scalars['float64']['output'];
  /** 95th percentile Time To First Byte (milliseconds) */
  edgeTimeToFirstByteMsP95: Scalars['float64']['output'];
  /** 99th percentile Time To First Byte (milliseconds) */
  edgeTimeToFirstByteMsP99: Scalars['float64']['output'];
  /** 50th percentile Origin Response Duration (milliseconds) */
  originResponseDurationMsP50: Scalars['float64']['output'];
  /** 95th percentile Origin Response Duration (milliseconds) */
  originResponseDurationMsP95: Scalars['float64']['output'];
  /** 99th percentile Origin Response Duration (milliseconds) */
  originResponseDurationMsP99: Scalars['float64']['output'];
};

export type AccountHttpRequestsAdaptiveGroupsRatio = {
  __typename?: 'AccountHttpRequestsAdaptiveGroupsRatio';
  status4xx: Scalars['float64']['output'];
  status5xx: Scalars['float64']['output'];
};

export type AccountHttpRequestsAdaptiveGroupsSum = {
  __typename?: 'AccountHttpRequestsAdaptiveGroupsSum';
  /** The number of requests that were inititiated by a Cloudflare Worker on another zone */
  crossZoneSubrequests: Scalars['uint64']['output'];
  edgeDnsResponseTimeMs: Scalars['uint64']['output'];
  edgeResponseBytes: Scalars['uint64']['output'];
  edgeTimeToFirstByteMs: Scalars['uint64']['output'];
  originResponseDurationMs: Scalars['uint64']['output'];
  /**
   * The number of requests by end-users that were initiated from a different
   * website (i.e. where the request HTTP Referer header does not match the host in
   * the HTTP Host header)
   */
  visits: Scalars['uint64']['output'];
};

export type AccountHttpRequestsAdaptiveGroupsSumConfidence = {
  __typename?: 'AccountHttpRequestsAdaptiveGroupsSumConfidence';
  /** Confidence interval for the corresponding point estimate */
  edgeResponseBytes: Confidence;
};

export enum AccountHttpRequestsAdaptiveOrderBy {
  /** apiGatewayMatchedEndpoint ascending */
  ApiGatewayMatchedEndpointAsc = 'apiGatewayMatchedEndpoint_ASC',
  /** apiGatewayMatchedEndpoint descending */
  ApiGatewayMatchedEndpointDesc = 'apiGatewayMatchedEndpoint_DESC',
  /** apiGatewayMatchedHost ascending */
  ApiGatewayMatchedHostAsc = 'apiGatewayMatchedHost_ASC',
  /** apiGatewayMatchedHost descending */
  ApiGatewayMatchedHostDesc = 'apiGatewayMatchedHost_DESC',
  /** botManagementDecision ascending */
  BotManagementDecisionAsc = 'botManagementDecision_ASC',
  /** botManagementDecision descending */
  BotManagementDecisionDesc = 'botManagementDecision_DESC',
  /** botScoreBucketBy10 ascending */
  BotScoreBucketBy10Asc = 'botScoreBucketBy10_ASC',
  /** botScoreBucketBy10 descending */
  BotScoreBucketBy10Desc = 'botScoreBucketBy10_DESC',
  /** botScoreSrcName ascending */
  BotScoreSrcNameAsc = 'botScoreSrcName_ASC',
  /** botScoreSrcName descending */
  BotScoreSrcNameDesc = 'botScoreSrcName_DESC',
  /** botScore ascending */
  BotScoreAsc = 'botScore_ASC',
  /** botScore descending */
  BotScoreDesc = 'botScore_DESC',
  /** cacheReserveUsed ascending */
  CacheReserveUsedAsc = 'cacheReserveUsed_ASC',
  /** cacheReserveUsed descending */
  CacheReserveUsedDesc = 'cacheReserveUsed_DESC',
  /** cacheStatus ascending */
  CacheStatusAsc = 'cacheStatus_ASC',
  /** cacheStatus descending */
  CacheStatusDesc = 'cacheStatus_DESC',
  /** clientASNDescription ascending */
  ClientAsnDescriptionAsc = 'clientASNDescription_ASC',
  /** clientASNDescription descending */
  ClientAsnDescriptionDesc = 'clientASNDescription_DESC',
  /** clientAsn ascending */
  ClientAsnAsc = 'clientAsn_ASC',
  /** clientAsn descending */
  ClientAsnDesc = 'clientAsn_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** clientDeviceType ascending */
  ClientDeviceTypeAsc = 'clientDeviceType_ASC',
  /** clientDeviceType descending */
  ClientDeviceTypeDesc = 'clientDeviceType_DESC',
  /** clientIP ascending */
  ClientIpAsc = 'clientIP_ASC',
  /** clientIP descending */
  ClientIpDesc = 'clientIP_DESC',
  /** clientRefererHost ascending */
  ClientRefererHostAsc = 'clientRefererHost_ASC',
  /** clientRefererHost descending */
  ClientRefererHostDesc = 'clientRefererHost_DESC',
  /** clientRequestHTTPHost ascending */
  ClientRequestHttpHostAsc = 'clientRequestHTTPHost_ASC',
  /** clientRequestHTTPHost descending */
  ClientRequestHttpHostDesc = 'clientRequestHTTPHost_DESC',
  /** clientRequestHTTPMethodName ascending */
  ClientRequestHttpMethodNameAsc = 'clientRequestHTTPMethodName_ASC',
  /** clientRequestHTTPMethodName descending */
  ClientRequestHttpMethodNameDesc = 'clientRequestHTTPMethodName_DESC',
  /** clientRequestHTTPProtocol ascending */
  ClientRequestHttpProtocolAsc = 'clientRequestHTTPProtocol_ASC',
  /** clientRequestHTTPProtocol descending */
  ClientRequestHttpProtocolDesc = 'clientRequestHTTPProtocol_DESC',
  /** clientRequestPath ascending */
  ClientRequestPathAsc = 'clientRequestPath_ASC',
  /** clientRequestPath descending */
  ClientRequestPathDesc = 'clientRequestPath_DESC',
  /** clientRequestQuery ascending */
  ClientRequestQueryAsc = 'clientRequestQuery_ASC',
  /** clientRequestQuery descending */
  ClientRequestQueryDesc = 'clientRequestQuery_DESC',
  /** clientRequestReferer ascending */
  ClientRequestRefererAsc = 'clientRequestReferer_ASC',
  /** clientRequestReferer descending */
  ClientRequestRefererDesc = 'clientRequestReferer_DESC',
  /** clientRequestScheme ascending */
  ClientRequestSchemeAsc = 'clientRequestScheme_ASC',
  /** clientRequestScheme descending */
  ClientRequestSchemeDesc = 'clientRequestScheme_DESC',
  /** clientSSLProtocol ascending */
  ClientSslProtocolAsc = 'clientSSLProtocol_ASC',
  /** clientSSLProtocol descending */
  ClientSslProtocolDesc = 'clientSSLProtocol_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** contentScanHasFailed ascending */
  ContentScanHasFailedAsc = 'contentScanHasFailed_ASC',
  /** contentScanHasFailed descending */
  ContentScanHasFailedDesc = 'contentScanHasFailed_DESC',
  /** contentScanNumMaliciousObj ascending */
  ContentScanNumMaliciousObjAsc = 'contentScanNumMaliciousObj_ASC',
  /** contentScanNumMaliciousObj descending */
  ContentScanNumMaliciousObjDesc = 'contentScanNumMaliciousObj_DESC',
  /** contentScanNumObj ascending */
  ContentScanNumObjAsc = 'contentScanNumObj_ASC',
  /** contentScanNumObj descending */
  ContentScanNumObjDesc = 'contentScanNumObj_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** edgeDnsResponseTimeMs ascending */
  EdgeDnsResponseTimeMsAsc = 'edgeDnsResponseTimeMs_ASC',
  /** edgeDnsResponseTimeMs descending */
  EdgeDnsResponseTimeMsDesc = 'edgeDnsResponseTimeMs_DESC',
  /** edgeResponseContentTypeName ascending */
  EdgeResponseContentTypeNameAsc = 'edgeResponseContentTypeName_ASC',
  /** edgeResponseContentTypeName descending */
  EdgeResponseContentTypeNameDesc = 'edgeResponseContentTypeName_DESC',
  /** edgeResponseStatus ascending */
  EdgeResponseStatusAsc = 'edgeResponseStatus_ASC',
  /** edgeResponseStatus descending */
  EdgeResponseStatusDesc = 'edgeResponseStatus_DESC',
  /** edgeTimeToFirstByteMs ascending */
  EdgeTimeToFirstByteMsAsc = 'edgeTimeToFirstByteMs_ASC',
  /** edgeTimeToFirstByteMs descending */
  EdgeTimeToFirstByteMsDesc = 'edgeTimeToFirstByteMs_DESC',
  /** httpApplicationVersion ascending */
  HttpApplicationVersionAsc = 'httpApplicationVersion_ASC',
  /** httpApplicationVersion descending */
  HttpApplicationVersionDesc = 'httpApplicationVersion_DESC',
  /** isCrossZoneSubrequest ascending */
  IsCrossZoneSubrequestAsc = 'isCrossZoneSubrequest_ASC',
  /** isCrossZoneSubrequest descending */
  IsCrossZoneSubrequestDesc = 'isCrossZoneSubrequest_DESC',
  /** ja3Hash ascending */
  Ja3HashAsc = 'ja3Hash_ASC',
  /** ja3Hash descending */
  Ja3HashDesc = 'ja3Hash_DESC',
  /** leakedCredentialCheckResult ascending */
  LeakedCredentialCheckResultAsc = 'leakedCredentialCheckResult_ASC',
  /** leakedCredentialCheckResult descending */
  LeakedCredentialCheckResultDesc = 'leakedCredentialCheckResult_DESC',
  /** originASNDescription ascending */
  OriginAsnDescriptionAsc = 'originASNDescription_ASC',
  /** originASNDescription descending */
  OriginAsnDescriptionDesc = 'originASNDescription_DESC',
  /** originASN ascending */
  OriginAsnAsc = 'originASN_ASC',
  /** originASN descending */
  OriginAsnDesc = 'originASN_DESC',
  /** originIP ascending */
  OriginIpAsc = 'originIP_ASC',
  /** originIP descending */
  OriginIpDesc = 'originIP_DESC',
  /** originResponseDurationMs ascending */
  OriginResponseDurationMsAsc = 'originResponseDurationMs_ASC',
  /** originResponseDurationMs descending */
  OriginResponseDurationMsDesc = 'originResponseDurationMs_DESC',
  /** originResponseStatus ascending */
  OriginResponseStatusAsc = 'originResponseStatus_ASC',
  /** originResponseStatus descending */
  OriginResponseStatusDesc = 'originResponseStatus_DESC',
  /** requestSource ascending */
  RequestSourceAsc = 'requestSource_ASC',
  /** requestSource descending */
  RequestSourceDesc = 'requestSource_DESC',
  /** securityAction ascending */
  SecurityActionAsc = 'securityAction_ASC',
  /** securityAction descending */
  SecurityActionDesc = 'securityAction_DESC',
  /** securitySource ascending */
  SecuritySourceAsc = 'securitySource_ASC',
  /** securitySource descending */
  SecuritySourceDesc = 'securitySource_DESC',
  /** upperTierColoName ascending */
  UpperTierColoNameAsc = 'upperTierColoName_ASC',
  /** upperTierColoName descending */
  UpperTierColoNameDesc = 'upperTierColoName_DESC',
  /** userAgentBrowser ascending */
  UserAgentBrowserAsc = 'userAgentBrowser_ASC',
  /** userAgentBrowser descending */
  UserAgentBrowserDesc = 'userAgentBrowser_DESC',
  /** userAgentOS ascending */
  UserAgentOsAsc = 'userAgentOS_ASC',
  /** userAgentOS descending */
  UserAgentOsDesc = 'userAgentOS_DESC',
  /** userAgent ascending */
  UserAgentAsc = 'userAgent_ASC',
  /** userAgent descending */
  UserAgentDesc = 'userAgent_DESC',
  /** wafAttackScoreClass ascending */
  WafAttackScoreClassAsc = 'wafAttackScoreClass_ASC',
  /** wafAttackScoreClass descending */
  WafAttackScoreClassDesc = 'wafAttackScoreClass_DESC',
  /** wafAttackScore ascending */
  WafAttackScoreAsc = 'wafAttackScore_ASC',
  /** wafAttackScore descending */
  WafAttackScoreDesc = 'wafAttackScore_DESC',
  /** wafRceAttackScore ascending */
  WafRceAttackScoreAsc = 'wafRceAttackScore_ASC',
  /** wafRceAttackScore descending */
  WafRceAttackScoreDesc = 'wafRceAttackScore_DESC',
  /** wafSqliAttackScore ascending */
  WafSqliAttackScoreAsc = 'wafSqliAttackScore_ASC',
  /** wafSqliAttackScore descending */
  WafSqliAttackScoreDesc = 'wafSqliAttackScore_DESC',
  /** wafXssAttackScore ascending */
  WafXssAttackScoreAsc = 'wafXssAttackScore_ASC',
  /** wafXssAttackScore descending */
  WafXssAttackScoreDesc = 'wafXssAttackScore_DESC',
  /** xRequestedWith ascending */
  XRequestedWithAsc = 'xRequestedWith_ASC',
  /** xRequestedWith descending */
  XRequestedWithDesc = 'xRequestedWith_DESC',
  /** zoneTag ascending */
  ZoneTagAsc = 'zoneTag_ASC',
  /** zoneTag descending */
  ZoneTagDesc = 'zoneTag_DESC',
  /** zoneVersion ascending */
  ZoneVersionAsc = 'zoneVersion_ASC',
  /** zoneVersion descending */
  ZoneVersionDesc = 'zoneVersion_DESC'
}

/** A high-level summary of HTTP requests made by end users. */
export type AccountHttpRequestsOverviewAdaptiveGroups = {
  __typename?: 'AccountHttpRequestsOverviewAdaptiveGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<AccountHttpRequestsOverviewAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountHttpRequestsOverviewAdaptiveGroupsDimensions>;
  /** The ratio of a metric in comparison to the rest of the traffic, between 0 and 1 */
  ratio?: Maybe<AccountHttpRequestsOverviewAdaptiveGroupsRatio>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountHttpRequestsOverviewAdaptiveGroupsSum>;
};

export type AccountHttpRequestsOverviewAdaptiveGroupsAvg = {
  __typename?: 'AccountHttpRequestsOverviewAdaptiveGroupsAvg';
  /** The average originResponseDuration, in milliseconds, excluding 0 values (i.e. cached ones) */
  originResponseDurationMs: Scalars['float64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountHttpRequestsOverviewAdaptiveGroupsDimensions = {
  __typename?: 'AccountHttpRequestsOverviewAdaptiveGroupsDimensions';
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  /** HTTP protocol version */
  clientRequestHTTPProtocol: Scalars['string']['output'];
  /** SSL protocol version */
  clientSSLProtocol: Scalars['string']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Content type returned to client */
  edgeResponseContentTypeName: Scalars['string']['output'];
  /** HTTP response status code returned to client */
  edgeResponseStatus: Scalars['uint16']['output'];
  /**
   * Version associated with HTTP Application
   * @deprecated Field is replaced with <code>zoneVersion</code>
   */
  httpApplicationVersion: Scalars['uint64']['output'];
  /** Browser parsed from the user agent */
  userAgentBrowser: Scalars['string']['output'];
  /** The version of a zone */
  zoneVersion: Scalars['uint64']['output'];
};

export type AccountHttpRequestsOverviewAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountHttpRequestsOverviewAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountHttpRequestsOverviewAdaptiveGroupsFilter_InputObject>>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientSSLProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientSSLProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  edgeResponseContentTypeName?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_like?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpApplicationVersion?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  httpApplicationVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  userAgentBrowser?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_like?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  zoneVersion?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  zoneVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

export enum AccountHttpRequestsOverviewAdaptiveGroupsOrderBy {
  /** avg(originResponseDurationMs) ascending */
  AvgOriginResponseDurationMsAsc = 'avg_originResponseDurationMs_ASC',
  /** avg(originResponseDurationMs) descending */
  AvgOriginResponseDurationMsDesc = 'avg_originResponseDurationMs_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** clientRequestHTTPProtocol ascending */
  ClientRequestHttpProtocolAsc = 'clientRequestHTTPProtocol_ASC',
  /** clientRequestHTTPProtocol descending */
  ClientRequestHttpProtocolDesc = 'clientRequestHTTPProtocol_DESC',
  /** clientSSLProtocol ascending */
  ClientSslProtocolAsc = 'clientSSLProtocol_ASC',
  /** clientSSLProtocol descending */
  ClientSslProtocolDesc = 'clientSSLProtocol_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** edgeResponseContentTypeName ascending */
  EdgeResponseContentTypeNameAsc = 'edgeResponseContentTypeName_ASC',
  /** edgeResponseContentTypeName descending */
  EdgeResponseContentTypeNameDesc = 'edgeResponseContentTypeName_DESC',
  /** edgeResponseStatus ascending */
  EdgeResponseStatusAsc = 'edgeResponseStatus_ASC',
  /** edgeResponseStatus descending */
  EdgeResponseStatusDesc = 'edgeResponseStatus_DESC',
  /** httpApplicationVersion ascending */
  HttpApplicationVersionAsc = 'httpApplicationVersion_ASC',
  /** httpApplicationVersion descending */
  HttpApplicationVersionDesc = 'httpApplicationVersion_DESC',
  /** ratio(cachedBytes) ascending */
  RatioCachedBytesAsc = 'ratio_cachedBytes_ASC',
  /** ratio(cachedBytes) descending */
  RatioCachedBytesDesc = 'ratio_cachedBytes_DESC',
  /** ratio(cachedRequests) ascending */
  RatioCachedRequestsAsc = 'ratio_cachedRequests_ASC',
  /** ratio(cachedRequests) descending */
  RatioCachedRequestsDesc = 'ratio_cachedRequests_DESC',
  /** ratio(encryptedBytes) ascending */
  RatioEncryptedBytesAsc = 'ratio_encryptedBytes_ASC',
  /** ratio(encryptedBytes) descending */
  RatioEncryptedBytesDesc = 'ratio_encryptedBytes_DESC',
  /** ratio(encryptedRequests) ascending */
  RatioEncryptedRequestsAsc = 'ratio_encryptedRequests_ASC',
  /** ratio(encryptedRequests) descending */
  RatioEncryptedRequestsDesc = 'ratio_encryptedRequests_DESC',
  /** ratio(status4xx) ascending */
  RatioStatus4xxAsc = 'ratio_status4xx_ASC',
  /** ratio(status4xx) descending */
  RatioStatus4xxDesc = 'ratio_status4xx_DESC',
  /** ratio(status5xx) ascending */
  RatioStatus5xxAsc = 'ratio_status5xx_ASC',
  /** ratio(status5xx) descending */
  RatioStatus5xxDesc = 'ratio_status5xx_DESC',
  /** requestSource ascending */
  RequestSourceAsc = 'requestSource_ASC',
  /** requestSource descending */
  RequestSourceDesc = 'requestSource_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC',
  /** sum(cachedBytes) ascending */
  SumCachedBytesAsc = 'sum_cachedBytes_ASC',
  /** sum(cachedBytes) descending */
  SumCachedBytesDesc = 'sum_cachedBytes_DESC',
  /** sum(cachedRequests) ascending */
  SumCachedRequestsAsc = 'sum_cachedRequests_ASC',
  /** sum(cachedRequests) descending */
  SumCachedRequestsDesc = 'sum_cachedRequests_DESC',
  /** sum(pageViews) ascending */
  SumPageViewsAsc = 'sum_pageViews_ASC',
  /** sum(pageViews) descending */
  SumPageViewsDesc = 'sum_pageViews_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(visits) ascending */
  SumVisitsAsc = 'sum_visits_ASC',
  /** sum(visits) descending */
  SumVisitsDesc = 'sum_visits_DESC',
  /** userAgentBrowser ascending */
  UserAgentBrowserAsc = 'userAgentBrowser_ASC',
  /** userAgentBrowser descending */
  UserAgentBrowserDesc = 'userAgentBrowser_DESC',
  /** zoneVersion ascending */
  ZoneVersionAsc = 'zoneVersion_ASC',
  /** zoneVersion descending */
  ZoneVersionDesc = 'zoneVersion_DESC'
}

export type AccountHttpRequestsOverviewAdaptiveGroupsRatio = {
  __typename?: 'AccountHttpRequestsOverviewAdaptiveGroupsRatio';
  cachedBytes: Scalars['float64']['output'];
  cachedRequests: Scalars['float64']['output'];
  encryptedBytes: Scalars['float64']['output'];
  encryptedRequests: Scalars['float64']['output'];
  status4xx: Scalars['float64']['output'];
  status5xx: Scalars['float64']['output'];
};

export type AccountHttpRequestsOverviewAdaptiveGroupsSum = {
  __typename?: 'AccountHttpRequestsOverviewAdaptiveGroupsSum';
  bytes: Scalars['uint64']['output'];
  /** Bytes returned to client from cache */
  cachedBytes: Scalars['uint64']['output'];
  /** Requests served from cache */
  cachedRequests: Scalars['uint64']['output'];
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
  /**
   * The number of requests by end-users that were initiated from a different
   * website (i.e. where the request HTTP Referer header does not match the host in
   * the HTTP Host header)
   */
  visits: Scalars['uint64']['output'];
};

/** Beta. Hyperdrive query events with adaptive sampling. */
export type AccountHyperdriveQueriesAdaptiveGroups = {
  __typename?: 'AccountHyperdriveQueriesAdaptiveGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<AccountHyperdriveQueriesAdaptiveGroupsAvg>;
  /** Total number of Hyperdrive queries */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountHyperdriveQueriesAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountHyperdriveQueriesAdaptiveGroupsSum>;
};

export type AccountHyperdriveQueriesAdaptiveGroupsAvg = {
  __typename?: 'AccountHyperdriveQueriesAdaptiveGroupsAvg';
  /** Average size (in bytes) of queries handled by Hyperdrive */
  queryBytes: Scalars['uint64']['output'];
  /** Average size (in bytes) of query results served by Hyperdrive */
  resultBytes: Scalars['uint64']['output'];
  /** The average value used for sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountHyperdriveQueriesAdaptiveGroupsDimensions = {
  __typename?: 'AccountHyperdriveQueriesAdaptiveGroupsDimensions';
  /** The cache status of the Hyperdrive query events */
  cacheStatus: Scalars['string']['output'];
  /** The ID of the Hyperdrive Config */
  configId: Scalars['string']['output'];
  /** Hyperdrive query event timestamp, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Hyperdrive query event timestamp */
  datetime: Scalars['Time']['output'];
  /** Hyperdrive query event timestamp, truncated to start of hour */
  datetimeHour: Scalars['Time']['output'];
  /** Hyperdrive query event timestamp, truncated to start of minute */
  datetimeMinute: Scalars['Time']['output'];
};

export type AccountHyperdriveQueriesAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountHyperdriveQueriesAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountHyperdriveQueriesAdaptiveGroupsFilter_InputObject>>;
  cacheStatus?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_geq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_gt?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cacheStatus_leq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_like?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_lt?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_neq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cacheStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  configId?: InputMaybe<Scalars['string']['input']>;
  configId_geq?: InputMaybe<Scalars['string']['input']>;
  configId_gt?: InputMaybe<Scalars['string']['input']>;
  configId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  configId_leq?: InputMaybe<Scalars['string']['input']>;
  configId_like?: InputMaybe<Scalars['string']['input']>;
  configId_lt?: InputMaybe<Scalars['string']['input']>;
  configId_neq?: InputMaybe<Scalars['string']['input']>;
  configId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  configId_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export enum AccountHyperdriveQueriesAdaptiveGroupsOrderBy {
  /** avg(queryBytes) ascending */
  AvgQueryBytesAsc = 'avg_queryBytes_ASC',
  /** avg(queryBytes) descending */
  AvgQueryBytesDesc = 'avg_queryBytes_DESC',
  /** avg(resultBytes) ascending */
  AvgResultBytesAsc = 'avg_resultBytes_ASC',
  /** avg(resultBytes) descending */
  AvgResultBytesDesc = 'avg_resultBytes_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** cacheStatus ascending */
  CacheStatusAsc = 'cacheStatus_ASC',
  /** cacheStatus descending */
  CacheStatusDesc = 'cacheStatus_DESC',
  /** configId ascending */
  ConfigIdAsc = 'configId_ASC',
  /** configId descending */
  ConfigIdDesc = 'configId_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** sum(queryBytes) ascending */
  SumQueryBytesAsc = 'sum_queryBytes_ASC',
  /** sum(queryBytes) descending */
  SumQueryBytesDesc = 'sum_queryBytes_DESC',
  /** sum(resultBytes) ascending */
  SumResultBytesAsc = 'sum_resultBytes_ASC',
  /** sum(resultBytes) descending */
  SumResultBytesDesc = 'sum_resultBytes_DESC'
}

export type AccountHyperdriveQueriesAdaptiveGroupsSum = {
  __typename?: 'AccountHyperdriveQueriesAdaptiveGroupsSum';
  /** Total size (in bytes) of queries handled by Hyperdrive */
  queryBytes: Scalars['uint64']['output'];
  /** Total size (in bytes) of query results served by Hyperdrive */
  resultBytes: Scalars['uint64']['output'];
};

/** A high-level summary of Cloudflare Images served to end users. */
export type AccountImagesRequestsAdaptiveGroups = {
  __typename?: 'AccountImagesRequestsAdaptiveGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<AccountImagesRequestsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountImagesRequestsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountImagesRequestsAdaptiveGroupsSum>;
};

export type AccountImagesRequestsAdaptiveGroupsAvg = {
  __typename?: 'AccountImagesRequestsAdaptiveGroupsAvg';
  sampleInterval: Scalars['float64']['output'];
};

export type AccountImagesRequestsAdaptiveGroupsDimensions = {
  __typename?: 'AccountImagesRequestsAdaptiveGroupsDimensions';
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
};

export type AccountImagesRequestsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountImagesRequestsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountImagesRequestsAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export enum AccountImagesRequestsAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** edgeResponseStatus ascending */
  EdgeResponseStatusAsc = 'edgeResponseStatus_ASC',
  /** edgeResponseStatus descending */
  EdgeResponseStatusDesc = 'edgeResponseStatus_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC'
}

export type AccountImagesRequestsAdaptiveGroupsSum = {
  __typename?: 'AccountImagesRequestsAdaptiveGroupsSum';
  requests: Scalars['uint64']['output'];
};

/** Image unique transfromations per day */
export type AccountImagesUniqueTransformations = {
  __typename?: 'AccountImagesUniqueTransformations';
  /** The date uniques are calculated for */
  date: Scalars['Date']['output'];
  /** Number of unique image transformations per day in sliding window */
  transformations: Scalars['uint64']['output'];
};

export type AccountImagesUniqueTransformationsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountImagesUniqueTransformationsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountImagesUniqueTransformationsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  transformations?: InputMaybe<Scalars['uint64']['input']>;
  transformations_geq?: InputMaybe<Scalars['uint64']['input']>;
  transformations_gt?: InputMaybe<Scalars['uint64']['input']>;
  transformations_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  transformations_leq?: InputMaybe<Scalars['uint64']['input']>;
  transformations_lt?: InputMaybe<Scalars['uint64']['input']>;
  transformations_neq?: InputMaybe<Scalars['uint64']['input']>;
  transformations_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

export enum AccountImagesUniqueTransformationsOrderBy {
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** transformations ascending */
  TransformationsAsc = 'transformations_ASC',
  /** transformations descending */
  TransformationsDesc = 'transformations_DESC'
}

/** Beta. Logpush job health metrics */
export type AccountLogpushHealthAdaptiveGroups = {
  __typename?: 'AccountLogpushHealthAdaptiveGroups';
  avg?: Maybe<AccountLogpushHealthAdaptiveGroupsAvg>;
  /** The number of values for a metric per dimension */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountLogpushHealthAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountLogpushHealthAdaptiveGroupsSum>;
};

export type AccountLogpushHealthAdaptiveGroupsAvg = {
  __typename?: 'AccountLogpushHealthAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountLogpushHealthAdaptiveGroupsDimensions = {
  __typename?: 'AccountLogpushHealthAdaptiveGroupsDimensions';
  /** Date that we completed pushing the log batch */
  date: Scalars['Date']['output'];
  /** Datetime that we completed pushing the log batch */
  datetime: Scalars['Time']['output'];
  /** Datetime that we completed pushing the log batch, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Datetime that we completed pushing the log batch, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Datetime that we completed pushing the log batch, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Datetime that we completed pushing the log batch, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Destination type, e.g. 'S3' or 'GCS' */
  destinationType: Scalars['string']['output'];
  /**
   * Cloudflare may attempt to push a batch of logs multiple times if we encounter
   * a failure. This field will be set to 'true' if this was the last push attempt
   * for this batch of logs. If this field is set to false, it means the push
   * failed but another retry was attempted. If this field is set to true and
   * status >= 300, then the batch of logs failed to push and log data was lost. If
   * you want to count the total number of logs that succeeded or failed, you
   * should always set final = true.
   */
  final: Scalars['uint8']['output'];
  /** The Logpush Job ID */
  jobId: Scalars['uint64']['output'];
  /** HTTP response status code of the log destination */
  status: Scalars['uint16']['output'];
};

export type AccountLogpushHealthAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountLogpushHealthAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountLogpushHealthAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationType?: InputMaybe<Scalars['string']['input']>;
  destinationType_geq?: InputMaybe<Scalars['string']['input']>;
  destinationType_gt?: InputMaybe<Scalars['string']['input']>;
  destinationType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationType_leq?: InputMaybe<Scalars['string']['input']>;
  destinationType_like?: InputMaybe<Scalars['string']['input']>;
  destinationType_lt?: InputMaybe<Scalars['string']['input']>;
  destinationType_neq?: InputMaybe<Scalars['string']['input']>;
  destinationType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationType_notlike?: InputMaybe<Scalars['string']['input']>;
  final?: InputMaybe<Scalars['uint8']['input']>;
  final_geq?: InputMaybe<Scalars['uint8']['input']>;
  final_gt?: InputMaybe<Scalars['uint8']['input']>;
  final_in?: InputMaybe<Scalars['bytes']['input']>;
  final_leq?: InputMaybe<Scalars['uint8']['input']>;
  final_lt?: InputMaybe<Scalars['uint8']['input']>;
  final_neq?: InputMaybe<Scalars['uint8']['input']>;
  final_notin?: InputMaybe<Scalars['bytes']['input']>;
  jobId?: InputMaybe<Scalars['uint64']['input']>;
  jobId_geq?: InputMaybe<Scalars['uint64']['input']>;
  jobId_gt?: InputMaybe<Scalars['uint64']['input']>;
  jobId_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  jobId_leq?: InputMaybe<Scalars['uint64']['input']>;
  jobId_lt?: InputMaybe<Scalars['uint64']['input']>;
  jobId_neq?: InputMaybe<Scalars['uint64']['input']>;
  jobId_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  status?: InputMaybe<Scalars['uint16']['input']>;
  status_geq?: InputMaybe<Scalars['uint16']['input']>;
  status_gt?: InputMaybe<Scalars['uint16']['input']>;
  status_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  status_leq?: InputMaybe<Scalars['uint16']['input']>;
  status_lt?: InputMaybe<Scalars['uint16']['input']>;
  status_neq?: InputMaybe<Scalars['uint16']['input']>;
  status_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
};

export enum AccountLogpushHealthAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationType ascending */
  DestinationTypeAsc = 'destinationType_ASC',
  /** destinationType descending */
  DestinationTypeDesc = 'destinationType_DESC',
  /** final ascending */
  FinalAsc = 'final_ASC',
  /** final descending */
  FinalDesc = 'final_DESC',
  /** jobId ascending */
  JobIdAsc = 'jobId_ASC',
  /** jobId descending */
  JobIdDesc = 'jobId_DESC',
  /** status ascending */
  StatusAsc = 'status_ASC',
  /** status descending */
  StatusDesc = 'status_DESC',
  /** sum(bytesCompressed) ascending */
  SumBytesCompressedAsc = 'sum_bytesCompressed_ASC',
  /** sum(bytesCompressed) descending */
  SumBytesCompressedDesc = 'sum_bytesCompressed_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC',
  /** sum(records) ascending */
  SumRecordsAsc = 'sum_records_ASC',
  /** sum(records) descending */
  SumRecordsDesc = 'sum_records_DESC'
}

export type AccountLogpushHealthAdaptiveGroupsSum = {
  __typename?: 'AccountLogpushHealthAdaptiveGroupsSum';
  /** Bytes of uncompressed log data pushed */
  bytes: Scalars['uint64']['output'];
  /** Bytes of compressed log data pushed */
  bytesCompressed: Scalars['uint64']['output'];
  /** A count of the total number of records pushed. */
  records: Scalars['uint64']['output'];
};

/** Network analytics data for Magic Firewall */
export type AccountMagicFirewallNetworkAnalyticsAdaptiveGroups = {
  __typename?: 'AccountMagicFirewallNetworkAnalyticsAdaptiveGroups';
  /** The average of values for a metric per dimension */
  avg?: Maybe<AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsSum>;
};

export type AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsAvg = {
  __typename?: 'AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsAvg';
  /** Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime */
  bitRate: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date */
  bitRateDay: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes */
  bitRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes */
  bitRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour */
  bitRateHour: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute */
  bitRateMinute: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds */
  bitRateTenSeconds: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime */
  packetRate: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date */
  packetRateDay: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes */
  packetRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes */
  packetRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour */
  packetRateHour: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute */
  packetRateMinute: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds */
  packetRateTenSeconds: Scalars['uint64']['output'];
};

export type AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsDimensions = {
  __typename?: 'AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsDimensions';
  /** Application tag associated with the packet */
  applicationTag: Scalars['string']['output'];
  /** City where the Cloudflare datacenter that received the packet is located */
  coloCity: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (nearest IATA airport code) */
  coloCode: Scalars['string']['output'];
  /** Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2) */
  coloCountry: Scalars['string']['output'];
  /** Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding) */
  coloGeohash: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (unique site identifier) */
  coloName: Scalars['string']['output'];
  /** Date that the packet was received */
  date: Scalars['Date']['output'];
  /** Date and time that the packet was received */
  datetime: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest hour */
  datetimeHour: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest ten seconds */
  datetimeTenSeconds: Scalars['Time']['output'];
  /** ASN associated with the destination IP of the packet, or 0 if there was no mapping available */
  destinationAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the destination IP of the packet, if available */
  destinationAsnName: Scalars['string']['output'];
  /** Country where the destination IP of the packet is located (ISO 3166-1 alpha-2) */
  destinationCountry: Scalars['string']['output'];
  /** Device tag associated with the destination IP of the packet */
  destinationDeviceTag: Scalars['string']['output'];
  /** Latitude and longitude where the destination IP of the packet is located (Geohash encoding) */
  destinationGeohash: Scalars['string']['output'];
  /** Value of the Destination Port header field in the TCP or UDP packet */
  destinationPort: Scalars['uint16']['output'];
  /** Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral) */
  direction: Scalars['string']['output'];
  /** Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6) */
  ethertype: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the GRE packet */
  greChecksum: Scalars['uint16']['output'];
  /** Value of the Ethertype header field in the GRE packet */
  greEthertype: Scalars['uint16']['output'];
  /** Length of the GRE packet header, in bytes */
  greHeaderLength: Scalars['uint16']['output'];
  /** Value of the Key header field in the GRE packet */
  greKey: Scalars['uint32']['output'];
  /** Value of the Sequence Number header field in the GRE packet */
  greSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Version header field in the GRE packet */
  greVersion: Scalars['uint8']['output'];
  /** Value of the Checkusm header field in the ICMP packet */
  icmpChecksum: Scalars['uint16']['output'];
  /** Value of the Code header field in the ICMP packet */
  icmpCode: Scalars['uint8']['output'];
  /** Value of the Type header field in the ICMP packet */
  icmpType: Scalars['uint8']['output'];
  /** Value of the Destination Address header field in the IPv4 or IPv6 packet */
  ipDestinationAddress: Scalars['string']['output'];
  /** Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipDestinationSubnet: Scalars['string']['output'];
  /** Value of the Fragment Offset header field in the IPv4 or IPv6 packet */
  ipFragmentOffset: Scalars['uint16']['output'];
  /** Length of the IPv4 or IPv6 packet header, in bytes */
  ipHeaderLength: Scalars['uint16']['output'];
  /** Value of the More Fragments header field in the IPv4 or IPv6 packet */
  ipMoreFragments: Scalars['uint8']['output'];
  /** Value of the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocol: Scalars['uint8']['output'];
  /** Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocolName: Scalars['string']['output'];
  /** Value of the Source Address header field in the IPv4 or IPv6 packet */
  ipSourceAddress: Scalars['string']['output'];
  /** Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipSourceSubnet: Scalars['string']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes */
  ipTotalLength: Scalars['uint16']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated */
  ipTotalLengthBuckets: Scalars['uint16']['output'];
  /** Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet */
  ipTtl: Scalars['uint8']['output'];
  /**
   * Value of the TTL header field in the IPv4 packet or the Hop Limit header field
   * in the IPv6 packet, with the last digit truncated
   */
  ipTtlBuckets: Scalars['uint8']['output'];
  /** Value of the Checksum header field in the IPv4 packet */
  ipv4Checksum: Scalars['uint16']['output'];
  /** Value of the Don't Fragment header field in the IPv4 packet */
  ipv4DontFragment: Scalars['uint8']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv4 packet */
  ipv4Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv4 packet */
  ipv4Ecn: Scalars['uint8']['output'];
  /** Value of the Identification header field in the IPv4 packet */
  ipv4Identification: Scalars['uint16']['output'];
  /** List of Options numbers included in the IPv4 packet header */
  ipv4Options: Scalars['string']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv6 packet */
  ipv6Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv6 packet */
  ipv6Ecn: Scalars['uint8']['output'];
  /** List of Extension Header numbers included in the IPv6 packet header */
  ipv6ExtensionHeaders: Scalars['string']['output'];
  /** Value of the Flow Label header field in the IPv6 packet */
  ipv6FlowLabel: Scalars['uint32']['output'];
  /** Value of the Identification extension header field in the IPv6 packet */
  ipv6Identification: Scalars['uint32']['output'];
  /** IP lease tag associated with the packet */
  leaseTag: Scalars['string']['output'];
  /** The action that was taken on the packet (possible values: pass, drop) */
  outcome: Scalars['string']['output'];
  /** IP prefix tag associated with the packet */
  prefixTag: Scalars['string']['output'];
  /** Unique identifier of the rule that matched the packet, if any */
  ruleId: Scalars['string']['output'];
  /** Unique identifier of the ruleset containing the rule that matched the packet, if any */
  rulesetId: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** ASN associated with the source IP of the packet, or 0 if there was no mapping available */
  sourceAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the source IP of the packet, if available */
  sourceAsnName: Scalars['string']['output'];
  /** Country where the source IP of the packet is located (ISO 3166-1 alpha-2) */
  sourceCountry: Scalars['string']['output'];
  /** Device tag associated with the source IP of the packet */
  sourceDeviceTag: Scalars['string']['output'];
  /** Latitude and longitude where the source IP of the packet is located (Geohash encoding) */
  sourceGeohash: Scalars['string']['output'];
  /** Value of the Source Port header field in the TCP or UDP packet */
  sourcePort: Scalars['uint16']['output'];
  /** Value of the Acknowledgement Number header field in the TCP packet */
  tcpAcknowledgementNumber: Scalars['uint32']['output'];
  /** Value of the Checkusm header field in the TCP packet */
  tcpChecksum: Scalars['uint16']['output'];
  /** Value of the Data Offset header field in the TCP packet */
  tcpDataOffset: Scalars['uint16']['output'];
  /** Value of the Flags header field in the TCP packet */
  tcpFlags: Scalars['uint8']['output'];
  /** Human-readable string representation of the Flags header field in the TCP packet */
  tcpFlagsString: Scalars['string']['output'];
  /** Value of the MSS option header field in the TCP packet */
  tcpMss: Scalars['uint16']['output'];
  /** List of Options numbers included in the TCP packet header */
  tcpOptions: Scalars['string']['output'];
  /** Value of the SACK Blocks option header field in the TCP packet */
  tcpSackBlocks: Scalars['string']['output'];
  /** Value of the SACK Permitted option header field in the TCP packet */
  tcpSackPermitted: Scalars['uint8']['output'];
  /** Value of the Sequence Number header field in the TCP packet */
  tcpSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Timestamp Echo Reply option header field in the TCP packet */
  tcpTimestampEcr: Scalars['uint32']['output'];
  /** Value of the Timestamp option header field in the TCP packet */
  tcpTimestampValue: Scalars['uint32']['output'];
  /** Value of the Urgent Pointer header field in the TCP packet */
  tcpUrgentPointer: Scalars['uint16']['output'];
  /** Value of the Window Scale option header field in the TCP packet */
  tcpWindowScale: Scalars['uint16']['output'];
  /** Value of the Window Size header field in the TCP packet */
  tcpWindowSize: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the UDP packet */
  udpChecksum: Scalars['uint16']['output'];
  /** Value of the Payload Length header field in the UDP packet */
  udpPayloadLength: Scalars['uint16']['output'];
  /** The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop) */
  verdict: Scalars['string']['output'];
};

export type AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  applicationTag?: InputMaybe<Scalars['string']['input']>;
  applicationTag_geq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_gt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_leq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_like?: InputMaybe<Scalars['string']['input']>;
  applicationTag_lt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_neq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCity?: InputMaybe<Scalars['string']['input']>;
  coloCity_geq?: InputMaybe<Scalars['string']['input']>;
  coloCity_gt?: InputMaybe<Scalars['string']['input']>;
  coloCity_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_leq?: InputMaybe<Scalars['string']['input']>;
  coloCity_like?: InputMaybe<Scalars['string']['input']>;
  coloCity_lt?: InputMaybe<Scalars['string']['input']>;
  coloCity_neq?: InputMaybe<Scalars['string']['input']>;
  coloCity_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCountry?: InputMaybe<Scalars['string']['input']>;
  coloCountry_geq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_gt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_leq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_like?: InputMaybe<Scalars['string']['input']>;
  coloCountry_lt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_neq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  coloGeohash?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_like?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  coloName?: InputMaybe<Scalars['string']['input']>;
  coloName_geq?: InputMaybe<Scalars['string']['input']>;
  coloName_gt?: InputMaybe<Scalars['string']['input']>;
  coloName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_leq?: InputMaybe<Scalars['string']['input']>;
  coloName_like?: InputMaybe<Scalars['string']['input']>;
  coloName_lt?: InputMaybe<Scalars['string']['input']>;
  coloName_neq?: InputMaybe<Scalars['string']['input']>;
  coloName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationAsn?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsnName?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_like?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationCountry?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_geq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_gt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_leq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_like?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_lt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_neq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_geq?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_gt?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationDeviceTag_leq?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_like?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_lt?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_neq?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationDeviceTag_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_like?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  direction?: InputMaybe<Scalars['string']['input']>;
  direction_geq?: InputMaybe<Scalars['string']['input']>;
  direction_gt?: InputMaybe<Scalars['string']['input']>;
  direction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_leq?: InputMaybe<Scalars['string']['input']>;
  direction_like?: InputMaybe<Scalars['string']['input']>;
  direction_lt?: InputMaybe<Scalars['string']['input']>;
  direction_neq?: InputMaybe<Scalars['string']['input']>;
  direction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_notlike?: InputMaybe<Scalars['string']['input']>;
  ethertype?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ethertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greKey?: InputMaybe<Scalars['uint32']['input']>;
  greKey_geq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_gt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greKey_leq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_lt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_neq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greVersion?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  greVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpCode?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpCode_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpType?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpType_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipDestinationAddress?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipFragmentOffset?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipFragmentOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipMoreFragments?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_in?: InputMaybe<Scalars['bytes']['input']>;
  ipMoreFragments_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocolName?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_geq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_gt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_leq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_like?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_lt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_neq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipProtocol_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_in?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipSourceAddress?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipTotalLength?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLengthBuckets_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTtl?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtlBuckets_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Checksum?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Checksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4DontFragment?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4DontFragment_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Identification?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Identification_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Options?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_geq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_gt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_leq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_like?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_lt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_neq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6ExtensionHeaders?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_geq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_gt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_leq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_like?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_lt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_neq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6FlowLabel?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6FlowLabel_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  leaseTag?: InputMaybe<Scalars['string']['input']>;
  leaseTag_geq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_gt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_leq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_like?: InputMaybe<Scalars['string']['input']>;
  leaseTag_lt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_neq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_notlike?: InputMaybe<Scalars['string']['input']>;
  outcome?: InputMaybe<Scalars['string']['input']>;
  outcome_geq?: InputMaybe<Scalars['string']['input']>;
  outcome_gt?: InputMaybe<Scalars['string']['input']>;
  outcome_in?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_leq?: InputMaybe<Scalars['string']['input']>;
  outcome_like?: InputMaybe<Scalars['string']['input']>;
  outcome_lt?: InputMaybe<Scalars['string']['input']>;
  outcome_neq?: InputMaybe<Scalars['string']['input']>;
  outcome_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_notlike?: InputMaybe<Scalars['string']['input']>;
  prefixTag?: InputMaybe<Scalars['string']['input']>;
  prefixTag_geq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_gt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_leq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_like?: InputMaybe<Scalars['string']['input']>;
  prefixTag_lt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_neq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_notlike?: InputMaybe<Scalars['string']['input']>;
  ruleId?: InputMaybe<Scalars['string']['input']>;
  ruleId_geq?: InputMaybe<Scalars['string']['input']>;
  ruleId_gt?: InputMaybe<Scalars['string']['input']>;
  ruleId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_leq?: InputMaybe<Scalars['string']['input']>;
  ruleId_like?: InputMaybe<Scalars['string']['input']>;
  ruleId_lt?: InputMaybe<Scalars['string']['input']>;
  ruleId_neq?: InputMaybe<Scalars['string']['input']>;
  ruleId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_notlike?: InputMaybe<Scalars['string']['input']>;
  rulesetId?: InputMaybe<Scalars['string']['input']>;
  rulesetId_geq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_gt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_leq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_like?: InputMaybe<Scalars['string']['input']>;
  rulesetId_lt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_neq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsnName?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_like?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceCountry?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_geq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_gt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_leq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_like?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_lt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_neq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_geq?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_gt?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceDeviceTag_leq?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_like?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_lt?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_neq?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceDeviceTag_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_like?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpAcknowledgementNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpAcknowledgementNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlagsString?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_geq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_gt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_leq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_like?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_lt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_neq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpMss?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpMss_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpOptions?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_geq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_gt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_leq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_like?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_lt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_neq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_geq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_gt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_leq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_like?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_lt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_neq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackPermitted?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpSackPermitted_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpUrgentPointer?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpUrgentPointer_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  verdict?: InputMaybe<Scalars['string']['input']>;
  verdict_geq?: InputMaybe<Scalars['string']['input']>;
  verdict_gt?: InputMaybe<Scalars['string']['input']>;
  verdict_in?: InputMaybe<Array<Scalars['string']['input']>>;
  verdict_leq?: InputMaybe<Scalars['string']['input']>;
  verdict_like?: InputMaybe<Scalars['string']['input']>;
  verdict_lt?: InputMaybe<Scalars['string']['input']>;
  verdict_neq?: InputMaybe<Scalars['string']['input']>;
  verdict_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  verdict_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsOrderBy {
  /** applicationTag ascending */
  ApplicationTagAsc = 'applicationTag_ASC',
  /** applicationTag descending */
  ApplicationTagDesc = 'applicationTag_DESC',
  /** avg(bitRateDay) ascending */
  AvgBitRateDayAsc = 'avg_bitRateDay_ASC',
  /** avg(bitRateDay) descending */
  AvgBitRateDayDesc = 'avg_bitRateDay_DESC',
  /** avg(bitRateFifteenMinutes) ascending */
  AvgBitRateFifteenMinutesAsc = 'avg_bitRateFifteenMinutes_ASC',
  /** avg(bitRateFifteenMinutes) descending */
  AvgBitRateFifteenMinutesDesc = 'avg_bitRateFifteenMinutes_DESC',
  /** avg(bitRateFiveMinutes) ascending */
  AvgBitRateFiveMinutesAsc = 'avg_bitRateFiveMinutes_ASC',
  /** avg(bitRateFiveMinutes) descending */
  AvgBitRateFiveMinutesDesc = 'avg_bitRateFiveMinutes_DESC',
  /** avg(bitRateHour) ascending */
  AvgBitRateHourAsc = 'avg_bitRateHour_ASC',
  /** avg(bitRateHour) descending */
  AvgBitRateHourDesc = 'avg_bitRateHour_DESC',
  /** avg(bitRateMinute) ascending */
  AvgBitRateMinuteAsc = 'avg_bitRateMinute_ASC',
  /** avg(bitRateMinute) descending */
  AvgBitRateMinuteDesc = 'avg_bitRateMinute_DESC',
  /** avg(bitRateTenSeconds) ascending */
  AvgBitRateTenSecondsAsc = 'avg_bitRateTenSeconds_ASC',
  /** avg(bitRateTenSeconds) descending */
  AvgBitRateTenSecondsDesc = 'avg_bitRateTenSeconds_DESC',
  /** avg(bitRate) ascending */
  AvgBitRateAsc = 'avg_bitRate_ASC',
  /** avg(bitRate) descending */
  AvgBitRateDesc = 'avg_bitRate_DESC',
  /** avg(packetRateDay) ascending */
  AvgPacketRateDayAsc = 'avg_packetRateDay_ASC',
  /** avg(packetRateDay) descending */
  AvgPacketRateDayDesc = 'avg_packetRateDay_DESC',
  /** avg(packetRateFifteenMinutes) ascending */
  AvgPacketRateFifteenMinutesAsc = 'avg_packetRateFifteenMinutes_ASC',
  /** avg(packetRateFifteenMinutes) descending */
  AvgPacketRateFifteenMinutesDesc = 'avg_packetRateFifteenMinutes_DESC',
  /** avg(packetRateFiveMinutes) ascending */
  AvgPacketRateFiveMinutesAsc = 'avg_packetRateFiveMinutes_ASC',
  /** avg(packetRateFiveMinutes) descending */
  AvgPacketRateFiveMinutesDesc = 'avg_packetRateFiveMinutes_DESC',
  /** avg(packetRateHour) ascending */
  AvgPacketRateHourAsc = 'avg_packetRateHour_ASC',
  /** avg(packetRateHour) descending */
  AvgPacketRateHourDesc = 'avg_packetRateHour_DESC',
  /** avg(packetRateMinute) ascending */
  AvgPacketRateMinuteAsc = 'avg_packetRateMinute_ASC',
  /** avg(packetRateMinute) descending */
  AvgPacketRateMinuteDesc = 'avg_packetRateMinute_DESC',
  /** avg(packetRateTenSeconds) ascending */
  AvgPacketRateTenSecondsAsc = 'avg_packetRateTenSeconds_ASC',
  /** avg(packetRateTenSeconds) descending */
  AvgPacketRateTenSecondsDesc = 'avg_packetRateTenSeconds_DESC',
  /** avg(packetRate) ascending */
  AvgPacketRateAsc = 'avg_packetRate_ASC',
  /** avg(packetRate) descending */
  AvgPacketRateDesc = 'avg_packetRate_DESC',
  /** coloCity ascending */
  ColoCityAsc = 'coloCity_ASC',
  /** coloCity descending */
  ColoCityDesc = 'coloCity_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** coloCountry ascending */
  ColoCountryAsc = 'coloCountry_ASC',
  /** coloCountry descending */
  ColoCountryDesc = 'coloCountry_DESC',
  /** coloGeohash ascending */
  ColoGeohashAsc = 'coloGeohash_ASC',
  /** coloGeohash descending */
  ColoGeohashDesc = 'coloGeohash_DESC',
  /** coloName ascending */
  ColoNameAsc = 'coloName_ASC',
  /** coloName descending */
  ColoNameDesc = 'coloName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetimeTenSeconds ascending */
  DatetimeTenSecondsAsc = 'datetimeTenSeconds_ASC',
  /** datetimeTenSeconds descending */
  DatetimeTenSecondsDesc = 'datetimeTenSeconds_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationAsnName ascending */
  DestinationAsnNameAsc = 'destinationAsnName_ASC',
  /** destinationAsnName descending */
  DestinationAsnNameDesc = 'destinationAsnName_DESC',
  /** destinationAsn ascending */
  DestinationAsnAsc = 'destinationAsn_ASC',
  /** destinationAsn descending */
  DestinationAsnDesc = 'destinationAsn_DESC',
  /** destinationCountry ascending */
  DestinationCountryAsc = 'destinationCountry_ASC',
  /** destinationCountry descending */
  DestinationCountryDesc = 'destinationCountry_DESC',
  /** destinationDeviceTag ascending */
  DestinationDeviceTagAsc = 'destinationDeviceTag_ASC',
  /** destinationDeviceTag descending */
  DestinationDeviceTagDesc = 'destinationDeviceTag_DESC',
  /** destinationGeohash ascending */
  DestinationGeohashAsc = 'destinationGeohash_ASC',
  /** destinationGeohash descending */
  DestinationGeohashDesc = 'destinationGeohash_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** direction ascending */
  DirectionAsc = 'direction_ASC',
  /** direction descending */
  DirectionDesc = 'direction_DESC',
  /** ethertype ascending */
  EthertypeAsc = 'ethertype_ASC',
  /** ethertype descending */
  EthertypeDesc = 'ethertype_DESC',
  /** greChecksum ascending */
  GreChecksumAsc = 'greChecksum_ASC',
  /** greChecksum descending */
  GreChecksumDesc = 'greChecksum_DESC',
  /** greEthertype ascending */
  GreEthertypeAsc = 'greEthertype_ASC',
  /** greEthertype descending */
  GreEthertypeDesc = 'greEthertype_DESC',
  /** greHeaderLength ascending */
  GreHeaderLengthAsc = 'greHeaderLength_ASC',
  /** greHeaderLength descending */
  GreHeaderLengthDesc = 'greHeaderLength_DESC',
  /** greKey ascending */
  GreKeyAsc = 'greKey_ASC',
  /** greKey descending */
  GreKeyDesc = 'greKey_DESC',
  /** greSequenceNumber ascending */
  GreSequenceNumberAsc = 'greSequenceNumber_ASC',
  /** greSequenceNumber descending */
  GreSequenceNumberDesc = 'greSequenceNumber_DESC',
  /** greVersion ascending */
  GreVersionAsc = 'greVersion_ASC',
  /** greVersion descending */
  GreVersionDesc = 'greVersion_DESC',
  /** icmpChecksum ascending */
  IcmpChecksumAsc = 'icmpChecksum_ASC',
  /** icmpChecksum descending */
  IcmpChecksumDesc = 'icmpChecksum_DESC',
  /** icmpCode ascending */
  IcmpCodeAsc = 'icmpCode_ASC',
  /** icmpCode descending */
  IcmpCodeDesc = 'icmpCode_DESC',
  /** icmpType ascending */
  IcmpTypeAsc = 'icmpType_ASC',
  /** icmpType descending */
  IcmpTypeDesc = 'icmpType_DESC',
  /** ipDestinationAddress ascending */
  IpDestinationAddressAsc = 'ipDestinationAddress_ASC',
  /** ipDestinationAddress descending */
  IpDestinationAddressDesc = 'ipDestinationAddress_DESC',
  /** ipDestinationSubnet ascending */
  IpDestinationSubnetAsc = 'ipDestinationSubnet_ASC',
  /** ipDestinationSubnet descending */
  IpDestinationSubnetDesc = 'ipDestinationSubnet_DESC',
  /** ipFragmentOffset ascending */
  IpFragmentOffsetAsc = 'ipFragmentOffset_ASC',
  /** ipFragmentOffset descending */
  IpFragmentOffsetDesc = 'ipFragmentOffset_DESC',
  /** ipHeaderLength ascending */
  IpHeaderLengthAsc = 'ipHeaderLength_ASC',
  /** ipHeaderLength descending */
  IpHeaderLengthDesc = 'ipHeaderLength_DESC',
  /** ipMoreFragments ascending */
  IpMoreFragmentsAsc = 'ipMoreFragments_ASC',
  /** ipMoreFragments descending */
  IpMoreFragmentsDesc = 'ipMoreFragments_DESC',
  /** ipProtocolName ascending */
  IpProtocolNameAsc = 'ipProtocolName_ASC',
  /** ipProtocolName descending */
  IpProtocolNameDesc = 'ipProtocolName_DESC',
  /** ipProtocol ascending */
  IpProtocolAsc = 'ipProtocol_ASC',
  /** ipProtocol descending */
  IpProtocolDesc = 'ipProtocol_DESC',
  /** ipSourceAddress ascending */
  IpSourceAddressAsc = 'ipSourceAddress_ASC',
  /** ipSourceAddress descending */
  IpSourceAddressDesc = 'ipSourceAddress_DESC',
  /** ipSourceSubnet ascending */
  IpSourceSubnetAsc = 'ipSourceSubnet_ASC',
  /** ipSourceSubnet descending */
  IpSourceSubnetDesc = 'ipSourceSubnet_DESC',
  /** ipTotalLengthBuckets ascending */
  IpTotalLengthBucketsAsc = 'ipTotalLengthBuckets_ASC',
  /** ipTotalLengthBuckets descending */
  IpTotalLengthBucketsDesc = 'ipTotalLengthBuckets_DESC',
  /** ipTotalLength ascending */
  IpTotalLengthAsc = 'ipTotalLength_ASC',
  /** ipTotalLength descending */
  IpTotalLengthDesc = 'ipTotalLength_DESC',
  /** ipTtlBuckets ascending */
  IpTtlBucketsAsc = 'ipTtlBuckets_ASC',
  /** ipTtlBuckets descending */
  IpTtlBucketsDesc = 'ipTtlBuckets_DESC',
  /** ipTtl ascending */
  IpTtlAsc = 'ipTtl_ASC',
  /** ipTtl descending */
  IpTtlDesc = 'ipTtl_DESC',
  /** ipv4Checksum ascending */
  Ipv4ChecksumAsc = 'ipv4Checksum_ASC',
  /** ipv4Checksum descending */
  Ipv4ChecksumDesc = 'ipv4Checksum_DESC',
  /** ipv4DontFragment ascending */
  Ipv4DontFragmentAsc = 'ipv4DontFragment_ASC',
  /** ipv4DontFragment descending */
  Ipv4DontFragmentDesc = 'ipv4DontFragment_DESC',
  /** ipv4Dscp ascending */
  Ipv4DscpAsc = 'ipv4Dscp_ASC',
  /** ipv4Dscp descending */
  Ipv4DscpDesc = 'ipv4Dscp_DESC',
  /** ipv4Ecn ascending */
  Ipv4EcnAsc = 'ipv4Ecn_ASC',
  /** ipv4Ecn descending */
  Ipv4EcnDesc = 'ipv4Ecn_DESC',
  /** ipv4Identification ascending */
  Ipv4IdentificationAsc = 'ipv4Identification_ASC',
  /** ipv4Identification descending */
  Ipv4IdentificationDesc = 'ipv4Identification_DESC',
  /** ipv4Options ascending */
  Ipv4OptionsAsc = 'ipv4Options_ASC',
  /** ipv4Options descending */
  Ipv4OptionsDesc = 'ipv4Options_DESC',
  /** ipv6Dscp ascending */
  Ipv6DscpAsc = 'ipv6Dscp_ASC',
  /** ipv6Dscp descending */
  Ipv6DscpDesc = 'ipv6Dscp_DESC',
  /** ipv6Ecn ascending */
  Ipv6EcnAsc = 'ipv6Ecn_ASC',
  /** ipv6Ecn descending */
  Ipv6EcnDesc = 'ipv6Ecn_DESC',
  /** ipv6ExtensionHeaders ascending */
  Ipv6ExtensionHeadersAsc = 'ipv6ExtensionHeaders_ASC',
  /** ipv6ExtensionHeaders descending */
  Ipv6ExtensionHeadersDesc = 'ipv6ExtensionHeaders_DESC',
  /** ipv6FlowLabel ascending */
  Ipv6FlowLabelAsc = 'ipv6FlowLabel_ASC',
  /** ipv6FlowLabel descending */
  Ipv6FlowLabelDesc = 'ipv6FlowLabel_DESC',
  /** ipv6Identification ascending */
  Ipv6IdentificationAsc = 'ipv6Identification_ASC',
  /** ipv6Identification descending */
  Ipv6IdentificationDesc = 'ipv6Identification_DESC',
  /** leaseTag ascending */
  LeaseTagAsc = 'leaseTag_ASC',
  /** leaseTag descending */
  LeaseTagDesc = 'leaseTag_DESC',
  /** outcome ascending */
  OutcomeAsc = 'outcome_ASC',
  /** outcome descending */
  OutcomeDesc = 'outcome_DESC',
  /** prefixTag ascending */
  PrefixTagAsc = 'prefixTag_ASC',
  /** prefixTag descending */
  PrefixTagDesc = 'prefixTag_DESC',
  /** ruleId ascending */
  RuleIdAsc = 'ruleId_ASC',
  /** ruleId descending */
  RuleIdDesc = 'ruleId_DESC',
  /** rulesetId ascending */
  RulesetIdAsc = 'rulesetId_ASC',
  /** rulesetId descending */
  RulesetIdDesc = 'rulesetId_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sourceAsnName ascending */
  SourceAsnNameAsc = 'sourceAsnName_ASC',
  /** sourceAsnName descending */
  SourceAsnNameDesc = 'sourceAsnName_DESC',
  /** sourceAsn ascending */
  SourceAsnAsc = 'sourceAsn_ASC',
  /** sourceAsn descending */
  SourceAsnDesc = 'sourceAsn_DESC',
  /** sourceCountry ascending */
  SourceCountryAsc = 'sourceCountry_ASC',
  /** sourceCountry descending */
  SourceCountryDesc = 'sourceCountry_DESC',
  /** sourceDeviceTag ascending */
  SourceDeviceTagAsc = 'sourceDeviceTag_ASC',
  /** sourceDeviceTag descending */
  SourceDeviceTagDesc = 'sourceDeviceTag_DESC',
  /** sourceGeohash ascending */
  SourceGeohashAsc = 'sourceGeohash_ASC',
  /** sourceGeohash descending */
  SourceGeohashDesc = 'sourceGeohash_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** sum(bits) ascending */
  SumBitsAsc = 'sum_bits_ASC',
  /** sum(bits) descending */
  SumBitsDesc = 'sum_bits_DESC',
  /** sum(packets) ascending */
  SumPacketsAsc = 'sum_packets_ASC',
  /** sum(packets) descending */
  SumPacketsDesc = 'sum_packets_DESC',
  /** system ascending */
  SystemAsc = 'system_ASC',
  /** system descending */
  SystemDesc = 'system_DESC',
  /** tcpAcknowledgementNumber ascending */
  TcpAcknowledgementNumberAsc = 'tcpAcknowledgementNumber_ASC',
  /** tcpAcknowledgementNumber descending */
  TcpAcknowledgementNumberDesc = 'tcpAcknowledgementNumber_DESC',
  /** tcpChecksum ascending */
  TcpChecksumAsc = 'tcpChecksum_ASC',
  /** tcpChecksum descending */
  TcpChecksumDesc = 'tcpChecksum_DESC',
  /** tcpDataOffset ascending */
  TcpDataOffsetAsc = 'tcpDataOffset_ASC',
  /** tcpDataOffset descending */
  TcpDataOffsetDesc = 'tcpDataOffset_DESC',
  /** tcpFlagsString ascending */
  TcpFlagsStringAsc = 'tcpFlagsString_ASC',
  /** tcpFlagsString descending */
  TcpFlagsStringDesc = 'tcpFlagsString_DESC',
  /** tcpFlags ascending */
  TcpFlagsAsc = 'tcpFlags_ASC',
  /** tcpFlags descending */
  TcpFlagsDesc = 'tcpFlags_DESC',
  /** tcpMss ascending */
  TcpMssAsc = 'tcpMss_ASC',
  /** tcpMss descending */
  TcpMssDesc = 'tcpMss_DESC',
  /** tcpOptions ascending */
  TcpOptionsAsc = 'tcpOptions_ASC',
  /** tcpOptions descending */
  TcpOptionsDesc = 'tcpOptions_DESC',
  /** tcpSackBlocks ascending */
  TcpSackBlocksAsc = 'tcpSackBlocks_ASC',
  /** tcpSackBlocks descending */
  TcpSackBlocksDesc = 'tcpSackBlocks_DESC',
  /** tcpSackPermitted ascending */
  TcpSackPermittedAsc = 'tcpSackPermitted_ASC',
  /** tcpSackPermitted descending */
  TcpSackPermittedDesc = 'tcpSackPermitted_DESC',
  /** tcpSequenceNumber ascending */
  TcpSequenceNumberAsc = 'tcpSequenceNumber_ASC',
  /** tcpSequenceNumber descending */
  TcpSequenceNumberDesc = 'tcpSequenceNumber_DESC',
  /** tcpTimestampEcr ascending */
  TcpTimestampEcrAsc = 'tcpTimestampEcr_ASC',
  /** tcpTimestampEcr descending */
  TcpTimestampEcrDesc = 'tcpTimestampEcr_DESC',
  /** tcpTimestampValue ascending */
  TcpTimestampValueAsc = 'tcpTimestampValue_ASC',
  /** tcpTimestampValue descending */
  TcpTimestampValueDesc = 'tcpTimestampValue_DESC',
  /** tcpUrgentPointer ascending */
  TcpUrgentPointerAsc = 'tcpUrgentPointer_ASC',
  /** tcpUrgentPointer descending */
  TcpUrgentPointerDesc = 'tcpUrgentPointer_DESC',
  /** tcpWindowScale ascending */
  TcpWindowScaleAsc = 'tcpWindowScale_ASC',
  /** tcpWindowScale descending */
  TcpWindowScaleDesc = 'tcpWindowScale_DESC',
  /** tcpWindowSize ascending */
  TcpWindowSizeAsc = 'tcpWindowSize_ASC',
  /** tcpWindowSize descending */
  TcpWindowSizeDesc = 'tcpWindowSize_DESC',
  /** udpChecksum ascending */
  UdpChecksumAsc = 'udpChecksum_ASC',
  /** udpChecksum descending */
  UdpChecksumDesc = 'udpChecksum_DESC',
  /** udpPayloadLength ascending */
  UdpPayloadLengthAsc = 'udpPayloadLength_ASC',
  /** udpPayloadLength descending */
  UdpPayloadLengthDesc = 'udpPayloadLength_DESC',
  /** verdict ascending */
  VerdictAsc = 'verdict_ASC',
  /** verdict descending */
  VerdictDesc = 'verdict_DESC'
}

export type AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsSum = {
  __typename?: 'AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsSum';
  /** Sum of bits received */
  bits: Scalars['uint64']['output'];
  /** Sum of packets received */
  packets: Scalars['uint64']['output'];
};

/** Data to visualize traffic allowed and blocked by Magic Firewall rules */
export type AccountMagicFirewallSamplesAdaptiveGroups = {
  __typename?: 'AccountMagicFirewallSamplesAdaptiveGroups';
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountMagicFirewallSamplesAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountMagicFirewallSamplesAdaptiveGroupsSum>;
};

export type AccountMagicFirewallSamplesAdaptiveGroupsDimensions = {
  __typename?: 'AccountMagicFirewallSamplesAdaptiveGroupsDimensions';
  /** Date and time that the packet was received */
  datetime: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest five minutes */
  datetimeFiveMinute: Scalars['Time']['output'];
  /** Unique identifier of the rule that matched the packet, if any */
  ruleId: Scalars['string']['output'];
};

export type AccountMagicFirewallSamplesAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountMagicFirewallSamplesAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountMagicFirewallSamplesAdaptiveGroupsFilter_InputObject>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  ruleId?: InputMaybe<Scalars['string']['input']>;
  ruleId_geq?: InputMaybe<Scalars['string']['input']>;
  ruleId_gt?: InputMaybe<Scalars['string']['input']>;
  ruleId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_leq?: InputMaybe<Scalars['string']['input']>;
  ruleId_like?: InputMaybe<Scalars['string']['input']>;
  ruleId_lt?: InputMaybe<Scalars['string']['input']>;
  ruleId_neq?: InputMaybe<Scalars['string']['input']>;
  ruleId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountMagicFirewallSamplesAdaptiveGroupsOrderBy {
  /** datetimeFiveMinute ascending */
  DatetimeFiveMinuteAsc = 'datetimeFiveMinute_ASC',
  /** datetimeFiveMinute descending */
  DatetimeFiveMinuteDesc = 'datetimeFiveMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** ruleId ascending */
  RuleIdAsc = 'ruleId_ASC',
  /** ruleId descending */
  RuleIdDesc = 'ruleId_DESC',
  /** sum(bits) ascending */
  SumBitsAsc = 'sum_bits_ASC',
  /** sum(bits) descending */
  SumBitsDesc = 'sum_bits_DESC',
  /** sum(packets) ascending */
  SumPacketsAsc = 'sum_packets_ASC',
  /** sum(packets) descending */
  SumPacketsDesc = 'sum_packets_DESC',
  /** system ascending */
  SystemAsc = 'system_ASC',
  /** system descending */
  SystemDesc = 'system_DESC'
}

export type AccountMagicFirewallSamplesAdaptiveGroupsSum = {
  __typename?: 'AccountMagicFirewallSamplesAdaptiveGroupsSum';
  /** Sum of bits received */
  bits: Scalars['uint64']['output'];
  /** Sum of packets received */
  packets: Scalars['uint64']['output'];
};

/** Network analytics data for Magic IDS */
export type AccountMagicIdpsNetworkAnalyticsAdaptiveGroups = {
  __typename?: 'AccountMagicIDPSNetworkAnalyticsAdaptiveGroups';
  /** The average of values for a metric per dimension */
  avg?: Maybe<AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsSum>;
};

export type AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsAvg = {
  __typename?: 'AccountMagicIDPSNetworkAnalyticsAdaptiveGroupsAvg';
  /** Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime */
  bitRate: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date */
  bitRateDay: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes */
  bitRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes */
  bitRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour */
  bitRateHour: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute */
  bitRateMinute: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds */
  bitRateTenSeconds: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime */
  packetRate: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date */
  packetRateDay: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes */
  packetRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes */
  packetRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour */
  packetRateHour: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute */
  packetRateMinute: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds */
  packetRateTenSeconds: Scalars['uint64']['output'];
};

export type AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsDimensions = {
  __typename?: 'AccountMagicIDPSNetworkAnalyticsAdaptiveGroupsDimensions';
  /** City where the Cloudflare datacenter that received the packet is located */
  coloCity: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (nearest IATA airport code) */
  coloCode: Scalars['string']['output'];
  /** Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2) */
  coloCountry: Scalars['string']['output'];
  /** Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding) */
  coloGeohash: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (unique site identifier) */
  coloName: Scalars['string']['output'];
  /** Date that the packet was received */
  date: Scalars['Date']['output'];
  /** Date and time that the packet was received */
  datetime: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest hour */
  datetimeHour: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest ten seconds */
  datetimeTenSeconds: Scalars['Time']['output'];
  /** ASN associated with the destination IP of the packet, or 0 if there was no mapping available */
  destinationAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the destination IP of the packet, if available */
  destinationAsnName: Scalars['string']['output'];
  /** Country where the destination IP of the packet is located (ISO 3166-1 alpha-2) */
  destinationCountry: Scalars['string']['output'];
  /** Device tag associated with the destination IP of the packet */
  destinationDeviceTag: Scalars['string']['output'];
  /** Latitude and longitude where the destination IP of the packet is located (Geohash encoding) */
  destinationGeohash: Scalars['string']['output'];
  /** Value of the Destination Port header field in the TCP or UDP packet */
  destinationPort: Scalars['uint16']['output'];
  /** Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral) */
  direction: Scalars['string']['output'];
  /** Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6) */
  ethertype: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the GRE packet */
  greChecksum: Scalars['uint16']['output'];
  /** Value of the Ethertype header field in the GRE packet */
  greEthertype: Scalars['uint16']['output'];
  /** Length of the GRE packet header, in bytes */
  greHeaderLength: Scalars['uint16']['output'];
  /** Value of the Key header field in the GRE packet */
  greKey: Scalars['uint32']['output'];
  /** Value of the Sequence Number header field in the GRE packet */
  greSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Version header field in the GRE packet */
  greVersion: Scalars['uint8']['output'];
  /** Value of the Checkusm header field in the ICMP packet */
  icmpChecksum: Scalars['uint16']['output'];
  /** Value of the Code header field in the ICMP packet */
  icmpCode: Scalars['uint8']['output'];
  /** Value of the Type header field in the ICMP packet */
  icmpType: Scalars['uint8']['output'];
  /** Value of the Destination Address header field in the IPv4 or IPv6 packet */
  ipDestinationAddress: Scalars['string']['output'];
  /** Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipDestinationSubnet: Scalars['string']['output'];
  /** Value of the Fragment Offset header field in the IPv4 or IPv6 packet */
  ipFragmentOffset: Scalars['uint16']['output'];
  /** Length of the IPv4 or IPv6 packet header, in bytes */
  ipHeaderLength: Scalars['uint16']['output'];
  /** Value of the More Fragments header field in the IPv4 or IPv6 packet */
  ipMoreFragments: Scalars['uint8']['output'];
  /** Value of the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocol: Scalars['uint8']['output'];
  /** Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocolName: Scalars['string']['output'];
  /** Value of the Source Address header field in the IPv4 or IPv6 packet */
  ipSourceAddress: Scalars['string']['output'];
  /** Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipSourceSubnet: Scalars['string']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes */
  ipTotalLength: Scalars['uint16']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated */
  ipTotalLengthBuckets: Scalars['uint16']['output'];
  /** Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet */
  ipTtl: Scalars['uint8']['output'];
  /**
   * Value of the TTL header field in the IPv4 packet or the Hop Limit header field
   * in the IPv6 packet, with the last digit truncated
   */
  ipTtlBuckets: Scalars['uint8']['output'];
  /** Value of the Checksum header field in the IPv4 packet */
  ipv4Checksum: Scalars['uint16']['output'];
  /** Value of the Don't Fragment header field in the IPv4 packet */
  ipv4DontFragment: Scalars['uint8']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv4 packet */
  ipv4Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv4 packet */
  ipv4Ecn: Scalars['uint8']['output'];
  /** Value of the Identification header field in the IPv4 packet */
  ipv4Identification: Scalars['uint16']['output'];
  /** List of Options numbers included in the IPv4 packet header */
  ipv4Options: Scalars['string']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv6 packet */
  ipv6Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv6 packet */
  ipv6Ecn: Scalars['uint8']['output'];
  /** List of Extension Header numbers included in the IPv6 packet header */
  ipv6ExtensionHeaders: Scalars['string']['output'];
  /** Value of the Flow Label header field in the IPv6 packet */
  ipv6FlowLabel: Scalars['uint32']['output'];
  /** Value of the Identification extension header field in the IPv6 packet */
  ipv6Identification: Scalars['uint32']['output'];
  /** The action that was taken on the packet (possible values: pass, drop) */
  outcome: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** ASN associated with the source IP of the packet, or 0 if there was no mapping available */
  sourceAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the source IP of the packet, if available */
  sourceAsnName: Scalars['string']['output'];
  /** Country where the source IP of the packet is located (ISO 3166-1 alpha-2) */
  sourceCountry: Scalars['string']['output'];
  /** Device tag associated with the source IP of the packet */
  sourceDeviceTag: Scalars['string']['output'];
  /** Latitude and longitude where the source IP of the packet is located (Geohash encoding) */
  sourceGeohash: Scalars['string']['output'];
  /** Value of the Source Port header field in the TCP or UDP packet */
  sourcePort: Scalars['uint16']['output'];
  /** Value of the Acknowledgement Number header field in the TCP packet */
  tcpAcknowledgementNumber: Scalars['uint32']['output'];
  /** Value of the Checkusm header field in the TCP packet */
  tcpChecksum: Scalars['uint16']['output'];
  /** Value of the Data Offset header field in the TCP packet */
  tcpDataOffset: Scalars['uint16']['output'];
  /** Value of the Flags header field in the TCP packet */
  tcpFlags: Scalars['uint8']['output'];
  /** Human-readable string representation of the Flags header field in the TCP packet */
  tcpFlagsString: Scalars['string']['output'];
  /** Value of the MSS option header field in the TCP packet */
  tcpMss: Scalars['uint16']['output'];
  /** List of Options numbers included in the TCP packet header */
  tcpOptions: Scalars['string']['output'];
  /** Value of the SACK Blocks option header field in the TCP packet */
  tcpSackBlocks: Scalars['string']['output'];
  /** Value of the SACK Permitted option header field in the TCP packet */
  tcpSackPermitted: Scalars['uint8']['output'];
  /** Value of the Sequence Number header field in the TCP packet */
  tcpSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Timestamp Echo Reply option header field in the TCP packet */
  tcpTimestampEcr: Scalars['uint32']['output'];
  /** Value of the Timestamp option header field in the TCP packet */
  tcpTimestampValue: Scalars['uint32']['output'];
  /** Value of the Urgent Pointer header field in the TCP packet */
  tcpUrgentPointer: Scalars['uint16']['output'];
  /** Value of the Window Scale option header field in the TCP packet */
  tcpWindowScale: Scalars['uint16']['output'];
  /** Value of the Window Size header field in the TCP packet */
  tcpWindowSize: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the UDP packet */
  udpChecksum: Scalars['uint16']['output'];
  /** Value of the Payload Length header field in the UDP packet */
  udpPayloadLength: Scalars['uint16']['output'];
  /** The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop) */
  verdict: Scalars['string']['output'];
};

export type AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  coloCity?: InputMaybe<Scalars['string']['input']>;
  coloCity_geq?: InputMaybe<Scalars['string']['input']>;
  coloCity_gt?: InputMaybe<Scalars['string']['input']>;
  coloCity_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_leq?: InputMaybe<Scalars['string']['input']>;
  coloCity_like?: InputMaybe<Scalars['string']['input']>;
  coloCity_lt?: InputMaybe<Scalars['string']['input']>;
  coloCity_neq?: InputMaybe<Scalars['string']['input']>;
  coloCity_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCountry?: InputMaybe<Scalars['string']['input']>;
  coloCountry_geq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_gt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_leq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_like?: InputMaybe<Scalars['string']['input']>;
  coloCountry_lt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_neq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  coloGeohash?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_like?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  coloName?: InputMaybe<Scalars['string']['input']>;
  coloName_geq?: InputMaybe<Scalars['string']['input']>;
  coloName_gt?: InputMaybe<Scalars['string']['input']>;
  coloName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_leq?: InputMaybe<Scalars['string']['input']>;
  coloName_like?: InputMaybe<Scalars['string']['input']>;
  coloName_lt?: InputMaybe<Scalars['string']['input']>;
  coloName_neq?: InputMaybe<Scalars['string']['input']>;
  coloName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationAsn?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsnName?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_like?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationCountry?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_geq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_gt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_leq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_like?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_lt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_neq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_geq?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_gt?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationDeviceTag_leq?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_like?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_lt?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_neq?: InputMaybe<Scalars['string']['input']>;
  destinationDeviceTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationDeviceTag_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_like?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  direction?: InputMaybe<Scalars['string']['input']>;
  direction_geq?: InputMaybe<Scalars['string']['input']>;
  direction_gt?: InputMaybe<Scalars['string']['input']>;
  direction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_leq?: InputMaybe<Scalars['string']['input']>;
  direction_like?: InputMaybe<Scalars['string']['input']>;
  direction_lt?: InputMaybe<Scalars['string']['input']>;
  direction_neq?: InputMaybe<Scalars['string']['input']>;
  direction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_notlike?: InputMaybe<Scalars['string']['input']>;
  ethertype?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ethertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greKey?: InputMaybe<Scalars['uint32']['input']>;
  greKey_geq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_gt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greKey_leq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_lt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_neq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greVersion?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  greVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpCode?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpCode_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpType?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpType_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipDestinationAddress?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipFragmentOffset?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipFragmentOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipMoreFragments?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_in?: InputMaybe<Scalars['bytes']['input']>;
  ipMoreFragments_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocolName?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_geq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_gt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_leq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_like?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_lt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_neq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipProtocol_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_in?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipSourceAddress?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipTotalLength?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLengthBuckets_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTtl?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtlBuckets_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Checksum?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Checksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4DontFragment?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4DontFragment_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Identification?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Identification_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Options?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_geq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_gt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_leq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_like?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_lt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_neq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6ExtensionHeaders?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_geq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_gt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_leq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_like?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_lt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_neq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6FlowLabel?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6FlowLabel_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  outcome?: InputMaybe<Scalars['string']['input']>;
  outcome_geq?: InputMaybe<Scalars['string']['input']>;
  outcome_gt?: InputMaybe<Scalars['string']['input']>;
  outcome_in?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_leq?: InputMaybe<Scalars['string']['input']>;
  outcome_like?: InputMaybe<Scalars['string']['input']>;
  outcome_lt?: InputMaybe<Scalars['string']['input']>;
  outcome_neq?: InputMaybe<Scalars['string']['input']>;
  outcome_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsnName?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_like?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceCountry?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_geq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_gt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_leq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_like?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_lt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_neq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_geq?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_gt?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceDeviceTag_leq?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_like?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_lt?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_neq?: InputMaybe<Scalars['string']['input']>;
  sourceDeviceTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceDeviceTag_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_like?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpAcknowledgementNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpAcknowledgementNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlagsString?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_geq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_gt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_leq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_like?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_lt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_neq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpMss?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpMss_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpOptions?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_geq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_gt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_leq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_like?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_lt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_neq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_geq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_gt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_leq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_like?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_lt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_neq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackPermitted?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpSackPermitted_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpUrgentPointer?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpUrgentPointer_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  verdict?: InputMaybe<Scalars['string']['input']>;
  verdict_geq?: InputMaybe<Scalars['string']['input']>;
  verdict_gt?: InputMaybe<Scalars['string']['input']>;
  verdict_in?: InputMaybe<Array<Scalars['string']['input']>>;
  verdict_leq?: InputMaybe<Scalars['string']['input']>;
  verdict_like?: InputMaybe<Scalars['string']['input']>;
  verdict_lt?: InputMaybe<Scalars['string']['input']>;
  verdict_neq?: InputMaybe<Scalars['string']['input']>;
  verdict_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  verdict_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsOrderBy {
  /** avg(bitRateDay) ascending */
  AvgBitRateDayAsc = 'avg_bitRateDay_ASC',
  /** avg(bitRateDay) descending */
  AvgBitRateDayDesc = 'avg_bitRateDay_DESC',
  /** avg(bitRateFifteenMinutes) ascending */
  AvgBitRateFifteenMinutesAsc = 'avg_bitRateFifteenMinutes_ASC',
  /** avg(bitRateFifteenMinutes) descending */
  AvgBitRateFifteenMinutesDesc = 'avg_bitRateFifteenMinutes_DESC',
  /** avg(bitRateFiveMinutes) ascending */
  AvgBitRateFiveMinutesAsc = 'avg_bitRateFiveMinutes_ASC',
  /** avg(bitRateFiveMinutes) descending */
  AvgBitRateFiveMinutesDesc = 'avg_bitRateFiveMinutes_DESC',
  /** avg(bitRateHour) ascending */
  AvgBitRateHourAsc = 'avg_bitRateHour_ASC',
  /** avg(bitRateHour) descending */
  AvgBitRateHourDesc = 'avg_bitRateHour_DESC',
  /** avg(bitRateMinute) ascending */
  AvgBitRateMinuteAsc = 'avg_bitRateMinute_ASC',
  /** avg(bitRateMinute) descending */
  AvgBitRateMinuteDesc = 'avg_bitRateMinute_DESC',
  /** avg(bitRateTenSeconds) ascending */
  AvgBitRateTenSecondsAsc = 'avg_bitRateTenSeconds_ASC',
  /** avg(bitRateTenSeconds) descending */
  AvgBitRateTenSecondsDesc = 'avg_bitRateTenSeconds_DESC',
  /** avg(bitRate) ascending */
  AvgBitRateAsc = 'avg_bitRate_ASC',
  /** avg(bitRate) descending */
  AvgBitRateDesc = 'avg_bitRate_DESC',
  /** avg(packetRateDay) ascending */
  AvgPacketRateDayAsc = 'avg_packetRateDay_ASC',
  /** avg(packetRateDay) descending */
  AvgPacketRateDayDesc = 'avg_packetRateDay_DESC',
  /** avg(packetRateFifteenMinutes) ascending */
  AvgPacketRateFifteenMinutesAsc = 'avg_packetRateFifteenMinutes_ASC',
  /** avg(packetRateFifteenMinutes) descending */
  AvgPacketRateFifteenMinutesDesc = 'avg_packetRateFifteenMinutes_DESC',
  /** avg(packetRateFiveMinutes) ascending */
  AvgPacketRateFiveMinutesAsc = 'avg_packetRateFiveMinutes_ASC',
  /** avg(packetRateFiveMinutes) descending */
  AvgPacketRateFiveMinutesDesc = 'avg_packetRateFiveMinutes_DESC',
  /** avg(packetRateHour) ascending */
  AvgPacketRateHourAsc = 'avg_packetRateHour_ASC',
  /** avg(packetRateHour) descending */
  AvgPacketRateHourDesc = 'avg_packetRateHour_DESC',
  /** avg(packetRateMinute) ascending */
  AvgPacketRateMinuteAsc = 'avg_packetRateMinute_ASC',
  /** avg(packetRateMinute) descending */
  AvgPacketRateMinuteDesc = 'avg_packetRateMinute_DESC',
  /** avg(packetRateTenSeconds) ascending */
  AvgPacketRateTenSecondsAsc = 'avg_packetRateTenSeconds_ASC',
  /** avg(packetRateTenSeconds) descending */
  AvgPacketRateTenSecondsDesc = 'avg_packetRateTenSeconds_DESC',
  /** avg(packetRate) ascending */
  AvgPacketRateAsc = 'avg_packetRate_ASC',
  /** avg(packetRate) descending */
  AvgPacketRateDesc = 'avg_packetRate_DESC',
  /** coloCity ascending */
  ColoCityAsc = 'coloCity_ASC',
  /** coloCity descending */
  ColoCityDesc = 'coloCity_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** coloCountry ascending */
  ColoCountryAsc = 'coloCountry_ASC',
  /** coloCountry descending */
  ColoCountryDesc = 'coloCountry_DESC',
  /** coloGeohash ascending */
  ColoGeohashAsc = 'coloGeohash_ASC',
  /** coloGeohash descending */
  ColoGeohashDesc = 'coloGeohash_DESC',
  /** coloName ascending */
  ColoNameAsc = 'coloName_ASC',
  /** coloName descending */
  ColoNameDesc = 'coloName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetimeTenSeconds ascending */
  DatetimeTenSecondsAsc = 'datetimeTenSeconds_ASC',
  /** datetimeTenSeconds descending */
  DatetimeTenSecondsDesc = 'datetimeTenSeconds_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationAsnName ascending */
  DestinationAsnNameAsc = 'destinationAsnName_ASC',
  /** destinationAsnName descending */
  DestinationAsnNameDesc = 'destinationAsnName_DESC',
  /** destinationAsn ascending */
  DestinationAsnAsc = 'destinationAsn_ASC',
  /** destinationAsn descending */
  DestinationAsnDesc = 'destinationAsn_DESC',
  /** destinationCountry ascending */
  DestinationCountryAsc = 'destinationCountry_ASC',
  /** destinationCountry descending */
  DestinationCountryDesc = 'destinationCountry_DESC',
  /** destinationDeviceTag ascending */
  DestinationDeviceTagAsc = 'destinationDeviceTag_ASC',
  /** destinationDeviceTag descending */
  DestinationDeviceTagDesc = 'destinationDeviceTag_DESC',
  /** destinationGeohash ascending */
  DestinationGeohashAsc = 'destinationGeohash_ASC',
  /** destinationGeohash descending */
  DestinationGeohashDesc = 'destinationGeohash_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** direction ascending */
  DirectionAsc = 'direction_ASC',
  /** direction descending */
  DirectionDesc = 'direction_DESC',
  /** ethertype ascending */
  EthertypeAsc = 'ethertype_ASC',
  /** ethertype descending */
  EthertypeDesc = 'ethertype_DESC',
  /** greChecksum ascending */
  GreChecksumAsc = 'greChecksum_ASC',
  /** greChecksum descending */
  GreChecksumDesc = 'greChecksum_DESC',
  /** greEthertype ascending */
  GreEthertypeAsc = 'greEthertype_ASC',
  /** greEthertype descending */
  GreEthertypeDesc = 'greEthertype_DESC',
  /** greHeaderLength ascending */
  GreHeaderLengthAsc = 'greHeaderLength_ASC',
  /** greHeaderLength descending */
  GreHeaderLengthDesc = 'greHeaderLength_DESC',
  /** greKey ascending */
  GreKeyAsc = 'greKey_ASC',
  /** greKey descending */
  GreKeyDesc = 'greKey_DESC',
  /** greSequenceNumber ascending */
  GreSequenceNumberAsc = 'greSequenceNumber_ASC',
  /** greSequenceNumber descending */
  GreSequenceNumberDesc = 'greSequenceNumber_DESC',
  /** greVersion ascending */
  GreVersionAsc = 'greVersion_ASC',
  /** greVersion descending */
  GreVersionDesc = 'greVersion_DESC',
  /** icmpChecksum ascending */
  IcmpChecksumAsc = 'icmpChecksum_ASC',
  /** icmpChecksum descending */
  IcmpChecksumDesc = 'icmpChecksum_DESC',
  /** icmpCode ascending */
  IcmpCodeAsc = 'icmpCode_ASC',
  /** icmpCode descending */
  IcmpCodeDesc = 'icmpCode_DESC',
  /** icmpType ascending */
  IcmpTypeAsc = 'icmpType_ASC',
  /** icmpType descending */
  IcmpTypeDesc = 'icmpType_DESC',
  /** ipDestinationAddress ascending */
  IpDestinationAddressAsc = 'ipDestinationAddress_ASC',
  /** ipDestinationAddress descending */
  IpDestinationAddressDesc = 'ipDestinationAddress_DESC',
  /** ipDestinationSubnet ascending */
  IpDestinationSubnetAsc = 'ipDestinationSubnet_ASC',
  /** ipDestinationSubnet descending */
  IpDestinationSubnetDesc = 'ipDestinationSubnet_DESC',
  /** ipFragmentOffset ascending */
  IpFragmentOffsetAsc = 'ipFragmentOffset_ASC',
  /** ipFragmentOffset descending */
  IpFragmentOffsetDesc = 'ipFragmentOffset_DESC',
  /** ipHeaderLength ascending */
  IpHeaderLengthAsc = 'ipHeaderLength_ASC',
  /** ipHeaderLength descending */
  IpHeaderLengthDesc = 'ipHeaderLength_DESC',
  /** ipMoreFragments ascending */
  IpMoreFragmentsAsc = 'ipMoreFragments_ASC',
  /** ipMoreFragments descending */
  IpMoreFragmentsDesc = 'ipMoreFragments_DESC',
  /** ipProtocolName ascending */
  IpProtocolNameAsc = 'ipProtocolName_ASC',
  /** ipProtocolName descending */
  IpProtocolNameDesc = 'ipProtocolName_DESC',
  /** ipProtocol ascending */
  IpProtocolAsc = 'ipProtocol_ASC',
  /** ipProtocol descending */
  IpProtocolDesc = 'ipProtocol_DESC',
  /** ipSourceAddress ascending */
  IpSourceAddressAsc = 'ipSourceAddress_ASC',
  /** ipSourceAddress descending */
  IpSourceAddressDesc = 'ipSourceAddress_DESC',
  /** ipSourceSubnet ascending */
  IpSourceSubnetAsc = 'ipSourceSubnet_ASC',
  /** ipSourceSubnet descending */
  IpSourceSubnetDesc = 'ipSourceSubnet_DESC',
  /** ipTotalLengthBuckets ascending */
  IpTotalLengthBucketsAsc = 'ipTotalLengthBuckets_ASC',
  /** ipTotalLengthBuckets descending */
  IpTotalLengthBucketsDesc = 'ipTotalLengthBuckets_DESC',
  /** ipTotalLength ascending */
  IpTotalLengthAsc = 'ipTotalLength_ASC',
  /** ipTotalLength descending */
  IpTotalLengthDesc = 'ipTotalLength_DESC',
  /** ipTtlBuckets ascending */
  IpTtlBucketsAsc = 'ipTtlBuckets_ASC',
  /** ipTtlBuckets descending */
  IpTtlBucketsDesc = 'ipTtlBuckets_DESC',
  /** ipTtl ascending */
  IpTtlAsc = 'ipTtl_ASC',
  /** ipTtl descending */
  IpTtlDesc = 'ipTtl_DESC',
  /** ipv4Checksum ascending */
  Ipv4ChecksumAsc = 'ipv4Checksum_ASC',
  /** ipv4Checksum descending */
  Ipv4ChecksumDesc = 'ipv4Checksum_DESC',
  /** ipv4DontFragment ascending */
  Ipv4DontFragmentAsc = 'ipv4DontFragment_ASC',
  /** ipv4DontFragment descending */
  Ipv4DontFragmentDesc = 'ipv4DontFragment_DESC',
  /** ipv4Dscp ascending */
  Ipv4DscpAsc = 'ipv4Dscp_ASC',
  /** ipv4Dscp descending */
  Ipv4DscpDesc = 'ipv4Dscp_DESC',
  /** ipv4Ecn ascending */
  Ipv4EcnAsc = 'ipv4Ecn_ASC',
  /** ipv4Ecn descending */
  Ipv4EcnDesc = 'ipv4Ecn_DESC',
  /** ipv4Identification ascending */
  Ipv4IdentificationAsc = 'ipv4Identification_ASC',
  /** ipv4Identification descending */
  Ipv4IdentificationDesc = 'ipv4Identification_DESC',
  /** ipv4Options ascending */
  Ipv4OptionsAsc = 'ipv4Options_ASC',
  /** ipv4Options descending */
  Ipv4OptionsDesc = 'ipv4Options_DESC',
  /** ipv6Dscp ascending */
  Ipv6DscpAsc = 'ipv6Dscp_ASC',
  /** ipv6Dscp descending */
  Ipv6DscpDesc = 'ipv6Dscp_DESC',
  /** ipv6Ecn ascending */
  Ipv6EcnAsc = 'ipv6Ecn_ASC',
  /** ipv6Ecn descending */
  Ipv6EcnDesc = 'ipv6Ecn_DESC',
  /** ipv6ExtensionHeaders ascending */
  Ipv6ExtensionHeadersAsc = 'ipv6ExtensionHeaders_ASC',
  /** ipv6ExtensionHeaders descending */
  Ipv6ExtensionHeadersDesc = 'ipv6ExtensionHeaders_DESC',
  /** ipv6FlowLabel ascending */
  Ipv6FlowLabelAsc = 'ipv6FlowLabel_ASC',
  /** ipv6FlowLabel descending */
  Ipv6FlowLabelDesc = 'ipv6FlowLabel_DESC',
  /** ipv6Identification ascending */
  Ipv6IdentificationAsc = 'ipv6Identification_ASC',
  /** ipv6Identification descending */
  Ipv6IdentificationDesc = 'ipv6Identification_DESC',
  /** outcome ascending */
  OutcomeAsc = 'outcome_ASC',
  /** outcome descending */
  OutcomeDesc = 'outcome_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sourceAsnName ascending */
  SourceAsnNameAsc = 'sourceAsnName_ASC',
  /** sourceAsnName descending */
  SourceAsnNameDesc = 'sourceAsnName_DESC',
  /** sourceAsn ascending */
  SourceAsnAsc = 'sourceAsn_ASC',
  /** sourceAsn descending */
  SourceAsnDesc = 'sourceAsn_DESC',
  /** sourceCountry ascending */
  SourceCountryAsc = 'sourceCountry_ASC',
  /** sourceCountry descending */
  SourceCountryDesc = 'sourceCountry_DESC',
  /** sourceDeviceTag ascending */
  SourceDeviceTagAsc = 'sourceDeviceTag_ASC',
  /** sourceDeviceTag descending */
  SourceDeviceTagDesc = 'sourceDeviceTag_DESC',
  /** sourceGeohash ascending */
  SourceGeohashAsc = 'sourceGeohash_ASC',
  /** sourceGeohash descending */
  SourceGeohashDesc = 'sourceGeohash_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** sum(bits) ascending */
  SumBitsAsc = 'sum_bits_ASC',
  /** sum(bits) descending */
  SumBitsDesc = 'sum_bits_DESC',
  /** sum(packets) ascending */
  SumPacketsAsc = 'sum_packets_ASC',
  /** sum(packets) descending */
  SumPacketsDesc = 'sum_packets_DESC',
  /** system ascending */
  SystemAsc = 'system_ASC',
  /** system descending */
  SystemDesc = 'system_DESC',
  /** tcpAcknowledgementNumber ascending */
  TcpAcknowledgementNumberAsc = 'tcpAcknowledgementNumber_ASC',
  /** tcpAcknowledgementNumber descending */
  TcpAcknowledgementNumberDesc = 'tcpAcknowledgementNumber_DESC',
  /** tcpChecksum ascending */
  TcpChecksumAsc = 'tcpChecksum_ASC',
  /** tcpChecksum descending */
  TcpChecksumDesc = 'tcpChecksum_DESC',
  /** tcpDataOffset ascending */
  TcpDataOffsetAsc = 'tcpDataOffset_ASC',
  /** tcpDataOffset descending */
  TcpDataOffsetDesc = 'tcpDataOffset_DESC',
  /** tcpFlagsString ascending */
  TcpFlagsStringAsc = 'tcpFlagsString_ASC',
  /** tcpFlagsString descending */
  TcpFlagsStringDesc = 'tcpFlagsString_DESC',
  /** tcpFlags ascending */
  TcpFlagsAsc = 'tcpFlags_ASC',
  /** tcpFlags descending */
  TcpFlagsDesc = 'tcpFlags_DESC',
  /** tcpMss ascending */
  TcpMssAsc = 'tcpMss_ASC',
  /** tcpMss descending */
  TcpMssDesc = 'tcpMss_DESC',
  /** tcpOptions ascending */
  TcpOptionsAsc = 'tcpOptions_ASC',
  /** tcpOptions descending */
  TcpOptionsDesc = 'tcpOptions_DESC',
  /** tcpSackBlocks ascending */
  TcpSackBlocksAsc = 'tcpSackBlocks_ASC',
  /** tcpSackBlocks descending */
  TcpSackBlocksDesc = 'tcpSackBlocks_DESC',
  /** tcpSackPermitted ascending */
  TcpSackPermittedAsc = 'tcpSackPermitted_ASC',
  /** tcpSackPermitted descending */
  TcpSackPermittedDesc = 'tcpSackPermitted_DESC',
  /** tcpSequenceNumber ascending */
  TcpSequenceNumberAsc = 'tcpSequenceNumber_ASC',
  /** tcpSequenceNumber descending */
  TcpSequenceNumberDesc = 'tcpSequenceNumber_DESC',
  /** tcpTimestampEcr ascending */
  TcpTimestampEcrAsc = 'tcpTimestampEcr_ASC',
  /** tcpTimestampEcr descending */
  TcpTimestampEcrDesc = 'tcpTimestampEcr_DESC',
  /** tcpTimestampValue ascending */
  TcpTimestampValueAsc = 'tcpTimestampValue_ASC',
  /** tcpTimestampValue descending */
  TcpTimestampValueDesc = 'tcpTimestampValue_DESC',
  /** tcpUrgentPointer ascending */
  TcpUrgentPointerAsc = 'tcpUrgentPointer_ASC',
  /** tcpUrgentPointer descending */
  TcpUrgentPointerDesc = 'tcpUrgentPointer_DESC',
  /** tcpWindowScale ascending */
  TcpWindowScaleAsc = 'tcpWindowScale_ASC',
  /** tcpWindowScale descending */
  TcpWindowScaleDesc = 'tcpWindowScale_DESC',
  /** tcpWindowSize ascending */
  TcpWindowSizeAsc = 'tcpWindowSize_ASC',
  /** tcpWindowSize descending */
  TcpWindowSizeDesc = 'tcpWindowSize_DESC',
  /** udpChecksum ascending */
  UdpChecksumAsc = 'udpChecksum_ASC',
  /** udpChecksum descending */
  UdpChecksumDesc = 'udpChecksum_DESC',
  /** udpPayloadLength ascending */
  UdpPayloadLengthAsc = 'udpPayloadLength_ASC',
  /** udpPayloadLength descending */
  UdpPayloadLengthDesc = 'udpPayloadLength_DESC',
  /** verdict ascending */
  VerdictAsc = 'verdict_ASC',
  /** verdict descending */
  VerdictDesc = 'verdict_DESC'
}

export type AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsSum = {
  __typename?: 'AccountMagicIDPSNetworkAnalyticsAdaptiveGroupsSum';
  /** Sum of bits received */
  bits: Scalars['uint64']['output'];
  /** Sum of packets received */
  packets: Scalars['uint64']['output'];
};

/** Network analytics data for Magic Transit traffic */
export type AccountMagicTransitNetworkAnalyticsAdaptiveGroups = {
  __typename?: 'AccountMagicTransitNetworkAnalyticsAdaptiveGroups';
  /** The average of values for a metric per dimension */
  avg?: Maybe<AccountMagicTransitNetworkAnalyticsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountMagicTransitNetworkAnalyticsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountMagicTransitNetworkAnalyticsAdaptiveGroupsSum>;
};

export type AccountMagicTransitNetworkAnalyticsAdaptiveGroupsAvg = {
  __typename?: 'AccountMagicTransitNetworkAnalyticsAdaptiveGroupsAvg';
  /** Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime */
  bitRate: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date */
  bitRateDay: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes */
  bitRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes */
  bitRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour */
  bitRateHour: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute */
  bitRateMinute: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds */
  bitRateTenSeconds: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime */
  packetRate: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date */
  packetRateDay: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes */
  packetRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes */
  packetRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour */
  packetRateHour: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute */
  packetRateMinute: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds */
  packetRateTenSeconds: Scalars['uint64']['output'];
};

export type AccountMagicTransitNetworkAnalyticsAdaptiveGroupsDimensions = {
  __typename?: 'AccountMagicTransitNetworkAnalyticsAdaptiveGroupsDimensions';
  /** Application tag associated with the packet */
  applicationTag: Scalars['string']['output'];
  /** City where the Cloudflare datacenter that received the packet is located */
  coloCity: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (nearest IATA airport code) */
  coloCode: Scalars['string']['output'];
  /** Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2) */
  coloCountry: Scalars['string']['output'];
  /** Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding) */
  coloGeohash: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (unique site identifier) */
  coloName: Scalars['string']['output'];
  /** Date that the packet was received */
  date: Scalars['Date']['output'];
  /** Date and time that the packet was received */
  datetime: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest hour */
  datetimeHour: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest ten seconds */
  datetimeTenSeconds: Scalars['Time']['output'];
  /** ASN associated with the destination IP of the packet, or 0 if there was no mapping available */
  destinationAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the destination IP of the packet, if available */
  destinationAsnName: Scalars['string']['output'];
  /** Country where the destination IP of the packet is located (ISO 3166-1 alpha-2) */
  destinationCountry: Scalars['string']['output'];
  /** Latitude and longitude where the destination IP of the packet is located (Geohash encoding) */
  destinationGeohash: Scalars['string']['output'];
  /** Value of the Destination Port header field in the TCP or UDP packet */
  destinationPort: Scalars['uint16']['output'];
  /** Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral) */
  direction: Scalars['string']['output'];
  /** GRE or IPSec Egress Tunnel ID for Magic WAN and Magic Transit traffic */
  egressTunnelID: Scalars['string']['output'];
  /** GRE or IPSec Egress Tunnel name for Magic WAN and Magic Transit traffic */
  egressTunnelName: Scalars['string']['output'];
  /** Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6) */
  ethertype: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the GRE packet */
  greChecksum: Scalars['uint16']['output'];
  /** Value of the Ethertype header field in the GRE packet */
  greEthertype: Scalars['uint16']['output'];
  /** Length of the GRE packet header, in bytes */
  greHeaderLength: Scalars['uint16']['output'];
  /** Value of the Key header field in the GRE packet */
  greKey: Scalars['uint32']['output'];
  /** Value of the Sequence Number header field in the GRE packet */
  greSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Version header field in the GRE packet */
  greVersion: Scalars['uint8']['output'];
  /** Value of the Checkusm header field in the ICMP packet */
  icmpChecksum: Scalars['uint16']['output'];
  /** Value of the Code header field in the ICMP packet */
  icmpCode: Scalars['uint8']['output'];
  /** Value of the Type header field in the ICMP packet */
  icmpType: Scalars['uint8']['output'];
  /** GRE or IPSec Ingress Tunnel ID for Magic WAN and Magic Transit traffic */
  ingressTunnelID: Scalars['string']['output'];
  /** GRE or IPSec Ingress Tunnel name for Magic WAN and Magic Transit traffic */
  ingressTunnelName: Scalars['string']['output'];
  /** Value of the Destination Address header field in the IPv4 or IPv6 packet */
  ipDestinationAddress: Scalars['string']['output'];
  /** Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipDestinationSubnet: Scalars['string']['output'];
  /** Value of the Fragment Offset header field in the IPv4 or IPv6 packet */
  ipFragmentOffset: Scalars['uint16']['output'];
  /** Length of the IPv4 or IPv6 packet header, in bytes */
  ipHeaderLength: Scalars['uint16']['output'];
  /** Value of the More Fragments header field in the IPv4 or IPv6 packet */
  ipMoreFragments: Scalars['uint8']['output'];
  /** Value of the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocol: Scalars['uint8']['output'];
  /** Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocolName: Scalars['string']['output'];
  /** Value of the Source Address header field in the IPv4 or IPv6 packet */
  ipSourceAddress: Scalars['string']['output'];
  /** Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipSourceSubnet: Scalars['string']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes */
  ipTotalLength: Scalars['uint16']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated */
  ipTotalLengthBuckets: Scalars['uint16']['output'];
  /** Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet */
  ipTtl: Scalars['uint8']['output'];
  /**
   * Value of the TTL header field in the IPv4 packet or the Hop Limit header field
   * in the IPv6 packet, with the last digit truncated
   */
  ipTtlBuckets: Scalars['uint8']['output'];
  /** Value of the Checksum header field in the IPv4 packet */
  ipv4Checksum: Scalars['uint16']['output'];
  /** Value of the Don't Fragment header field in the IPv4 packet */
  ipv4DontFragment: Scalars['uint8']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv4 packet */
  ipv4Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv4 packet */
  ipv4Ecn: Scalars['uint8']['output'];
  /** Value of the Identification header field in the IPv4 packet */
  ipv4Identification: Scalars['uint16']['output'];
  /** List of Options numbers included in the IPv4 packet header */
  ipv4Options: Scalars['string']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv6 packet */
  ipv6Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv6 packet */
  ipv6Ecn: Scalars['uint8']['output'];
  /** List of Extension Header numbers included in the IPv6 packet header */
  ipv6ExtensionHeaders: Scalars['string']['output'];
  /** Value of the Flow Label header field in the IPv6 packet */
  ipv6FlowLabel: Scalars['uint32']['output'];
  /** Value of the Identification extension header field in the IPv6 packet */
  ipv6Identification: Scalars['uint32']['output'];
  /** IP lease tag associated with the packet */
  leaseTag: Scalars['string']['output'];
  /** Which system dropped the packet (possible values: dosd, flowtrackd, magic-firewall) */
  mitigationSystem: Scalars['string']['output'];
  /** The action that was taken on the packet (possible values: pass, drop) */
  outcome: Scalars['string']['output'];
  /** IP prefix tag associated with the packet */
  prefixTag: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** ASN associated with the source IP of the packet, or 0 if there was no mapping available */
  sourceAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the source IP of the packet, if available */
  sourceAsnName: Scalars['string']['output'];
  /** Country where the source IP of the packet is located (ISO 3166-1 alpha-2) */
  sourceCountry: Scalars['string']['output'];
  /** Latitude and longitude where the source IP of the packet is located (Geohash encoding) */
  sourceGeohash: Scalars['string']['output'];
  /** Value of the Source Port header field in the TCP or UDP packet */
  sourcePort: Scalars['uint16']['output'];
  /** Value of the Acknowledgement Number header field in the TCP packet */
  tcpAcknowledgementNumber: Scalars['uint32']['output'];
  /** Value of the Checkusm header field in the TCP packet */
  tcpChecksum: Scalars['uint16']['output'];
  /** Value of the Data Offset header field in the TCP packet */
  tcpDataOffset: Scalars['uint16']['output'];
  /** Value of the Flags header field in the TCP packet */
  tcpFlags: Scalars['uint8']['output'];
  /** Human-readable string representation of the Flags header field in the TCP packet */
  tcpFlagsString: Scalars['string']['output'];
  /** Value of the MSS option header field in the TCP packet */
  tcpMss: Scalars['uint16']['output'];
  /** List of Options numbers included in the TCP packet header */
  tcpOptions: Scalars['string']['output'];
  /** Value of the SACK Blocks option header field in the TCP packet */
  tcpSackBlocks: Scalars['string']['output'];
  /** Value of the SACK Permitted option header field in the TCP packet */
  tcpSackPermitted: Scalars['uint8']['output'];
  /** Value of the Sequence Number header field in the TCP packet */
  tcpSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Timestamp Echo Reply option header field in the TCP packet */
  tcpTimestampEcr: Scalars['uint32']['output'];
  /** Value of the Timestamp option header field in the TCP packet */
  tcpTimestampValue: Scalars['uint32']['output'];
  /** Value of the Urgent Pointer header field in the TCP packet */
  tcpUrgentPointer: Scalars['uint16']['output'];
  /** Value of the Window Scale option header field in the TCP packet */
  tcpWindowScale: Scalars['uint16']['output'];
  /** Value of the Window Size header field in the TCP packet */
  tcpWindowSize: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the UDP packet */
  udpChecksum: Scalars['uint16']['output'];
  /** Value of the Payload Length header field in the UDP packet */
  udpPayloadLength: Scalars['uint16']['output'];
};

export type AccountMagicTransitNetworkAnalyticsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountMagicTransitNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountMagicTransitNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  applicationTag?: InputMaybe<Scalars['string']['input']>;
  applicationTag_geq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_gt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_leq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_like?: InputMaybe<Scalars['string']['input']>;
  applicationTag_lt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_neq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCity?: InputMaybe<Scalars['string']['input']>;
  coloCity_geq?: InputMaybe<Scalars['string']['input']>;
  coloCity_gt?: InputMaybe<Scalars['string']['input']>;
  coloCity_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_leq?: InputMaybe<Scalars['string']['input']>;
  coloCity_like?: InputMaybe<Scalars['string']['input']>;
  coloCity_lt?: InputMaybe<Scalars['string']['input']>;
  coloCity_neq?: InputMaybe<Scalars['string']['input']>;
  coloCity_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCountry?: InputMaybe<Scalars['string']['input']>;
  coloCountry_geq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_gt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_leq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_like?: InputMaybe<Scalars['string']['input']>;
  coloCountry_lt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_neq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  coloGeohash?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_like?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  coloName?: InputMaybe<Scalars['string']['input']>;
  coloName_geq?: InputMaybe<Scalars['string']['input']>;
  coloName_gt?: InputMaybe<Scalars['string']['input']>;
  coloName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_leq?: InputMaybe<Scalars['string']['input']>;
  coloName_like?: InputMaybe<Scalars['string']['input']>;
  coloName_lt?: InputMaybe<Scalars['string']['input']>;
  coloName_neq?: InputMaybe<Scalars['string']['input']>;
  coloName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationAsn?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsnName?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_like?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationCountry?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_geq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_gt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_leq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_like?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_lt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_neq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_like?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  direction?: InputMaybe<Scalars['string']['input']>;
  direction_geq?: InputMaybe<Scalars['string']['input']>;
  direction_gt?: InputMaybe<Scalars['string']['input']>;
  direction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_leq?: InputMaybe<Scalars['string']['input']>;
  direction_like?: InputMaybe<Scalars['string']['input']>;
  direction_lt?: InputMaybe<Scalars['string']['input']>;
  direction_neq?: InputMaybe<Scalars['string']['input']>;
  direction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_notlike?: InputMaybe<Scalars['string']['input']>;
  egressTunnelID?: InputMaybe<Scalars['string']['input']>;
  egressTunnelID_geq?: InputMaybe<Scalars['string']['input']>;
  egressTunnelID_gt?: InputMaybe<Scalars['string']['input']>;
  egressTunnelID_in?: InputMaybe<Array<Scalars['string']['input']>>;
  egressTunnelID_leq?: InputMaybe<Scalars['string']['input']>;
  egressTunnelID_like?: InputMaybe<Scalars['string']['input']>;
  egressTunnelID_lt?: InputMaybe<Scalars['string']['input']>;
  egressTunnelID_neq?: InputMaybe<Scalars['string']['input']>;
  egressTunnelID_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  egressTunnelID_notlike?: InputMaybe<Scalars['string']['input']>;
  egressTunnelName?: InputMaybe<Scalars['string']['input']>;
  egressTunnelName_geq?: InputMaybe<Scalars['string']['input']>;
  egressTunnelName_gt?: InputMaybe<Scalars['string']['input']>;
  egressTunnelName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  egressTunnelName_leq?: InputMaybe<Scalars['string']['input']>;
  egressTunnelName_like?: InputMaybe<Scalars['string']['input']>;
  egressTunnelName_lt?: InputMaybe<Scalars['string']['input']>;
  egressTunnelName_neq?: InputMaybe<Scalars['string']['input']>;
  egressTunnelName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  egressTunnelName_notlike?: InputMaybe<Scalars['string']['input']>;
  ethertype?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ethertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greKey?: InputMaybe<Scalars['uint32']['input']>;
  greKey_geq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_gt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greKey_leq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_lt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_neq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greVersion?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  greVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpCode?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpCode_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpType?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpType_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_notin?: InputMaybe<Scalars['bytes']['input']>;
  ingressTunnelID?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelID_geq?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelID_gt?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelID_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ingressTunnelID_leq?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelID_like?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelID_lt?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelID_neq?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelID_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ingressTunnelID_notlike?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelName?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelName_geq?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelName_gt?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ingressTunnelName_leq?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelName_like?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelName_lt?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelName_neq?: InputMaybe<Scalars['string']['input']>;
  ingressTunnelName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ingressTunnelName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipFragmentOffset?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipFragmentOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipMoreFragments?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_in?: InputMaybe<Scalars['bytes']['input']>;
  ipMoreFragments_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocolName?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_geq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_gt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_leq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_like?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_lt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_neq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipProtocol_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_in?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipSourceAddress?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipTotalLength?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLengthBuckets_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTtl?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtlBuckets_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Checksum?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Checksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4DontFragment?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4DontFragment_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Identification?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Identification_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Options?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_geq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_gt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_leq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_like?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_lt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_neq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6ExtensionHeaders?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_geq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_gt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_leq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_like?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_lt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_neq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6FlowLabel?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6FlowLabel_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  leaseTag?: InputMaybe<Scalars['string']['input']>;
  leaseTag_geq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_gt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_leq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_like?: InputMaybe<Scalars['string']['input']>;
  leaseTag_lt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_neq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationSystem_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_like?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationSystem_notlike?: InputMaybe<Scalars['string']['input']>;
  outcome?: InputMaybe<Scalars['string']['input']>;
  outcome_geq?: InputMaybe<Scalars['string']['input']>;
  outcome_gt?: InputMaybe<Scalars['string']['input']>;
  outcome_in?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_leq?: InputMaybe<Scalars['string']['input']>;
  outcome_like?: InputMaybe<Scalars['string']['input']>;
  outcome_lt?: InputMaybe<Scalars['string']['input']>;
  outcome_neq?: InputMaybe<Scalars['string']['input']>;
  outcome_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_notlike?: InputMaybe<Scalars['string']['input']>;
  prefixTag?: InputMaybe<Scalars['string']['input']>;
  prefixTag_geq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_gt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_leq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_like?: InputMaybe<Scalars['string']['input']>;
  prefixTag_lt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_neq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsnName?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_like?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceCountry?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_geq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_gt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_leq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_like?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_lt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_neq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_like?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpAcknowledgementNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpAcknowledgementNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlagsString?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_geq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_gt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_leq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_like?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_lt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_neq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpMss?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpMss_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpOptions?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_geq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_gt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_leq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_like?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_lt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_neq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_geq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_gt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_leq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_like?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_lt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_neq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackPermitted?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpSackPermitted_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpUrgentPointer?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpUrgentPointer_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
};

export enum AccountMagicTransitNetworkAnalyticsAdaptiveGroupsOrderBy {
  /** applicationTag ascending */
  ApplicationTagAsc = 'applicationTag_ASC',
  /** applicationTag descending */
  ApplicationTagDesc = 'applicationTag_DESC',
  /** avg(bitRateDay) ascending */
  AvgBitRateDayAsc = 'avg_bitRateDay_ASC',
  /** avg(bitRateDay) descending */
  AvgBitRateDayDesc = 'avg_bitRateDay_DESC',
  /** avg(bitRateFifteenMinutes) ascending */
  AvgBitRateFifteenMinutesAsc = 'avg_bitRateFifteenMinutes_ASC',
  /** avg(bitRateFifteenMinutes) descending */
  AvgBitRateFifteenMinutesDesc = 'avg_bitRateFifteenMinutes_DESC',
  /** avg(bitRateFiveMinutes) ascending */
  AvgBitRateFiveMinutesAsc = 'avg_bitRateFiveMinutes_ASC',
  /** avg(bitRateFiveMinutes) descending */
  AvgBitRateFiveMinutesDesc = 'avg_bitRateFiveMinutes_DESC',
  /** avg(bitRateHour) ascending */
  AvgBitRateHourAsc = 'avg_bitRateHour_ASC',
  /** avg(bitRateHour) descending */
  AvgBitRateHourDesc = 'avg_bitRateHour_DESC',
  /** avg(bitRateMinute) ascending */
  AvgBitRateMinuteAsc = 'avg_bitRateMinute_ASC',
  /** avg(bitRateMinute) descending */
  AvgBitRateMinuteDesc = 'avg_bitRateMinute_DESC',
  /** avg(bitRateTenSeconds) ascending */
  AvgBitRateTenSecondsAsc = 'avg_bitRateTenSeconds_ASC',
  /** avg(bitRateTenSeconds) descending */
  AvgBitRateTenSecondsDesc = 'avg_bitRateTenSeconds_DESC',
  /** avg(bitRate) ascending */
  AvgBitRateAsc = 'avg_bitRate_ASC',
  /** avg(bitRate) descending */
  AvgBitRateDesc = 'avg_bitRate_DESC',
  /** avg(packetRateDay) ascending */
  AvgPacketRateDayAsc = 'avg_packetRateDay_ASC',
  /** avg(packetRateDay) descending */
  AvgPacketRateDayDesc = 'avg_packetRateDay_DESC',
  /** avg(packetRateFifteenMinutes) ascending */
  AvgPacketRateFifteenMinutesAsc = 'avg_packetRateFifteenMinutes_ASC',
  /** avg(packetRateFifteenMinutes) descending */
  AvgPacketRateFifteenMinutesDesc = 'avg_packetRateFifteenMinutes_DESC',
  /** avg(packetRateFiveMinutes) ascending */
  AvgPacketRateFiveMinutesAsc = 'avg_packetRateFiveMinutes_ASC',
  /** avg(packetRateFiveMinutes) descending */
  AvgPacketRateFiveMinutesDesc = 'avg_packetRateFiveMinutes_DESC',
  /** avg(packetRateHour) ascending */
  AvgPacketRateHourAsc = 'avg_packetRateHour_ASC',
  /** avg(packetRateHour) descending */
  AvgPacketRateHourDesc = 'avg_packetRateHour_DESC',
  /** avg(packetRateMinute) ascending */
  AvgPacketRateMinuteAsc = 'avg_packetRateMinute_ASC',
  /** avg(packetRateMinute) descending */
  AvgPacketRateMinuteDesc = 'avg_packetRateMinute_DESC',
  /** avg(packetRateTenSeconds) ascending */
  AvgPacketRateTenSecondsAsc = 'avg_packetRateTenSeconds_ASC',
  /** avg(packetRateTenSeconds) descending */
  AvgPacketRateTenSecondsDesc = 'avg_packetRateTenSeconds_DESC',
  /** avg(packetRate) ascending */
  AvgPacketRateAsc = 'avg_packetRate_ASC',
  /** avg(packetRate) descending */
  AvgPacketRateDesc = 'avg_packetRate_DESC',
  /** coloCity ascending */
  ColoCityAsc = 'coloCity_ASC',
  /** coloCity descending */
  ColoCityDesc = 'coloCity_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** coloCountry ascending */
  ColoCountryAsc = 'coloCountry_ASC',
  /** coloCountry descending */
  ColoCountryDesc = 'coloCountry_DESC',
  /** coloGeohash ascending */
  ColoGeohashAsc = 'coloGeohash_ASC',
  /** coloGeohash descending */
  ColoGeohashDesc = 'coloGeohash_DESC',
  /** coloName ascending */
  ColoNameAsc = 'coloName_ASC',
  /** coloName descending */
  ColoNameDesc = 'coloName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetimeTenSeconds ascending */
  DatetimeTenSecondsAsc = 'datetimeTenSeconds_ASC',
  /** datetimeTenSeconds descending */
  DatetimeTenSecondsDesc = 'datetimeTenSeconds_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationAsnName ascending */
  DestinationAsnNameAsc = 'destinationAsnName_ASC',
  /** destinationAsnName descending */
  DestinationAsnNameDesc = 'destinationAsnName_DESC',
  /** destinationAsn ascending */
  DestinationAsnAsc = 'destinationAsn_ASC',
  /** destinationAsn descending */
  DestinationAsnDesc = 'destinationAsn_DESC',
  /** destinationCountry ascending */
  DestinationCountryAsc = 'destinationCountry_ASC',
  /** destinationCountry descending */
  DestinationCountryDesc = 'destinationCountry_DESC',
  /** destinationGeohash ascending */
  DestinationGeohashAsc = 'destinationGeohash_ASC',
  /** destinationGeohash descending */
  DestinationGeohashDesc = 'destinationGeohash_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** destinationService ascending */
  DestinationServiceAsc = 'destinationService_ASC',
  /** destinationService descending */
  DestinationServiceDesc = 'destinationService_DESC',
  /** direction ascending */
  DirectionAsc = 'direction_ASC',
  /** direction descending */
  DirectionDesc = 'direction_DESC',
  /** egressTunnelID ascending */
  EgressTunnelIdAsc = 'egressTunnelID_ASC',
  /** egressTunnelID descending */
  EgressTunnelIdDesc = 'egressTunnelID_DESC',
  /** egressTunnelName ascending */
  EgressTunnelNameAsc = 'egressTunnelName_ASC',
  /** egressTunnelName descending */
  EgressTunnelNameDesc = 'egressTunnelName_DESC',
  /** ethertype ascending */
  EthertypeAsc = 'ethertype_ASC',
  /** ethertype descending */
  EthertypeDesc = 'ethertype_DESC',
  /** greChecksum ascending */
  GreChecksumAsc = 'greChecksum_ASC',
  /** greChecksum descending */
  GreChecksumDesc = 'greChecksum_DESC',
  /** greEthertype ascending */
  GreEthertypeAsc = 'greEthertype_ASC',
  /** greEthertype descending */
  GreEthertypeDesc = 'greEthertype_DESC',
  /** greHeaderLength ascending */
  GreHeaderLengthAsc = 'greHeaderLength_ASC',
  /** greHeaderLength descending */
  GreHeaderLengthDesc = 'greHeaderLength_DESC',
  /** greKey ascending */
  GreKeyAsc = 'greKey_ASC',
  /** greKey descending */
  GreKeyDesc = 'greKey_DESC',
  /** greSequenceNumber ascending */
  GreSequenceNumberAsc = 'greSequenceNumber_ASC',
  /** greSequenceNumber descending */
  GreSequenceNumberDesc = 'greSequenceNumber_DESC',
  /** greVersion ascending */
  GreVersionAsc = 'greVersion_ASC',
  /** greVersion descending */
  GreVersionDesc = 'greVersion_DESC',
  /** icmpChecksum ascending */
  IcmpChecksumAsc = 'icmpChecksum_ASC',
  /** icmpChecksum descending */
  IcmpChecksumDesc = 'icmpChecksum_DESC',
  /** icmpCode ascending */
  IcmpCodeAsc = 'icmpCode_ASC',
  /** icmpCode descending */
  IcmpCodeDesc = 'icmpCode_DESC',
  /** icmpType ascending */
  IcmpTypeAsc = 'icmpType_ASC',
  /** icmpType descending */
  IcmpTypeDesc = 'icmpType_DESC',
  /** ingressTunnelID ascending */
  IngressTunnelIdAsc = 'ingressTunnelID_ASC',
  /** ingressTunnelID descending */
  IngressTunnelIdDesc = 'ingressTunnelID_DESC',
  /** ingressTunnelName ascending */
  IngressTunnelNameAsc = 'ingressTunnelName_ASC',
  /** ingressTunnelName descending */
  IngressTunnelNameDesc = 'ingressTunnelName_DESC',
  /** ipDestinationAddress ascending */
  IpDestinationAddressAsc = 'ipDestinationAddress_ASC',
  /** ipDestinationAddress descending */
  IpDestinationAddressDesc = 'ipDestinationAddress_DESC',
  /** ipDestinationSubnet ascending */
  IpDestinationSubnetAsc = 'ipDestinationSubnet_ASC',
  /** ipDestinationSubnet descending */
  IpDestinationSubnetDesc = 'ipDestinationSubnet_DESC',
  /** ipFragmentOffset ascending */
  IpFragmentOffsetAsc = 'ipFragmentOffset_ASC',
  /** ipFragmentOffset descending */
  IpFragmentOffsetDesc = 'ipFragmentOffset_DESC',
  /** ipHeaderLength ascending */
  IpHeaderLengthAsc = 'ipHeaderLength_ASC',
  /** ipHeaderLength descending */
  IpHeaderLengthDesc = 'ipHeaderLength_DESC',
  /** ipMoreFragments ascending */
  IpMoreFragmentsAsc = 'ipMoreFragments_ASC',
  /** ipMoreFragments descending */
  IpMoreFragmentsDesc = 'ipMoreFragments_DESC',
  /** ipProtocolName ascending */
  IpProtocolNameAsc = 'ipProtocolName_ASC',
  /** ipProtocolName descending */
  IpProtocolNameDesc = 'ipProtocolName_DESC',
  /** ipProtocol ascending */
  IpProtocolAsc = 'ipProtocol_ASC',
  /** ipProtocol descending */
  IpProtocolDesc = 'ipProtocol_DESC',
  /** ipSourceAddress ascending */
  IpSourceAddressAsc = 'ipSourceAddress_ASC',
  /** ipSourceAddress descending */
  IpSourceAddressDesc = 'ipSourceAddress_DESC',
  /** ipSourceSubnet ascending */
  IpSourceSubnetAsc = 'ipSourceSubnet_ASC',
  /** ipSourceSubnet descending */
  IpSourceSubnetDesc = 'ipSourceSubnet_DESC',
  /** ipTotalLengthBuckets ascending */
  IpTotalLengthBucketsAsc = 'ipTotalLengthBuckets_ASC',
  /** ipTotalLengthBuckets descending */
  IpTotalLengthBucketsDesc = 'ipTotalLengthBuckets_DESC',
  /** ipTotalLength ascending */
  IpTotalLengthAsc = 'ipTotalLength_ASC',
  /** ipTotalLength descending */
  IpTotalLengthDesc = 'ipTotalLength_DESC',
  /** ipTtlBuckets ascending */
  IpTtlBucketsAsc = 'ipTtlBuckets_ASC',
  /** ipTtlBuckets descending */
  IpTtlBucketsDesc = 'ipTtlBuckets_DESC',
  /** ipTtl ascending */
  IpTtlAsc = 'ipTtl_ASC',
  /** ipTtl descending */
  IpTtlDesc = 'ipTtl_DESC',
  /** ipv4Checksum ascending */
  Ipv4ChecksumAsc = 'ipv4Checksum_ASC',
  /** ipv4Checksum descending */
  Ipv4ChecksumDesc = 'ipv4Checksum_DESC',
  /** ipv4DontFragment ascending */
  Ipv4DontFragmentAsc = 'ipv4DontFragment_ASC',
  /** ipv4DontFragment descending */
  Ipv4DontFragmentDesc = 'ipv4DontFragment_DESC',
  /** ipv4Dscp ascending */
  Ipv4DscpAsc = 'ipv4Dscp_ASC',
  /** ipv4Dscp descending */
  Ipv4DscpDesc = 'ipv4Dscp_DESC',
  /** ipv4Ecn ascending */
  Ipv4EcnAsc = 'ipv4Ecn_ASC',
  /** ipv4Ecn descending */
  Ipv4EcnDesc = 'ipv4Ecn_DESC',
  /** ipv4Identification ascending */
  Ipv4IdentificationAsc = 'ipv4Identification_ASC',
  /** ipv4Identification descending */
  Ipv4IdentificationDesc = 'ipv4Identification_DESC',
  /** ipv4Options ascending */
  Ipv4OptionsAsc = 'ipv4Options_ASC',
  /** ipv4Options descending */
  Ipv4OptionsDesc = 'ipv4Options_DESC',
  /** ipv6Dscp ascending */
  Ipv6DscpAsc = 'ipv6Dscp_ASC',
  /** ipv6Dscp descending */
  Ipv6DscpDesc = 'ipv6Dscp_DESC',
  /** ipv6Ecn ascending */
  Ipv6EcnAsc = 'ipv6Ecn_ASC',
  /** ipv6Ecn descending */
  Ipv6EcnDesc = 'ipv6Ecn_DESC',
  /** ipv6ExtensionHeaders ascending */
  Ipv6ExtensionHeadersAsc = 'ipv6ExtensionHeaders_ASC',
  /** ipv6ExtensionHeaders descending */
  Ipv6ExtensionHeadersDesc = 'ipv6ExtensionHeaders_DESC',
  /** ipv6FlowLabel ascending */
  Ipv6FlowLabelAsc = 'ipv6FlowLabel_ASC',
  /** ipv6FlowLabel descending */
  Ipv6FlowLabelDesc = 'ipv6FlowLabel_DESC',
  /** ipv6Identification ascending */
  Ipv6IdentificationAsc = 'ipv6Identification_ASC',
  /** ipv6Identification descending */
  Ipv6IdentificationDesc = 'ipv6Identification_DESC',
  /** leaseTag ascending */
  LeaseTagAsc = 'leaseTag_ASC',
  /** leaseTag descending */
  LeaseTagDesc = 'leaseTag_DESC',
  /** mitigationSystem ascending */
  MitigationSystemAsc = 'mitigationSystem_ASC',
  /** mitigationSystem descending */
  MitigationSystemDesc = 'mitigationSystem_DESC',
  /** outcome ascending */
  OutcomeAsc = 'outcome_ASC',
  /** outcome descending */
  OutcomeDesc = 'outcome_DESC',
  /** prefixTag ascending */
  PrefixTagAsc = 'prefixTag_ASC',
  /** prefixTag descending */
  PrefixTagDesc = 'prefixTag_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sourceAsnName ascending */
  SourceAsnNameAsc = 'sourceAsnName_ASC',
  /** sourceAsnName descending */
  SourceAsnNameDesc = 'sourceAsnName_DESC',
  /** sourceAsn ascending */
  SourceAsnAsc = 'sourceAsn_ASC',
  /** sourceAsn descending */
  SourceAsnDesc = 'sourceAsn_DESC',
  /** sourceCountry ascending */
  SourceCountryAsc = 'sourceCountry_ASC',
  /** sourceCountry descending */
  SourceCountryDesc = 'sourceCountry_DESC',
  /** sourceGeohash ascending */
  SourceGeohashAsc = 'sourceGeohash_ASC',
  /** sourceGeohash descending */
  SourceGeohashDesc = 'sourceGeohash_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** sourceService ascending */
  SourceServiceAsc = 'sourceService_ASC',
  /** sourceService descending */
  SourceServiceDesc = 'sourceService_DESC',
  /** sum(bits) ascending */
  SumBitsAsc = 'sum_bits_ASC',
  /** sum(bits) descending */
  SumBitsDesc = 'sum_bits_DESC',
  /** sum(packets) ascending */
  SumPacketsAsc = 'sum_packets_ASC',
  /** sum(packets) descending */
  SumPacketsDesc = 'sum_packets_DESC',
  /** system ascending */
  SystemAsc = 'system_ASC',
  /** system descending */
  SystemDesc = 'system_DESC',
  /** tcpAcknowledgementNumber ascending */
  TcpAcknowledgementNumberAsc = 'tcpAcknowledgementNumber_ASC',
  /** tcpAcknowledgementNumber descending */
  TcpAcknowledgementNumberDesc = 'tcpAcknowledgementNumber_DESC',
  /** tcpChecksum ascending */
  TcpChecksumAsc = 'tcpChecksum_ASC',
  /** tcpChecksum descending */
  TcpChecksumDesc = 'tcpChecksum_DESC',
  /** tcpDataOffset ascending */
  TcpDataOffsetAsc = 'tcpDataOffset_ASC',
  /** tcpDataOffset descending */
  TcpDataOffsetDesc = 'tcpDataOffset_DESC',
  /** tcpFlagsString ascending */
  TcpFlagsStringAsc = 'tcpFlagsString_ASC',
  /** tcpFlagsString descending */
  TcpFlagsStringDesc = 'tcpFlagsString_DESC',
  /** tcpFlags ascending */
  TcpFlagsAsc = 'tcpFlags_ASC',
  /** tcpFlags descending */
  TcpFlagsDesc = 'tcpFlags_DESC',
  /** tcpMss ascending */
  TcpMssAsc = 'tcpMss_ASC',
  /** tcpMss descending */
  TcpMssDesc = 'tcpMss_DESC',
  /** tcpOptions ascending */
  TcpOptionsAsc = 'tcpOptions_ASC',
  /** tcpOptions descending */
  TcpOptionsDesc = 'tcpOptions_DESC',
  /** tcpSackBlocks ascending */
  TcpSackBlocksAsc = 'tcpSackBlocks_ASC',
  /** tcpSackBlocks descending */
  TcpSackBlocksDesc = 'tcpSackBlocks_DESC',
  /** tcpSackPermitted ascending */
  TcpSackPermittedAsc = 'tcpSackPermitted_ASC',
  /** tcpSackPermitted descending */
  TcpSackPermittedDesc = 'tcpSackPermitted_DESC',
  /** tcpSequenceNumber ascending */
  TcpSequenceNumberAsc = 'tcpSequenceNumber_ASC',
  /** tcpSequenceNumber descending */
  TcpSequenceNumberDesc = 'tcpSequenceNumber_DESC',
  /** tcpTimestampEcr ascending */
  TcpTimestampEcrAsc = 'tcpTimestampEcr_ASC',
  /** tcpTimestampEcr descending */
  TcpTimestampEcrDesc = 'tcpTimestampEcr_DESC',
  /** tcpTimestampValue ascending */
  TcpTimestampValueAsc = 'tcpTimestampValue_ASC',
  /** tcpTimestampValue descending */
  TcpTimestampValueDesc = 'tcpTimestampValue_DESC',
  /** tcpUrgentPointer ascending */
  TcpUrgentPointerAsc = 'tcpUrgentPointer_ASC',
  /** tcpUrgentPointer descending */
  TcpUrgentPointerDesc = 'tcpUrgentPointer_DESC',
  /** tcpWindowScale ascending */
  TcpWindowScaleAsc = 'tcpWindowScale_ASC',
  /** tcpWindowScale descending */
  TcpWindowScaleDesc = 'tcpWindowScale_DESC',
  /** tcpWindowSize ascending */
  TcpWindowSizeAsc = 'tcpWindowSize_ASC',
  /** tcpWindowSize descending */
  TcpWindowSizeDesc = 'tcpWindowSize_DESC',
  /** udpChecksum ascending */
  UdpChecksumAsc = 'udpChecksum_ASC',
  /** udpChecksum descending */
  UdpChecksumDesc = 'udpChecksum_DESC',
  /** udpPayloadLength ascending */
  UdpPayloadLengthAsc = 'udpPayloadLength_ASC',
  /** udpPayloadLength descending */
  UdpPayloadLengthDesc = 'udpPayloadLength_DESC',
  /** verdict ascending */
  VerdictAsc = 'verdict_ASC',
  /** verdict descending */
  VerdictDesc = 'verdict_DESC',
  /** visibility ascending */
  VisibilityAsc = 'visibility_ASC',
  /** visibility descending */
  VisibilityDesc = 'visibility_DESC'
}

export type AccountMagicTransitNetworkAnalyticsAdaptiveGroupsSum = {
  __typename?: 'AccountMagicTransitNetworkAnalyticsAdaptiveGroupsSum';
  /** Sum of bits received */
  bits: Scalars['uint64']['output'];
  /** Sum of packets received */
  packets: Scalars['uint64']['output'];
};

/** Beta. Magic Transit Health check results for customer GRE Tunnels with adaptive sampling (ABR). */
export type AccountMagicTransitTunnelHealthChecksAdaptiveGroups = {
  __typename?: 'AccountMagicTransitTunnelHealthChecksAdaptiveGroups';
  avg?: Maybe<AccountMagicTransitTunnelHealthChecksAdaptiveGroupsAvg>;
  /** Total number of healthcheck results */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountMagicTransitTunnelHealthChecksAdaptiveGroupsDimensions>;
};

export type AccountMagicTransitTunnelHealthChecksAdaptiveGroupsAvg = {
  __typename?: 'AccountMagicTransitTunnelHealthChecksAdaptiveGroupsAvg';
  /** Average sample interval per dimension */
  sampleInterval: Scalars['float64']['output'];
  /** Combined Tunnel State aggregated from multiple results. 0 is down, 0.5 is degraded and 1 is healthy */
  tunnelState: Scalars['float32']['output'];
};

export type AccountMagicTransitTunnelHealthChecksAdaptiveGroupsDimensions = {
  __typename?: 'AccountMagicTransitTunnelHealthChecksAdaptiveGroupsDimensions';
  /** The time the healthcheck request was sent */
  datetime: Scalars['Time']['output'];
  /** The time the healthcheck request was sent, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The time the healthcheck request was sent, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The time the healthcheck request was sent, truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** The time the healthcheck request was sent, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The time the healthcheck request was sent, truncated to the last minute */
  datetimeMinute: Scalars['Time']['output'];
  /** City of the Cloudflare datacenter from where the healthcheck was run */
  edgeColoCity: Scalars['string']['output'];
  /** IATA airport code of the Cloudflare datacenter from where the healthcheck was run */
  edgeColoCode: Scalars['string']['output'];
  /** Country of the Cloudflare datacenter from where the healthcheck was run */
  edgeColoCountry: Scalars['string']['output'];
  /** The name of the Cloudflare datacenter from where the healthcheck was run */
  edgeColoName: Scalars['string']['output'];
  /** Region of the Cloudflare datacenter from where the healthcheck was run */
  edgeColoRegion: Scalars['string']['output'];
  /** IP address of the remote end of the tunnel */
  remoteTunnelIPv4: Scalars['string']['output'];
  /** The status of the request */
  resultStatus: Scalars['string']['output'];
  /** Human friendly tunnel name */
  tunnelName: Scalars['string']['output'];
};

export type AccountMagicTransitTunnelHealthChecksAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountMagicTransitTunnelHealthChecksAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountMagicTransitTunnelHealthChecksAdaptiveGroupsFilter_InputObject>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  edgeColoCity?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoCity_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoCity_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoCode_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoCode_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoCountry_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoName?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoRegion?: InputMaybe<Scalars['string']['input']>;
  edgeColoRegion_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoRegion_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoRegion_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoRegion_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoRegion_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoRegion_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoRegion_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoRegion_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoRegion_notlike?: InputMaybe<Scalars['string']['input']>;
  remoteTunnelIPv4?: InputMaybe<Scalars['string']['input']>;
  remoteTunnelIPv4_geq?: InputMaybe<Scalars['string']['input']>;
  remoteTunnelIPv4_gt?: InputMaybe<Scalars['string']['input']>;
  remoteTunnelIPv4_in?: InputMaybe<Array<Scalars['string']['input']>>;
  remoteTunnelIPv4_leq?: InputMaybe<Scalars['string']['input']>;
  remoteTunnelIPv4_like?: InputMaybe<Scalars['string']['input']>;
  remoteTunnelIPv4_lt?: InputMaybe<Scalars['string']['input']>;
  remoteTunnelIPv4_neq?: InputMaybe<Scalars['string']['input']>;
  remoteTunnelIPv4_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  remoteTunnelIPv4_notlike?: InputMaybe<Scalars['string']['input']>;
  resultStatus?: InputMaybe<Scalars['string']['input']>;
  resultStatus_geq?: InputMaybe<Scalars['string']['input']>;
  resultStatus_gt?: InputMaybe<Scalars['string']['input']>;
  resultStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  resultStatus_leq?: InputMaybe<Scalars['string']['input']>;
  resultStatus_like?: InputMaybe<Scalars['string']['input']>;
  resultStatus_lt?: InputMaybe<Scalars['string']['input']>;
  resultStatus_neq?: InputMaybe<Scalars['string']['input']>;
  resultStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  resultStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  tunnelName?: InputMaybe<Scalars['string']['input']>;
  tunnelName_geq?: InputMaybe<Scalars['string']['input']>;
  tunnelName_gt?: InputMaybe<Scalars['string']['input']>;
  tunnelName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tunnelName_leq?: InputMaybe<Scalars['string']['input']>;
  tunnelName_like?: InputMaybe<Scalars['string']['input']>;
  tunnelName_lt?: InputMaybe<Scalars['string']['input']>;
  tunnelName_neq?: InputMaybe<Scalars['string']['input']>;
  tunnelName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tunnelName_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountMagicTransitTunnelHealthChecksAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** avg(tunnelState) ascending */
  AvgTunnelStateAsc = 'avg_tunnelState_ASC',
  /** avg(tunnelState) descending */
  AvgTunnelStateDesc = 'avg_tunnelState_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** edgeColoCity ascending */
  EdgeColoCityAsc = 'edgeColoCity_ASC',
  /** edgeColoCity descending */
  EdgeColoCityDesc = 'edgeColoCity_DESC',
  /** edgeColoCode ascending */
  EdgeColoCodeAsc = 'edgeColoCode_ASC',
  /** edgeColoCode descending */
  EdgeColoCodeDesc = 'edgeColoCode_DESC',
  /** edgeColoCountry ascending */
  EdgeColoCountryAsc = 'edgeColoCountry_ASC',
  /** edgeColoCountry descending */
  EdgeColoCountryDesc = 'edgeColoCountry_DESC',
  /** edgeColoName ascending */
  EdgeColoNameAsc = 'edgeColoName_ASC',
  /** edgeColoName descending */
  EdgeColoNameDesc = 'edgeColoName_DESC',
  /** edgeColoRegion ascending */
  EdgeColoRegionAsc = 'edgeColoRegion_ASC',
  /** edgeColoRegion descending */
  EdgeColoRegionDesc = 'edgeColoRegion_DESC',
  /** remoteTunnelIPv4 ascending */
  RemoteTunnelIPv4Asc = 'remoteTunnelIPv4_ASC',
  /** remoteTunnelIPv4 descending */
  RemoteTunnelIPv4Desc = 'remoteTunnelIPv4_DESC',
  /** resultStatus ascending */
  ResultStatusAsc = 'resultStatus_ASC',
  /** resultStatus descending */
  ResultStatusDesc = 'resultStatus_DESC',
  /** tunnelName ascending */
  TunnelNameAsc = 'tunnelName_ASC',
  /** tunnelName descending */
  TunnelNameDesc = 'tunnelName_DESC'
}

/** Bandwidth usage metric of a Magic Transit tunnel. */
export type AccountMagicTransitTunnelTrafficAdaptiveGroups = {
  __typename?: 'AccountMagicTransitTunnelTrafficAdaptiveGroups';
  /** Ingress/Egress bandwidth in bits per second for a past duration */
  avg?: Maybe<AccountMagicTransitTunnelTrafficAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountMagicTransitTunnelTrafficAdaptiveGroupsDimensions>;
};

export type AccountMagicTransitTunnelTrafficAdaptiveGroupsAvg = {
  __typename?: 'AccountMagicTransitTunnelTrafficAdaptiveGroupsAvg';
  /** Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes */
  bitRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes */
  bitRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour */
  bitRateHour: Scalars['uint64']['output'];
};

export type AccountMagicTransitTunnelTrafficAdaptiveGroupsDimensions = {
  __typename?: 'AccountMagicTransitTunnelTrafficAdaptiveGroupsDimensions';
  /** Date and time that the packet was received */
  datetime: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest hour */
  datetimeHour: Scalars['Time']['output'];
  /** Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral) */
  direction: Scalars['string']['output'];
  /** City where the Cloudflare datacenter that received the packet is located */
  edgeColoCity: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (nearest IATA airport code) */
  edgeColoCode: Scalars['string']['output'];
  /** Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2) */
  edgeColoCountry: Scalars['string']['output'];
  /** Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding) */
  edgeColoGeohash: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (unique site identifier) */
  edgeColoName: Scalars['string']['output'];
  /** Tunnel device name */
  tunnelName: Scalars['string']['output'];
};

export type AccountMagicTransitTunnelTrafficAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountMagicTransitTunnelTrafficAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountMagicTransitTunnelTrafficAdaptiveGroupsFilter_InputObject>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  direction?: InputMaybe<Scalars['string']['input']>;
  direction_geq?: InputMaybe<Scalars['string']['input']>;
  direction_gt?: InputMaybe<Scalars['string']['input']>;
  direction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_leq?: InputMaybe<Scalars['string']['input']>;
  direction_like?: InputMaybe<Scalars['string']['input']>;
  direction_lt?: InputMaybe<Scalars['string']['input']>;
  direction_neq?: InputMaybe<Scalars['string']['input']>;
  direction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoCity_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCity_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoCity_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoCode_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoCode_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoCountry_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoGeohash?: InputMaybe<Scalars['string']['input']>;
  edgeColoGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoGeohash_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoName?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_notlike?: InputMaybe<Scalars['string']['input']>;
  tunnelName?: InputMaybe<Scalars['string']['input']>;
  tunnelName_geq?: InputMaybe<Scalars['string']['input']>;
  tunnelName_gt?: InputMaybe<Scalars['string']['input']>;
  tunnelName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tunnelName_leq?: InputMaybe<Scalars['string']['input']>;
  tunnelName_like?: InputMaybe<Scalars['string']['input']>;
  tunnelName_lt?: InputMaybe<Scalars['string']['input']>;
  tunnelName_neq?: InputMaybe<Scalars['string']['input']>;
  tunnelName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tunnelName_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountMagicTransitTunnelTrafficAdaptiveGroupsOrderBy {
  /** avg(bitRateFifteenMinutes) ascending */
  AvgBitRateFifteenMinutesAsc = 'avg_bitRateFifteenMinutes_ASC',
  /** avg(bitRateFifteenMinutes) descending */
  AvgBitRateFifteenMinutesDesc = 'avg_bitRateFifteenMinutes_DESC',
  /** avg(bitRateFiveMinutes) ascending */
  AvgBitRateFiveMinutesAsc = 'avg_bitRateFiveMinutes_ASC',
  /** avg(bitRateFiveMinutes) descending */
  AvgBitRateFiveMinutesDesc = 'avg_bitRateFiveMinutes_DESC',
  /** avg(bitRateHour) ascending */
  AvgBitRateHourAsc = 'avg_bitRateHour_ASC',
  /** avg(bitRateHour) descending */
  AvgBitRateHourDesc = 'avg_bitRateHour_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** direction ascending */
  DirectionAsc = 'direction_ASC',
  /** direction descending */
  DirectionDesc = 'direction_DESC',
  /** edgeColoCity ascending */
  EdgeColoCityAsc = 'edgeColoCity_ASC',
  /** edgeColoCity descending */
  EdgeColoCityDesc = 'edgeColoCity_DESC',
  /** edgeColoCode ascending */
  EdgeColoCodeAsc = 'edgeColoCode_ASC',
  /** edgeColoCode descending */
  EdgeColoCodeDesc = 'edgeColoCode_DESC',
  /** edgeColoCountry ascending */
  EdgeColoCountryAsc = 'edgeColoCountry_ASC',
  /** edgeColoCountry descending */
  EdgeColoCountryDesc = 'edgeColoCountry_DESC',
  /** edgeColoGeohash ascending */
  EdgeColoGeohashAsc = 'edgeColoGeohash_ASC',
  /** edgeColoGeohash descending */
  EdgeColoGeohashDesc = 'edgeColoGeohash_DESC',
  /** edgeColoName ascending */
  EdgeColoNameAsc = 'edgeColoName_ASC',
  /** edgeColoName descending */
  EdgeColoNameDesc = 'edgeColoName_DESC',
  /** system ascending */
  SystemAsc = 'system_ASC',
  /** system descending */
  SystemDesc = 'system_DESC',
  /** tunnelName ascending */
  TunnelNameAsc = 'tunnelName_ASC',
  /** tunnelName descending */
  TunnelNameDesc = 'tunnelName_DESC',
  /** visibility ascending */
  VisibilityAsc = 'visibility_ASC',
  /** visibility descending */
  VisibilityDesc = 'visibility_DESC'
}

/** Beta. Magic WAN Connector Metrics */
export type AccountMagicWanConnectorMetricsAdaptiveGroups = {
  __typename?: 'AccountMagicWANConnectorMetricsAdaptiveGroups';
  avg?: Maybe<AccountMagicWanConnectorMetricsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountMagicWanConnectorMetricsAdaptiveGroupsDimensions>;
  max?: Maybe<AccountMagicWanConnectorMetricsAdaptiveGroupsMax>;
};

export type AccountMagicWanConnectorMetricsAdaptiveGroupsAvg = {
  __typename?: 'AccountMagicWANConnectorMetricsAdaptiveGroupsAvg';
  /** Average CPU load percentage */
  cpuLoadPercentage: Scalars['float64']['output'];
  /** Average CPU temperature */
  cpuTemperature: Scalars['float64']['output'];
  /** Average Disk usage percentage */
  diskUsagePercentage: Scalars['float64']['output'];
  /** Average Memory usage percentage */
  memoryUsagePercentage: Scalars['float64']['output'];
  /** Rx Bitrate over 5 minutes */
  rxBitrateFiveMinute: Scalars['uint64']['output'];
  /** Rx Bitrate over 1 minute */
  rxBitrateMinute: Scalars['uint64']['output'];
  /** Rx Packet rate over 5 minutes */
  rxPacketrateFiveMinute: Scalars['uint64']['output'];
  /** Rx Packet rate over 1 minute */
  rxPacketrateMinute: Scalars['uint64']['output'];
  /** Tx Bitrate over 5 minutes */
  txBitrateFiveMinute: Scalars['uint64']['output'];
  /** Tx Bitrate over 1 minute */
  txBitrateMinute: Scalars['uint64']['output'];
  /** Tx Packet rate over 5 minutes */
  txPacketrateFiveMinute: Scalars['uint64']['output'];
  /** Tx Packet rate over 1 minute */
  txPacketrateMinute: Scalars['uint64']['output'];
};

export type AccountMagicWanConnectorMetricsAdaptiveGroupsDimensions = {
  __typename?: 'AccountMagicWANConnectorMetricsAdaptiveGroupsDimensions';
  /** The date and time the event was recorded */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Name of connector interface */
  mconnInterfaceName: Scalars['string']['output'];
  /** Interface type LAN, WAN or IPSEC */
  mconnInterfaceType: Scalars['string']['output'];
  /** Customer site identifier */
  mconnSiteID: Scalars['string']['output'];
};

export type AccountMagicWanConnectorMetricsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountMagicWanConnectorMetricsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountMagicWanConnectorMetricsAdaptiveGroupsFilter_InputObject>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  mconnInterfaceName?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceName_geq?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceName_gt?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mconnInterfaceName_leq?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceName_like?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceName_lt?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceName_neq?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mconnInterfaceName_notlike?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceType?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceType_geq?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceType_gt?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mconnInterfaceType_leq?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceType_like?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceType_lt?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceType_neq?: InputMaybe<Scalars['string']['input']>;
  mconnInterfaceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mconnInterfaceType_notlike?: InputMaybe<Scalars['string']['input']>;
  mconnSiteID?: InputMaybe<Scalars['string']['input']>;
  mconnSiteID_geq?: InputMaybe<Scalars['string']['input']>;
  mconnSiteID_gt?: InputMaybe<Scalars['string']['input']>;
  mconnSiteID_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mconnSiteID_leq?: InputMaybe<Scalars['string']['input']>;
  mconnSiteID_like?: InputMaybe<Scalars['string']['input']>;
  mconnSiteID_lt?: InputMaybe<Scalars['string']['input']>;
  mconnSiteID_neq?: InputMaybe<Scalars['string']['input']>;
  mconnSiteID_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mconnSiteID_notlike?: InputMaybe<Scalars['string']['input']>;
};

export type AccountMagicWanConnectorMetricsAdaptiveGroupsMax = {
  __typename?: 'AccountMagicWANConnectorMetricsAdaptiveGroupsMax';
  /** Number of interfaces of a given Type */
  interfaceCount: Scalars['uint32']['output'];
};

export enum AccountMagicWanConnectorMetricsAdaptiveGroupsOrderBy {
  /** avg(cpuLoadPercentage) ascending */
  AvgCpuLoadPercentageAsc = 'avg_cpuLoadPercentage_ASC',
  /** avg(cpuLoadPercentage) descending */
  AvgCpuLoadPercentageDesc = 'avg_cpuLoadPercentage_DESC',
  /** avg(cpuTemperature) ascending */
  AvgCpuTemperatureAsc = 'avg_cpuTemperature_ASC',
  /** avg(cpuTemperature) descending */
  AvgCpuTemperatureDesc = 'avg_cpuTemperature_DESC',
  /** avg(diskUsagePercentage) ascending */
  AvgDiskUsagePercentageAsc = 'avg_diskUsagePercentage_ASC',
  /** avg(diskUsagePercentage) descending */
  AvgDiskUsagePercentageDesc = 'avg_diskUsagePercentage_DESC',
  /** avg(memoryUsagePercentage) ascending */
  AvgMemoryUsagePercentageAsc = 'avg_memoryUsagePercentage_ASC',
  /** avg(memoryUsagePercentage) descending */
  AvgMemoryUsagePercentageDesc = 'avg_memoryUsagePercentage_DESC',
  /** avg(rxBitrateFiveMinute) ascending */
  AvgRxBitrateFiveMinuteAsc = 'avg_rxBitrateFiveMinute_ASC',
  /** avg(rxBitrateFiveMinute) descending */
  AvgRxBitrateFiveMinuteDesc = 'avg_rxBitrateFiveMinute_DESC',
  /** avg(rxBitrateMinute) ascending */
  AvgRxBitrateMinuteAsc = 'avg_rxBitrateMinute_ASC',
  /** avg(rxBitrateMinute) descending */
  AvgRxBitrateMinuteDesc = 'avg_rxBitrateMinute_DESC',
  /** avg(rxPacketrateFiveMinute) ascending */
  AvgRxPacketrateFiveMinuteAsc = 'avg_rxPacketrateFiveMinute_ASC',
  /** avg(rxPacketrateFiveMinute) descending */
  AvgRxPacketrateFiveMinuteDesc = 'avg_rxPacketrateFiveMinute_DESC',
  /** avg(rxPacketrateMinute) ascending */
  AvgRxPacketrateMinuteAsc = 'avg_rxPacketrateMinute_ASC',
  /** avg(rxPacketrateMinute) descending */
  AvgRxPacketrateMinuteDesc = 'avg_rxPacketrateMinute_DESC',
  /** avg(txBitrateFiveMinute) ascending */
  AvgTxBitrateFiveMinuteAsc = 'avg_txBitrateFiveMinute_ASC',
  /** avg(txBitrateFiveMinute) descending */
  AvgTxBitrateFiveMinuteDesc = 'avg_txBitrateFiveMinute_DESC',
  /** avg(txBitrateMinute) ascending */
  AvgTxBitrateMinuteAsc = 'avg_txBitrateMinute_ASC',
  /** avg(txBitrateMinute) descending */
  AvgTxBitrateMinuteDesc = 'avg_txBitrateMinute_DESC',
  /** avg(txPacketrateFiveMinute) ascending */
  AvgTxPacketrateFiveMinuteAsc = 'avg_txPacketrateFiveMinute_ASC',
  /** avg(txPacketrateFiveMinute) descending */
  AvgTxPacketrateFiveMinuteDesc = 'avg_txPacketrateFiveMinute_DESC',
  /** avg(txPacketrateMinute) ascending */
  AvgTxPacketrateMinuteAsc = 'avg_txPacketrateMinute_ASC',
  /** avg(txPacketrateMinute) descending */
  AvgTxPacketrateMinuteDesc = 'avg_txPacketrateMinute_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** max(interfaceCount) ascending */
  MaxInterfaceCountAsc = 'max_interfaceCount_ASC',
  /** max(interfaceCount) descending */
  MaxInterfaceCountDesc = 'max_interfaceCount_DESC',
  /** mconnInterfaceName ascending */
  MconnInterfaceNameAsc = 'mconnInterfaceName_ASC',
  /** mconnInterfaceName descending */
  MconnInterfaceNameDesc = 'mconnInterfaceName_DESC',
  /** mconnInterfaceType ascending */
  MconnInterfaceTypeAsc = 'mconnInterfaceType_ASC',
  /** mconnInterfaceType descending */
  MconnInterfaceTypeDesc = 'mconnInterfaceType_DESC',
  /** mconnSiteID ascending */
  MconnSiteIdAsc = 'mconnSiteID_ASC',
  /** mconnSiteID descending */
  MconnSiteIdDesc = 'mconnSiteID_DESC'
}

/** Flow data collected through Magic Network Monitoring */
export type AccountMnmFlowDataAdaptiveGroups = {
  __typename?: 'AccountMnmFlowDataAdaptiveGroups';
  /** The average of values for a metric per dimension */
  avg?: Maybe<AccountMnmFlowDataAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountMnmFlowDataAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountMnmFlowDataAdaptiveGroupsSum>;
};

export type AccountMnmFlowDataAdaptiveGroupsAvg = {
  __typename?: 'AccountMnmFlowDataAdaptiveGroupsAvg';
  /** Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime */
  bitRate: Scalars['float64']['output'];
  /** Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date */
  bitRateDay: Scalars['float64']['output'];
  /** Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes */
  bitRateFifteenMinutes: Scalars['float64']['output'];
  /** Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes */
  bitRateFiveMinutes: Scalars['float64']['output'];
  /** Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour */
  bitRateHour: Scalars['float64']['output'];
  /** Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute */
  bitRateMinute: Scalars['float64']['output'];
  /** Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds */
  bitRateTenSeconds: Scalars['float64']['output'];
  /** Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime */
  packetRate: Scalars['float64']['output'];
  /** Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date */
  packetRateDay: Scalars['float64']['output'];
  /** Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes */
  packetRateFifteenMinutes: Scalars['float64']['output'];
  /** Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes */
  packetRateFiveMinutes: Scalars['float64']['output'];
  /** Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour */
  packetRateHour: Scalars['float64']['output'];
  /** Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute */
  packetRateMinute: Scalars['float64']['output'];
  /** Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds */
  packetRateTenSeconds: Scalars['float64']['output'];
  /** Average sample interval applied to the data */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountMnmFlowDataAdaptiveGroupsDimensions = {
  __typename?: 'AccountMnmFlowDataAdaptiveGroupsDimensions';
  /** Date that the packet was received */
  date: Scalars['Date']['output'];
  /** Date and time that the packet was received */
  datetime: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest hour */
  datetimeHour: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest ten seconds */
  datetimeTenSeconds: Scalars['Time']['output'];
  /** IP to which the data was sent */
  destinationAddress: Scalars['string']['output'];
  /** Value of the Destination Port header field in the packet */
  destinationPort: Scalars['uint16']['output'];
  /** Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6) */
  ethertype: Scalars['uint16']['output'];
  /** Layer 4 protocol */
  protocol: Scalars['uint16']['output'];
  /** Human-readable string representation of the protocol */
  protocolString: Scalars['string']['output'];
  /** IP of the router that sampled the flows */
  routerAddress: Scalars['string']['output'];
  /** List of flow matching rules */
  ruleIDs: Array<Scalars['string']['output']>;
  /** IP from which the data was sent */
  sourceAddress: Scalars['string']['output'];
  /** Value of the Source Port header field in the packet */
  sourcePort: Scalars['uint16']['output'];
  /** Value of the Flags header field in the TCP packet */
  tcpFlags: Scalars['uint16']['output'];
  /** Human-readable string representation of the Flags header field in the TCP packet */
  tcpFlagsString: Scalars['string']['output'];
  /** Version of the record schema */
  version: Scalars['int64']['output'];
};

export type AccountMnmFlowDataAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountMnmFlowDataAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountMnmFlowDataAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationAddress?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_geq?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_gt?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAddress_leq?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_like?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_lt?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_neq?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ethertype?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ethertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  protocol?: InputMaybe<Scalars['uint16']['input']>;
  protocolString?: InputMaybe<Scalars['string']['input']>;
  protocolString_geq?: InputMaybe<Scalars['string']['input']>;
  protocolString_gt?: InputMaybe<Scalars['string']['input']>;
  protocolString_in?: InputMaybe<Array<Scalars['string']['input']>>;
  protocolString_leq?: InputMaybe<Scalars['string']['input']>;
  protocolString_like?: InputMaybe<Scalars['string']['input']>;
  protocolString_lt?: InputMaybe<Scalars['string']['input']>;
  protocolString_neq?: InputMaybe<Scalars['string']['input']>;
  protocolString_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  protocolString_notlike?: InputMaybe<Scalars['string']['input']>;
  protocol_geq?: InputMaybe<Scalars['uint16']['input']>;
  protocol_gt?: InputMaybe<Scalars['uint16']['input']>;
  protocol_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  protocol_leq?: InputMaybe<Scalars['uint16']['input']>;
  protocol_lt?: InputMaybe<Scalars['uint16']['input']>;
  protocol_neq?: InputMaybe<Scalars['uint16']['input']>;
  protocol_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  routerAddress?: InputMaybe<Scalars['string']['input']>;
  routerAddress_geq?: InputMaybe<Scalars['string']['input']>;
  routerAddress_gt?: InputMaybe<Scalars['string']['input']>;
  routerAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  routerAddress_leq?: InputMaybe<Scalars['string']['input']>;
  routerAddress_like?: InputMaybe<Scalars['string']['input']>;
  routerAddress_lt?: InputMaybe<Scalars['string']['input']>;
  routerAddress_neq?: InputMaybe<Scalars['string']['input']>;
  routerAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  routerAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ruleIDs_has?: InputMaybe<Scalars['string']['input']>;
  ruleIDs_hasall?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleIDs_hasany?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleIDs_nothas?: InputMaybe<Scalars['string']['input']>;
  sourceAddress?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_geq?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_gt?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAddress_leq?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_like?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_lt?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_neq?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpFlags?: InputMaybe<Scalars['uint16']['input']>;
  tcpFlagsString?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_geq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_gt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_leq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_like?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_lt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_neq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpFlags_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpFlags_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpFlags_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpFlags_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpFlags_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpFlags_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpFlags_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  version?: InputMaybe<Scalars['int64']['input']>;
  version_geq?: InputMaybe<Scalars['int64']['input']>;
  version_gt?: InputMaybe<Scalars['int64']['input']>;
  version_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  version_leq?: InputMaybe<Scalars['int64']['input']>;
  version_lt?: InputMaybe<Scalars['int64']['input']>;
  version_neq?: InputMaybe<Scalars['int64']['input']>;
  version_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
};

export enum AccountMnmFlowDataAdaptiveGroupsOrderBy {
  /** avg(bitRateDay) ascending */
  AvgBitRateDayAsc = 'avg_bitRateDay_ASC',
  /** avg(bitRateDay) descending */
  AvgBitRateDayDesc = 'avg_bitRateDay_DESC',
  /** avg(bitRateFifteenMinutes) ascending */
  AvgBitRateFifteenMinutesAsc = 'avg_bitRateFifteenMinutes_ASC',
  /** avg(bitRateFifteenMinutes) descending */
  AvgBitRateFifteenMinutesDesc = 'avg_bitRateFifteenMinutes_DESC',
  /** avg(bitRateFiveMinutes) ascending */
  AvgBitRateFiveMinutesAsc = 'avg_bitRateFiveMinutes_ASC',
  /** avg(bitRateFiveMinutes) descending */
  AvgBitRateFiveMinutesDesc = 'avg_bitRateFiveMinutes_DESC',
  /** avg(bitRateHour) ascending */
  AvgBitRateHourAsc = 'avg_bitRateHour_ASC',
  /** avg(bitRateHour) descending */
  AvgBitRateHourDesc = 'avg_bitRateHour_DESC',
  /** avg(bitRateMinute) ascending */
  AvgBitRateMinuteAsc = 'avg_bitRateMinute_ASC',
  /** avg(bitRateMinute) descending */
  AvgBitRateMinuteDesc = 'avg_bitRateMinute_DESC',
  /** avg(bitRateTenSeconds) ascending */
  AvgBitRateTenSecondsAsc = 'avg_bitRateTenSeconds_ASC',
  /** avg(bitRateTenSeconds) descending */
  AvgBitRateTenSecondsDesc = 'avg_bitRateTenSeconds_DESC',
  /** avg(bitRate) ascending */
  AvgBitRateAsc = 'avg_bitRate_ASC',
  /** avg(bitRate) descending */
  AvgBitRateDesc = 'avg_bitRate_DESC',
  /** avg(packetRateDay) ascending */
  AvgPacketRateDayAsc = 'avg_packetRateDay_ASC',
  /** avg(packetRateDay) descending */
  AvgPacketRateDayDesc = 'avg_packetRateDay_DESC',
  /** avg(packetRateFifteenMinutes) ascending */
  AvgPacketRateFifteenMinutesAsc = 'avg_packetRateFifteenMinutes_ASC',
  /** avg(packetRateFifteenMinutes) descending */
  AvgPacketRateFifteenMinutesDesc = 'avg_packetRateFifteenMinutes_DESC',
  /** avg(packetRateFiveMinutes) ascending */
  AvgPacketRateFiveMinutesAsc = 'avg_packetRateFiveMinutes_ASC',
  /** avg(packetRateFiveMinutes) descending */
  AvgPacketRateFiveMinutesDesc = 'avg_packetRateFiveMinutes_DESC',
  /** avg(packetRateHour) ascending */
  AvgPacketRateHourAsc = 'avg_packetRateHour_ASC',
  /** avg(packetRateHour) descending */
  AvgPacketRateHourDesc = 'avg_packetRateHour_DESC',
  /** avg(packetRateMinute) ascending */
  AvgPacketRateMinuteAsc = 'avg_packetRateMinute_ASC',
  /** avg(packetRateMinute) descending */
  AvgPacketRateMinuteDesc = 'avg_packetRateMinute_DESC',
  /** avg(packetRateTenSeconds) ascending */
  AvgPacketRateTenSecondsAsc = 'avg_packetRateTenSeconds_ASC',
  /** avg(packetRateTenSeconds) descending */
  AvgPacketRateTenSecondsDesc = 'avg_packetRateTenSeconds_DESC',
  /** avg(packetRate) ascending */
  AvgPacketRateAsc = 'avg_packetRate_ASC',
  /** avg(packetRate) descending */
  AvgPacketRateDesc = 'avg_packetRate_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetimeTenSeconds ascending */
  DatetimeTenSecondsAsc = 'datetimeTenSeconds_ASC',
  /** datetimeTenSeconds descending */
  DatetimeTenSecondsDesc = 'datetimeTenSeconds_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationAddress ascending */
  DestinationAddressAsc = 'destinationAddress_ASC',
  /** destinationAddress descending */
  DestinationAddressDesc = 'destinationAddress_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** ethertype ascending */
  EthertypeAsc = 'ethertype_ASC',
  /** ethertype descending */
  EthertypeDesc = 'ethertype_DESC',
  /** protocolString ascending */
  ProtocolStringAsc = 'protocolString_ASC',
  /** protocolString descending */
  ProtocolStringDesc = 'protocolString_DESC',
  /** protocol ascending */
  ProtocolAsc = 'protocol_ASC',
  /** protocol descending */
  ProtocolDesc = 'protocol_DESC',
  /** routerAddress ascending */
  RouterAddressAsc = 'routerAddress_ASC',
  /** routerAddress descending */
  RouterAddressDesc = 'routerAddress_DESC',
  /** ruleIDs ascending */
  RuleIDsAsc = 'ruleIDs_ASC',
  /** ruleIDs descending */
  RuleIDsDesc = 'ruleIDs_DESC',
  /** sourceAddress ascending */
  SourceAddressAsc = 'sourceAddress_ASC',
  /** sourceAddress descending */
  SourceAddressDesc = 'sourceAddress_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** sum(bits) ascending */
  SumBitsAsc = 'sum_bits_ASC',
  /** sum(bits) descending */
  SumBitsDesc = 'sum_bits_DESC',
  /** sum(packets) ascending */
  SumPacketsAsc = 'sum_packets_ASC',
  /** sum(packets) descending */
  SumPacketsDesc = 'sum_packets_DESC',
  /** tcpFlagsString ascending */
  TcpFlagsStringAsc = 'tcpFlagsString_ASC',
  /** tcpFlagsString descending */
  TcpFlagsStringDesc = 'tcpFlagsString_DESC',
  /** tcpFlags ascending */
  TcpFlagsAsc = 'tcpFlags_ASC',
  /** tcpFlags descending */
  TcpFlagsDesc = 'tcpFlags_DESC',
  /** version ascending */
  VersionAsc = 'version_ASC',
  /** version descending */
  VersionDesc = 'version_DESC'
}

export type AccountMnmFlowDataAdaptiveGroupsSum = {
  __typename?: 'AccountMnmFlowDataAdaptiveGroupsSum';
  /** Sum of bits */
  bits: Scalars['uint64']['output'];
  /** Sum of packets */
  packets: Scalars['uint64']['output'];
};

/** Data to visualize network error logs */
export type AccountNelReportsAdaptiveGroups = {
  __typename?: 'AccountNelReportsAdaptiveGroups';
  avg?: Maybe<AccountNelReportsAdaptiveGroupsAvg>;
  /** The number of NEL Reports */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountNelReportsAdaptiveGroupsDimensions>;
};

export type AccountNelReportsAdaptiveGroupsAvg = {
  __typename?: 'AccountNelReportsAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['uint64']['output'];
};

export type AccountNelReportsAdaptiveGroupsDimensions = {
  __typename?: 'AccountNelReportsAdaptiveGroupsDimensions';
  /** Client ASN */
  clientIPASN: Scalars['uint32']['output'];
  /** Client ASN Description */
  clientIPASNDescription: Scalars['string']['output'];
  /** Client Country */
  clientIPCountry: Scalars['string']['output'];
  /** 2 letter client country code using ISO 3166-1 alpha-2 syntax */
  clientIPCountryCode: Scalars['string']['output'];
  /** IP Version the client used to connect */
  clientIPVersion: Scalars['uint8']['output'];
  /** Request date from browser */
  date: Scalars['Date']['output'];
  /** Request datetime from browser */
  datetime: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** IATA airport code of colo the client connected to */
  lastKnownGoodColoCode: Scalars['string']['output'];
  /** The phase of connection the error occurred in */
  phase: Scalars['string']['output'];
  /** HTTP Protocol used when the error occured */
  protocol: Scalars['string']['output'];
  /** The type of error in the phase */
  type: Scalars['string']['output'];
};

export type AccountNelReportsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountNelReportsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountNelReportsAdaptiveGroupsFilter_InputObject>>;
  clientIPASN?: InputMaybe<Scalars['uint32']['input']>;
  clientIPASNDescription?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIPASN_geq?: InputMaybe<Scalars['uint32']['input']>;
  clientIPASN_gt?: InputMaybe<Scalars['uint32']['input']>;
  clientIPASN_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  clientIPASN_leq?: InputMaybe<Scalars['uint32']['input']>;
  clientIPASN_lt?: InputMaybe<Scalars['uint32']['input']>;
  clientIPASN_neq?: InputMaybe<Scalars['uint32']['input']>;
  clientIPASN_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  clientIPCountry?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_geq?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_gt?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPCountryCode_leq?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_like?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_lt?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_neq?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPCountryCode_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_geq?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_gt?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPCountry_leq?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_like?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_lt?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_neq?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIPVersion?: InputMaybe<Scalars['uint8']['input']>;
  clientIPVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  clientIPVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  clientIPVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  clientIPVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  clientIPVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  clientIPVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  clientIPVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastKnownGoodColoCode?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_geq?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_gt?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  lastKnownGoodColoCode_leq?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_like?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_lt?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_neq?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  lastKnownGoodColoCode_notlike?: InputMaybe<Scalars['string']['input']>;
  phase?: InputMaybe<Scalars['string']['input']>;
  phase_geq?: InputMaybe<Scalars['string']['input']>;
  phase_gt?: InputMaybe<Scalars['string']['input']>;
  phase_in?: InputMaybe<Array<Scalars['string']['input']>>;
  phase_leq?: InputMaybe<Scalars['string']['input']>;
  phase_like?: InputMaybe<Scalars['string']['input']>;
  phase_lt?: InputMaybe<Scalars['string']['input']>;
  phase_neq?: InputMaybe<Scalars['string']['input']>;
  phase_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  phase_notlike?: InputMaybe<Scalars['string']['input']>;
  protocol?: InputMaybe<Scalars['string']['input']>;
  protocol_geq?: InputMaybe<Scalars['string']['input']>;
  protocol_gt?: InputMaybe<Scalars['string']['input']>;
  protocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  protocol_leq?: InputMaybe<Scalars['string']['input']>;
  protocol_like?: InputMaybe<Scalars['string']['input']>;
  protocol_lt?: InputMaybe<Scalars['string']['input']>;
  protocol_neq?: InputMaybe<Scalars['string']['input']>;
  protocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  protocol_notlike?: InputMaybe<Scalars['string']['input']>;
  type?: InputMaybe<Scalars['string']['input']>;
  type_geq?: InputMaybe<Scalars['string']['input']>;
  type_gt?: InputMaybe<Scalars['string']['input']>;
  type_in?: InputMaybe<Array<Scalars['string']['input']>>;
  type_leq?: InputMaybe<Scalars['string']['input']>;
  type_like?: InputMaybe<Scalars['string']['input']>;
  type_lt?: InputMaybe<Scalars['string']['input']>;
  type_neq?: InputMaybe<Scalars['string']['input']>;
  type_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  type_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountNelReportsAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** clientIPASNDescription ascending */
  ClientIpasnDescriptionAsc = 'clientIPASNDescription_ASC',
  /** clientIPASNDescription descending */
  ClientIpasnDescriptionDesc = 'clientIPASNDescription_DESC',
  /** clientIPASN ascending */
  ClientIpasnAsc = 'clientIPASN_ASC',
  /** clientIPASN descending */
  ClientIpasnDesc = 'clientIPASN_DESC',
  /** clientIPCountryCode ascending */
  ClientIpCountryCodeAsc = 'clientIPCountryCode_ASC',
  /** clientIPCountryCode descending */
  ClientIpCountryCodeDesc = 'clientIPCountryCode_DESC',
  /** clientIPCountry ascending */
  ClientIpCountryAsc = 'clientIPCountry_ASC',
  /** clientIPCountry descending */
  ClientIpCountryDesc = 'clientIPCountry_DESC',
  /** clientIPVersion ascending */
  ClientIpVersionAsc = 'clientIPVersion_ASC',
  /** clientIPVersion descending */
  ClientIpVersionDesc = 'clientIPVersion_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** lastKnownGoodColoCode ascending */
  LastKnownGoodColoCodeAsc = 'lastKnownGoodColoCode_ASC',
  /** lastKnownGoodColoCode descending */
  LastKnownGoodColoCodeDesc = 'lastKnownGoodColoCode_DESC',
  /** phase ascending */
  PhaseAsc = 'phase_ASC',
  /** phase descending */
  PhaseDesc = 'phase_DESC',
  /** protocol ascending */
  ProtocolAsc = 'protocol_ASC',
  /** protocol descending */
  ProtocolDesc = 'protocol_DESC',
  /** type ascending */
  TypeAsc = 'type_ASC',
  /** type descending */
  TypeDesc = 'type_DESC'
}

/** Pages Functions invocations with adaptive sampling */
export type AccountPagesFunctionsInvocationsAdaptiveGroups = {
  __typename?: 'AccountPagesFunctionsInvocationsAdaptiveGroups';
  avg?: Maybe<AccountPagesFunctionsInvocationsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountPagesFunctionsInvocationsAdaptiveGroupsDimensions>;
  /** Quantiles of a metric per dimension */
  quantiles?: Maybe<AccountPagesFunctionsInvocationsAdaptiveGroupsQuantiles>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountPagesFunctionsInvocationsAdaptiveGroupsSum>;
};

export type AccountPagesFunctionsInvocationsAdaptiveGroupsAvg = {
  __typename?: 'AccountPagesFunctionsInvocationsAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountPagesFunctionsInvocationsAdaptiveGroupsDimensions = {
  __typename?: 'AccountPagesFunctionsInvocationsAdaptiveGroupsDimensions';
  /** Request datetime, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** Request datetime, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The name of the script */
  scriptName: Scalars['string']['output'];
  /** Status of the worker invocation */
  status: Scalars['string']['output'];
  /** Usage model of the worker invocation */
  usageModel: Scalars['string']['output'];
};

export type AccountPagesFunctionsInvocationsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountPagesFunctionsInvocationsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountPagesFunctionsInvocationsAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  scriptName?: InputMaybe<Scalars['string']['input']>;
  scriptName_geq?: InputMaybe<Scalars['string']['input']>;
  scriptName_gt?: InputMaybe<Scalars['string']['input']>;
  scriptName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_leq?: InputMaybe<Scalars['string']['input']>;
  scriptName_like?: InputMaybe<Scalars['string']['input']>;
  scriptName_lt?: InputMaybe<Scalars['string']['input']>;
  scriptName_neq?: InputMaybe<Scalars['string']['input']>;
  scriptName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_notlike?: InputMaybe<Scalars['string']['input']>;
  status?: InputMaybe<Scalars['string']['input']>;
  status_geq?: InputMaybe<Scalars['string']['input']>;
  status_gt?: InputMaybe<Scalars['string']['input']>;
  status_in?: InputMaybe<Array<Scalars['string']['input']>>;
  status_leq?: InputMaybe<Scalars['string']['input']>;
  status_like?: InputMaybe<Scalars['string']['input']>;
  status_lt?: InputMaybe<Scalars['string']['input']>;
  status_neq?: InputMaybe<Scalars['string']['input']>;
  status_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  status_notlike?: InputMaybe<Scalars['string']['input']>;
  usageModel?: InputMaybe<Scalars['string']['input']>;
  usageModel_geq?: InputMaybe<Scalars['string']['input']>;
  usageModel_gt?: InputMaybe<Scalars['string']['input']>;
  usageModel_in?: InputMaybe<Array<Scalars['string']['input']>>;
  usageModel_leq?: InputMaybe<Scalars['string']['input']>;
  usageModel_like?: InputMaybe<Scalars['string']['input']>;
  usageModel_lt?: InputMaybe<Scalars['string']['input']>;
  usageModel_neq?: InputMaybe<Scalars['string']['input']>;
  usageModel_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  usageModel_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountPagesFunctionsInvocationsAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** quantiles(cpuTimeP50) ascending */
  QuantilesCpuTimeP50Asc = 'quantiles_cpuTimeP50_ASC',
  /** quantiles(cpuTimeP50) descending */
  QuantilesCpuTimeP50Desc = 'quantiles_cpuTimeP50_DESC',
  /** quantiles(cpuTimeP75) ascending */
  QuantilesCpuTimeP75Asc = 'quantiles_cpuTimeP75_ASC',
  /** quantiles(cpuTimeP75) descending */
  QuantilesCpuTimeP75Desc = 'quantiles_cpuTimeP75_DESC',
  /** quantiles(cpuTimeP99) ascending */
  QuantilesCpuTimeP99Asc = 'quantiles_cpuTimeP99_ASC',
  /** quantiles(cpuTimeP99) descending */
  QuantilesCpuTimeP99Desc = 'quantiles_cpuTimeP99_DESC',
  /** quantiles(cpuTimeP999) ascending */
  QuantilesCpuTimeP999Asc = 'quantiles_cpuTimeP999_ASC',
  /** quantiles(cpuTimeP999) descending */
  QuantilesCpuTimeP999Desc = 'quantiles_cpuTimeP999_DESC',
  /** quantiles(durationP50) ascending */
  QuantilesDurationP50Asc = 'quantiles_durationP50_ASC',
  /** quantiles(durationP50) descending */
  QuantilesDurationP50Desc = 'quantiles_durationP50_DESC',
  /** quantiles(durationP75) ascending */
  QuantilesDurationP75Asc = 'quantiles_durationP75_ASC',
  /** quantiles(durationP75) descending */
  QuantilesDurationP75Desc = 'quantiles_durationP75_DESC',
  /** quantiles(durationP99) ascending */
  QuantilesDurationP99Asc = 'quantiles_durationP99_ASC',
  /** quantiles(durationP99) descending */
  QuantilesDurationP99Desc = 'quantiles_durationP99_DESC',
  /** quantiles(durationP999) ascending */
  QuantilesDurationP999Asc = 'quantiles_durationP999_ASC',
  /** quantiles(durationP999) descending */
  QuantilesDurationP999Desc = 'quantiles_durationP999_DESC',
  /** scriptName ascending */
  ScriptNameAsc = 'scriptName_ASC',
  /** scriptName descending */
  ScriptNameDesc = 'scriptName_DESC',
  /** stableId ascending */
  StableIdAsc = 'stableId_ASC',
  /** stableId descending */
  StableIdDesc = 'stableId_DESC',
  /** status ascending */
  StatusAsc = 'status_ASC',
  /** status descending */
  StatusDesc = 'status_DESC',
  /** sum(duration) ascending */
  SumDurationAsc = 'sum_duration_ASC',
  /** sum(duration) descending */
  SumDurationDesc = 'sum_duration_DESC',
  /** sum(errors) ascending */
  SumErrorsAsc = 'sum_errors_ASC',
  /** sum(errors) descending */
  SumErrorsDesc = 'sum_errors_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(responseBodySize) ascending */
  SumResponseBodySizeAsc = 'sum_responseBodySize_ASC',
  /** sum(responseBodySize) descending */
  SumResponseBodySizeDesc = 'sum_responseBodySize_DESC',
  /** sum(subrequests) ascending */
  SumSubrequestsAsc = 'sum_subrequests_ASC',
  /** sum(subrequests) descending */
  SumSubrequestsDesc = 'sum_subrequests_DESC',
  /** sum(wallTime) ascending */
  SumWallTimeAsc = 'sum_wallTime_ASC',
  /** sum(wallTime) descending */
  SumWallTimeDesc = 'sum_wallTime_DESC',
  /** usageModel ascending */
  UsageModelAsc = 'usageModel_ASC',
  /** usageModel descending */
  UsageModelDesc = 'usageModel_DESC'
}

export type AccountPagesFunctionsInvocationsAdaptiveGroupsQuantiles = {
  __typename?: 'AccountPagesFunctionsInvocationsAdaptiveGroupsQuantiles';
  /** CPU time 50th percentile - microseconds */
  cpuTimeP50: Scalars['float32']['output'];
  /** CPU time 75th percentile - microseconds */
  cpuTimeP75: Scalars['float32']['output'];
  /** CPU time 99th percentile - microseconds */
  cpuTimeP99: Scalars['float32']['output'];
  /** CPU time 99.9th percentile - microseconds */
  cpuTimeP999: Scalars['float32']['output'];
  /** Duration 50th percentile - GB*s */
  durationP50: Scalars['float32']['output'];
  /** Duration 75th percentile - GB*s */
  durationP75: Scalars['float32']['output'];
  /** Duration 99th percentile - GB*s */
  durationP99: Scalars['float32']['output'];
  /** Duration 99.9th percentile - GB*s */
  durationP999: Scalars['float32']['output'];
};

export type AccountPagesFunctionsInvocationsAdaptiveGroupsSum = {
  __typename?: 'AccountPagesFunctionsInvocationsAdaptiveGroupsSum';
  /** Sum of Duration - GB*s */
  duration: Scalars['float64']['output'];
  /** Sum of Errors */
  errors: Scalars['uint64']['output'];
  /** Sum of Requests */
  requests: Scalars['uint64']['output'];
  /** Sum of Response Body Sizes */
  responseBodySize: Scalars['uint64']['output'];
  /** Sum of Subrequests */
  subrequests: Scalars['uint64']['output'];
  /** Sum of Wall Time */
  wallTime: Scalars['uint64']['output'];
};

/**
 * Beta. Queue backlog data with adaptive sampling. Queues that are not being
 * written to, or read from, will not return data, even if they have a backlog.
 */
export type AccountQueueBacklogAdaptiveGroups = {
  __typename?: 'AccountQueueBacklogAdaptiveGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<AccountQueueBacklogAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountQueueBacklogAdaptiveGroupsDimensions>;
};

export type AccountQueueBacklogAdaptiveGroupsAvg = {
  __typename?: 'AccountQueueBacklogAdaptiveGroupsAvg';
  /** The average size of the backlog in bytes for sample interval */
  bytes: Scalars['uint64']['output'];
  /** The average number of messages in the backlog for sample interval */
  messages: Scalars['uint64']['output'];
  /** The average value used for sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountQueueBacklogAdaptiveGroupsDimensions = {
  __typename?: 'AccountQueueBacklogAdaptiveGroupsDimensions';
  /** Message operation timestamp, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Message operation timestamp */
  datetime: Scalars['Time']['output'];
  /** Message operation timestamp, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Message operation timestamp, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The ID of the Queue */
  queueId: Scalars['string']['output'];
};

export type AccountQueueBacklogAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountQueueBacklogAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountQueueBacklogAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  queueId?: InputMaybe<Scalars['string']['input']>;
  queueId_geq?: InputMaybe<Scalars['string']['input']>;
  queueId_gt?: InputMaybe<Scalars['string']['input']>;
  queueId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  queueId_leq?: InputMaybe<Scalars['string']['input']>;
  queueId_like?: InputMaybe<Scalars['string']['input']>;
  queueId_lt?: InputMaybe<Scalars['string']['input']>;
  queueId_neq?: InputMaybe<Scalars['string']['input']>;
  queueId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  queueId_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountQueueBacklogAdaptiveGroupsOrderBy {
  /** avg(bytes) ascending */
  AvgBytesAsc = 'avg_bytes_ASC',
  /** avg(bytes) descending */
  AvgBytesDesc = 'avg_bytes_DESC',
  /** avg(messages) ascending */
  AvgMessagesAsc = 'avg_messages_ASC',
  /** avg(messages) descending */
  AvgMessagesDesc = 'avg_messages_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** queueId ascending */
  QueueIdAsc = 'queueId_ASC',
  /** queueId descending */
  QueueIdDesc = 'queueId_DESC'
}

/** Beta. Queue consumer metrics with adaptive sampling. Inactive queues will not return data. */
export type AccountQueueConsumerMetricsAdaptiveGroups = {
  __typename?: 'AccountQueueConsumerMetricsAdaptiveGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<AccountQueueConsumerMetricsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountQueueConsumerMetricsAdaptiveGroupsDimensions>;
};

export type AccountQueueConsumerMetricsAdaptiveGroupsAvg = {
  __typename?: 'AccountQueueConsumerMetricsAdaptiveGroupsAvg';
  /** The average concurrency of the queue */
  concurrency: Scalars['float64']['output'];
  /** The average value used for sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountQueueConsumerMetricsAdaptiveGroupsDimensions = {
  __typename?: 'AccountQueueConsumerMetricsAdaptiveGroupsDimensions';
  /** Consumer metric timestamp, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Consumer metric timestamp */
  datetime: Scalars['Time']['output'];
  /** Consumer metric timestamp, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Consumer metric timestamp, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The ID of the Queue */
  queueId: Scalars['string']['output'];
};

export type AccountQueueConsumerMetricsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountQueueConsumerMetricsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountQueueConsumerMetricsAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  queueId?: InputMaybe<Scalars['string']['input']>;
  queueId_geq?: InputMaybe<Scalars['string']['input']>;
  queueId_gt?: InputMaybe<Scalars['string']['input']>;
  queueId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  queueId_leq?: InputMaybe<Scalars['string']['input']>;
  queueId_like?: InputMaybe<Scalars['string']['input']>;
  queueId_lt?: InputMaybe<Scalars['string']['input']>;
  queueId_neq?: InputMaybe<Scalars['string']['input']>;
  queueId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  queueId_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountQueueConsumerMetricsAdaptiveGroupsOrderBy {
  /** avg(concurrency) ascending */
  AvgConcurrencyAsc = 'avg_concurrency_ASC',
  /** avg(concurrency) descending */
  AvgConcurrencyDesc = 'avg_concurrency_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** queueId ascending */
  QueueIdAsc = 'queueId_ASC',
  /** queueId descending */
  QueueIdDesc = 'queueId_DESC'
}

/** Beta. Queue message operation data with adaptive sampling */
export type AccountQueueMessageOperationsAdaptiveGroups = {
  __typename?: 'AccountQueueMessageOperationsAdaptiveGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<AccountQueueMessageOperationsAdaptiveGroupsAvg>;
  /** Number of Message Operations */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountQueueMessageOperationsAdaptiveGroupsDimensions>;
  /** The max of values for a metric per dimension */
  max?: Maybe<AccountQueueMessageOperationsAdaptiveGroupsMax>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountQueueMessageOperationsAdaptiveGroupsSum>;
};

export type AccountQueueMessageOperationsAdaptiveGroupsAvg = {
  __typename?: 'AccountQueueMessageOperationsAdaptiveGroupsAvg';
  /**
   * The average time in milliseconds between when the message was written to the
   * queue and the current operation over the sample interval. Will always be 0 for
   * WriteMessage operations.
   */
  lagTime: Scalars['uint64']['output'];
  /**
   * The average number of retries per message operation. A retry occurs after an
   * unsucessful delivery, if the queue is configured to retry failed attempts.
   * Only applicable to ReadMessage and DeleteMessage operations. Will always be 0
   * for WriteMessage operations.
   */
  retryCount: Scalars['uint32']['output'];
  /** The average value used for sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountQueueMessageOperationsAdaptiveGroupsDimensions = {
  __typename?: 'AccountQueueMessageOperationsAdaptiveGroupsDimensions';
  /** The type of the Queue message operation */
  actionType: Scalars['string']['output'];
  /** Message operation timestamp, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Message operation timestamp */
  datetime: Scalars['Time']['output'];
  /** Message operation timestamp, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Message operation timestamp, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
  /**
   * The outcome of the operation. Only applicable to DeleteMessage action types.
   * Can be 'success', 'dlq', or 'fail'. Always 'none' for other operations.
   */
  outcome: Scalars['string']['output'];
  /** The ID of the Queue */
  queueId: Scalars['string']['output'];
};

export type AccountQueueMessageOperationsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountQueueMessageOperationsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountQueueMessageOperationsAdaptiveGroupsFilter_InputObject>>;
  actionType?: InputMaybe<Scalars['string']['input']>;
  actionType_geq?: InputMaybe<Scalars['string']['input']>;
  actionType_gt?: InputMaybe<Scalars['string']['input']>;
  actionType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  actionType_leq?: InputMaybe<Scalars['string']['input']>;
  actionType_like?: InputMaybe<Scalars['string']['input']>;
  actionType_lt?: InputMaybe<Scalars['string']['input']>;
  actionType_neq?: InputMaybe<Scalars['string']['input']>;
  actionType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  actionType_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  outcome?: InputMaybe<Scalars['string']['input']>;
  outcome_geq?: InputMaybe<Scalars['string']['input']>;
  outcome_gt?: InputMaybe<Scalars['string']['input']>;
  outcome_in?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_leq?: InputMaybe<Scalars['string']['input']>;
  outcome_like?: InputMaybe<Scalars['string']['input']>;
  outcome_lt?: InputMaybe<Scalars['string']['input']>;
  outcome_neq?: InputMaybe<Scalars['string']['input']>;
  outcome_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_notlike?: InputMaybe<Scalars['string']['input']>;
  queueId?: InputMaybe<Scalars['string']['input']>;
  queueId_geq?: InputMaybe<Scalars['string']['input']>;
  queueId_gt?: InputMaybe<Scalars['string']['input']>;
  queueId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  queueId_leq?: InputMaybe<Scalars['string']['input']>;
  queueId_like?: InputMaybe<Scalars['string']['input']>;
  queueId_lt?: InputMaybe<Scalars['string']['input']>;
  queueId_neq?: InputMaybe<Scalars['string']['input']>;
  queueId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  queueId_notlike?: InputMaybe<Scalars['string']['input']>;
};

export type AccountQueueMessageOperationsAdaptiveGroupsMax = {
  __typename?: 'AccountQueueMessageOperationsAdaptiveGroupsMax';
  /** Max Message Size */
  messageSize: Scalars['uint32']['output'];
};

export enum AccountQueueMessageOperationsAdaptiveGroupsOrderBy {
  /** actionType ascending */
  ActionTypeAsc = 'actionType_ASC',
  /** actionType descending */
  ActionTypeDesc = 'actionType_DESC',
  /** avg(lagTime) ascending */
  AvgLagTimeAsc = 'avg_lagTime_ASC',
  /** avg(lagTime) descending */
  AvgLagTimeDesc = 'avg_lagTime_DESC',
  /** avg(retryCount) ascending */
  AvgRetryCountAsc = 'avg_retryCount_ASC',
  /** avg(retryCount) descending */
  AvgRetryCountDesc = 'avg_retryCount_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** max(messageSize) ascending */
  MaxMessageSizeAsc = 'max_messageSize_ASC',
  /** max(messageSize) descending */
  MaxMessageSizeDesc = 'max_messageSize_DESC',
  /** outcome ascending */
  OutcomeAsc = 'outcome_ASC',
  /** outcome descending */
  OutcomeDesc = 'outcome_DESC',
  /** queueId ascending */
  QueueIdAsc = 'queueId_ASC',
  /** queueId descending */
  QueueIdDesc = 'queueId_DESC',
  /** sum(billableOperations) ascending */
  SumBillableOperationsAsc = 'sum_billableOperations_ASC',
  /** sum(billableOperations) descending */
  SumBillableOperationsDesc = 'sum_billableOperations_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC'
}

export type AccountQueueMessageOperationsAdaptiveGroupsSum = {
  __typename?: 'AccountQueueMessageOperationsAdaptiveGroupsSum';
  /** Number of Billable Operations (some message operations count as multiple billable operations) */
  billableOperations: Scalars['uint64']['output'];
  /** Total size (in bytes) of message operations */
  bytes: Scalars['uint64']['output'];
};

/** Beta. R2 operations with adaptive sampling */
export type AccountR2OperationsAdaptiveGroups = {
  __typename?: 'AccountR2OperationsAdaptiveGroups';
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountR2OperationsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountR2OperationsAdaptiveGroupsSum>;
};

export type AccountR2OperationsAdaptiveGroupsDimensions = {
  __typename?: 'AccountR2OperationsAdaptiveGroupsDimensions';
  /** Status of the R2 operation */
  actionStatus: Scalars['string']['output'];
  /** The name of the R2 operation */
  actionType: Scalars['string']['output'];
  /** The name of the R2 bucket, if applicable to this request */
  bucketName: Scalars['string']['output'];
  /** Request timestamp, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Request timestamp */
  datetime: Scalars['Time']['output'];
  /** Request timestamp, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request timestamp, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The name of the R2 object, if applicable to this request */
  objectName: Scalars['string']['output'];
  /** HTTP status code returned by R2 */
  responseStatusCode: Scalars['uint16']['output'];
};

export type AccountR2OperationsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountR2OperationsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountR2OperationsAdaptiveGroupsFilter_InputObject>>;
  actionStatus?: InputMaybe<Scalars['string']['input']>;
  actionStatus_geq?: InputMaybe<Scalars['string']['input']>;
  actionStatus_gt?: InputMaybe<Scalars['string']['input']>;
  actionStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  actionStatus_leq?: InputMaybe<Scalars['string']['input']>;
  actionStatus_like?: InputMaybe<Scalars['string']['input']>;
  actionStatus_lt?: InputMaybe<Scalars['string']['input']>;
  actionStatus_neq?: InputMaybe<Scalars['string']['input']>;
  actionStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  actionStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  actionType?: InputMaybe<Scalars['string']['input']>;
  actionType_geq?: InputMaybe<Scalars['string']['input']>;
  actionType_gt?: InputMaybe<Scalars['string']['input']>;
  actionType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  actionType_leq?: InputMaybe<Scalars['string']['input']>;
  actionType_like?: InputMaybe<Scalars['string']['input']>;
  actionType_lt?: InputMaybe<Scalars['string']['input']>;
  actionType_neq?: InputMaybe<Scalars['string']['input']>;
  actionType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  actionType_notlike?: InputMaybe<Scalars['string']['input']>;
  bucketName?: InputMaybe<Scalars['string']['input']>;
  bucketName_geq?: InputMaybe<Scalars['string']['input']>;
  bucketName_gt?: InputMaybe<Scalars['string']['input']>;
  bucketName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  bucketName_leq?: InputMaybe<Scalars['string']['input']>;
  bucketName_like?: InputMaybe<Scalars['string']['input']>;
  bucketName_lt?: InputMaybe<Scalars['string']['input']>;
  bucketName_neq?: InputMaybe<Scalars['string']['input']>;
  bucketName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  bucketName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  objectName?: InputMaybe<Scalars['string']['input']>;
  objectName_geq?: InputMaybe<Scalars['string']['input']>;
  objectName_gt?: InputMaybe<Scalars['string']['input']>;
  objectName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  objectName_leq?: InputMaybe<Scalars['string']['input']>;
  objectName_like?: InputMaybe<Scalars['string']['input']>;
  objectName_lt?: InputMaybe<Scalars['string']['input']>;
  objectName_neq?: InputMaybe<Scalars['string']['input']>;
  objectName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  objectName_notlike?: InputMaybe<Scalars['string']['input']>;
  responseStatusCode?: InputMaybe<Scalars['uint16']['input']>;
  responseStatusCode_geq?: InputMaybe<Scalars['uint16']['input']>;
  responseStatusCode_gt?: InputMaybe<Scalars['uint16']['input']>;
  responseStatusCode_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  responseStatusCode_leq?: InputMaybe<Scalars['uint16']['input']>;
  responseStatusCode_lt?: InputMaybe<Scalars['uint16']['input']>;
  responseStatusCode_neq?: InputMaybe<Scalars['uint16']['input']>;
  responseStatusCode_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
};

export enum AccountR2OperationsAdaptiveGroupsOrderBy {
  /** actionStatus ascending */
  ActionStatusAsc = 'actionStatus_ASC',
  /** actionStatus descending */
  ActionStatusDesc = 'actionStatus_DESC',
  /** actionType ascending */
  ActionTypeAsc = 'actionType_ASC',
  /** actionType descending */
  ActionTypeDesc = 'actionType_DESC',
  /** bucketName ascending */
  BucketNameAsc = 'bucketName_ASC',
  /** bucketName descending */
  BucketNameDesc = 'bucketName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** objectName ascending */
  ObjectNameAsc = 'objectName_ASC',
  /** objectName descending */
  ObjectNameDesc = 'objectName_DESC',
  /** responseStatusCode ascending */
  ResponseStatusCodeAsc = 'responseStatusCode_ASC',
  /** responseStatusCode descending */
  ResponseStatusCodeDesc = 'responseStatusCode_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(responseObjectSize) ascending */
  SumResponseObjectSizeAsc = 'sum_responseObjectSize_ASC',
  /** sum(responseObjectSize) descending */
  SumResponseObjectSizeDesc = 'sum_responseObjectSize_DESC'
}

export type AccountR2OperationsAdaptiveGroupsSum = {
  __typename?: 'AccountR2OperationsAdaptiveGroupsSum';
  /** Sum of Requests */
  requests: Scalars['uint64']['output'];
  /** Sum of Response Object Sizes */
  responseObjectSize: Scalars['uint64']['output'];
};

/** Beta. R2 storage with adaptive sampling */
export type AccountR2StorageAdaptiveGroups = {
  __typename?: 'AccountR2StorageAdaptiveGroups';
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountR2StorageAdaptiveGroupsDimensions>;
  /** The max of values for a metric per dimension */
  max?: Maybe<AccountR2StorageAdaptiveGroupsMax>;
};

export type AccountR2StorageAdaptiveGroupsDimensions = {
  __typename?: 'AccountR2StorageAdaptiveGroupsDimensions';
  /** The name of the R2 bucket, if applicable to this request */
  bucketName: Scalars['string']['output'];
  /** Storage sample timestamp, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Storage sample timestamp */
  datetime: Scalars['Time']['output'];
  /** Storage sample timestamp, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Storage sample timestamp, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
};

export type AccountR2StorageAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountR2StorageAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountR2StorageAdaptiveGroupsFilter_InputObject>>;
  bucketName?: InputMaybe<Scalars['string']['input']>;
  bucketName_geq?: InputMaybe<Scalars['string']['input']>;
  bucketName_gt?: InputMaybe<Scalars['string']['input']>;
  bucketName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  bucketName_leq?: InputMaybe<Scalars['string']['input']>;
  bucketName_like?: InputMaybe<Scalars['string']['input']>;
  bucketName_lt?: InputMaybe<Scalars['string']['input']>;
  bucketName_neq?: InputMaybe<Scalars['string']['input']>;
  bucketName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  bucketName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type AccountR2StorageAdaptiveGroupsMax = {
  __typename?: 'AccountR2StorageAdaptiveGroupsMax';
  /** Max of metadata size */
  metadataSize: Scalars['uint64']['output'];
  /** Max of object count */
  objectCount: Scalars['uint64']['output'];
  /** Max of payload size */
  payloadSize: Scalars['uint64']['output'];
  /** Max of upload count */
  uploadCount: Scalars['uint64']['output'];
};

export enum AccountR2StorageAdaptiveGroupsOrderBy {
  /** bucketName ascending */
  BucketNameAsc = 'bucketName_ASC',
  /** bucketName descending */
  BucketNameDesc = 'bucketName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** max(metadataSize) ascending */
  MaxMetadataSizeAsc = 'max_metadataSize_ASC',
  /** max(metadataSize) descending */
  MaxMetadataSizeDesc = 'max_metadataSize_DESC',
  /** max(objectCount) ascending */
  MaxObjectCountAsc = 'max_objectCount_ASC',
  /** max(objectCount) descending */
  MaxObjectCountDesc = 'max_objectCount_DESC',
  /** max(payloadSize) ascending */
  MaxPayloadSizeAsc = 'max_payloadSize_ASC',
  /** max(payloadSize) descending */
  MaxPayloadSizeDesc = 'max_payloadSize_DESC',
  /** max(uploadCount) ascending */
  MaxUploadCountAsc = 'max_uploadCount_ASC',
  /** max(uploadCount) descending */
  MaxUploadCountDesc = 'max_uploadCount_DESC'
}

/** Beta. Aggregated RUM pageload event metrics with adaptive sampling */
export type AccountRumPageloadEventsAdaptiveGroups = {
  __typename?: 'AccountRumPageloadEventsAdaptiveGroups';
  avg?: Maybe<AccountRumPageloadEventsAdaptiveGroupsAvg>;
  /** The number of pages viewed by end-users */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountRumPageloadEventsAdaptiveGroupsDimensions>;
  sum?: Maybe<AccountRumPageloadEventsAdaptiveGroupsSum>;
};

export type AccountRumPageloadEventsAdaptiveGroupsAvg = {
  __typename?: 'AccountRumPageloadEventsAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountRumPageloadEventsAdaptiveGroupsDimensions = {
  __typename?: 'AccountRumPageloadEventsAdaptiveGroupsDimensions';
  /** Indicates if the request is likely from a bot (non-human traffic). Returns 1 if from a bot, 0 otherwise. */
  bot: Scalars['uint8']['output'];
  /** Client country ISO 3166 alpha2 code */
  countryName: Scalars['string']['output'];
  /** Signed Exchange enabled status */
  customTagInternalSxg: Scalars['string']['output'];
  /** Request date from browser */
  date: Scalars['Date']['output'];
  /** Request datetime from browser, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Device type used for view the page */
  deviceType: Scalars['string']['output'];
  /** Host of the HTTP request referer */
  refererHost: Scalars['string']['output'];
  /** Path of the HTTP request referer */
  refererPath: Scalars['string']['output'];
  /** Scheme of the HTTP request referer (http or https) */
  refererScheme: Scalars['string']['output'];
  /** HTTP Host of the web page URL */
  requestHost: Scalars['string']['output'];
  /** Path of the web page URL */
  requestPath: Scalars['string']['output'];
  /** Scheme of the web page URL (http or https) */
  requestScheme: Scalars['string']['output'];
  /** The key value to identify a site */
  siteTag: Scalars['string']['output'];
  /** Browser parsed from the user agent */
  userAgentBrowser: Scalars['string']['output'];
  /** OS parsed from the user agent */
  userAgentOS: Scalars['string']['output'];
};

export type AccountRumPageloadEventsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountRumPageloadEventsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountRumPageloadEventsAdaptiveGroupsFilter_InputObject>>;
  bot?: InputMaybe<Scalars['uint8']['input']>;
  bot_geq?: InputMaybe<Scalars['uint8']['input']>;
  bot_gt?: InputMaybe<Scalars['uint8']['input']>;
  bot_in?: InputMaybe<Scalars['bytes']['input']>;
  bot_leq?: InputMaybe<Scalars['uint8']['input']>;
  bot_lt?: InputMaybe<Scalars['uint8']['input']>;
  bot_neq?: InputMaybe<Scalars['uint8']['input']>;
  bot_notin?: InputMaybe<Scalars['bytes']['input']>;
  countryName?: InputMaybe<Scalars['string']['input']>;
  countryName_geq?: InputMaybe<Scalars['string']['input']>;
  countryName_gt?: InputMaybe<Scalars['string']['input']>;
  countryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  countryName_leq?: InputMaybe<Scalars['string']['input']>;
  countryName_like?: InputMaybe<Scalars['string']['input']>;
  countryName_lt?: InputMaybe<Scalars['string']['input']>;
  countryName_neq?: InputMaybe<Scalars['string']['input']>;
  countryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  countryName_notlike?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_geq?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_gt?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_in?: InputMaybe<Array<Scalars['string']['input']>>;
  customTagInternalSxg_leq?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_like?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_lt?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_neq?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  customTagInternalSxg_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  deviceType?: InputMaybe<Scalars['string']['input']>;
  deviceType_geq?: InputMaybe<Scalars['string']['input']>;
  deviceType_gt?: InputMaybe<Scalars['string']['input']>;
  deviceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_leq?: InputMaybe<Scalars['string']['input']>;
  deviceType_like?: InputMaybe<Scalars['string']['input']>;
  deviceType_lt?: InputMaybe<Scalars['string']['input']>;
  deviceType_neq?: InputMaybe<Scalars['string']['input']>;
  deviceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_notlike?: InputMaybe<Scalars['string']['input']>;
  refererHost?: InputMaybe<Scalars['string']['input']>;
  refererHost_geq?: InputMaybe<Scalars['string']['input']>;
  refererHost_gt?: InputMaybe<Scalars['string']['input']>;
  refererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  refererHost_leq?: InputMaybe<Scalars['string']['input']>;
  refererHost_like?: InputMaybe<Scalars['string']['input']>;
  refererHost_lt?: InputMaybe<Scalars['string']['input']>;
  refererHost_neq?: InputMaybe<Scalars['string']['input']>;
  refererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  refererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  refererPath?: InputMaybe<Scalars['string']['input']>;
  refererPath_geq?: InputMaybe<Scalars['string']['input']>;
  refererPath_gt?: InputMaybe<Scalars['string']['input']>;
  refererPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  refererPath_leq?: InputMaybe<Scalars['string']['input']>;
  refererPath_like?: InputMaybe<Scalars['string']['input']>;
  refererPath_lt?: InputMaybe<Scalars['string']['input']>;
  refererPath_neq?: InputMaybe<Scalars['string']['input']>;
  refererPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  refererPath_notlike?: InputMaybe<Scalars['string']['input']>;
  refererScheme?: InputMaybe<Scalars['string']['input']>;
  refererScheme_geq?: InputMaybe<Scalars['string']['input']>;
  refererScheme_gt?: InputMaybe<Scalars['string']['input']>;
  refererScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  refererScheme_leq?: InputMaybe<Scalars['string']['input']>;
  refererScheme_like?: InputMaybe<Scalars['string']['input']>;
  refererScheme_lt?: InputMaybe<Scalars['string']['input']>;
  refererScheme_neq?: InputMaybe<Scalars['string']['input']>;
  refererScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  refererScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  requestHost?: InputMaybe<Scalars['string']['input']>;
  requestHost_geq?: InputMaybe<Scalars['string']['input']>;
  requestHost_gt?: InputMaybe<Scalars['string']['input']>;
  requestHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestHost_leq?: InputMaybe<Scalars['string']['input']>;
  requestHost_like?: InputMaybe<Scalars['string']['input']>;
  requestHost_lt?: InputMaybe<Scalars['string']['input']>;
  requestHost_neq?: InputMaybe<Scalars['string']['input']>;
  requestHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestHost_notlike?: InputMaybe<Scalars['string']['input']>;
  requestPath?: InputMaybe<Scalars['string']['input']>;
  requestPath_geq?: InputMaybe<Scalars['string']['input']>;
  requestPath_gt?: InputMaybe<Scalars['string']['input']>;
  requestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestPath_leq?: InputMaybe<Scalars['string']['input']>;
  requestPath_like?: InputMaybe<Scalars['string']['input']>;
  requestPath_lt?: InputMaybe<Scalars['string']['input']>;
  requestPath_neq?: InputMaybe<Scalars['string']['input']>;
  requestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  requestScheme?: InputMaybe<Scalars['string']['input']>;
  requestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  requestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  requestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  requestScheme_like?: InputMaybe<Scalars['string']['input']>;
  requestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  requestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  requestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  siteTag?: InputMaybe<Scalars['string']['input']>;
  siteTag_geq?: InputMaybe<Scalars['string']['input']>;
  siteTag_gt?: InputMaybe<Scalars['string']['input']>;
  siteTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  siteTag_leq?: InputMaybe<Scalars['string']['input']>;
  siteTag_like?: InputMaybe<Scalars['string']['input']>;
  siteTag_lt?: InputMaybe<Scalars['string']['input']>;
  siteTag_neq?: InputMaybe<Scalars['string']['input']>;
  siteTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  siteTag_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_like?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgentOS?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_like?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountRumPageloadEventsAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** bot ascending */
  BotAsc = 'bot_ASC',
  /** bot descending */
  BotDesc = 'bot_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** countryName ascending */
  CountryNameAsc = 'countryName_ASC',
  /** countryName descending */
  CountryNameDesc = 'countryName_DESC',
  /** customTagInternalSxg ascending */
  CustomTagInternalSxgAsc = 'customTagInternalSxg_ASC',
  /** customTagInternalSxg descending */
  CustomTagInternalSxgDesc = 'customTagInternalSxg_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** deviceType ascending */
  DeviceTypeAsc = 'deviceType_ASC',
  /** deviceType descending */
  DeviceTypeDesc = 'deviceType_DESC',
  /** refererHost ascending */
  RefererHostAsc = 'refererHost_ASC',
  /** refererHost descending */
  RefererHostDesc = 'refererHost_DESC',
  /** refererPath ascending */
  RefererPathAsc = 'refererPath_ASC',
  /** refererPath descending */
  RefererPathDesc = 'refererPath_DESC',
  /** refererScheme ascending */
  RefererSchemeAsc = 'refererScheme_ASC',
  /** refererScheme descending */
  RefererSchemeDesc = 'refererScheme_DESC',
  /** requestHost ascending */
  RequestHostAsc = 'requestHost_ASC',
  /** requestHost descending */
  RequestHostDesc = 'requestHost_DESC',
  /** requestPath ascending */
  RequestPathAsc = 'requestPath_ASC',
  /** requestPath descending */
  RequestPathDesc = 'requestPath_DESC',
  /** requestScheme ascending */
  RequestSchemeAsc = 'requestScheme_ASC',
  /** requestScheme descending */
  RequestSchemeDesc = 'requestScheme_DESC',
  /** siteTag ascending */
  SiteTagAsc = 'siteTag_ASC',
  /** siteTag descending */
  SiteTagDesc = 'siteTag_DESC',
  /** sum(visits) ascending */
  SumVisitsAsc = 'sum_visits_ASC',
  /** sum(visits) descending */
  SumVisitsDesc = 'sum_visits_DESC',
  /** userAgentBrowser ascending */
  UserAgentBrowserAsc = 'userAgentBrowser_ASC',
  /** userAgentBrowser descending */
  UserAgentBrowserDesc = 'userAgentBrowser_DESC',
  /** userAgentOS ascending */
  UserAgentOsAsc = 'userAgentOS_ASC',
  /** userAgentOS descending */
  UserAgentOsDesc = 'userAgentOS_DESC'
}

export type AccountRumPageloadEventsAdaptiveGroupsSum = {
  __typename?: 'AccountRumPageloadEventsAdaptiveGroupsSum';
  /**
   * The number of pages viewed by end-users that were initiated from a different
   * website (i.e. where the Document.referrer does not match the hostname)
   */
  visits: Scalars['uint64']['output'];
};

/** Beta. Aggregated RUM performance event metrics with adaptive sampling */
export type AccountRumPerformanceEventsAdaptiveGroups = {
  __typename?: 'AccountRumPerformanceEventsAdaptiveGroups';
  avg?: Maybe<AccountRumPerformanceEventsAdaptiveGroupsAvg>;
  /** The number of pages viewed by end-users */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountRumPerformanceEventsAdaptiveGroupsDimensions>;
  quantiles?: Maybe<AccountRumPerformanceEventsAdaptiveGroupsQuantiles>;
  sum?: Maybe<AccountRumPerformanceEventsAdaptiveGroupsSum>;
};

export type AccountRumPerformanceEventsAdaptiveGroupsAvg = {
  __typename?: 'AccountRumPerformanceEventsAdaptiveGroupsAvg';
  /** Connection time */
  connectionTime: Scalars['uint64']['output'];
  /** Domain lookup time */
  dnsTime: Scalars['uint64']['output'];
  /** The time when the first content piece from the DOM is painted (i.e. some text or an image) */
  firstContentfulPaint: Scalars['uint64']['output'];
  /** The time when the first pixel is painted onto the screen (i.e. background of the page) */
  firstPaint: Scalars['uint64']['output'];
  /** The time taken for the load event */
  loadEventTime: Scalars['uint64']['output'];
  /** The time to download and display the entire content of a web page in the browser window */
  pageLoadTime: Scalars['uint64']['output'];
  /** The time to download and display the entire content of a web page in the browser window */
  pageRenderTime: Scalars['uint64']['output'];
  /** The time between initiating the request and receiving the first byte of the response */
  requestTime: Scalars['uint64']['output'];
  /** The time between receiving the first byte and the last byte of the response */
  responseTime: Scalars['uint64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountRumPerformanceEventsAdaptiveGroupsDimensions = {
  __typename?: 'AccountRumPerformanceEventsAdaptiveGroupsDimensions';
  /** Indicates if the request is likely from a bot (non-human traffic). Returns 1 if from a bot, 0 otherwise. */
  bot: Scalars['uint8']['output'];
  /** Client country ISO 3166 alpha2 code */
  countryName: Scalars['string']['output'];
  /** Signed Exchange enabled status */
  customTagInternalSxg: Scalars['string']['output'];
  /** Request date from browser */
  date: Scalars['Date']['output'];
  /** Request datetime from browser, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Device type used for view the page */
  deviceType: Scalars['string']['output'];
  /** Host of the HTTP request referer */
  refererHost: Scalars['string']['output'];
  /** Path of the HTTP request referer */
  refererPath: Scalars['string']['output'];
  /** Scheme of the HTTP request referer (http or https) */
  refererScheme: Scalars['string']['output'];
  /** HTTP Host of the web page URL */
  requestHost: Scalars['string']['output'];
  /** Path of the web page URL */
  requestPath: Scalars['string']['output'];
  /** Scheme of the web page URL (http or https) */
  requestScheme: Scalars['string']['output'];
  /** The key value to identify a site */
  siteTag: Scalars['string']['output'];
  /** Browser parsed from the user agent */
  userAgentBrowser: Scalars['string']['output'];
  /** OS parsed from the user agent */
  userAgentOS: Scalars['string']['output'];
};

export type AccountRumPerformanceEventsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountRumPerformanceEventsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountRumPerformanceEventsAdaptiveGroupsFilter_InputObject>>;
  bot?: InputMaybe<Scalars['uint8']['input']>;
  bot_geq?: InputMaybe<Scalars['uint8']['input']>;
  bot_gt?: InputMaybe<Scalars['uint8']['input']>;
  bot_in?: InputMaybe<Scalars['bytes']['input']>;
  bot_leq?: InputMaybe<Scalars['uint8']['input']>;
  bot_lt?: InputMaybe<Scalars['uint8']['input']>;
  bot_neq?: InputMaybe<Scalars['uint8']['input']>;
  bot_notin?: InputMaybe<Scalars['bytes']['input']>;
  countryName?: InputMaybe<Scalars['string']['input']>;
  countryName_geq?: InputMaybe<Scalars['string']['input']>;
  countryName_gt?: InputMaybe<Scalars['string']['input']>;
  countryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  countryName_leq?: InputMaybe<Scalars['string']['input']>;
  countryName_like?: InputMaybe<Scalars['string']['input']>;
  countryName_lt?: InputMaybe<Scalars['string']['input']>;
  countryName_neq?: InputMaybe<Scalars['string']['input']>;
  countryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  countryName_notlike?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_geq?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_gt?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_in?: InputMaybe<Array<Scalars['string']['input']>>;
  customTagInternalSxg_leq?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_like?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_lt?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_neq?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  customTagInternalSxg_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  deviceType?: InputMaybe<Scalars['string']['input']>;
  deviceType_geq?: InputMaybe<Scalars['string']['input']>;
  deviceType_gt?: InputMaybe<Scalars['string']['input']>;
  deviceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_leq?: InputMaybe<Scalars['string']['input']>;
  deviceType_like?: InputMaybe<Scalars['string']['input']>;
  deviceType_lt?: InputMaybe<Scalars['string']['input']>;
  deviceType_neq?: InputMaybe<Scalars['string']['input']>;
  deviceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_notlike?: InputMaybe<Scalars['string']['input']>;
  refererHost?: InputMaybe<Scalars['string']['input']>;
  refererHost_geq?: InputMaybe<Scalars['string']['input']>;
  refererHost_gt?: InputMaybe<Scalars['string']['input']>;
  refererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  refererHost_leq?: InputMaybe<Scalars['string']['input']>;
  refererHost_like?: InputMaybe<Scalars['string']['input']>;
  refererHost_lt?: InputMaybe<Scalars['string']['input']>;
  refererHost_neq?: InputMaybe<Scalars['string']['input']>;
  refererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  refererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  refererPath?: InputMaybe<Scalars['string']['input']>;
  refererPath_geq?: InputMaybe<Scalars['string']['input']>;
  refererPath_gt?: InputMaybe<Scalars['string']['input']>;
  refererPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  refererPath_leq?: InputMaybe<Scalars['string']['input']>;
  refererPath_like?: InputMaybe<Scalars['string']['input']>;
  refererPath_lt?: InputMaybe<Scalars['string']['input']>;
  refererPath_neq?: InputMaybe<Scalars['string']['input']>;
  refererPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  refererPath_notlike?: InputMaybe<Scalars['string']['input']>;
  refererScheme?: InputMaybe<Scalars['string']['input']>;
  refererScheme_geq?: InputMaybe<Scalars['string']['input']>;
  refererScheme_gt?: InputMaybe<Scalars['string']['input']>;
  refererScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  refererScheme_leq?: InputMaybe<Scalars['string']['input']>;
  refererScheme_like?: InputMaybe<Scalars['string']['input']>;
  refererScheme_lt?: InputMaybe<Scalars['string']['input']>;
  refererScheme_neq?: InputMaybe<Scalars['string']['input']>;
  refererScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  refererScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  requestHost?: InputMaybe<Scalars['string']['input']>;
  requestHost_geq?: InputMaybe<Scalars['string']['input']>;
  requestHost_gt?: InputMaybe<Scalars['string']['input']>;
  requestHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestHost_leq?: InputMaybe<Scalars['string']['input']>;
  requestHost_like?: InputMaybe<Scalars['string']['input']>;
  requestHost_lt?: InputMaybe<Scalars['string']['input']>;
  requestHost_neq?: InputMaybe<Scalars['string']['input']>;
  requestHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestHost_notlike?: InputMaybe<Scalars['string']['input']>;
  requestPath?: InputMaybe<Scalars['string']['input']>;
  requestPath_geq?: InputMaybe<Scalars['string']['input']>;
  requestPath_gt?: InputMaybe<Scalars['string']['input']>;
  requestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestPath_leq?: InputMaybe<Scalars['string']['input']>;
  requestPath_like?: InputMaybe<Scalars['string']['input']>;
  requestPath_lt?: InputMaybe<Scalars['string']['input']>;
  requestPath_neq?: InputMaybe<Scalars['string']['input']>;
  requestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  requestScheme?: InputMaybe<Scalars['string']['input']>;
  requestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  requestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  requestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  requestScheme_like?: InputMaybe<Scalars['string']['input']>;
  requestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  requestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  requestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  siteTag?: InputMaybe<Scalars['string']['input']>;
  siteTag_geq?: InputMaybe<Scalars['string']['input']>;
  siteTag_gt?: InputMaybe<Scalars['string']['input']>;
  siteTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  siteTag_leq?: InputMaybe<Scalars['string']['input']>;
  siteTag_like?: InputMaybe<Scalars['string']['input']>;
  siteTag_lt?: InputMaybe<Scalars['string']['input']>;
  siteTag_neq?: InputMaybe<Scalars['string']['input']>;
  siteTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  siteTag_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_like?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgentOS?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_like?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountRumPerformanceEventsAdaptiveGroupsOrderBy {
  /** avg(connectionTime) ascending */
  AvgConnectionTimeAsc = 'avg_connectionTime_ASC',
  /** avg(connectionTime) descending */
  AvgConnectionTimeDesc = 'avg_connectionTime_DESC',
  /** avg(dnsTime) ascending */
  AvgDnsTimeAsc = 'avg_dnsTime_ASC',
  /** avg(dnsTime) descending */
  AvgDnsTimeDesc = 'avg_dnsTime_DESC',
  /** avg(firstContentfulPaint) ascending */
  AvgFirstContentfulPaintAsc = 'avg_firstContentfulPaint_ASC',
  /** avg(firstContentfulPaint) descending */
  AvgFirstContentfulPaintDesc = 'avg_firstContentfulPaint_DESC',
  /** avg(firstPaint) ascending */
  AvgFirstPaintAsc = 'avg_firstPaint_ASC',
  /** avg(firstPaint) descending */
  AvgFirstPaintDesc = 'avg_firstPaint_DESC',
  /** avg(loadEventTime) ascending */
  AvgLoadEventTimeAsc = 'avg_loadEventTime_ASC',
  /** avg(loadEventTime) descending */
  AvgLoadEventTimeDesc = 'avg_loadEventTime_DESC',
  /** avg(pageLoadTime) ascending */
  AvgPageLoadTimeAsc = 'avg_pageLoadTime_ASC',
  /** avg(pageLoadTime) descending */
  AvgPageLoadTimeDesc = 'avg_pageLoadTime_DESC',
  /** avg(pageRenderTime) ascending */
  AvgPageRenderTimeAsc = 'avg_pageRenderTime_ASC',
  /** avg(pageRenderTime) descending */
  AvgPageRenderTimeDesc = 'avg_pageRenderTime_DESC',
  /** avg(requestTime) ascending */
  AvgRequestTimeAsc = 'avg_requestTime_ASC',
  /** avg(requestTime) descending */
  AvgRequestTimeDesc = 'avg_requestTime_DESC',
  /** avg(responseTime) ascending */
  AvgResponseTimeAsc = 'avg_responseTime_ASC',
  /** avg(responseTime) descending */
  AvgResponseTimeDesc = 'avg_responseTime_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** bot ascending */
  BotAsc = 'bot_ASC',
  /** bot descending */
  BotDesc = 'bot_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** countryName ascending */
  CountryNameAsc = 'countryName_ASC',
  /** countryName descending */
  CountryNameDesc = 'countryName_DESC',
  /** customTagInternalSxg ascending */
  CustomTagInternalSxgAsc = 'customTagInternalSxg_ASC',
  /** customTagInternalSxg descending */
  CustomTagInternalSxgDesc = 'customTagInternalSxg_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** deviceType ascending */
  DeviceTypeAsc = 'deviceType_ASC',
  /** deviceType descending */
  DeviceTypeDesc = 'deviceType_DESC',
  /** quantiles(connectionTimeP50) ascending */
  QuantilesConnectionTimeP50Asc = 'quantiles_connectionTimeP50_ASC',
  /** quantiles(connectionTimeP50) descending */
  QuantilesConnectionTimeP50Desc = 'quantiles_connectionTimeP50_DESC',
  /** quantiles(connectionTimeP75) ascending */
  QuantilesConnectionTimeP75Asc = 'quantiles_connectionTimeP75_ASC',
  /** quantiles(connectionTimeP75) descending */
  QuantilesConnectionTimeP75Desc = 'quantiles_connectionTimeP75_DESC',
  /** quantiles(connectionTimeP90) ascending */
  QuantilesConnectionTimeP90Asc = 'quantiles_connectionTimeP90_ASC',
  /** quantiles(connectionTimeP90) descending */
  QuantilesConnectionTimeP90Desc = 'quantiles_connectionTimeP90_DESC',
  /** quantiles(connectionTimeP99) ascending */
  QuantilesConnectionTimeP99Asc = 'quantiles_connectionTimeP99_ASC',
  /** quantiles(connectionTimeP99) descending */
  QuantilesConnectionTimeP99Desc = 'quantiles_connectionTimeP99_DESC',
  /** quantiles(dnsTimeP50) ascending */
  QuantilesDnsTimeP50Asc = 'quantiles_dnsTimeP50_ASC',
  /** quantiles(dnsTimeP50) descending */
  QuantilesDnsTimeP50Desc = 'quantiles_dnsTimeP50_DESC',
  /** quantiles(dnsTimeP75) ascending */
  QuantilesDnsTimeP75Asc = 'quantiles_dnsTimeP75_ASC',
  /** quantiles(dnsTimeP75) descending */
  QuantilesDnsTimeP75Desc = 'quantiles_dnsTimeP75_DESC',
  /** quantiles(dnsTimeP90) ascending */
  QuantilesDnsTimeP90Asc = 'quantiles_dnsTimeP90_ASC',
  /** quantiles(dnsTimeP90) descending */
  QuantilesDnsTimeP90Desc = 'quantiles_dnsTimeP90_DESC',
  /** quantiles(dnsTimeP99) ascending */
  QuantilesDnsTimeP99Asc = 'quantiles_dnsTimeP99_ASC',
  /** quantiles(dnsTimeP99) descending */
  QuantilesDnsTimeP99Desc = 'quantiles_dnsTimeP99_DESC',
  /** quantiles(firstContentfulPaintP50) ascending */
  QuantilesFirstContentfulPaintP50Asc = 'quantiles_firstContentfulPaintP50_ASC',
  /** quantiles(firstContentfulPaintP50) descending */
  QuantilesFirstContentfulPaintP50Desc = 'quantiles_firstContentfulPaintP50_DESC',
  /** quantiles(firstContentfulPaintP75) ascending */
  QuantilesFirstContentfulPaintP75Asc = 'quantiles_firstContentfulPaintP75_ASC',
  /** quantiles(firstContentfulPaintP75) descending */
  QuantilesFirstContentfulPaintP75Desc = 'quantiles_firstContentfulPaintP75_DESC',
  /** quantiles(firstContentfulPaintP90) ascending */
  QuantilesFirstContentfulPaintP90Asc = 'quantiles_firstContentfulPaintP90_ASC',
  /** quantiles(firstContentfulPaintP90) descending */
  QuantilesFirstContentfulPaintP90Desc = 'quantiles_firstContentfulPaintP90_DESC',
  /** quantiles(firstContentfulPaintP99) ascending */
  QuantilesFirstContentfulPaintP99Asc = 'quantiles_firstContentfulPaintP99_ASC',
  /** quantiles(firstContentfulPaintP99) descending */
  QuantilesFirstContentfulPaintP99Desc = 'quantiles_firstContentfulPaintP99_DESC',
  /** quantiles(firstPaintP50) ascending */
  QuantilesFirstPaintP50Asc = 'quantiles_firstPaintP50_ASC',
  /** quantiles(firstPaintP50) descending */
  QuantilesFirstPaintP50Desc = 'quantiles_firstPaintP50_DESC',
  /** quantiles(firstPaintP75) ascending */
  QuantilesFirstPaintP75Asc = 'quantiles_firstPaintP75_ASC',
  /** quantiles(firstPaintP75) descending */
  QuantilesFirstPaintP75Desc = 'quantiles_firstPaintP75_DESC',
  /** quantiles(firstPaintP90) ascending */
  QuantilesFirstPaintP90Asc = 'quantiles_firstPaintP90_ASC',
  /** quantiles(firstPaintP90) descending */
  QuantilesFirstPaintP90Desc = 'quantiles_firstPaintP90_DESC',
  /** quantiles(firstPaintP99) ascending */
  QuantilesFirstPaintP99Asc = 'quantiles_firstPaintP99_ASC',
  /** quantiles(firstPaintP99) descending */
  QuantilesFirstPaintP99Desc = 'quantiles_firstPaintP99_DESC',
  /** quantiles(loadEventTimeP50) ascending */
  QuantilesLoadEventTimeP50Asc = 'quantiles_loadEventTimeP50_ASC',
  /** quantiles(loadEventTimeP50) descending */
  QuantilesLoadEventTimeP50Desc = 'quantiles_loadEventTimeP50_DESC',
  /** quantiles(loadEventTimeP75) ascending */
  QuantilesLoadEventTimeP75Asc = 'quantiles_loadEventTimeP75_ASC',
  /** quantiles(loadEventTimeP75) descending */
  QuantilesLoadEventTimeP75Desc = 'quantiles_loadEventTimeP75_DESC',
  /** quantiles(loadEventTimeP90) ascending */
  QuantilesLoadEventTimeP90Asc = 'quantiles_loadEventTimeP90_ASC',
  /** quantiles(loadEventTimeP90) descending */
  QuantilesLoadEventTimeP90Desc = 'quantiles_loadEventTimeP90_DESC',
  /** quantiles(loadEventTimeP99) ascending */
  QuantilesLoadEventTimeP99Asc = 'quantiles_loadEventTimeP99_ASC',
  /** quantiles(loadEventTimeP99) descending */
  QuantilesLoadEventTimeP99Desc = 'quantiles_loadEventTimeP99_DESC',
  /** quantiles(pageLoadTimeP50) ascending */
  QuantilesPageLoadTimeP50Asc = 'quantiles_pageLoadTimeP50_ASC',
  /** quantiles(pageLoadTimeP50) descending */
  QuantilesPageLoadTimeP50Desc = 'quantiles_pageLoadTimeP50_DESC',
  /** quantiles(pageLoadTimeP75) ascending */
  QuantilesPageLoadTimeP75Asc = 'quantiles_pageLoadTimeP75_ASC',
  /** quantiles(pageLoadTimeP75) descending */
  QuantilesPageLoadTimeP75Desc = 'quantiles_pageLoadTimeP75_DESC',
  /** quantiles(pageLoadTimeP90) ascending */
  QuantilesPageLoadTimeP90Asc = 'quantiles_pageLoadTimeP90_ASC',
  /** quantiles(pageLoadTimeP90) descending */
  QuantilesPageLoadTimeP90Desc = 'quantiles_pageLoadTimeP90_DESC',
  /** quantiles(pageLoadTimeP99) ascending */
  QuantilesPageLoadTimeP99Asc = 'quantiles_pageLoadTimeP99_ASC',
  /** quantiles(pageLoadTimeP99) descending */
  QuantilesPageLoadTimeP99Desc = 'quantiles_pageLoadTimeP99_DESC',
  /** quantiles(pageRenderTimeP50) ascending */
  QuantilesPageRenderTimeP50Asc = 'quantiles_pageRenderTimeP50_ASC',
  /** quantiles(pageRenderTimeP50) descending */
  QuantilesPageRenderTimeP50Desc = 'quantiles_pageRenderTimeP50_DESC',
  /** quantiles(pageRenderTimeP75) ascending */
  QuantilesPageRenderTimeP75Asc = 'quantiles_pageRenderTimeP75_ASC',
  /** quantiles(pageRenderTimeP75) descending */
  QuantilesPageRenderTimeP75Desc = 'quantiles_pageRenderTimeP75_DESC',
  /** quantiles(pageRenderTimeP90) ascending */
  QuantilesPageRenderTimeP90Asc = 'quantiles_pageRenderTimeP90_ASC',
  /** quantiles(pageRenderTimeP90) descending */
  QuantilesPageRenderTimeP90Desc = 'quantiles_pageRenderTimeP90_DESC',
  /** quantiles(pageRenderTimeP99) ascending */
  QuantilesPageRenderTimeP99Asc = 'quantiles_pageRenderTimeP99_ASC',
  /** quantiles(pageRenderTimeP99) descending */
  QuantilesPageRenderTimeP99Desc = 'quantiles_pageRenderTimeP99_DESC',
  /** quantiles(requestTimeP50) ascending */
  QuantilesRequestTimeP50Asc = 'quantiles_requestTimeP50_ASC',
  /** quantiles(requestTimeP50) descending */
  QuantilesRequestTimeP50Desc = 'quantiles_requestTimeP50_DESC',
  /** quantiles(requestTimeP75) ascending */
  QuantilesRequestTimeP75Asc = 'quantiles_requestTimeP75_ASC',
  /** quantiles(requestTimeP75) descending */
  QuantilesRequestTimeP75Desc = 'quantiles_requestTimeP75_DESC',
  /** quantiles(requestTimeP90) ascending */
  QuantilesRequestTimeP90Asc = 'quantiles_requestTimeP90_ASC',
  /** quantiles(requestTimeP90) descending */
  QuantilesRequestTimeP90Desc = 'quantiles_requestTimeP90_DESC',
  /** quantiles(requestTimeP99) ascending */
  QuantilesRequestTimeP99Asc = 'quantiles_requestTimeP99_ASC',
  /** quantiles(requestTimeP99) descending */
  QuantilesRequestTimeP99Desc = 'quantiles_requestTimeP99_DESC',
  /** quantiles(responseTimeP50) ascending */
  QuantilesResponseTimeP50Asc = 'quantiles_responseTimeP50_ASC',
  /** quantiles(responseTimeP50) descending */
  QuantilesResponseTimeP50Desc = 'quantiles_responseTimeP50_DESC',
  /** quantiles(responseTimeP75) ascending */
  QuantilesResponseTimeP75Asc = 'quantiles_responseTimeP75_ASC',
  /** quantiles(responseTimeP75) descending */
  QuantilesResponseTimeP75Desc = 'quantiles_responseTimeP75_DESC',
  /** quantiles(responseTimeP90) ascending */
  QuantilesResponseTimeP90Asc = 'quantiles_responseTimeP90_ASC',
  /** quantiles(responseTimeP90) descending */
  QuantilesResponseTimeP90Desc = 'quantiles_responseTimeP90_DESC',
  /** quantiles(responseTimeP99) ascending */
  QuantilesResponseTimeP99Asc = 'quantiles_responseTimeP99_ASC',
  /** quantiles(responseTimeP99) descending */
  QuantilesResponseTimeP99Desc = 'quantiles_responseTimeP99_DESC',
  /** refererHost ascending */
  RefererHostAsc = 'refererHost_ASC',
  /** refererHost descending */
  RefererHostDesc = 'refererHost_DESC',
  /** refererPath ascending */
  RefererPathAsc = 'refererPath_ASC',
  /** refererPath descending */
  RefererPathDesc = 'refererPath_DESC',
  /** refererScheme ascending */
  RefererSchemeAsc = 'refererScheme_ASC',
  /** refererScheme descending */
  RefererSchemeDesc = 'refererScheme_DESC',
  /** requestHost ascending */
  RequestHostAsc = 'requestHost_ASC',
  /** requestHost descending */
  RequestHostDesc = 'requestHost_DESC',
  /** requestPath ascending */
  RequestPathAsc = 'requestPath_ASC',
  /** requestPath descending */
  RequestPathDesc = 'requestPath_DESC',
  /** requestScheme ascending */
  RequestSchemeAsc = 'requestScheme_ASC',
  /** requestScheme descending */
  RequestSchemeDesc = 'requestScheme_DESC',
  /** siteTag ascending */
  SiteTagAsc = 'siteTag_ASC',
  /** siteTag descending */
  SiteTagDesc = 'siteTag_DESC',
  /** sum(visits) ascending */
  SumVisitsAsc = 'sum_visits_ASC',
  /** sum(visits) descending */
  SumVisitsDesc = 'sum_visits_DESC',
  /** userAgentBrowser ascending */
  UserAgentBrowserAsc = 'userAgentBrowser_ASC',
  /** userAgentBrowser descending */
  UserAgentBrowserDesc = 'userAgentBrowser_DESC',
  /** userAgentOS ascending */
  UserAgentOsAsc = 'userAgentOS_ASC',
  /** userAgentOS descending */
  UserAgentOsDesc = 'userAgentOS_DESC'
}

export type AccountRumPerformanceEventsAdaptiveGroupsQuantiles = {
  __typename?: 'AccountRumPerformanceEventsAdaptiveGroupsQuantiles';
  /** Connection time */
  connectionTimeP50: Scalars['uint64']['output'];
  /** Connection time */
  connectionTimeP75: Scalars['uint64']['output'];
  /** Connection time */
  connectionTimeP90: Scalars['uint64']['output'];
  /** Connection time */
  connectionTimeP99: Scalars['uint64']['output'];
  /** Domain lookup time */
  dnsTimeP50: Scalars['uint64']['output'];
  /** Domain lookup time */
  dnsTimeP75: Scalars['uint64']['output'];
  /** Domain lookup time */
  dnsTimeP90: Scalars['uint64']['output'];
  /** Domain lookup time */
  dnsTimeP99: Scalars['uint64']['output'];
  /** The time when the first content piece from the DOM is painted (i.e. some text or an image) */
  firstContentfulPaintP50: Scalars['uint64']['output'];
  /** The time when the first content piece from the DOM is painted (i.e. some text or an image) */
  firstContentfulPaintP75: Scalars['uint64']['output'];
  /** The time when the first content piece from the DOM is painted (i.e. some text or an image) */
  firstContentfulPaintP90: Scalars['uint64']['output'];
  /** The time when the first content piece from the DOM is painted (i.e. some text or an image) */
  firstContentfulPaintP99: Scalars['uint64']['output'];
  /** The time when the first pixel is painted onto the screen (i.e. background of the page) */
  firstPaintP50: Scalars['uint64']['output'];
  /** The time when the first pixel is painted onto the screen (i.e. background of the page) */
  firstPaintP75: Scalars['uint64']['output'];
  /** The time when the first pixel is painted onto the screen (i.e. background of the page) */
  firstPaintP90: Scalars['uint64']['output'];
  /** The time when the first pixel is painted onto the screen (i.e. background of the page) */
  firstPaintP99: Scalars['uint64']['output'];
  /** The time taken for the load event */
  loadEventTimeP50: Scalars['uint64']['output'];
  /** The time taken for the load event */
  loadEventTimeP75: Scalars['uint64']['output'];
  /** The time taken for the load event */
  loadEventTimeP90: Scalars['uint64']['output'];
  /** The time taken for the load event */
  loadEventTimeP99: Scalars['uint64']['output'];
  /** The time to download and display the entire content of a web page in the browser window */
  pageLoadTimeP50: Scalars['uint64']['output'];
  /** The time to download and display the entire content of a web page in the browser window */
  pageLoadTimeP75: Scalars['uint64']['output'];
  /** The time to download and display the entire content of a web page in the browser window */
  pageLoadTimeP90: Scalars['uint64']['output'];
  /** The time to download and display the entire content of a web page in the browser window */
  pageLoadTimeP99: Scalars['uint64']['output'];
  /** The time to download and display the entire content of a web page in the browser window */
  pageRenderTimeP50: Scalars['uint64']['output'];
  /** The time to download and display the entire content of a web page in the browser window */
  pageRenderTimeP75: Scalars['uint64']['output'];
  /** The time to download and display the entire content of a web page in the browser window */
  pageRenderTimeP90: Scalars['uint64']['output'];
  /** The time to download and display the entire content of a web page in the browser window */
  pageRenderTimeP99: Scalars['uint64']['output'];
  /** The time between initiating the request and receiving the first byte of the response */
  requestTimeP50: Scalars['uint64']['output'];
  /** The time between initiating the request and receiving the first byte of the response */
  requestTimeP75: Scalars['uint64']['output'];
  /** The time between initiating the request and receiving the first byte of the response */
  requestTimeP90: Scalars['uint64']['output'];
  /** The time between initiating the request and receiving the first byte of the response */
  requestTimeP99: Scalars['uint64']['output'];
  /** The time between receiving the first byte and the last byte of the response */
  responseTimeP50: Scalars['uint64']['output'];
  /** The time between receiving the first byte and the last byte of the response */
  responseTimeP75: Scalars['uint64']['output'];
  /** The time between receiving the first byte and the last byte of the response */
  responseTimeP90: Scalars['uint64']['output'];
  /** The time between receiving the first byte and the last byte of the response */
  responseTimeP99: Scalars['uint64']['output'];
};

export type AccountRumPerformanceEventsAdaptiveGroupsSum = {
  __typename?: 'AccountRumPerformanceEventsAdaptiveGroupsSum';
  /**
   * The number of pages viewed by end-users that were initiated from a different
   * website (i.e. where the Document.referrer does not match the hostname)
   */
  visits: Scalars['uint64']['output'];
};

/** Beta. RUM Web Vitals event metrics with adaptive sampling */
export type AccountRumWebVitalsEventsAdaptive = {
  __typename?: 'AccountRumWebVitalsEventsAdaptive';
  /** Indicates if the request is likely from a bot (non-human traffic). Returns 1 if from a bot, 0 otherwise. */
  bot: Scalars['uint8']['output'];
  /** Client country ISO 3166 alpha2 code */
  countryName: Scalars['string']['output'];
  /** Cumulative Layout Shift (Core Web Vitals) (-1 indicates N/A) */
  cumulativeLayoutShift: Scalars['float64']['output'];
  /** Layout values of the rectangular area after the changes */
  cumulativeLayoutShiftCurrentRect: Scalars['string']['output'];
  /** DOM selector name of the largest layout shift */
  cumulativeLayoutShiftElement: Scalars['string']['output'];
  /** Observed path of the Cumulative Layout Shift (Core Web Vitals) */
  cumulativeLayoutShiftPath: Scalars['string']['output'];
  /** Layout values of the rectangular area before the changes */
  cumulativeLayoutShiftPreviousRect: Scalars['string']['output'];
  /** Signed Exchange enabled status */
  customTagInternalSxg: Scalars['string']['output'];
  /** Request date from browser */
  date: Scalars['Date']['output'];
  /** Request datetime from browser */
  datetime: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Device type used for view the page */
  deviceType: Scalars['string']['output'];
  /** Host of the HTTP request referer */
  refererHost: Scalars['string']['output'];
  /** Path of the HTTP request referer */
  refererPath: Scalars['string']['output'];
  /** Scheme of the HTTP request referer (http or https) */
  refererScheme: Scalars['string']['output'];
  /** HTTP Host of the web page URL */
  requestHost: Scalars['string']['output'];
  /** Path of the web page URL */
  requestPath: Scalars['string']['output'];
  /** Scheme of the web page URL (http or https) */
  requestScheme: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** The key value to identify a site */
  siteTag: Scalars['string']['output'];
  /** Browser parsed from the user agent */
  userAgentBrowser: Scalars['string']['output'];
  /** OS parsed from the user agent */
  userAgentOS: Scalars['string']['output'];
};

export type AccountRumWebVitalsEventsAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<AccountRumWebVitalsEventsAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountRumWebVitalsEventsAdaptiveFilter_InputObject>>;
  bot?: InputMaybe<Scalars['uint8']['input']>;
  bot_geq?: InputMaybe<Scalars['uint8']['input']>;
  bot_gt?: InputMaybe<Scalars['uint8']['input']>;
  bot_in?: InputMaybe<Scalars['bytes']['input']>;
  bot_leq?: InputMaybe<Scalars['uint8']['input']>;
  bot_lt?: InputMaybe<Scalars['uint8']['input']>;
  bot_neq?: InputMaybe<Scalars['uint8']['input']>;
  bot_notin?: InputMaybe<Scalars['bytes']['input']>;
  countryName?: InputMaybe<Scalars['string']['input']>;
  countryName_geq?: InputMaybe<Scalars['string']['input']>;
  countryName_gt?: InputMaybe<Scalars['string']['input']>;
  countryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  countryName_leq?: InputMaybe<Scalars['string']['input']>;
  countryName_like?: InputMaybe<Scalars['string']['input']>;
  countryName_lt?: InputMaybe<Scalars['string']['input']>;
  countryName_neq?: InputMaybe<Scalars['string']['input']>;
  countryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  countryName_notlike?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShift?: InputMaybe<Scalars['float64']['input']>;
  cumulativeLayoutShiftCurrentRect?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftCurrentRect_geq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftCurrentRect_gt?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftCurrentRect_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cumulativeLayoutShiftCurrentRect_leq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftCurrentRect_like?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftCurrentRect_lt?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftCurrentRect_neq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftCurrentRect_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cumulativeLayoutShiftCurrentRect_notlike?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_geq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_gt?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cumulativeLayoutShiftElement_leq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_like?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_lt?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_neq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cumulativeLayoutShiftElement_notlike?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_geq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_gt?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cumulativeLayoutShiftPath_leq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_like?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_lt?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_neq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cumulativeLayoutShiftPath_notlike?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPreviousRect?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPreviousRect_geq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPreviousRect_gt?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPreviousRect_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cumulativeLayoutShiftPreviousRect_leq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPreviousRect_like?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPreviousRect_lt?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPreviousRect_neq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPreviousRect_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cumulativeLayoutShiftPreviousRect_notlike?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShift_geq?: InputMaybe<Scalars['float64']['input']>;
  cumulativeLayoutShift_gt?: InputMaybe<Scalars['float64']['input']>;
  cumulativeLayoutShift_in?: InputMaybe<Array<Scalars['float64']['input']>>;
  cumulativeLayoutShift_leq?: InputMaybe<Scalars['float64']['input']>;
  cumulativeLayoutShift_lt?: InputMaybe<Scalars['float64']['input']>;
  cumulativeLayoutShift_neq?: InputMaybe<Scalars['float64']['input']>;
  cumulativeLayoutShift_notin?: InputMaybe<Array<Scalars['float64']['input']>>;
  customTagInternalSxg?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_geq?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_gt?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_in?: InputMaybe<Array<Scalars['string']['input']>>;
  customTagInternalSxg_leq?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_like?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_lt?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_neq?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  customTagInternalSxg_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  deviceType?: InputMaybe<Scalars['string']['input']>;
  deviceType_geq?: InputMaybe<Scalars['string']['input']>;
  deviceType_gt?: InputMaybe<Scalars['string']['input']>;
  deviceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_leq?: InputMaybe<Scalars['string']['input']>;
  deviceType_like?: InputMaybe<Scalars['string']['input']>;
  deviceType_lt?: InputMaybe<Scalars['string']['input']>;
  deviceType_neq?: InputMaybe<Scalars['string']['input']>;
  deviceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_notlike?: InputMaybe<Scalars['string']['input']>;
  refererHost?: InputMaybe<Scalars['string']['input']>;
  refererHost_geq?: InputMaybe<Scalars['string']['input']>;
  refererHost_gt?: InputMaybe<Scalars['string']['input']>;
  refererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  refererHost_leq?: InputMaybe<Scalars['string']['input']>;
  refererHost_like?: InputMaybe<Scalars['string']['input']>;
  refererHost_lt?: InputMaybe<Scalars['string']['input']>;
  refererHost_neq?: InputMaybe<Scalars['string']['input']>;
  refererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  refererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  refererPath?: InputMaybe<Scalars['string']['input']>;
  refererPath_geq?: InputMaybe<Scalars['string']['input']>;
  refererPath_gt?: InputMaybe<Scalars['string']['input']>;
  refererPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  refererPath_leq?: InputMaybe<Scalars['string']['input']>;
  refererPath_like?: InputMaybe<Scalars['string']['input']>;
  refererPath_lt?: InputMaybe<Scalars['string']['input']>;
  refererPath_neq?: InputMaybe<Scalars['string']['input']>;
  refererPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  refererPath_notlike?: InputMaybe<Scalars['string']['input']>;
  refererScheme?: InputMaybe<Scalars['string']['input']>;
  refererScheme_geq?: InputMaybe<Scalars['string']['input']>;
  refererScheme_gt?: InputMaybe<Scalars['string']['input']>;
  refererScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  refererScheme_leq?: InputMaybe<Scalars['string']['input']>;
  refererScheme_like?: InputMaybe<Scalars['string']['input']>;
  refererScheme_lt?: InputMaybe<Scalars['string']['input']>;
  refererScheme_neq?: InputMaybe<Scalars['string']['input']>;
  refererScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  refererScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  requestHost?: InputMaybe<Scalars['string']['input']>;
  requestHost_geq?: InputMaybe<Scalars['string']['input']>;
  requestHost_gt?: InputMaybe<Scalars['string']['input']>;
  requestHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestHost_leq?: InputMaybe<Scalars['string']['input']>;
  requestHost_like?: InputMaybe<Scalars['string']['input']>;
  requestHost_lt?: InputMaybe<Scalars['string']['input']>;
  requestHost_neq?: InputMaybe<Scalars['string']['input']>;
  requestHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestHost_notlike?: InputMaybe<Scalars['string']['input']>;
  requestPath?: InputMaybe<Scalars['string']['input']>;
  requestPath_geq?: InputMaybe<Scalars['string']['input']>;
  requestPath_gt?: InputMaybe<Scalars['string']['input']>;
  requestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestPath_leq?: InputMaybe<Scalars['string']['input']>;
  requestPath_like?: InputMaybe<Scalars['string']['input']>;
  requestPath_lt?: InputMaybe<Scalars['string']['input']>;
  requestPath_neq?: InputMaybe<Scalars['string']['input']>;
  requestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  requestScheme?: InputMaybe<Scalars['string']['input']>;
  requestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  requestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  requestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  requestScheme_like?: InputMaybe<Scalars['string']['input']>;
  requestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  requestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  requestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  siteTag?: InputMaybe<Scalars['string']['input']>;
  siteTag_geq?: InputMaybe<Scalars['string']['input']>;
  siteTag_gt?: InputMaybe<Scalars['string']['input']>;
  siteTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  siteTag_leq?: InputMaybe<Scalars['string']['input']>;
  siteTag_like?: InputMaybe<Scalars['string']['input']>;
  siteTag_lt?: InputMaybe<Scalars['string']['input']>;
  siteTag_neq?: InputMaybe<Scalars['string']['input']>;
  siteTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  siteTag_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_like?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgentOS?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_like?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_notlike?: InputMaybe<Scalars['string']['input']>;
};

/** Beta. Aggregated RUM Web Vitals event metrics with adaptive sampling */
export type AccountRumWebVitalsEventsAdaptiveGroups = {
  __typename?: 'AccountRumWebVitalsEventsAdaptiveGroups';
  avg?: Maybe<AccountRumWebVitalsEventsAdaptiveGroupsAvg>;
  /** The number of pages viewed by end-users */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountRumWebVitalsEventsAdaptiveGroupsDimensions>;
  quantiles?: Maybe<AccountRumWebVitalsEventsAdaptiveGroupsQuantiles>;
  sum?: Maybe<AccountRumWebVitalsEventsAdaptiveGroupsSum>;
};

export type AccountRumWebVitalsEventsAdaptiveGroupsAvg = {
  __typename?: 'AccountRumWebVitalsEventsAdaptiveGroupsAvg';
  /** Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A) */
  cumulativeLayoutShift: Scalars['float64']['output'];
  /** First Contentful Paint in microseconds (negative value indicates N/A) */
  firstContentfulPaint: Scalars['int64']['output'];
  /** First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A) */
  firstInputDelay: Scalars['int64']['output'];
  /** Interaction to Next Paint in microseconds (negative value indicates N/A) */
  interactionToNextPaint: Scalars['int64']['output'];
  /** Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A) */
  largestContentfulPaint: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Element Render Delay in microseconds (negative value indicates N/A) */
  lcpElementRenderDelay: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Resource Load Delay in microseconds (negative value indicates N/A) */
  lcpResourceLoadDelay: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Resource Load Time in microseconds (negative value indicates N/A) */
  lcpResourceLoadTime: Scalars['int64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
  /** Time to First Byte in microseconds (negative value indicates N/A) */
  timeToFirstByte: Scalars['int64']['output'];
};

export type AccountRumWebVitalsEventsAdaptiveGroupsDimensions = {
  __typename?: 'AccountRumWebVitalsEventsAdaptiveGroupsDimensions';
  /** Indicates if the request is likely from a bot (non-human traffic). Returns 1 if from a bot, 0 otherwise. */
  bot: Scalars['uint8']['output'];
  /** Client country ISO 3166 alpha2 code */
  countryName: Scalars['string']['output'];
  /** DOM selector name of the largest layout shift */
  cumulativeLayoutShiftElement: Scalars['string']['output'];
  /** Observed path of the Cumulative Layout Shift (Core Web Vitals) */
  cumulativeLayoutShiftPath: Scalars['string']['output'];
  /** Signed Exchange enabled status */
  customTagInternalSxg: Scalars['string']['output'];
  /** Request date from browser */
  date: Scalars['Date']['output'];
  /** Request datetime from browser, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Device type used for view the page */
  deviceType: Scalars['string']['output'];
  /** DOM selector name of the input delay */
  firstInputDelayElement: Scalars['string']['output'];
  /** Action name of the input delay */
  firstInputDelayName: Scalars['string']['output'];
  /** Observed path of the First Input Delay (Core Web Vitals) */
  firstInputDelayPath: Scalars['string']['output'];
  /** DOM selector name of the largest object */
  largestContentfulPaintElement: Scalars['string']['output'];
  /** Host of the largest object */
  largestContentfulPaintObjectHost: Scalars['string']['output'];
  /** Path of the largest object */
  largestContentfulPaintObjectPath: Scalars['string']['output'];
  /** Scheme of the largest object (http or https) */
  largestContentfulPaintObjectScheme: Scalars['string']['output'];
  /** Observed path of the Largest Contentful Paint (Core Web Vitals) */
  largestContentfulPaintPath: Scalars['string']['output'];
  /** Fetch priority of the LCP element. */
  lcpFetchPriority: Scalars['string']['output'];
  /** Initiator type of the LCP element. */
  lcpInitiatorType: Scalars['string']['output'];
  /** Host of the HTTP request referer */
  refererHost: Scalars['string']['output'];
  /** Path of the HTTP request referer */
  refererPath: Scalars['string']['output'];
  /** Scheme of the HTTP request referer (http or https) */
  refererScheme: Scalars['string']['output'];
  /** HTTP Host of the web page URL */
  requestHost: Scalars['string']['output'];
  /** Path of the web page URL */
  requestPath: Scalars['string']['output'];
  /** Scheme of the web page URL (http or https) */
  requestScheme: Scalars['string']['output'];
  /** The key value to identify a site */
  siteTag: Scalars['string']['output'];
  /** Browser parsed from the user agent */
  userAgentBrowser: Scalars['string']['output'];
  /** OS parsed from the user agent */
  userAgentOS: Scalars['string']['output'];
};

export type AccountRumWebVitalsEventsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountRumWebVitalsEventsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountRumWebVitalsEventsAdaptiveGroupsFilter_InputObject>>;
  bot?: InputMaybe<Scalars['uint8']['input']>;
  bot_geq?: InputMaybe<Scalars['uint8']['input']>;
  bot_gt?: InputMaybe<Scalars['uint8']['input']>;
  bot_in?: InputMaybe<Scalars['bytes']['input']>;
  bot_leq?: InputMaybe<Scalars['uint8']['input']>;
  bot_lt?: InputMaybe<Scalars['uint8']['input']>;
  bot_neq?: InputMaybe<Scalars['uint8']['input']>;
  bot_notin?: InputMaybe<Scalars['bytes']['input']>;
  countryName?: InputMaybe<Scalars['string']['input']>;
  countryName_geq?: InputMaybe<Scalars['string']['input']>;
  countryName_gt?: InputMaybe<Scalars['string']['input']>;
  countryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  countryName_leq?: InputMaybe<Scalars['string']['input']>;
  countryName_like?: InputMaybe<Scalars['string']['input']>;
  countryName_lt?: InputMaybe<Scalars['string']['input']>;
  countryName_neq?: InputMaybe<Scalars['string']['input']>;
  countryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  countryName_notlike?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShift?: InputMaybe<Scalars['float64']['input']>;
  cumulativeLayoutShiftElement?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_geq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_gt?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cumulativeLayoutShiftElement_leq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_like?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_lt?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_neq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftElement_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cumulativeLayoutShiftElement_notlike?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_geq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_gt?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cumulativeLayoutShiftPath_leq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_like?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_lt?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_neq?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShiftPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cumulativeLayoutShiftPath_notlike?: InputMaybe<Scalars['string']['input']>;
  cumulativeLayoutShift_geq?: InputMaybe<Scalars['float64']['input']>;
  cumulativeLayoutShift_gt?: InputMaybe<Scalars['float64']['input']>;
  cumulativeLayoutShift_in?: InputMaybe<Array<Scalars['float64']['input']>>;
  cumulativeLayoutShift_leq?: InputMaybe<Scalars['float64']['input']>;
  cumulativeLayoutShift_lt?: InputMaybe<Scalars['float64']['input']>;
  cumulativeLayoutShift_neq?: InputMaybe<Scalars['float64']['input']>;
  cumulativeLayoutShift_notin?: InputMaybe<Array<Scalars['float64']['input']>>;
  customTagInternalSxg?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_geq?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_gt?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_in?: InputMaybe<Array<Scalars['string']['input']>>;
  customTagInternalSxg_leq?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_like?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_lt?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_neq?: InputMaybe<Scalars['string']['input']>;
  customTagInternalSxg_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  customTagInternalSxg_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  deviceType?: InputMaybe<Scalars['string']['input']>;
  deviceType_geq?: InputMaybe<Scalars['string']['input']>;
  deviceType_gt?: InputMaybe<Scalars['string']['input']>;
  deviceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_leq?: InputMaybe<Scalars['string']['input']>;
  deviceType_like?: InputMaybe<Scalars['string']['input']>;
  deviceType_lt?: InputMaybe<Scalars['string']['input']>;
  deviceType_neq?: InputMaybe<Scalars['string']['input']>;
  deviceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_notlike?: InputMaybe<Scalars['string']['input']>;
  firstInputDelay?: InputMaybe<Scalars['int64']['input']>;
  firstInputDelayElement?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayElement_geq?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayElement_gt?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayElement_in?: InputMaybe<Array<Scalars['string']['input']>>;
  firstInputDelayElement_leq?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayElement_like?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayElement_lt?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayElement_neq?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayElement_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  firstInputDelayElement_notlike?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayName?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayName_geq?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayName_gt?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  firstInputDelayName_leq?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayName_like?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayName_lt?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayName_neq?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  firstInputDelayName_notlike?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayPath?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayPath_geq?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayPath_gt?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  firstInputDelayPath_leq?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayPath_like?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayPath_lt?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayPath_neq?: InputMaybe<Scalars['string']['input']>;
  firstInputDelayPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  firstInputDelayPath_notlike?: InputMaybe<Scalars['string']['input']>;
  firstInputDelay_geq?: InputMaybe<Scalars['int64']['input']>;
  firstInputDelay_gt?: InputMaybe<Scalars['int64']['input']>;
  firstInputDelay_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  firstInputDelay_leq?: InputMaybe<Scalars['int64']['input']>;
  firstInputDelay_lt?: InputMaybe<Scalars['int64']['input']>;
  firstInputDelay_neq?: InputMaybe<Scalars['int64']['input']>;
  firstInputDelay_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  largestContentfulPaint?: InputMaybe<Scalars['int64']['input']>;
  largestContentfulPaintElement?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintElement_geq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintElement_gt?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintElement_in?: InputMaybe<Array<Scalars['string']['input']>>;
  largestContentfulPaintElement_leq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintElement_like?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintElement_lt?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintElement_neq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintElement_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  largestContentfulPaintElement_notlike?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectHost?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectHost_geq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectHost_gt?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  largestContentfulPaintObjectHost_leq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectHost_like?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectHost_lt?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectHost_neq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  largestContentfulPaintObjectHost_notlike?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectPath?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectPath_geq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectPath_gt?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  largestContentfulPaintObjectPath_leq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectPath_like?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectPath_lt?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectPath_neq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  largestContentfulPaintObjectPath_notlike?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectScheme?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectScheme_geq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectScheme_gt?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  largestContentfulPaintObjectScheme_leq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectScheme_like?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectScheme_lt?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectScheme_neq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintObjectScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  largestContentfulPaintObjectScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintPath?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintPath_geq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintPath_gt?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  largestContentfulPaintPath_leq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintPath_like?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintPath_lt?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintPath_neq?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaintPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  largestContentfulPaintPath_notlike?: InputMaybe<Scalars['string']['input']>;
  largestContentfulPaint_geq?: InputMaybe<Scalars['int64']['input']>;
  largestContentfulPaint_gt?: InputMaybe<Scalars['int64']['input']>;
  largestContentfulPaint_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  largestContentfulPaint_leq?: InputMaybe<Scalars['int64']['input']>;
  largestContentfulPaint_lt?: InputMaybe<Scalars['int64']['input']>;
  largestContentfulPaint_neq?: InputMaybe<Scalars['int64']['input']>;
  largestContentfulPaint_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  lcpFetchPriority?: InputMaybe<Scalars['string']['input']>;
  lcpFetchPriority_geq?: InputMaybe<Scalars['string']['input']>;
  lcpFetchPriority_gt?: InputMaybe<Scalars['string']['input']>;
  lcpFetchPriority_in?: InputMaybe<Array<Scalars['string']['input']>>;
  lcpFetchPriority_leq?: InputMaybe<Scalars['string']['input']>;
  lcpFetchPriority_like?: InputMaybe<Scalars['string']['input']>;
  lcpFetchPriority_lt?: InputMaybe<Scalars['string']['input']>;
  lcpFetchPriority_neq?: InputMaybe<Scalars['string']['input']>;
  lcpFetchPriority_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  lcpFetchPriority_notlike?: InputMaybe<Scalars['string']['input']>;
  lcpInitiatorType?: InputMaybe<Scalars['string']['input']>;
  lcpInitiatorType_geq?: InputMaybe<Scalars['string']['input']>;
  lcpInitiatorType_gt?: InputMaybe<Scalars['string']['input']>;
  lcpInitiatorType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  lcpInitiatorType_leq?: InputMaybe<Scalars['string']['input']>;
  lcpInitiatorType_like?: InputMaybe<Scalars['string']['input']>;
  lcpInitiatorType_lt?: InputMaybe<Scalars['string']['input']>;
  lcpInitiatorType_neq?: InputMaybe<Scalars['string']['input']>;
  lcpInitiatorType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  lcpInitiatorType_notlike?: InputMaybe<Scalars['string']['input']>;
  refererHost?: InputMaybe<Scalars['string']['input']>;
  refererHost_geq?: InputMaybe<Scalars['string']['input']>;
  refererHost_gt?: InputMaybe<Scalars['string']['input']>;
  refererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  refererHost_leq?: InputMaybe<Scalars['string']['input']>;
  refererHost_like?: InputMaybe<Scalars['string']['input']>;
  refererHost_lt?: InputMaybe<Scalars['string']['input']>;
  refererHost_neq?: InputMaybe<Scalars['string']['input']>;
  refererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  refererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  refererPath?: InputMaybe<Scalars['string']['input']>;
  refererPath_geq?: InputMaybe<Scalars['string']['input']>;
  refererPath_gt?: InputMaybe<Scalars['string']['input']>;
  refererPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  refererPath_leq?: InputMaybe<Scalars['string']['input']>;
  refererPath_like?: InputMaybe<Scalars['string']['input']>;
  refererPath_lt?: InputMaybe<Scalars['string']['input']>;
  refererPath_neq?: InputMaybe<Scalars['string']['input']>;
  refererPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  refererPath_notlike?: InputMaybe<Scalars['string']['input']>;
  refererScheme?: InputMaybe<Scalars['string']['input']>;
  refererScheme_geq?: InputMaybe<Scalars['string']['input']>;
  refererScheme_gt?: InputMaybe<Scalars['string']['input']>;
  refererScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  refererScheme_leq?: InputMaybe<Scalars['string']['input']>;
  refererScheme_like?: InputMaybe<Scalars['string']['input']>;
  refererScheme_lt?: InputMaybe<Scalars['string']['input']>;
  refererScheme_neq?: InputMaybe<Scalars['string']['input']>;
  refererScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  refererScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  requestHost?: InputMaybe<Scalars['string']['input']>;
  requestHost_geq?: InputMaybe<Scalars['string']['input']>;
  requestHost_gt?: InputMaybe<Scalars['string']['input']>;
  requestHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestHost_leq?: InputMaybe<Scalars['string']['input']>;
  requestHost_like?: InputMaybe<Scalars['string']['input']>;
  requestHost_lt?: InputMaybe<Scalars['string']['input']>;
  requestHost_neq?: InputMaybe<Scalars['string']['input']>;
  requestHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestHost_notlike?: InputMaybe<Scalars['string']['input']>;
  requestPath?: InputMaybe<Scalars['string']['input']>;
  requestPath_geq?: InputMaybe<Scalars['string']['input']>;
  requestPath_gt?: InputMaybe<Scalars['string']['input']>;
  requestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestPath_leq?: InputMaybe<Scalars['string']['input']>;
  requestPath_like?: InputMaybe<Scalars['string']['input']>;
  requestPath_lt?: InputMaybe<Scalars['string']['input']>;
  requestPath_neq?: InputMaybe<Scalars['string']['input']>;
  requestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  requestScheme?: InputMaybe<Scalars['string']['input']>;
  requestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  requestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  requestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  requestScheme_like?: InputMaybe<Scalars['string']['input']>;
  requestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  requestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  requestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  siteTag?: InputMaybe<Scalars['string']['input']>;
  siteTag_geq?: InputMaybe<Scalars['string']['input']>;
  siteTag_gt?: InputMaybe<Scalars['string']['input']>;
  siteTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  siteTag_leq?: InputMaybe<Scalars['string']['input']>;
  siteTag_like?: InputMaybe<Scalars['string']['input']>;
  siteTag_lt?: InputMaybe<Scalars['string']['input']>;
  siteTag_neq?: InputMaybe<Scalars['string']['input']>;
  siteTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  siteTag_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_like?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgentOS?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_like?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountRumWebVitalsEventsAdaptiveGroupsOrderBy {
  /** avg(cumulativeLayoutShift) ascending */
  AvgCumulativeLayoutShiftAsc = 'avg_cumulativeLayoutShift_ASC',
  /** avg(cumulativeLayoutShift) descending */
  AvgCumulativeLayoutShiftDesc = 'avg_cumulativeLayoutShift_DESC',
  /** avg(firstContentfulPaint) ascending */
  AvgFirstContentfulPaintAsc = 'avg_firstContentfulPaint_ASC',
  /** avg(firstContentfulPaint) descending */
  AvgFirstContentfulPaintDesc = 'avg_firstContentfulPaint_DESC',
  /** avg(firstInputDelay) ascending */
  AvgFirstInputDelayAsc = 'avg_firstInputDelay_ASC',
  /** avg(firstInputDelay) descending */
  AvgFirstInputDelayDesc = 'avg_firstInputDelay_DESC',
  /** avg(interactionToNextPaint) ascending */
  AvgInteractionToNextPaintAsc = 'avg_interactionToNextPaint_ASC',
  /** avg(interactionToNextPaint) descending */
  AvgInteractionToNextPaintDesc = 'avg_interactionToNextPaint_DESC',
  /** avg(largestContentfulPaint) ascending */
  AvgLargestContentfulPaintAsc = 'avg_largestContentfulPaint_ASC',
  /** avg(largestContentfulPaint) descending */
  AvgLargestContentfulPaintDesc = 'avg_largestContentfulPaint_DESC',
  /** avg(lcpElementRenderDelay) ascending */
  AvgLcpElementRenderDelayAsc = 'avg_lcpElementRenderDelay_ASC',
  /** avg(lcpElementRenderDelay) descending */
  AvgLcpElementRenderDelayDesc = 'avg_lcpElementRenderDelay_DESC',
  /** avg(lcpResourceLoadDelay) ascending */
  AvgLcpResourceLoadDelayAsc = 'avg_lcpResourceLoadDelay_ASC',
  /** avg(lcpResourceLoadDelay) descending */
  AvgLcpResourceLoadDelayDesc = 'avg_lcpResourceLoadDelay_DESC',
  /** avg(lcpResourceLoadTime) ascending */
  AvgLcpResourceLoadTimeAsc = 'avg_lcpResourceLoadTime_ASC',
  /** avg(lcpResourceLoadTime) descending */
  AvgLcpResourceLoadTimeDesc = 'avg_lcpResourceLoadTime_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** avg(timeToFirstByte) ascending */
  AvgTimeToFirstByteAsc = 'avg_timeToFirstByte_ASC',
  /** avg(timeToFirstByte) descending */
  AvgTimeToFirstByteDesc = 'avg_timeToFirstByte_DESC',
  /** bot ascending */
  BotAsc = 'bot_ASC',
  /** bot descending */
  BotDesc = 'bot_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** countryName ascending */
  CountryNameAsc = 'countryName_ASC',
  /** countryName descending */
  CountryNameDesc = 'countryName_DESC',
  /** cumulativeLayoutShiftElement ascending */
  CumulativeLayoutShiftElementAsc = 'cumulativeLayoutShiftElement_ASC',
  /** cumulativeLayoutShiftElement descending */
  CumulativeLayoutShiftElementDesc = 'cumulativeLayoutShiftElement_DESC',
  /** cumulativeLayoutShiftPath ascending */
  CumulativeLayoutShiftPathAsc = 'cumulativeLayoutShiftPath_ASC',
  /** cumulativeLayoutShiftPath descending */
  CumulativeLayoutShiftPathDesc = 'cumulativeLayoutShiftPath_DESC',
  /** customTagInternalSxg ascending */
  CustomTagInternalSxgAsc = 'customTagInternalSxg_ASC',
  /** customTagInternalSxg descending */
  CustomTagInternalSxgDesc = 'customTagInternalSxg_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** deviceType ascending */
  DeviceTypeAsc = 'deviceType_ASC',
  /** deviceType descending */
  DeviceTypeDesc = 'deviceType_DESC',
  /** firstInputDelayElement ascending */
  FirstInputDelayElementAsc = 'firstInputDelayElement_ASC',
  /** firstInputDelayElement descending */
  FirstInputDelayElementDesc = 'firstInputDelayElement_DESC',
  /** firstInputDelayName ascending */
  FirstInputDelayNameAsc = 'firstInputDelayName_ASC',
  /** firstInputDelayName descending */
  FirstInputDelayNameDesc = 'firstInputDelayName_DESC',
  /** firstInputDelayPath ascending */
  FirstInputDelayPathAsc = 'firstInputDelayPath_ASC',
  /** firstInputDelayPath descending */
  FirstInputDelayPathDesc = 'firstInputDelayPath_DESC',
  /** largestContentfulPaintElement ascending */
  LargestContentfulPaintElementAsc = 'largestContentfulPaintElement_ASC',
  /** largestContentfulPaintElement descending */
  LargestContentfulPaintElementDesc = 'largestContentfulPaintElement_DESC',
  /** largestContentfulPaintObjectHost ascending */
  LargestContentfulPaintObjectHostAsc = 'largestContentfulPaintObjectHost_ASC',
  /** largestContentfulPaintObjectHost descending */
  LargestContentfulPaintObjectHostDesc = 'largestContentfulPaintObjectHost_DESC',
  /** largestContentfulPaintObjectPath ascending */
  LargestContentfulPaintObjectPathAsc = 'largestContentfulPaintObjectPath_ASC',
  /** largestContentfulPaintObjectPath descending */
  LargestContentfulPaintObjectPathDesc = 'largestContentfulPaintObjectPath_DESC',
  /** largestContentfulPaintObjectScheme ascending */
  LargestContentfulPaintObjectSchemeAsc = 'largestContentfulPaintObjectScheme_ASC',
  /** largestContentfulPaintObjectScheme descending */
  LargestContentfulPaintObjectSchemeDesc = 'largestContentfulPaintObjectScheme_DESC',
  /** largestContentfulPaintPath ascending */
  LargestContentfulPaintPathAsc = 'largestContentfulPaintPath_ASC',
  /** largestContentfulPaintPath descending */
  LargestContentfulPaintPathDesc = 'largestContentfulPaintPath_DESC',
  /** lcpFetchPriority ascending */
  LcpFetchPriorityAsc = 'lcpFetchPriority_ASC',
  /** lcpFetchPriority descending */
  LcpFetchPriorityDesc = 'lcpFetchPriority_DESC',
  /** lcpInitiatorType ascending */
  LcpInitiatorTypeAsc = 'lcpInitiatorType_ASC',
  /** lcpInitiatorType descending */
  LcpInitiatorTypeDesc = 'lcpInitiatorType_DESC',
  /** quantiles(cumulativeLayoutShiftP50) ascending */
  QuantilesCumulativeLayoutShiftP50Asc = 'quantiles_cumulativeLayoutShiftP50_ASC',
  /** quantiles(cumulativeLayoutShiftP50) descending */
  QuantilesCumulativeLayoutShiftP50Desc = 'quantiles_cumulativeLayoutShiftP50_DESC',
  /** quantiles(cumulativeLayoutShiftP75) ascending */
  QuantilesCumulativeLayoutShiftP75Asc = 'quantiles_cumulativeLayoutShiftP75_ASC',
  /** quantiles(cumulativeLayoutShiftP75) descending */
  QuantilesCumulativeLayoutShiftP75Desc = 'quantiles_cumulativeLayoutShiftP75_DESC',
  /** quantiles(cumulativeLayoutShiftP90) ascending */
  QuantilesCumulativeLayoutShiftP90Asc = 'quantiles_cumulativeLayoutShiftP90_ASC',
  /** quantiles(cumulativeLayoutShiftP90) descending */
  QuantilesCumulativeLayoutShiftP90Desc = 'quantiles_cumulativeLayoutShiftP90_DESC',
  /** quantiles(cumulativeLayoutShiftP99) ascending */
  QuantilesCumulativeLayoutShiftP99Asc = 'quantiles_cumulativeLayoutShiftP99_ASC',
  /** quantiles(cumulativeLayoutShiftP99) descending */
  QuantilesCumulativeLayoutShiftP99Desc = 'quantiles_cumulativeLayoutShiftP99_DESC',
  /** quantiles(firstContentfulPaintP50) ascending */
  QuantilesFirstContentfulPaintP50Asc = 'quantiles_firstContentfulPaintP50_ASC',
  /** quantiles(firstContentfulPaintP50) descending */
  QuantilesFirstContentfulPaintP50Desc = 'quantiles_firstContentfulPaintP50_DESC',
  /** quantiles(firstContentfulPaintP75) ascending */
  QuantilesFirstContentfulPaintP75Asc = 'quantiles_firstContentfulPaintP75_ASC',
  /** quantiles(firstContentfulPaintP75) descending */
  QuantilesFirstContentfulPaintP75Desc = 'quantiles_firstContentfulPaintP75_DESC',
  /** quantiles(firstContentfulPaintP90) ascending */
  QuantilesFirstContentfulPaintP90Asc = 'quantiles_firstContentfulPaintP90_ASC',
  /** quantiles(firstContentfulPaintP90) descending */
  QuantilesFirstContentfulPaintP90Desc = 'quantiles_firstContentfulPaintP90_DESC',
  /** quantiles(firstContentfulPaintP99) ascending */
  QuantilesFirstContentfulPaintP99Asc = 'quantiles_firstContentfulPaintP99_ASC',
  /** quantiles(firstContentfulPaintP99) descending */
  QuantilesFirstContentfulPaintP99Desc = 'quantiles_firstContentfulPaintP99_DESC',
  /** quantiles(firstInputDelayP50) ascending */
  QuantilesFirstInputDelayP50Asc = 'quantiles_firstInputDelayP50_ASC',
  /** quantiles(firstInputDelayP50) descending */
  QuantilesFirstInputDelayP50Desc = 'quantiles_firstInputDelayP50_DESC',
  /** quantiles(firstInputDelayP75) ascending */
  QuantilesFirstInputDelayP75Asc = 'quantiles_firstInputDelayP75_ASC',
  /** quantiles(firstInputDelayP75) descending */
  QuantilesFirstInputDelayP75Desc = 'quantiles_firstInputDelayP75_DESC',
  /** quantiles(firstInputDelayP90) ascending */
  QuantilesFirstInputDelayP90Asc = 'quantiles_firstInputDelayP90_ASC',
  /** quantiles(firstInputDelayP90) descending */
  QuantilesFirstInputDelayP90Desc = 'quantiles_firstInputDelayP90_DESC',
  /** quantiles(firstInputDelayP99) ascending */
  QuantilesFirstInputDelayP99Asc = 'quantiles_firstInputDelayP99_ASC',
  /** quantiles(firstInputDelayP99) descending */
  QuantilesFirstInputDelayP99Desc = 'quantiles_firstInputDelayP99_DESC',
  /** quantiles(interactionToNextPaintP50) ascending */
  QuantilesInteractionToNextPaintP50Asc = 'quantiles_interactionToNextPaintP50_ASC',
  /** quantiles(interactionToNextPaintP50) descending */
  QuantilesInteractionToNextPaintP50Desc = 'quantiles_interactionToNextPaintP50_DESC',
  /** quantiles(interactionToNextPaintP75) ascending */
  QuantilesInteractionToNextPaintP75Asc = 'quantiles_interactionToNextPaintP75_ASC',
  /** quantiles(interactionToNextPaintP75) descending */
  QuantilesInteractionToNextPaintP75Desc = 'quantiles_interactionToNextPaintP75_DESC',
  /** quantiles(interactionToNextPaintP90) ascending */
  QuantilesInteractionToNextPaintP90Asc = 'quantiles_interactionToNextPaintP90_ASC',
  /** quantiles(interactionToNextPaintP90) descending */
  QuantilesInteractionToNextPaintP90Desc = 'quantiles_interactionToNextPaintP90_DESC',
  /** quantiles(interactionToNextPaintP99) ascending */
  QuantilesInteractionToNextPaintP99Asc = 'quantiles_interactionToNextPaintP99_ASC',
  /** quantiles(interactionToNextPaintP99) descending */
  QuantilesInteractionToNextPaintP99Desc = 'quantiles_interactionToNextPaintP99_DESC',
  /** quantiles(largestContentfulPaintP50) ascending */
  QuantilesLargestContentfulPaintP50Asc = 'quantiles_largestContentfulPaintP50_ASC',
  /** quantiles(largestContentfulPaintP50) descending */
  QuantilesLargestContentfulPaintP50Desc = 'quantiles_largestContentfulPaintP50_DESC',
  /** quantiles(largestContentfulPaintP75) ascending */
  QuantilesLargestContentfulPaintP75Asc = 'quantiles_largestContentfulPaintP75_ASC',
  /** quantiles(largestContentfulPaintP75) descending */
  QuantilesLargestContentfulPaintP75Desc = 'quantiles_largestContentfulPaintP75_DESC',
  /** quantiles(largestContentfulPaintP90) ascending */
  QuantilesLargestContentfulPaintP90Asc = 'quantiles_largestContentfulPaintP90_ASC',
  /** quantiles(largestContentfulPaintP90) descending */
  QuantilesLargestContentfulPaintP90Desc = 'quantiles_largestContentfulPaintP90_DESC',
  /** quantiles(largestContentfulPaintP99) ascending */
  QuantilesLargestContentfulPaintP99Asc = 'quantiles_largestContentfulPaintP99_ASC',
  /** quantiles(largestContentfulPaintP99) descending */
  QuantilesLargestContentfulPaintP99Desc = 'quantiles_largestContentfulPaintP99_DESC',
  /** quantiles(lcpElementRenderDelayP50) ascending */
  QuantilesLcpElementRenderDelayP50Asc = 'quantiles_lcpElementRenderDelayP50_ASC',
  /** quantiles(lcpElementRenderDelayP50) descending */
  QuantilesLcpElementRenderDelayP50Desc = 'quantiles_lcpElementRenderDelayP50_DESC',
  /** quantiles(lcpElementRenderDelayP75) ascending */
  QuantilesLcpElementRenderDelayP75Asc = 'quantiles_lcpElementRenderDelayP75_ASC',
  /** quantiles(lcpElementRenderDelayP75) descending */
  QuantilesLcpElementRenderDelayP75Desc = 'quantiles_lcpElementRenderDelayP75_DESC',
  /** quantiles(lcpElementRenderDelayP90) ascending */
  QuantilesLcpElementRenderDelayP90Asc = 'quantiles_lcpElementRenderDelayP90_ASC',
  /** quantiles(lcpElementRenderDelayP90) descending */
  QuantilesLcpElementRenderDelayP90Desc = 'quantiles_lcpElementRenderDelayP90_DESC',
  /** quantiles(lcpElementRenderDelayP99) ascending */
  QuantilesLcpElementRenderDelayP99Asc = 'quantiles_lcpElementRenderDelayP99_ASC',
  /** quantiles(lcpElementRenderDelayP99) descending */
  QuantilesLcpElementRenderDelayP99Desc = 'quantiles_lcpElementRenderDelayP99_DESC',
  /** quantiles(lcpResourceLoadDelayP50) ascending */
  QuantilesLcpResourceLoadDelayP50Asc = 'quantiles_lcpResourceLoadDelayP50_ASC',
  /** quantiles(lcpResourceLoadDelayP50) descending */
  QuantilesLcpResourceLoadDelayP50Desc = 'quantiles_lcpResourceLoadDelayP50_DESC',
  /** quantiles(lcpResourceLoadDelayP75) ascending */
  QuantilesLcpResourceLoadDelayP75Asc = 'quantiles_lcpResourceLoadDelayP75_ASC',
  /** quantiles(lcpResourceLoadDelayP75) descending */
  QuantilesLcpResourceLoadDelayP75Desc = 'quantiles_lcpResourceLoadDelayP75_DESC',
  /** quantiles(lcpResourceLoadDelayP90) ascending */
  QuantilesLcpResourceLoadDelayP90Asc = 'quantiles_lcpResourceLoadDelayP90_ASC',
  /** quantiles(lcpResourceLoadDelayP90) descending */
  QuantilesLcpResourceLoadDelayP90Desc = 'quantiles_lcpResourceLoadDelayP90_DESC',
  /** quantiles(lcpResourceLoadDelayP99) ascending */
  QuantilesLcpResourceLoadDelayP99Asc = 'quantiles_lcpResourceLoadDelayP99_ASC',
  /** quantiles(lcpResourceLoadDelayP99) descending */
  QuantilesLcpResourceLoadDelayP99Desc = 'quantiles_lcpResourceLoadDelayP99_DESC',
  /** quantiles(lcpResourceLoadTimeP50) ascending */
  QuantilesLcpResourceLoadTimeP50Asc = 'quantiles_lcpResourceLoadTimeP50_ASC',
  /** quantiles(lcpResourceLoadTimeP50) descending */
  QuantilesLcpResourceLoadTimeP50Desc = 'quantiles_lcpResourceLoadTimeP50_DESC',
  /** quantiles(lcpResourceLoadTimeP75) ascending */
  QuantilesLcpResourceLoadTimeP75Asc = 'quantiles_lcpResourceLoadTimeP75_ASC',
  /** quantiles(lcpResourceLoadTimeP75) descending */
  QuantilesLcpResourceLoadTimeP75Desc = 'quantiles_lcpResourceLoadTimeP75_DESC',
  /** quantiles(lcpResourceLoadTimeP90) ascending */
  QuantilesLcpResourceLoadTimeP90Asc = 'quantiles_lcpResourceLoadTimeP90_ASC',
  /** quantiles(lcpResourceLoadTimeP90) descending */
  QuantilesLcpResourceLoadTimeP90Desc = 'quantiles_lcpResourceLoadTimeP90_DESC',
  /** quantiles(lcpResourceLoadTimeP99) ascending */
  QuantilesLcpResourceLoadTimeP99Asc = 'quantiles_lcpResourceLoadTimeP99_ASC',
  /** quantiles(lcpResourceLoadTimeP99) descending */
  QuantilesLcpResourceLoadTimeP99Desc = 'quantiles_lcpResourceLoadTimeP99_DESC',
  /** quantiles(timeToFirstByteP50) ascending */
  QuantilesTimeToFirstByteP50Asc = 'quantiles_timeToFirstByteP50_ASC',
  /** quantiles(timeToFirstByteP50) descending */
  QuantilesTimeToFirstByteP50Desc = 'quantiles_timeToFirstByteP50_DESC',
  /** quantiles(timeToFirstByteP75) ascending */
  QuantilesTimeToFirstByteP75Asc = 'quantiles_timeToFirstByteP75_ASC',
  /** quantiles(timeToFirstByteP75) descending */
  QuantilesTimeToFirstByteP75Desc = 'quantiles_timeToFirstByteP75_DESC',
  /** quantiles(timeToFirstByteP90) ascending */
  QuantilesTimeToFirstByteP90Asc = 'quantiles_timeToFirstByteP90_ASC',
  /** quantiles(timeToFirstByteP90) descending */
  QuantilesTimeToFirstByteP90Desc = 'quantiles_timeToFirstByteP90_DESC',
  /** quantiles(timeToFirstByteP99) ascending */
  QuantilesTimeToFirstByteP99Asc = 'quantiles_timeToFirstByteP99_ASC',
  /** quantiles(timeToFirstByteP99) descending */
  QuantilesTimeToFirstByteP99Desc = 'quantiles_timeToFirstByteP99_DESC',
  /** refererHost ascending */
  RefererHostAsc = 'refererHost_ASC',
  /** refererHost descending */
  RefererHostDesc = 'refererHost_DESC',
  /** refererPath ascending */
  RefererPathAsc = 'refererPath_ASC',
  /** refererPath descending */
  RefererPathDesc = 'refererPath_DESC',
  /** refererScheme ascending */
  RefererSchemeAsc = 'refererScheme_ASC',
  /** refererScheme descending */
  RefererSchemeDesc = 'refererScheme_DESC',
  /** requestHost ascending */
  RequestHostAsc = 'requestHost_ASC',
  /** requestHost descending */
  RequestHostDesc = 'requestHost_DESC',
  /** requestPath ascending */
  RequestPathAsc = 'requestPath_ASC',
  /** requestPath descending */
  RequestPathDesc = 'requestPath_DESC',
  /** requestScheme ascending */
  RequestSchemeAsc = 'requestScheme_ASC',
  /** requestScheme descending */
  RequestSchemeDesc = 'requestScheme_DESC',
  /** siteTag ascending */
  SiteTagAsc = 'siteTag_ASC',
  /** siteTag descending */
  SiteTagDesc = 'siteTag_DESC',
  /** sum(clsGood) ascending */
  SumClsGoodAsc = 'sum_clsGood_ASC',
  /** sum(clsGood) descending */
  SumClsGoodDesc = 'sum_clsGood_DESC',
  /** sum(clsNeedsImprovement) ascending */
  SumClsNeedsImprovementAsc = 'sum_clsNeedsImprovement_ASC',
  /** sum(clsNeedsImprovement) descending */
  SumClsNeedsImprovementDesc = 'sum_clsNeedsImprovement_DESC',
  /** sum(clsPoor) ascending */
  SumClsPoorAsc = 'sum_clsPoor_ASC',
  /** sum(clsPoor) descending */
  SumClsPoorDesc = 'sum_clsPoor_DESC',
  /** sum(clsTotal) ascending */
  SumClsTotalAsc = 'sum_clsTotal_ASC',
  /** sum(clsTotal) descending */
  SumClsTotalDesc = 'sum_clsTotal_DESC',
  /** sum(fcpGood) ascending */
  SumFcpGoodAsc = 'sum_fcpGood_ASC',
  /** sum(fcpGood) descending */
  SumFcpGoodDesc = 'sum_fcpGood_DESC',
  /** sum(fcpNeedsImprovement) ascending */
  SumFcpNeedsImprovementAsc = 'sum_fcpNeedsImprovement_ASC',
  /** sum(fcpNeedsImprovement) descending */
  SumFcpNeedsImprovementDesc = 'sum_fcpNeedsImprovement_DESC',
  /** sum(fcpPoor) ascending */
  SumFcpPoorAsc = 'sum_fcpPoor_ASC',
  /** sum(fcpPoor) descending */
  SumFcpPoorDesc = 'sum_fcpPoor_DESC',
  /** sum(fcpTotal) ascending */
  SumFcpTotalAsc = 'sum_fcpTotal_ASC',
  /** sum(fcpTotal) descending */
  SumFcpTotalDesc = 'sum_fcpTotal_DESC',
  /** sum(fidGood) ascending */
  SumFidGoodAsc = 'sum_fidGood_ASC',
  /** sum(fidGood) descending */
  SumFidGoodDesc = 'sum_fidGood_DESC',
  /** sum(fidNeedsImprovement) ascending */
  SumFidNeedsImprovementAsc = 'sum_fidNeedsImprovement_ASC',
  /** sum(fidNeedsImprovement) descending */
  SumFidNeedsImprovementDesc = 'sum_fidNeedsImprovement_DESC',
  /** sum(fidPoor) ascending */
  SumFidPoorAsc = 'sum_fidPoor_ASC',
  /** sum(fidPoor) descending */
  SumFidPoorDesc = 'sum_fidPoor_DESC',
  /** sum(fidTotal) ascending */
  SumFidTotalAsc = 'sum_fidTotal_ASC',
  /** sum(fidTotal) descending */
  SumFidTotalDesc = 'sum_fidTotal_DESC',
  /** sum(inpGood) ascending */
  SumInpGoodAsc = 'sum_inpGood_ASC',
  /** sum(inpGood) descending */
  SumInpGoodDesc = 'sum_inpGood_DESC',
  /** sum(inpNeedsImprovement) ascending */
  SumInpNeedsImprovementAsc = 'sum_inpNeedsImprovement_ASC',
  /** sum(inpNeedsImprovement) descending */
  SumInpNeedsImprovementDesc = 'sum_inpNeedsImprovement_DESC',
  /** sum(inpPoor) ascending */
  SumInpPoorAsc = 'sum_inpPoor_ASC',
  /** sum(inpPoor) descending */
  SumInpPoorDesc = 'sum_inpPoor_DESC',
  /** sum(inpTotal) ascending */
  SumInpTotalAsc = 'sum_inpTotal_ASC',
  /** sum(inpTotal) descending */
  SumInpTotalDesc = 'sum_inpTotal_DESC',
  /** sum(lcpGood) ascending */
  SumLcpGoodAsc = 'sum_lcpGood_ASC',
  /** sum(lcpGood) descending */
  SumLcpGoodDesc = 'sum_lcpGood_DESC',
  /** sum(lcpNeedsImprovement) ascending */
  SumLcpNeedsImprovementAsc = 'sum_lcpNeedsImprovement_ASC',
  /** sum(lcpNeedsImprovement) descending */
  SumLcpNeedsImprovementDesc = 'sum_lcpNeedsImprovement_DESC',
  /** sum(lcpPoor) ascending */
  SumLcpPoorAsc = 'sum_lcpPoor_ASC',
  /** sum(lcpPoor) descending */
  SumLcpPoorDesc = 'sum_lcpPoor_DESC',
  /** sum(lcpTotal) ascending */
  SumLcpTotalAsc = 'sum_lcpTotal_ASC',
  /** sum(lcpTotal) descending */
  SumLcpTotalDesc = 'sum_lcpTotal_DESC',
  /** sum(ttfbGood) ascending */
  SumTtfbGoodAsc = 'sum_ttfbGood_ASC',
  /** sum(ttfbGood) descending */
  SumTtfbGoodDesc = 'sum_ttfbGood_DESC',
  /** sum(ttfbNeedsImprovement) ascending */
  SumTtfbNeedsImprovementAsc = 'sum_ttfbNeedsImprovement_ASC',
  /** sum(ttfbNeedsImprovement) descending */
  SumTtfbNeedsImprovementDesc = 'sum_ttfbNeedsImprovement_DESC',
  /** sum(ttfbPoor) ascending */
  SumTtfbPoorAsc = 'sum_ttfbPoor_ASC',
  /** sum(ttfbPoor) descending */
  SumTtfbPoorDesc = 'sum_ttfbPoor_DESC',
  /** sum(ttfbTotal) ascending */
  SumTtfbTotalAsc = 'sum_ttfbTotal_ASC',
  /** sum(ttfbTotal) descending */
  SumTtfbTotalDesc = 'sum_ttfbTotal_DESC',
  /** sum(visits) ascending */
  SumVisitsAsc = 'sum_visits_ASC',
  /** sum(visits) descending */
  SumVisitsDesc = 'sum_visits_DESC',
  /** userAgentBrowser ascending */
  UserAgentBrowserAsc = 'userAgentBrowser_ASC',
  /** userAgentBrowser descending */
  UserAgentBrowserDesc = 'userAgentBrowser_DESC',
  /** userAgentOS ascending */
  UserAgentOsAsc = 'userAgentOS_ASC',
  /** userAgentOS descending */
  UserAgentOsDesc = 'userAgentOS_DESC'
}

export type AccountRumWebVitalsEventsAdaptiveGroupsQuantiles = {
  __typename?: 'AccountRumWebVitalsEventsAdaptiveGroupsQuantiles';
  /** Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A) */
  cumulativeLayoutShiftP50: Scalars['float64']['output'];
  /** Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A) */
  cumulativeLayoutShiftP75: Scalars['float64']['output'];
  /** Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A) */
  cumulativeLayoutShiftP90: Scalars['float64']['output'];
  /** Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A) */
  cumulativeLayoutShiftP99: Scalars['float64']['output'];
  /** First Contentful Paint in microseconds (negative value indicates N/A) */
  firstContentfulPaintP50: Scalars['int64']['output'];
  /** First Contentful Paint in microseconds (negative value indicates N/A) */
  firstContentfulPaintP75: Scalars['int64']['output'];
  /** First Contentful Paint in microseconds (negative value indicates N/A) */
  firstContentfulPaintP90: Scalars['int64']['output'];
  /** First Contentful Paint in microseconds (negative value indicates N/A) */
  firstContentfulPaintP99: Scalars['int64']['output'];
  /** First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A) */
  firstInputDelayP50: Scalars['int64']['output'];
  /** First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A) */
  firstInputDelayP75: Scalars['int64']['output'];
  /** First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A) */
  firstInputDelayP90: Scalars['int64']['output'];
  /** First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A) */
  firstInputDelayP99: Scalars['int64']['output'];
  /** Interaction to Next Paint in microseconds (negative value indicates N/A) */
  interactionToNextPaintP50: Scalars['int64']['output'];
  /** Interaction to Next Paint in microseconds (negative value indicates N/A) */
  interactionToNextPaintP75: Scalars['int64']['output'];
  /** Interaction to Next Paint in microseconds (negative value indicates N/A) */
  interactionToNextPaintP90: Scalars['int64']['output'];
  /** Interaction to Next Paint in microseconds (negative value indicates N/A) */
  interactionToNextPaintP99: Scalars['int64']['output'];
  /** Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A) */
  largestContentfulPaintP50: Scalars['int64']['output'];
  /** Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A) */
  largestContentfulPaintP75: Scalars['int64']['output'];
  /** Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A) */
  largestContentfulPaintP90: Scalars['int64']['output'];
  /** Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A) */
  largestContentfulPaintP99: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Element Render Delay in microseconds (negative value indicates N/A) */
  lcpElementRenderDelayP50: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Element Render Delay in microseconds (negative value indicates N/A) */
  lcpElementRenderDelayP75: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Element Render Delay in microseconds (negative value indicates N/A) */
  lcpElementRenderDelayP90: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Element Render Delay in microseconds (negative value indicates N/A) */
  lcpElementRenderDelayP99: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Resource Load Delay in microseconds (negative value indicates N/A) */
  lcpResourceLoadDelayP50: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Resource Load Delay in microseconds (negative value indicates N/A) */
  lcpResourceLoadDelayP75: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Resource Load Delay in microseconds (negative value indicates N/A) */
  lcpResourceLoadDelayP90: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Resource Load Delay in microseconds (negative value indicates N/A) */
  lcpResourceLoadDelayP99: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Resource Load Time in microseconds (negative value indicates N/A) */
  lcpResourceLoadTimeP50: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Resource Load Time in microseconds (negative value indicates N/A) */
  lcpResourceLoadTimeP75: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Resource Load Time in microseconds (negative value indicates N/A) */
  lcpResourceLoadTimeP90: Scalars['int64']['output'];
  /** Largest Contentful Paint Attributions Resource Load Time in microseconds (negative value indicates N/A) */
  lcpResourceLoadTimeP99: Scalars['int64']['output'];
  /** Time to First Byte in microseconds (negative value indicates N/A) */
  timeToFirstByteP50: Scalars['int64']['output'];
  /** Time to First Byte in microseconds (negative value indicates N/A) */
  timeToFirstByteP75: Scalars['int64']['output'];
  /** Time to First Byte in microseconds (negative value indicates N/A) */
  timeToFirstByteP90: Scalars['int64']['output'];
  /** Time to First Byte in microseconds (negative value indicates N/A) */
  timeToFirstByteP99: Scalars['int64']['output'];
};

export type AccountRumWebVitalsEventsAdaptiveGroupsSum = {
  __typename?: 'AccountRumWebVitalsEventsAdaptiveGroupsSum';
  /** Cumulative Layout Shift (Core Web Vitals), count of Good occurrences (under 0.1) */
  clsGood: Scalars['uint64']['output'];
  /** Cumulative Layout Shift (Core Web Vitals), count of Needs Improvement occurrences (between 0.1 and 0.25) */
  clsNeedsImprovement: Scalars['uint64']['output'];
  /** Cumulative Layout Shift (Core Web Vitals), count of Poor occurrences (over 0.25) */
  clsPoor: Scalars['uint64']['output'];
  /** Cumulative Layout Shift (Core Web Vitals), total count */
  clsTotal: Scalars['uint64']['output'];
  /** First Contentful Paint, count of Good occurrences (under 1.8 s) */
  fcpGood: Scalars['uint64']['output'];
  /** First Contentful Paint, count of Needs Improvement occurrences (between 1.8 s and 3 s) */
  fcpNeedsImprovement: Scalars['uint64']['output'];
  /** First Contentful Paint, count of Poor occurrences (over 3 s) */
  fcpPoor: Scalars['uint64']['output'];
  /** First Contentful Paint, total count */
  fcpTotal: Scalars['uint64']['output'];
  /** First Input Delay (Core Web Vitals), count of Good occurrences (under 100 ms) */
  fidGood: Scalars['uint64']['output'];
  /** First Input Delay (Core Web Vitals), count of Needs Improvement occurrences (between 100 ms and 300ms) */
  fidNeedsImprovement: Scalars['uint64']['output'];
  /** First Input Delay (Core Web Vitals), count of Poor occurrences (over 300 ms) */
  fidPoor: Scalars['uint64']['output'];
  /** First Input Delay (Core Web Vitals), total count */
  fidTotal: Scalars['uint64']['output'];
  /** Interaction to Next Paint, count of Good occurrences (under 200 ms) */
  inpGood: Scalars['uint64']['output'];
  /** Interaction to Next Paint, count of Needs Improvement occurrences (between 200 ms and 500ms) */
  inpNeedsImprovement: Scalars['uint64']['output'];
  /** Interaction to Next Paint, count of Poor occurrences (over 500 ms) */
  inpPoor: Scalars['uint64']['output'];
  /** Interaction to Next Paint, total count */
  inpTotal: Scalars['uint64']['output'];
  /** Largest Contentful Paint (Core Web Vitals), count of Good occurrences (under 2.5 sec) */
  lcpGood: Scalars['uint64']['output'];
  /** Largest Contentful Paint (Core Web Vitals), count of Needs Improvement occurrences (between 2.5 sec and 4.0 sec) */
  lcpNeedsImprovement: Scalars['uint64']['output'];
  /** Largest Contentful Paint (Core Web Vitals), count of Poor occurrences (over 4.0 sec) */
  lcpPoor: Scalars['uint64']['output'];
  /** Largest Contentful Paint (Core Web Vitals), total count */
  lcpTotal: Scalars['uint64']['output'];
  /** Time to First Byte, count of Good occurrences (under 800 ms) */
  ttfbGood: Scalars['uint64']['output'];
  /** Time to First Byte, count of Needs Improvement occurrences (between 800 ms and 1800ms) */
  ttfbNeedsImprovement: Scalars['uint64']['output'];
  /** Time to First Byte, count of Poor occurrences (over 500 ms) */
  ttfbPoor: Scalars['uint64']['output'];
  /** Time to First Byte, total count */
  ttfbTotal: Scalars['uint64']['output'];
  /**
   * The number of pages viewed by end-users that were initiated from a different
   * website (i.e. where the Document.referrer does not match the hostname)
   */
  visits: Scalars['uint64']['output'];
};

export enum AccountRumWebVitalsEventsAdaptiveOrderBy {
  /** bot ascending */
  BotAsc = 'bot_ASC',
  /** bot descending */
  BotDesc = 'bot_DESC',
  /** countryName ascending */
  CountryNameAsc = 'countryName_ASC',
  /** countryName descending */
  CountryNameDesc = 'countryName_DESC',
  /** cumulativeLayoutShiftCurrentRect ascending */
  CumulativeLayoutShiftCurrentRectAsc = 'cumulativeLayoutShiftCurrentRect_ASC',
  /** cumulativeLayoutShiftCurrentRect descending */
  CumulativeLayoutShiftCurrentRectDesc = 'cumulativeLayoutShiftCurrentRect_DESC',
  /** cumulativeLayoutShiftElement ascending */
  CumulativeLayoutShiftElementAsc = 'cumulativeLayoutShiftElement_ASC',
  /** cumulativeLayoutShiftElement descending */
  CumulativeLayoutShiftElementDesc = 'cumulativeLayoutShiftElement_DESC',
  /** cumulativeLayoutShiftPath ascending */
  CumulativeLayoutShiftPathAsc = 'cumulativeLayoutShiftPath_ASC',
  /** cumulativeLayoutShiftPath descending */
  CumulativeLayoutShiftPathDesc = 'cumulativeLayoutShiftPath_DESC',
  /** cumulativeLayoutShiftPreviousRect ascending */
  CumulativeLayoutShiftPreviousRectAsc = 'cumulativeLayoutShiftPreviousRect_ASC',
  /** cumulativeLayoutShiftPreviousRect descending */
  CumulativeLayoutShiftPreviousRectDesc = 'cumulativeLayoutShiftPreviousRect_DESC',
  /** cumulativeLayoutShift ascending */
  CumulativeLayoutShiftAsc = 'cumulativeLayoutShift_ASC',
  /** cumulativeLayoutShift descending */
  CumulativeLayoutShiftDesc = 'cumulativeLayoutShift_DESC',
  /** customTagInternalSxg ascending */
  CustomTagInternalSxgAsc = 'customTagInternalSxg_ASC',
  /** customTagInternalSxg descending */
  CustomTagInternalSxgDesc = 'customTagInternalSxg_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** deviceType ascending */
  DeviceTypeAsc = 'deviceType_ASC',
  /** deviceType descending */
  DeviceTypeDesc = 'deviceType_DESC',
  /** refererHost ascending */
  RefererHostAsc = 'refererHost_ASC',
  /** refererHost descending */
  RefererHostDesc = 'refererHost_DESC',
  /** refererPath ascending */
  RefererPathAsc = 'refererPath_ASC',
  /** refererPath descending */
  RefererPathDesc = 'refererPath_DESC',
  /** refererScheme ascending */
  RefererSchemeAsc = 'refererScheme_ASC',
  /** refererScheme descending */
  RefererSchemeDesc = 'refererScheme_DESC',
  /** requestHost ascending */
  RequestHostAsc = 'requestHost_ASC',
  /** requestHost descending */
  RequestHostDesc = 'requestHost_DESC',
  /** requestPath ascending */
  RequestPathAsc = 'requestPath_ASC',
  /** requestPath descending */
  RequestPathDesc = 'requestPath_DESC',
  /** requestScheme ascending */
  RequestSchemeAsc = 'requestScheme_ASC',
  /** requestScheme descending */
  RequestSchemeDesc = 'requestScheme_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** siteTag ascending */
  SiteTagAsc = 'siteTag_ASC',
  /** siteTag descending */
  SiteTagDesc = 'siteTag_DESC',
  /** userAgentBrowser ascending */
  UserAgentBrowserAsc = 'userAgentBrowser_ASC',
  /** userAgentBrowser descending */
  UserAgentBrowserDesc = 'userAgentBrowser_DESC',
  /** userAgentOS ascending */
  UserAgentOsAsc = 'userAgentOS_ASC',
  /** userAgentOS descending */
  UserAgentOsDesc = 'userAgentOS_DESC'
}

/** Access and limitations for an account */
export type AccountSettings = {
  __typename?: 'AccountSettings';
  MagicWANConnectorMetricsAdaptiveGroups: Settings;
  accessLoginRequestsAdaptiveGroups: Settings;
  advancedDnsProtectionNetworkAnalyticsAdaptiveGroups: Settings;
  advancedTcpProtectionNetworkAnalyticsAdaptiveGroups: Settings;
  aiGatewayCacheAdaptiveGroups: Settings;
  aiGatewayErrorsAdaptiveGroups: Settings;
  aiGatewayRequestsAdaptiveGroups: Settings;
  aiInferenceAdaptive: Settings;
  aiInferenceAdaptiveGroups: Settings;
  cdnNetworkAnalyticsAdaptiveGroups: Settings;
  d1AnalyticsAdaptiveGroups: Settings;
  dosdAttackAnalyticsGroups: Settings;
  dosdNetworkAnalyticsAdaptiveGroups: Settings;
  durableObjectsInvocationsAdaptiveGroups: Settings;
  durableObjectsPeriodicGroups: Settings;
  durableObjectsStorageGroups: Settings;
  durableObjectsSubrequestsAdaptiveGroups: Settings;
  fbmAttackAnalyticsGroups: Settings;
  firewallEventsAdaptive: Settings;
  firewallEventsAdaptiveGroups: Settings;
  flowtrackdNetworkAnalyticsAdaptiveGroups: Settings;
  gatewayL4DownstreamSessionsAdaptiveGroups: Settings;
  gatewayL4SessionsAdaptiveGroups: Settings;
  gatewayL4UpstreamSessionsAdaptiveGroups: Settings;
  gatewayL7RequestsAdaptiveGroups: Settings;
  gatewayResolverByCategoryAdaptiveGroups: Settings;
  gatewayResolverByRuleExecutionPerformanceAdaptiveGroups: Settings;
  gatewayResolverQueriesAdaptiveGroups: Settings;
  httpRequests1dGroups: Settings;
  httpRequests1hGroups: Settings;
  httpRequests1mGroups: Settings;
  httpRequestsAdaptive: Settings;
  httpRequestsAdaptiveGroups: Settings;
  httpRequestsOverviewAdaptiveGroups: Settings;
  hyperdriveQueriesAdaptiveGroups: Settings;
  imagesRequestsAdaptiveGroups: Settings;
  imagesUniqueTransformations: Settings;
  logpushHealthAdaptiveGroups: Settings;
  magicFirewallNetworkAnalyticsAdaptiveGroups: Settings;
  magicFirewallSamplesAdaptiveGroups: Settings;
  magicIDPSNetworkAnalyticsAdaptiveGroups: Settings;
  magicTransitNetworkAnalyticsAdaptiveGroups: Settings;
  magicTransitTunnelHealthChecksAdaptiveGroups: Settings;
  magicTransitTunnelTrafficAdaptiveGroups: Settings;
  mnmFlowDataAdaptiveGroups: Settings;
  nelReportsAdaptiveGroups: Settings;
  pagesFunctionsInvocationsAdaptiveGroups: Settings;
  queueBacklogAdaptiveGroups: Settings;
  queueConsumerMetricsAdaptiveGroups: Settings;
  queueMessageOperationsAdaptiveGroups: Settings;
  r2OperationsAdaptiveGroups: Settings;
  r2StorageAdaptiveGroups: Settings;
  rumPageloadEventsAdaptiveGroups: Settings;
  rumPerformanceEventsAdaptiveGroups: Settings;
  rumWebVitalsEventsAdaptive: Settings;
  rumWebVitalsEventsAdaptiveGroups: Settings;
  sinkholeRequestLogsAdaptive: Settings;
  sinkholeRequestLogsAdaptiveGroups: Settings;
  spectrumNetworkAnalyticsAdaptiveGroups: Settings;
  storageTraces: Settings;
  streamMinutesViewedAdaptiveGroups: Settings;
  turnstileAdaptiveGroups: Settings;
  videoBufferEventsAdaptiveGroups: Settings;
  videoPlaybackEventsAdaptiveGroups: Settings;
  videoQualityEventsAdaptiveGroups: Settings;
  warpDeviceAdaptiveGroups: Settings;
  workerPlacementAdaptiveGroups: Settings;
  workersAnalyticsEngineAdaptiveGroups: Settings;
  workersInvocationsAdaptive: Settings;
  workersInvocationsScheduled: Settings;
  workersOverviewDataAdaptiveGroups: Settings;
  workersOverviewRequestsAdaptiveGroups: Settings;
  workersSubrequestsAdaptiveGroups: Settings;
  zarazTriggersAdaptiveGroups: Settings;
  zeroTrustPrivateNetworkDiscoveryGroups: Settings;
};

/** Sinkhole Request Logs */
export type AccountSinkholeRequestLogsAdaptive = {
  __typename?: 'AccountSinkholeRequestLogsAdaptive';
  /** The request body */
  body: Scalars['string']['output'];
  /** The date and time the event was recorded */
  datetime: Scalars['Time']['output'];
  /** The destination IP address of the request */
  destinationAddress: Scalars['string']['output'];
  /** The request headers. If a header has multiple values, the values are comma separated. Each header is newline separated. */
  headers: Scalars['string']['output'];
  /** The host the request was sent to */
  host: Scalars['string']['output'];
  /** The request method */
  method: Scalars['string']['output'];
  /**
   * The path to the object within the R2 bucket linked to this sinkhole that
   * stores overflow body and header data. Blank if neither headers nor body was
   * larger than 256 bytes.
   */
  r2Path: Scalars['string']['output'];
  /** The referrer of the request */
  referrer: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** The ID of the sinkhole that logged the request */
  sinkholeId: Scalars['string']['output'];
  /** The sender's IP address */
  sourceAddress: Scalars['string']['output'];
  /** The request uri */
  uri: Scalars['string']['output'];
  /** The request url */
  url: Scalars['string']['output'];
  /** The request user agent */
  userAgent: Scalars['string']['output'];
};

export type AccountSinkholeRequestLogsAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<AccountSinkholeRequestLogsAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountSinkholeRequestLogsAdaptiveFilter_InputObject>>;
  body?: InputMaybe<Scalars['string']['input']>;
  body_geq?: InputMaybe<Scalars['string']['input']>;
  body_gt?: InputMaybe<Scalars['string']['input']>;
  body_in?: InputMaybe<Array<Scalars['string']['input']>>;
  body_leq?: InputMaybe<Scalars['string']['input']>;
  body_like?: InputMaybe<Scalars['string']['input']>;
  body_lt?: InputMaybe<Scalars['string']['input']>;
  body_neq?: InputMaybe<Scalars['string']['input']>;
  body_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  body_notlike?: InputMaybe<Scalars['string']['input']>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationAddress?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_geq?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_gt?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAddress_leq?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_like?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_lt?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_neq?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  headers?: InputMaybe<Scalars['string']['input']>;
  headers_geq?: InputMaybe<Scalars['string']['input']>;
  headers_gt?: InputMaybe<Scalars['string']['input']>;
  headers_in?: InputMaybe<Array<Scalars['string']['input']>>;
  headers_leq?: InputMaybe<Scalars['string']['input']>;
  headers_like?: InputMaybe<Scalars['string']['input']>;
  headers_lt?: InputMaybe<Scalars['string']['input']>;
  headers_neq?: InputMaybe<Scalars['string']['input']>;
  headers_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  headers_notlike?: InputMaybe<Scalars['string']['input']>;
  host?: InputMaybe<Scalars['string']['input']>;
  host_geq?: InputMaybe<Scalars['string']['input']>;
  host_gt?: InputMaybe<Scalars['string']['input']>;
  host_in?: InputMaybe<Array<Scalars['string']['input']>>;
  host_leq?: InputMaybe<Scalars['string']['input']>;
  host_like?: InputMaybe<Scalars['string']['input']>;
  host_lt?: InputMaybe<Scalars['string']['input']>;
  host_neq?: InputMaybe<Scalars['string']['input']>;
  host_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  host_notlike?: InputMaybe<Scalars['string']['input']>;
  method?: InputMaybe<Scalars['string']['input']>;
  method_geq?: InputMaybe<Scalars['string']['input']>;
  method_gt?: InputMaybe<Scalars['string']['input']>;
  method_in?: InputMaybe<Array<Scalars['string']['input']>>;
  method_leq?: InputMaybe<Scalars['string']['input']>;
  method_like?: InputMaybe<Scalars['string']['input']>;
  method_lt?: InputMaybe<Scalars['string']['input']>;
  method_neq?: InputMaybe<Scalars['string']['input']>;
  method_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  method_notlike?: InputMaybe<Scalars['string']['input']>;
  r2Path?: InputMaybe<Scalars['string']['input']>;
  r2Path_geq?: InputMaybe<Scalars['string']['input']>;
  r2Path_gt?: InputMaybe<Scalars['string']['input']>;
  r2Path_in?: InputMaybe<Array<Scalars['string']['input']>>;
  r2Path_leq?: InputMaybe<Scalars['string']['input']>;
  r2Path_like?: InputMaybe<Scalars['string']['input']>;
  r2Path_lt?: InputMaybe<Scalars['string']['input']>;
  r2Path_neq?: InputMaybe<Scalars['string']['input']>;
  r2Path_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  r2Path_notlike?: InputMaybe<Scalars['string']['input']>;
  referrer?: InputMaybe<Scalars['string']['input']>;
  referrer_geq?: InputMaybe<Scalars['string']['input']>;
  referrer_gt?: InputMaybe<Scalars['string']['input']>;
  referrer_in?: InputMaybe<Array<Scalars['string']['input']>>;
  referrer_leq?: InputMaybe<Scalars['string']['input']>;
  referrer_like?: InputMaybe<Scalars['string']['input']>;
  referrer_lt?: InputMaybe<Scalars['string']['input']>;
  referrer_neq?: InputMaybe<Scalars['string']['input']>;
  referrer_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  referrer_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sinkholeId?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_geq?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_gt?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sinkholeId_leq?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_like?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_lt?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_neq?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sinkholeId_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceAddress?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_geq?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_gt?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAddress_leq?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_like?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_lt?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_neq?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  uri?: InputMaybe<Scalars['string']['input']>;
  uri_geq?: InputMaybe<Scalars['string']['input']>;
  uri_gt?: InputMaybe<Scalars['string']['input']>;
  uri_in?: InputMaybe<Array<Scalars['string']['input']>>;
  uri_leq?: InputMaybe<Scalars['string']['input']>;
  uri_like?: InputMaybe<Scalars['string']['input']>;
  uri_lt?: InputMaybe<Scalars['string']['input']>;
  uri_neq?: InputMaybe<Scalars['string']['input']>;
  uri_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  uri_notlike?: InputMaybe<Scalars['string']['input']>;
  url?: InputMaybe<Scalars['string']['input']>;
  url_geq?: InputMaybe<Scalars['string']['input']>;
  url_gt?: InputMaybe<Scalars['string']['input']>;
  url_in?: InputMaybe<Array<Scalars['string']['input']>>;
  url_leq?: InputMaybe<Scalars['string']['input']>;
  url_like?: InputMaybe<Scalars['string']['input']>;
  url_lt?: InputMaybe<Scalars['string']['input']>;
  url_neq?: InputMaybe<Scalars['string']['input']>;
  url_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  url_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent?: InputMaybe<Scalars['string']['input']>;
  userAgent_geq?: InputMaybe<Scalars['string']['input']>;
  userAgent_gt?: InputMaybe<Scalars['string']['input']>;
  userAgent_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_leq?: InputMaybe<Scalars['string']['input']>;
  userAgent_like?: InputMaybe<Scalars['string']['input']>;
  userAgent_lt?: InputMaybe<Scalars['string']['input']>;
  userAgent_neq?: InputMaybe<Scalars['string']['input']>;
  userAgent_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_notlike?: InputMaybe<Scalars['string']['input']>;
};

/** Sinkhole Request Logs */
export type AccountSinkholeRequestLogsAdaptiveGroups = {
  __typename?: 'AccountSinkholeRequestLogsAdaptiveGroups';
  /** Number of requests logged (approximation when sampleInterval > 1) */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountSinkholeRequestLogsAdaptiveGroupsDimensions>;
};

export type AccountSinkholeRequestLogsAdaptiveGroupsDimensions = {
  __typename?: 'AccountSinkholeRequestLogsAdaptiveGroupsDimensions';
  /** The request body */
  body: Scalars['string']['output'];
  /** The date and time the event was recorded */
  datetime: Scalars['Time']['output'];
  /** The destination IP address of the request */
  destinationAddress: Scalars['string']['output'];
  /** The request headers. If a header has multiple values, the values are comma separated. Each header is newline separated. */
  headers: Scalars['string']['output'];
  /** The host the request was sent to */
  host: Scalars['string']['output'];
  /** The request method */
  method: Scalars['string']['output'];
  /**
   * The path to the object within the R2 bucket linked to this sinkhole that
   * stores overflow body and header data. Blank if neither headers nor body was
   * larger than 256 bytes.
   */
  r2Path: Scalars['string']['output'];
  /** The referrer of the request */
  referrer: Scalars['string']['output'];
  /** The ID of the sinkhole that logged the request */
  sinkholeId: Scalars['string']['output'];
  /** The sender's IP address */
  sourceAddress: Scalars['string']['output'];
  /** The request uri */
  uri: Scalars['string']['output'];
  /** The request url */
  url: Scalars['string']['output'];
  /** The request user agent */
  userAgent: Scalars['string']['output'];
};

export type AccountSinkholeRequestLogsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountSinkholeRequestLogsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountSinkholeRequestLogsAdaptiveGroupsFilter_InputObject>>;
  body?: InputMaybe<Scalars['string']['input']>;
  body_geq?: InputMaybe<Scalars['string']['input']>;
  body_gt?: InputMaybe<Scalars['string']['input']>;
  body_in?: InputMaybe<Array<Scalars['string']['input']>>;
  body_leq?: InputMaybe<Scalars['string']['input']>;
  body_like?: InputMaybe<Scalars['string']['input']>;
  body_lt?: InputMaybe<Scalars['string']['input']>;
  body_neq?: InputMaybe<Scalars['string']['input']>;
  body_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  body_notlike?: InputMaybe<Scalars['string']['input']>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationAddress?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_geq?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_gt?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAddress_leq?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_like?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_lt?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_neq?: InputMaybe<Scalars['string']['input']>;
  destinationAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  headers?: InputMaybe<Scalars['string']['input']>;
  headers_geq?: InputMaybe<Scalars['string']['input']>;
  headers_gt?: InputMaybe<Scalars['string']['input']>;
  headers_in?: InputMaybe<Array<Scalars['string']['input']>>;
  headers_leq?: InputMaybe<Scalars['string']['input']>;
  headers_like?: InputMaybe<Scalars['string']['input']>;
  headers_lt?: InputMaybe<Scalars['string']['input']>;
  headers_neq?: InputMaybe<Scalars['string']['input']>;
  headers_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  headers_notlike?: InputMaybe<Scalars['string']['input']>;
  host?: InputMaybe<Scalars['string']['input']>;
  host_geq?: InputMaybe<Scalars['string']['input']>;
  host_gt?: InputMaybe<Scalars['string']['input']>;
  host_in?: InputMaybe<Array<Scalars['string']['input']>>;
  host_leq?: InputMaybe<Scalars['string']['input']>;
  host_like?: InputMaybe<Scalars['string']['input']>;
  host_lt?: InputMaybe<Scalars['string']['input']>;
  host_neq?: InputMaybe<Scalars['string']['input']>;
  host_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  host_notlike?: InputMaybe<Scalars['string']['input']>;
  method?: InputMaybe<Scalars['string']['input']>;
  method_geq?: InputMaybe<Scalars['string']['input']>;
  method_gt?: InputMaybe<Scalars['string']['input']>;
  method_in?: InputMaybe<Array<Scalars['string']['input']>>;
  method_leq?: InputMaybe<Scalars['string']['input']>;
  method_like?: InputMaybe<Scalars['string']['input']>;
  method_lt?: InputMaybe<Scalars['string']['input']>;
  method_neq?: InputMaybe<Scalars['string']['input']>;
  method_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  method_notlike?: InputMaybe<Scalars['string']['input']>;
  r2Path?: InputMaybe<Scalars['string']['input']>;
  r2Path_geq?: InputMaybe<Scalars['string']['input']>;
  r2Path_gt?: InputMaybe<Scalars['string']['input']>;
  r2Path_in?: InputMaybe<Array<Scalars['string']['input']>>;
  r2Path_leq?: InputMaybe<Scalars['string']['input']>;
  r2Path_like?: InputMaybe<Scalars['string']['input']>;
  r2Path_lt?: InputMaybe<Scalars['string']['input']>;
  r2Path_neq?: InputMaybe<Scalars['string']['input']>;
  r2Path_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  r2Path_notlike?: InputMaybe<Scalars['string']['input']>;
  referrer?: InputMaybe<Scalars['string']['input']>;
  referrer_geq?: InputMaybe<Scalars['string']['input']>;
  referrer_gt?: InputMaybe<Scalars['string']['input']>;
  referrer_in?: InputMaybe<Array<Scalars['string']['input']>>;
  referrer_leq?: InputMaybe<Scalars['string']['input']>;
  referrer_like?: InputMaybe<Scalars['string']['input']>;
  referrer_lt?: InputMaybe<Scalars['string']['input']>;
  referrer_neq?: InputMaybe<Scalars['string']['input']>;
  referrer_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  referrer_notlike?: InputMaybe<Scalars['string']['input']>;
  sinkholeId?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_geq?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_gt?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sinkholeId_leq?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_like?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_lt?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_neq?: InputMaybe<Scalars['string']['input']>;
  sinkholeId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sinkholeId_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceAddress?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_geq?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_gt?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAddress_leq?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_like?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_lt?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_neq?: InputMaybe<Scalars['string']['input']>;
  sourceAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  uri?: InputMaybe<Scalars['string']['input']>;
  uri_geq?: InputMaybe<Scalars['string']['input']>;
  uri_gt?: InputMaybe<Scalars['string']['input']>;
  uri_in?: InputMaybe<Array<Scalars['string']['input']>>;
  uri_leq?: InputMaybe<Scalars['string']['input']>;
  uri_like?: InputMaybe<Scalars['string']['input']>;
  uri_lt?: InputMaybe<Scalars['string']['input']>;
  uri_neq?: InputMaybe<Scalars['string']['input']>;
  uri_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  uri_notlike?: InputMaybe<Scalars['string']['input']>;
  url?: InputMaybe<Scalars['string']['input']>;
  url_geq?: InputMaybe<Scalars['string']['input']>;
  url_gt?: InputMaybe<Scalars['string']['input']>;
  url_in?: InputMaybe<Array<Scalars['string']['input']>>;
  url_leq?: InputMaybe<Scalars['string']['input']>;
  url_like?: InputMaybe<Scalars['string']['input']>;
  url_lt?: InputMaybe<Scalars['string']['input']>;
  url_neq?: InputMaybe<Scalars['string']['input']>;
  url_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  url_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent?: InputMaybe<Scalars['string']['input']>;
  userAgent_geq?: InputMaybe<Scalars['string']['input']>;
  userAgent_gt?: InputMaybe<Scalars['string']['input']>;
  userAgent_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_leq?: InputMaybe<Scalars['string']['input']>;
  userAgent_like?: InputMaybe<Scalars['string']['input']>;
  userAgent_lt?: InputMaybe<Scalars['string']['input']>;
  userAgent_neq?: InputMaybe<Scalars['string']['input']>;
  userAgent_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountSinkholeRequestLogsAdaptiveGroupsOrderBy {
  /** body ascending */
  BodyAsc = 'body_ASC',
  /** body descending */
  BodyDesc = 'body_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationAddress ascending */
  DestinationAddressAsc = 'destinationAddress_ASC',
  /** destinationAddress descending */
  DestinationAddressDesc = 'destinationAddress_DESC',
  /** headers ascending */
  HeadersAsc = 'headers_ASC',
  /** headers descending */
  HeadersDesc = 'headers_DESC',
  /** host ascending */
  HostAsc = 'host_ASC',
  /** host descending */
  HostDesc = 'host_DESC',
  /** method ascending */
  MethodAsc = 'method_ASC',
  /** method descending */
  MethodDesc = 'method_DESC',
  /** r2Path ascending */
  R2PathAsc = 'r2Path_ASC',
  /** r2Path descending */
  R2PathDesc = 'r2Path_DESC',
  /** referrer ascending */
  ReferrerAsc = 'referrer_ASC',
  /** referrer descending */
  ReferrerDesc = 'referrer_DESC',
  /** sinkholeId ascending */
  SinkholeIdAsc = 'sinkholeId_ASC',
  /** sinkholeId descending */
  SinkholeIdDesc = 'sinkholeId_DESC',
  /** sourceAddress ascending */
  SourceAddressAsc = 'sourceAddress_ASC',
  /** sourceAddress descending */
  SourceAddressDesc = 'sourceAddress_DESC',
  /** uri ascending */
  UriAsc = 'uri_ASC',
  /** uri descending */
  UriDesc = 'uri_DESC',
  /** url ascending */
  UrlAsc = 'url_ASC',
  /** url descending */
  UrlDesc = 'url_DESC',
  /** userAgent ascending */
  UserAgentAsc = 'userAgent_ASC',
  /** userAgent descending */
  UserAgentDesc = 'userAgent_DESC'
}

export enum AccountSinkholeRequestLogsAdaptiveOrderBy {
  /** body ascending */
  BodyAsc = 'body_ASC',
  /** body descending */
  BodyDesc = 'body_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationAddress ascending */
  DestinationAddressAsc = 'destinationAddress_ASC',
  /** destinationAddress descending */
  DestinationAddressDesc = 'destinationAddress_DESC',
  /** headers ascending */
  HeadersAsc = 'headers_ASC',
  /** headers descending */
  HeadersDesc = 'headers_DESC',
  /** host ascending */
  HostAsc = 'host_ASC',
  /** host descending */
  HostDesc = 'host_DESC',
  /** method ascending */
  MethodAsc = 'method_ASC',
  /** method descending */
  MethodDesc = 'method_DESC',
  /** r2Path ascending */
  R2PathAsc = 'r2Path_ASC',
  /** r2Path descending */
  R2PathDesc = 'r2Path_DESC',
  /** referrer ascending */
  ReferrerAsc = 'referrer_ASC',
  /** referrer descending */
  ReferrerDesc = 'referrer_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sinkholeId ascending */
  SinkholeIdAsc = 'sinkholeId_ASC',
  /** sinkholeId descending */
  SinkholeIdDesc = 'sinkholeId_DESC',
  /** sourceAddress ascending */
  SourceAddressAsc = 'sourceAddress_ASC',
  /** sourceAddress descending */
  SourceAddressDesc = 'sourceAddress_DESC',
  /** uri ascending */
  UriAsc = 'uri_ASC',
  /** uri descending */
  UriDesc = 'uri_DESC',
  /** url ascending */
  UrlAsc = 'url_ASC',
  /** url descending */
  UrlDesc = 'url_DESC',
  /** userAgent ascending */
  UserAgentAsc = 'userAgent_ASC',
  /** userAgent descending */
  UserAgentDesc = 'userAgent_DESC'
}

/** Network analytics data for Spectrum traffic */
export type AccountSpectrumNetworkAnalyticsAdaptiveGroups = {
  __typename?: 'AccountSpectrumNetworkAnalyticsAdaptiveGroups';
  /** The average of values for a metric per dimension */
  avg?: Maybe<AccountSpectrumNetworkAnalyticsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountSpectrumNetworkAnalyticsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountSpectrumNetworkAnalyticsAdaptiveGroupsSum>;
};

export type AccountSpectrumNetworkAnalyticsAdaptiveGroupsAvg = {
  __typename?: 'AccountSpectrumNetworkAnalyticsAdaptiveGroupsAvg';
  /** Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime */
  bitRate: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date */
  bitRateDay: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes */
  bitRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes */
  bitRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour */
  bitRateHour: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute */
  bitRateMinute: Scalars['uint64']['output'];
  /** Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds */
  bitRateTenSeconds: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime */
  packetRate: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date */
  packetRateDay: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes */
  packetRateFifteenMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes */
  packetRateFiveMinutes: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour */
  packetRateHour: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute */
  packetRateMinute: Scalars['uint64']['output'];
  /** Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds */
  packetRateTenSeconds: Scalars['uint64']['output'];
};

export type AccountSpectrumNetworkAnalyticsAdaptiveGroupsDimensions = {
  __typename?: 'AccountSpectrumNetworkAnalyticsAdaptiveGroupsDimensions';
  /** Application tag associated with the packet */
  applicationTag: Scalars['string']['output'];
  /** City where the Cloudflare datacenter that received the packet is located */
  coloCity: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (nearest IATA airport code) */
  coloCode: Scalars['string']['output'];
  /** Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2) */
  coloCountry: Scalars['string']['output'];
  /** Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding) */
  coloGeohash: Scalars['string']['output'];
  /** Cloudflare datacenter that received the packet (unique site identifier) */
  coloName: Scalars['string']['output'];
  /** Date that the packet was received */
  date: Scalars['Date']['output'];
  /** Date and time that the packet was received */
  datetime: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest hour */
  datetimeHour: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Date and time that the packet was received, rounded to the start of the nearest ten seconds */
  datetimeTenSeconds: Scalars['Time']['output'];
  /** ASN associated with the destination IP of the packet, or 0 if there was no mapping available */
  destinationAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the destination IP of the packet, if available */
  destinationAsnName: Scalars['string']['output'];
  /** Country where the destination IP of the packet is located (ISO 3166-1 alpha-2) */
  destinationCountry: Scalars['string']['output'];
  /** Latitude and longitude where the destination IP of the packet is located (Geohash encoding) */
  destinationGeohash: Scalars['string']['output'];
  /** Value of the Destination Port header field in the TCP or UDP packet */
  destinationPort: Scalars['uint16']['output'];
  /** Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral) */
  direction: Scalars['string']['output'];
  /** Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6) */
  ethertype: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the GRE packet */
  greChecksum: Scalars['uint16']['output'];
  /** Value of the Ethertype header field in the GRE packet */
  greEthertype: Scalars['uint16']['output'];
  /** Length of the GRE packet header, in bytes */
  greHeaderLength: Scalars['uint16']['output'];
  /** Value of the Key header field in the GRE packet */
  greKey: Scalars['uint32']['output'];
  /** Value of the Sequence Number header field in the GRE packet */
  greSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Version header field in the GRE packet */
  greVersion: Scalars['uint8']['output'];
  /** Value of the Checkusm header field in the ICMP packet */
  icmpChecksum: Scalars['uint16']['output'];
  /** Value of the Code header field in the ICMP packet */
  icmpCode: Scalars['uint8']['output'];
  /** Value of the Type header field in the ICMP packet */
  icmpType: Scalars['uint8']['output'];
  /** Value of the Destination Address header field in the IPv4 or IPv6 packet */
  ipDestinationAddress: Scalars['string']['output'];
  /** Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipDestinationSubnet: Scalars['string']['output'];
  /** Value of the Fragment Offset header field in the IPv4 or IPv6 packet */
  ipFragmentOffset: Scalars['uint16']['output'];
  /** Length of the IPv4 or IPv6 packet header, in bytes */
  ipHeaderLength: Scalars['uint16']['output'];
  /** Value of the More Fragments header field in the IPv4 or IPv6 packet */
  ipMoreFragments: Scalars['uint8']['output'];
  /** Value of the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocol: Scalars['uint8']['output'];
  /** Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet */
  ipProtocolName: Scalars['string']['output'];
  /** Value of the Source Address header field in the IPv4 or IPv6 packet */
  ipSourceAddress: Scalars['string']['output'];
  /** Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6) */
  ipSourceSubnet: Scalars['string']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes */
  ipTotalLength: Scalars['uint16']['output'];
  /** Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated */
  ipTotalLengthBuckets: Scalars['uint16']['output'];
  /** Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet */
  ipTtl: Scalars['uint8']['output'];
  /**
   * Value of the TTL header field in the IPv4 packet or the Hop Limit header field
   * in the IPv6 packet, with the last digit truncated
   */
  ipTtlBuckets: Scalars['uint8']['output'];
  /** Value of the Checksum header field in the IPv4 packet */
  ipv4Checksum: Scalars['uint16']['output'];
  /** Value of the Don't Fragment header field in the IPv4 packet */
  ipv4DontFragment: Scalars['uint8']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv4 packet */
  ipv4Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv4 packet */
  ipv4Ecn: Scalars['uint8']['output'];
  /** Value of the Identification header field in the IPv4 packet */
  ipv4Identification: Scalars['uint16']['output'];
  /** List of Options numbers included in the IPv4 packet header */
  ipv4Options: Scalars['string']['output'];
  /** Value of the Differentiated Services Code Point header field in the IPv6 packet */
  ipv6Dscp: Scalars['uint8']['output'];
  /** Value of the Explicit Congestion Notification header field in the IPv6 packet */
  ipv6Ecn: Scalars['uint8']['output'];
  /** List of Extension Header numbers included in the IPv6 packet header */
  ipv6ExtensionHeaders: Scalars['string']['output'];
  /** Value of the Flow Label header field in the IPv6 packet */
  ipv6FlowLabel: Scalars['uint32']['output'];
  /** Value of the Identification extension header field in the IPv6 packet */
  ipv6Identification: Scalars['uint32']['output'];
  /** IP lease tag associated with the packet */
  leaseTag: Scalars['string']['output'];
  /** Which system dropped the packet (possible values: dosd, flowtrackd, magic-firewall) */
  mitigationSystem: Scalars['string']['output'];
  /** The action that was taken on the packet (possible values: pass, drop) */
  outcome: Scalars['string']['output'];
  /** IP prefix tag associated with the packet */
  prefixTag: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** ASN associated with the source IP of the packet, or 0 if there was no mapping available */
  sourceAsn: Scalars['uint32']['output'];
  /** Name of ASN associated with the source IP of the packet, if available */
  sourceAsnName: Scalars['string']['output'];
  /** Country where the source IP of the packet is located (ISO 3166-1 alpha-2) */
  sourceCountry: Scalars['string']['output'];
  /** Latitude and longitude where the source IP of the packet is located (Geohash encoding) */
  sourceGeohash: Scalars['string']['output'];
  /** Value of the Source Port header field in the TCP or UDP packet */
  sourcePort: Scalars['uint16']['output'];
  /** Value of the Acknowledgement Number header field in the TCP packet */
  tcpAcknowledgementNumber: Scalars['uint32']['output'];
  /** Value of the Checkusm header field in the TCP packet */
  tcpChecksum: Scalars['uint16']['output'];
  /** Value of the Data Offset header field in the TCP packet */
  tcpDataOffset: Scalars['uint16']['output'];
  /** Value of the Flags header field in the TCP packet */
  tcpFlags: Scalars['uint8']['output'];
  /** Human-readable string representation of the Flags header field in the TCP packet */
  tcpFlagsString: Scalars['string']['output'];
  /** Value of the MSS option header field in the TCP packet */
  tcpMss: Scalars['uint16']['output'];
  /** List of Options numbers included in the TCP packet header */
  tcpOptions: Scalars['string']['output'];
  /** Value of the SACK Blocks option header field in the TCP packet */
  tcpSackBlocks: Scalars['string']['output'];
  /** Value of the SACK Permitted option header field in the TCP packet */
  tcpSackPermitted: Scalars['uint8']['output'];
  /** Value of the Sequence Number header field in the TCP packet */
  tcpSequenceNumber: Scalars['uint32']['output'];
  /** Value of the Timestamp Echo Reply option header field in the TCP packet */
  tcpTimestampEcr: Scalars['uint32']['output'];
  /** Value of the Timestamp option header field in the TCP packet */
  tcpTimestampValue: Scalars['uint32']['output'];
  /** Value of the Urgent Pointer header field in the TCP packet */
  tcpUrgentPointer: Scalars['uint16']['output'];
  /** Value of the Window Scale option header field in the TCP packet */
  tcpWindowScale: Scalars['uint16']['output'];
  /** Value of the Window Size header field in the TCP packet */
  tcpWindowSize: Scalars['uint16']['output'];
  /** Value of the Checkusm header field in the UDP packet */
  udpChecksum: Scalars['uint16']['output'];
  /** Value of the Payload Length header field in the UDP packet */
  udpPayloadLength: Scalars['uint16']['output'];
};

export type AccountSpectrumNetworkAnalyticsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountSpectrumNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountSpectrumNetworkAnalyticsAdaptiveGroupsFilter_InputObject>>;
  applicationTag?: InputMaybe<Scalars['string']['input']>;
  applicationTag_geq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_gt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_leq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_like?: InputMaybe<Scalars['string']['input']>;
  applicationTag_lt?: InputMaybe<Scalars['string']['input']>;
  applicationTag_neq?: InputMaybe<Scalars['string']['input']>;
  applicationTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  applicationTag_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCity?: InputMaybe<Scalars['string']['input']>;
  coloCity_geq?: InputMaybe<Scalars['string']['input']>;
  coloCity_gt?: InputMaybe<Scalars['string']['input']>;
  coloCity_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_leq?: InputMaybe<Scalars['string']['input']>;
  coloCity_like?: InputMaybe<Scalars['string']['input']>;
  coloCity_lt?: InputMaybe<Scalars['string']['input']>;
  coloCity_neq?: InputMaybe<Scalars['string']['input']>;
  coloCity_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCity_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCountry?: InputMaybe<Scalars['string']['input']>;
  coloCountry_geq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_gt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_leq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_like?: InputMaybe<Scalars['string']['input']>;
  coloCountry_lt?: InputMaybe<Scalars['string']['input']>;
  coloCountry_neq?: InputMaybe<Scalars['string']['input']>;
  coloCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  coloGeohash?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_like?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  coloGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  coloName?: InputMaybe<Scalars['string']['input']>;
  coloName_geq?: InputMaybe<Scalars['string']['input']>;
  coloName_gt?: InputMaybe<Scalars['string']['input']>;
  coloName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_leq?: InputMaybe<Scalars['string']['input']>;
  coloName_like?: InputMaybe<Scalars['string']['input']>;
  coloName_lt?: InputMaybe<Scalars['string']['input']>;
  coloName_neq?: InputMaybe<Scalars['string']['input']>;
  coloName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenSeconds_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenSeconds_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationAsn?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsnName?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_like?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  destinationAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  destinationAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  destinationCountry?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_geq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_gt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_leq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_like?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_lt?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_neq?: InputMaybe<Scalars['string']['input']>;
  destinationCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_like?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  destinationGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  direction?: InputMaybe<Scalars['string']['input']>;
  direction_geq?: InputMaybe<Scalars['string']['input']>;
  direction_gt?: InputMaybe<Scalars['string']['input']>;
  direction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_leq?: InputMaybe<Scalars['string']['input']>;
  direction_like?: InputMaybe<Scalars['string']['input']>;
  direction_lt?: InputMaybe<Scalars['string']['input']>;
  direction_neq?: InputMaybe<Scalars['string']['input']>;
  direction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  direction_notlike?: InputMaybe<Scalars['string']['input']>;
  ethertype?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ethertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  ethertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  greChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_geq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_gt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greEthertype_leq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_lt?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_neq?: InputMaybe<Scalars['uint16']['input']>;
  greEthertype_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  greHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  greKey?: InputMaybe<Scalars['uint32']['input']>;
  greKey_geq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_gt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greKey_leq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_lt?: InputMaybe<Scalars['uint32']['input']>;
  greKey_neq?: InputMaybe<Scalars['uint32']['input']>;
  greKey_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  greSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  greVersion?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  greVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  greVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  icmpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  icmpCode?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpCode_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpCode_notin?: InputMaybe<Scalars['bytes']['input']>;
  icmpType?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_geq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_gt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_in?: InputMaybe<Scalars['bytes']['input']>;
  icmpType_leq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_lt?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_neq?: InputMaybe<Scalars['uint8']['input']>;
  icmpType_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipDestinationAddress?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipDestinationSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipDestinationSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipFragmentOffset?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipFragmentOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipFragmentOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipHeaderLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipHeaderLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipMoreFragments?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_in?: InputMaybe<Scalars['bytes']['input']>;
  ipMoreFragments_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipMoreFragments_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocolName?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_geq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_gt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_leq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_like?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_lt?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_neq?: InputMaybe<Scalars['string']['input']>;
  ipProtocolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipProtocolName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipProtocol_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_in?: InputMaybe<Scalars['bytes']['input']>;
  ipProtocol_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipProtocol_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipSourceAddress?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceAddress_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceAddress_notlike?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_geq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_gt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_leq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_like?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_lt?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_neq?: InputMaybe<Scalars['string']['input']>;
  ipSourceSubnet_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipSourceSubnet_notlike?: InputMaybe<Scalars['string']['input']>;
  ipTotalLength?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLengthBuckets_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLengthBuckets_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTotalLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipTotalLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipTtl?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtlBuckets_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtlBuckets_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_in?: InputMaybe<Scalars['bytes']['input']>;
  ipTtl_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipTtl_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Checksum?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Checksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Checksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4DontFragment?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4DontFragment_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4DontFragment_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv4Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv4Identification?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_geq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_gt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Identification_leq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_lt?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_neq?: InputMaybe<Scalars['uint16']['input']>;
  ipv4Identification_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  ipv4Options?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_geq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_gt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_leq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_like?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_lt?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_neq?: InputMaybe<Scalars['string']['input']>;
  ipv4Options_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv4Options_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6Dscp?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Dscp_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Dscp_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_in?: InputMaybe<Scalars['bytes']['input']>;
  ipv6Ecn_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipv6Ecn_notin?: InputMaybe<Scalars['bytes']['input']>;
  ipv6ExtensionHeaders?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_geq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_gt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_leq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_like?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_lt?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_neq?: InputMaybe<Scalars['string']['input']>;
  ipv6ExtensionHeaders_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ipv6ExtensionHeaders_notlike?: InputMaybe<Scalars['string']['input']>;
  ipv6FlowLabel?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6FlowLabel_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6FlowLabel_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_geq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_gt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  ipv6Identification_leq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_lt?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_neq?: InputMaybe<Scalars['uint32']['input']>;
  ipv6Identification_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  leaseTag?: InputMaybe<Scalars['string']['input']>;
  leaseTag_geq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_gt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_leq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_like?: InputMaybe<Scalars['string']['input']>;
  leaseTag_lt?: InputMaybe<Scalars['string']['input']>;
  leaseTag_neq?: InputMaybe<Scalars['string']['input']>;
  leaseTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leaseTag_notlike?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_geq?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_gt?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationSystem_leq?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_like?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_lt?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_neq?: InputMaybe<Scalars['string']['input']>;
  mitigationSystem_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mitigationSystem_notlike?: InputMaybe<Scalars['string']['input']>;
  outcome?: InputMaybe<Scalars['string']['input']>;
  outcome_geq?: InputMaybe<Scalars['string']['input']>;
  outcome_gt?: InputMaybe<Scalars['string']['input']>;
  outcome_in?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_leq?: InputMaybe<Scalars['string']['input']>;
  outcome_like?: InputMaybe<Scalars['string']['input']>;
  outcome_lt?: InputMaybe<Scalars['string']['input']>;
  outcome_neq?: InputMaybe<Scalars['string']['input']>;
  outcome_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  outcome_notlike?: InputMaybe<Scalars['string']['input']>;
  prefixTag?: InputMaybe<Scalars['string']['input']>;
  prefixTag_geq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_gt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_leq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_like?: InputMaybe<Scalars['string']['input']>;
  prefixTag_lt?: InputMaybe<Scalars['string']['input']>;
  prefixTag_neq?: InputMaybe<Scalars['string']['input']>;
  prefixTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  prefixTag_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsnName?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_like?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceAsnName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceAsnName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceAsn_geq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_gt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceAsn_leq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_lt?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_neq?: InputMaybe<Scalars['uint32']['input']>;
  sourceAsn_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceCountry?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_geq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_gt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_leq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_like?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_lt?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_neq?: InputMaybe<Scalars['string']['input']>;
  sourceCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_geq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_gt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_leq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_like?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_lt?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_neq?: InputMaybe<Scalars['string']['input']>;
  sourceGeohash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceGeohash_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePort?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_geq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_gt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  sourcePort_leq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_lt?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_neq?: InputMaybe<Scalars['uint16']['input']>;
  sourcePort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpAcknowledgementNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpAcknowledgementNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpAcknowledgementNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpDataOffset_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpDataOffset_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpFlags?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlagsString?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_geq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_gt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_leq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_like?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_lt?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_neq?: InputMaybe<Scalars['string']['input']>;
  tcpFlagsString_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpFlagsString_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpFlags_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpFlags_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpFlags_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpMss?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpMss_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpMss_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpOptions?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_geq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_gt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_leq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_like?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_lt?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_neq?: InputMaybe<Scalars['string']['input']>;
  tcpOptions_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpOptions_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_geq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_gt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_in?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_leq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_like?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_lt?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_neq?: InputMaybe<Scalars['string']['input']>;
  tcpSackBlocks_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  tcpSackBlocks_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpSackPermitted?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_geq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_gt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_in?: InputMaybe<Scalars['bytes']['input']>;
  tcpSackPermitted_leq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_lt?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_neq?: InputMaybe<Scalars['uint8']['input']>;
  tcpSackPermitted_notin?: InputMaybe<Scalars['bytes']['input']>;
  tcpSequenceNumber?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpSequenceNumber_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpSequenceNumber_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampEcr_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampEcr_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpTimestampValue_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpTimestampValue_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpUrgentPointer?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpUrgentPointer_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpUrgentPointer_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowScale_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowScale_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_geq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_gt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  tcpWindowSize_leq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_lt?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_neq?: InputMaybe<Scalars['uint16']['input']>;
  tcpWindowSize_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpChecksum_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpChecksum_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_geq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_gt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  udpPayloadLength_leq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_lt?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_neq?: InputMaybe<Scalars['uint16']['input']>;
  udpPayloadLength_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
};

export enum AccountSpectrumNetworkAnalyticsAdaptiveGroupsOrderBy {
  /** applicationTag ascending */
  ApplicationTagAsc = 'applicationTag_ASC',
  /** applicationTag descending */
  ApplicationTagDesc = 'applicationTag_DESC',
  /** avg(bitRateDay) ascending */
  AvgBitRateDayAsc = 'avg_bitRateDay_ASC',
  /** avg(bitRateDay) descending */
  AvgBitRateDayDesc = 'avg_bitRateDay_DESC',
  /** avg(bitRateFifteenMinutes) ascending */
  AvgBitRateFifteenMinutesAsc = 'avg_bitRateFifteenMinutes_ASC',
  /** avg(bitRateFifteenMinutes) descending */
  AvgBitRateFifteenMinutesDesc = 'avg_bitRateFifteenMinutes_DESC',
  /** avg(bitRateFiveMinutes) ascending */
  AvgBitRateFiveMinutesAsc = 'avg_bitRateFiveMinutes_ASC',
  /** avg(bitRateFiveMinutes) descending */
  AvgBitRateFiveMinutesDesc = 'avg_bitRateFiveMinutes_DESC',
  /** avg(bitRateHour) ascending */
  AvgBitRateHourAsc = 'avg_bitRateHour_ASC',
  /** avg(bitRateHour) descending */
  AvgBitRateHourDesc = 'avg_bitRateHour_DESC',
  /** avg(bitRateMinute) ascending */
  AvgBitRateMinuteAsc = 'avg_bitRateMinute_ASC',
  /** avg(bitRateMinute) descending */
  AvgBitRateMinuteDesc = 'avg_bitRateMinute_DESC',
  /** avg(bitRateTenSeconds) ascending */
  AvgBitRateTenSecondsAsc = 'avg_bitRateTenSeconds_ASC',
  /** avg(bitRateTenSeconds) descending */
  AvgBitRateTenSecondsDesc = 'avg_bitRateTenSeconds_DESC',
  /** avg(bitRate) ascending */
  AvgBitRateAsc = 'avg_bitRate_ASC',
  /** avg(bitRate) descending */
  AvgBitRateDesc = 'avg_bitRate_DESC',
  /** avg(packetRateDay) ascending */
  AvgPacketRateDayAsc = 'avg_packetRateDay_ASC',
  /** avg(packetRateDay) descending */
  AvgPacketRateDayDesc = 'avg_packetRateDay_DESC',
  /** avg(packetRateFifteenMinutes) ascending */
  AvgPacketRateFifteenMinutesAsc = 'avg_packetRateFifteenMinutes_ASC',
  /** avg(packetRateFifteenMinutes) descending */
  AvgPacketRateFifteenMinutesDesc = 'avg_packetRateFifteenMinutes_DESC',
  /** avg(packetRateFiveMinutes) ascending */
  AvgPacketRateFiveMinutesAsc = 'avg_packetRateFiveMinutes_ASC',
  /** avg(packetRateFiveMinutes) descending */
  AvgPacketRateFiveMinutesDesc = 'avg_packetRateFiveMinutes_DESC',
  /** avg(packetRateHour) ascending */
  AvgPacketRateHourAsc = 'avg_packetRateHour_ASC',
  /** avg(packetRateHour) descending */
  AvgPacketRateHourDesc = 'avg_packetRateHour_DESC',
  /** avg(packetRateMinute) ascending */
  AvgPacketRateMinuteAsc = 'avg_packetRateMinute_ASC',
  /** avg(packetRateMinute) descending */
  AvgPacketRateMinuteDesc = 'avg_packetRateMinute_DESC',
  /** avg(packetRateTenSeconds) ascending */
  AvgPacketRateTenSecondsAsc = 'avg_packetRateTenSeconds_ASC',
  /** avg(packetRateTenSeconds) descending */
  AvgPacketRateTenSecondsDesc = 'avg_packetRateTenSeconds_DESC',
  /** avg(packetRate) ascending */
  AvgPacketRateAsc = 'avg_packetRate_ASC',
  /** avg(packetRate) descending */
  AvgPacketRateDesc = 'avg_packetRate_DESC',
  /** coloCity ascending */
  ColoCityAsc = 'coloCity_ASC',
  /** coloCity descending */
  ColoCityDesc = 'coloCity_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** coloCountry ascending */
  ColoCountryAsc = 'coloCountry_ASC',
  /** coloCountry descending */
  ColoCountryDesc = 'coloCountry_DESC',
  /** coloGeohash ascending */
  ColoGeohashAsc = 'coloGeohash_ASC',
  /** coloGeohash descending */
  ColoGeohashDesc = 'coloGeohash_DESC',
  /** coloName ascending */
  ColoNameAsc = 'coloName_ASC',
  /** coloName descending */
  ColoNameDesc = 'coloName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetimeTenSeconds ascending */
  DatetimeTenSecondsAsc = 'datetimeTenSeconds_ASC',
  /** datetimeTenSeconds descending */
  DatetimeTenSecondsDesc = 'datetimeTenSeconds_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationAsnName ascending */
  DestinationAsnNameAsc = 'destinationAsnName_ASC',
  /** destinationAsnName descending */
  DestinationAsnNameDesc = 'destinationAsnName_DESC',
  /** destinationAsn ascending */
  DestinationAsnAsc = 'destinationAsn_ASC',
  /** destinationAsn descending */
  DestinationAsnDesc = 'destinationAsn_DESC',
  /** destinationCountry ascending */
  DestinationCountryAsc = 'destinationCountry_ASC',
  /** destinationCountry descending */
  DestinationCountryDesc = 'destinationCountry_DESC',
  /** destinationGeohash ascending */
  DestinationGeohashAsc = 'destinationGeohash_ASC',
  /** destinationGeohash descending */
  DestinationGeohashDesc = 'destinationGeohash_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** destinationService ascending */
  DestinationServiceAsc = 'destinationService_ASC',
  /** destinationService descending */
  DestinationServiceDesc = 'destinationService_DESC',
  /** direction ascending */
  DirectionAsc = 'direction_ASC',
  /** direction descending */
  DirectionDesc = 'direction_DESC',
  /** ethertype ascending */
  EthertypeAsc = 'ethertype_ASC',
  /** ethertype descending */
  EthertypeDesc = 'ethertype_DESC',
  /** greChecksum ascending */
  GreChecksumAsc = 'greChecksum_ASC',
  /** greChecksum descending */
  GreChecksumDesc = 'greChecksum_DESC',
  /** greEthertype ascending */
  GreEthertypeAsc = 'greEthertype_ASC',
  /** greEthertype descending */
  GreEthertypeDesc = 'greEthertype_DESC',
  /** greHeaderLength ascending */
  GreHeaderLengthAsc = 'greHeaderLength_ASC',
  /** greHeaderLength descending */
  GreHeaderLengthDesc = 'greHeaderLength_DESC',
  /** greKey ascending */
  GreKeyAsc = 'greKey_ASC',
  /** greKey descending */
  GreKeyDesc = 'greKey_DESC',
  /** greSequenceNumber ascending */
  GreSequenceNumberAsc = 'greSequenceNumber_ASC',
  /** greSequenceNumber descending */
  GreSequenceNumberDesc = 'greSequenceNumber_DESC',
  /** greVersion ascending */
  GreVersionAsc = 'greVersion_ASC',
  /** greVersion descending */
  GreVersionDesc = 'greVersion_DESC',
  /** icmpChecksum ascending */
  IcmpChecksumAsc = 'icmpChecksum_ASC',
  /** icmpChecksum descending */
  IcmpChecksumDesc = 'icmpChecksum_DESC',
  /** icmpCode ascending */
  IcmpCodeAsc = 'icmpCode_ASC',
  /** icmpCode descending */
  IcmpCodeDesc = 'icmpCode_DESC',
  /** icmpType ascending */
  IcmpTypeAsc = 'icmpType_ASC',
  /** icmpType descending */
  IcmpTypeDesc = 'icmpType_DESC',
  /** ipDestinationAddress ascending */
  IpDestinationAddressAsc = 'ipDestinationAddress_ASC',
  /** ipDestinationAddress descending */
  IpDestinationAddressDesc = 'ipDestinationAddress_DESC',
  /** ipDestinationSubnet ascending */
  IpDestinationSubnetAsc = 'ipDestinationSubnet_ASC',
  /** ipDestinationSubnet descending */
  IpDestinationSubnetDesc = 'ipDestinationSubnet_DESC',
  /** ipFragmentOffset ascending */
  IpFragmentOffsetAsc = 'ipFragmentOffset_ASC',
  /** ipFragmentOffset descending */
  IpFragmentOffsetDesc = 'ipFragmentOffset_DESC',
  /** ipHeaderLength ascending */
  IpHeaderLengthAsc = 'ipHeaderLength_ASC',
  /** ipHeaderLength descending */
  IpHeaderLengthDesc = 'ipHeaderLength_DESC',
  /** ipMoreFragments ascending */
  IpMoreFragmentsAsc = 'ipMoreFragments_ASC',
  /** ipMoreFragments descending */
  IpMoreFragmentsDesc = 'ipMoreFragments_DESC',
  /** ipProtocolName ascending */
  IpProtocolNameAsc = 'ipProtocolName_ASC',
  /** ipProtocolName descending */
  IpProtocolNameDesc = 'ipProtocolName_DESC',
  /** ipProtocol ascending */
  IpProtocolAsc = 'ipProtocol_ASC',
  /** ipProtocol descending */
  IpProtocolDesc = 'ipProtocol_DESC',
  /** ipSourceAddress ascending */
  IpSourceAddressAsc = 'ipSourceAddress_ASC',
  /** ipSourceAddress descending */
  IpSourceAddressDesc = 'ipSourceAddress_DESC',
  /** ipSourceSubnet ascending */
  IpSourceSubnetAsc = 'ipSourceSubnet_ASC',
  /** ipSourceSubnet descending */
  IpSourceSubnetDesc = 'ipSourceSubnet_DESC',
  /** ipTotalLengthBuckets ascending */
  IpTotalLengthBucketsAsc = 'ipTotalLengthBuckets_ASC',
  /** ipTotalLengthBuckets descending */
  IpTotalLengthBucketsDesc = 'ipTotalLengthBuckets_DESC',
  /** ipTotalLength ascending */
  IpTotalLengthAsc = 'ipTotalLength_ASC',
  /** ipTotalLength descending */
  IpTotalLengthDesc = 'ipTotalLength_DESC',
  /** ipTtlBuckets ascending */
  IpTtlBucketsAsc = 'ipTtlBuckets_ASC',
  /** ipTtlBuckets descending */
  IpTtlBucketsDesc = 'ipTtlBuckets_DESC',
  /** ipTtl ascending */
  IpTtlAsc = 'ipTtl_ASC',
  /** ipTtl descending */
  IpTtlDesc = 'ipTtl_DESC',
  /** ipv4Checksum ascending */
  Ipv4ChecksumAsc = 'ipv4Checksum_ASC',
  /** ipv4Checksum descending */
  Ipv4ChecksumDesc = 'ipv4Checksum_DESC',
  /** ipv4DontFragment ascending */
  Ipv4DontFragmentAsc = 'ipv4DontFragment_ASC',
  /** ipv4DontFragment descending */
  Ipv4DontFragmentDesc = 'ipv4DontFragment_DESC',
  /** ipv4Dscp ascending */
  Ipv4DscpAsc = 'ipv4Dscp_ASC',
  /** ipv4Dscp descending */
  Ipv4DscpDesc = 'ipv4Dscp_DESC',
  /** ipv4Ecn ascending */
  Ipv4EcnAsc = 'ipv4Ecn_ASC',
  /** ipv4Ecn descending */
  Ipv4EcnDesc = 'ipv4Ecn_DESC',
  /** ipv4Identification ascending */
  Ipv4IdentificationAsc = 'ipv4Identification_ASC',
  /** ipv4Identification descending */
  Ipv4IdentificationDesc = 'ipv4Identification_DESC',
  /** ipv4Options ascending */
  Ipv4OptionsAsc = 'ipv4Options_ASC',
  /** ipv4Options descending */
  Ipv4OptionsDesc = 'ipv4Options_DESC',
  /** ipv6Dscp ascending */
  Ipv6DscpAsc = 'ipv6Dscp_ASC',
  /** ipv6Dscp descending */
  Ipv6DscpDesc = 'ipv6Dscp_DESC',
  /** ipv6Ecn ascending */
  Ipv6EcnAsc = 'ipv6Ecn_ASC',
  /** ipv6Ecn descending */
  Ipv6EcnDesc = 'ipv6Ecn_DESC',
  /** ipv6ExtensionHeaders ascending */
  Ipv6ExtensionHeadersAsc = 'ipv6ExtensionHeaders_ASC',
  /** ipv6ExtensionHeaders descending */
  Ipv6ExtensionHeadersDesc = 'ipv6ExtensionHeaders_DESC',
  /** ipv6FlowLabel ascending */
  Ipv6FlowLabelAsc = 'ipv6FlowLabel_ASC',
  /** ipv6FlowLabel descending */
  Ipv6FlowLabelDesc = 'ipv6FlowLabel_DESC',
  /** ipv6Identification ascending */
  Ipv6IdentificationAsc = 'ipv6Identification_ASC',
  /** ipv6Identification descending */
  Ipv6IdentificationDesc = 'ipv6Identification_DESC',
  /** leaseTag ascending */
  LeaseTagAsc = 'leaseTag_ASC',
  /** leaseTag descending */
  LeaseTagDesc = 'leaseTag_DESC',
  /** mitigationSystem ascending */
  MitigationSystemAsc = 'mitigationSystem_ASC',
  /** mitigationSystem descending */
  MitigationSystemDesc = 'mitigationSystem_DESC',
  /** outcome ascending */
  OutcomeAsc = 'outcome_ASC',
  /** outcome descending */
  OutcomeDesc = 'outcome_DESC',
  /** prefixTag ascending */
  PrefixTagAsc = 'prefixTag_ASC',
  /** prefixTag descending */
  PrefixTagDesc = 'prefixTag_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sourceAsnName ascending */
  SourceAsnNameAsc = 'sourceAsnName_ASC',
  /** sourceAsnName descending */
  SourceAsnNameDesc = 'sourceAsnName_DESC',
  /** sourceAsn ascending */
  SourceAsnAsc = 'sourceAsn_ASC',
  /** sourceAsn descending */
  SourceAsnDesc = 'sourceAsn_DESC',
  /** sourceCountry ascending */
  SourceCountryAsc = 'sourceCountry_ASC',
  /** sourceCountry descending */
  SourceCountryDesc = 'sourceCountry_DESC',
  /** sourceGeohash ascending */
  SourceGeohashAsc = 'sourceGeohash_ASC',
  /** sourceGeohash descending */
  SourceGeohashDesc = 'sourceGeohash_DESC',
  /** sourcePort ascending */
  SourcePortAsc = 'sourcePort_ASC',
  /** sourcePort descending */
  SourcePortDesc = 'sourcePort_DESC',
  /** sourceService ascending */
  SourceServiceAsc = 'sourceService_ASC',
  /** sourceService descending */
  SourceServiceDesc = 'sourceService_DESC',
  /** sum(bits) ascending */
  SumBitsAsc = 'sum_bits_ASC',
  /** sum(bits) descending */
  SumBitsDesc = 'sum_bits_DESC',
  /** sum(packets) ascending */
  SumPacketsAsc = 'sum_packets_ASC',
  /** sum(packets) descending */
  SumPacketsDesc = 'sum_packets_DESC',
  /** system ascending */
  SystemAsc = 'system_ASC',
  /** system descending */
  SystemDesc = 'system_DESC',
  /** tcpAcknowledgementNumber ascending */
  TcpAcknowledgementNumberAsc = 'tcpAcknowledgementNumber_ASC',
  /** tcpAcknowledgementNumber descending */
  TcpAcknowledgementNumberDesc = 'tcpAcknowledgementNumber_DESC',
  /** tcpChecksum ascending */
  TcpChecksumAsc = 'tcpChecksum_ASC',
  /** tcpChecksum descending */
  TcpChecksumDesc = 'tcpChecksum_DESC',
  /** tcpDataOffset ascending */
  TcpDataOffsetAsc = 'tcpDataOffset_ASC',
  /** tcpDataOffset descending */
  TcpDataOffsetDesc = 'tcpDataOffset_DESC',
  /** tcpFlagsString ascending */
  TcpFlagsStringAsc = 'tcpFlagsString_ASC',
  /** tcpFlagsString descending */
  TcpFlagsStringDesc = 'tcpFlagsString_DESC',
  /** tcpFlags ascending */
  TcpFlagsAsc = 'tcpFlags_ASC',
  /** tcpFlags descending */
  TcpFlagsDesc = 'tcpFlags_DESC',
  /** tcpMss ascending */
  TcpMssAsc = 'tcpMss_ASC',
  /** tcpMss descending */
  TcpMssDesc = 'tcpMss_DESC',
  /** tcpOptions ascending */
  TcpOptionsAsc = 'tcpOptions_ASC',
  /** tcpOptions descending */
  TcpOptionsDesc = 'tcpOptions_DESC',
  /** tcpSackBlocks ascending */
  TcpSackBlocksAsc = 'tcpSackBlocks_ASC',
  /** tcpSackBlocks descending */
  TcpSackBlocksDesc = 'tcpSackBlocks_DESC',
  /** tcpSackPermitted ascending */
  TcpSackPermittedAsc = 'tcpSackPermitted_ASC',
  /** tcpSackPermitted descending */
  TcpSackPermittedDesc = 'tcpSackPermitted_DESC',
  /** tcpSequenceNumber ascending */
  TcpSequenceNumberAsc = 'tcpSequenceNumber_ASC',
  /** tcpSequenceNumber descending */
  TcpSequenceNumberDesc = 'tcpSequenceNumber_DESC',
  /** tcpTimestampEcr ascending */
  TcpTimestampEcrAsc = 'tcpTimestampEcr_ASC',
  /** tcpTimestampEcr descending */
  TcpTimestampEcrDesc = 'tcpTimestampEcr_DESC',
  /** tcpTimestampValue ascending */
  TcpTimestampValueAsc = 'tcpTimestampValue_ASC',
  /** tcpTimestampValue descending */
  TcpTimestampValueDesc = 'tcpTimestampValue_DESC',
  /** tcpUrgentPointer ascending */
  TcpUrgentPointerAsc = 'tcpUrgentPointer_ASC',
  /** tcpUrgentPointer descending */
  TcpUrgentPointerDesc = 'tcpUrgentPointer_DESC',
  /** tcpWindowScale ascending */
  TcpWindowScaleAsc = 'tcpWindowScale_ASC',
  /** tcpWindowScale descending */
  TcpWindowScaleDesc = 'tcpWindowScale_DESC',
  /** tcpWindowSize ascending */
  TcpWindowSizeAsc = 'tcpWindowSize_ASC',
  /** tcpWindowSize descending */
  TcpWindowSizeDesc = 'tcpWindowSize_DESC',
  /** udpChecksum ascending */
  UdpChecksumAsc = 'udpChecksum_ASC',
  /** udpChecksum descending */
  UdpChecksumDesc = 'udpChecksum_DESC',
  /** udpPayloadLength ascending */
  UdpPayloadLengthAsc = 'udpPayloadLength_ASC',
  /** udpPayloadLength descending */
  UdpPayloadLengthDesc = 'udpPayloadLength_DESC',
  /** verdict ascending */
  VerdictAsc = 'verdict_ASC',
  /** verdict descending */
  VerdictDesc = 'verdict_DESC'
}

export type AccountSpectrumNetworkAnalyticsAdaptiveGroupsSum = {
  __typename?: 'AccountSpectrumNetworkAnalyticsAdaptiveGroupsSum';
  /** Sum of bits received */
  bits: Scalars['uint64']['output'];
  /** Sum of packets received */
  packets: Scalars['uint64']['output'];
};

/** Storage Tracing Information */
export type AccountStorageTraces = {
  __typename?: 'AccountStorageTraces';
  /** The container that this resource is stored under. */
  containerId: Scalars['string']['output'];
  /** Storage trace timestamp */
  datetime: Scalars['Time']['output'];
  /** The identifier to access this resource in the container. */
  resourceId: Scalars['string']['output'];
  /** The identifier of the storage service that houses the resourse. */
  serviceId: Scalars['string']['output'];
  /** The ID that this trace entry is under. */
  traceId: Scalars['string']['output'];
  /** The AccountID of the user who owns the resource. */
  userAccountId: Scalars['string']['output'];
};

export type AccountStorageTracesFilter_InputObject = {
  AND?: InputMaybe<Array<AccountStorageTracesFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountStorageTracesFilter_InputObject>>;
  containerId?: InputMaybe<Scalars['string']['input']>;
  containerId_geq?: InputMaybe<Scalars['string']['input']>;
  containerId_gt?: InputMaybe<Scalars['string']['input']>;
  containerId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  containerId_leq?: InputMaybe<Scalars['string']['input']>;
  containerId_like?: InputMaybe<Scalars['string']['input']>;
  containerId_lt?: InputMaybe<Scalars['string']['input']>;
  containerId_neq?: InputMaybe<Scalars['string']['input']>;
  containerId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  containerId_notlike?: InputMaybe<Scalars['string']['input']>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  resourceId?: InputMaybe<Scalars['string']['input']>;
  resourceId_geq?: InputMaybe<Scalars['string']['input']>;
  resourceId_gt?: InputMaybe<Scalars['string']['input']>;
  resourceId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  resourceId_leq?: InputMaybe<Scalars['string']['input']>;
  resourceId_like?: InputMaybe<Scalars['string']['input']>;
  resourceId_lt?: InputMaybe<Scalars['string']['input']>;
  resourceId_neq?: InputMaybe<Scalars['string']['input']>;
  resourceId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  resourceId_notlike?: InputMaybe<Scalars['string']['input']>;
  serviceId?: InputMaybe<Scalars['string']['input']>;
  serviceId_geq?: InputMaybe<Scalars['string']['input']>;
  serviceId_gt?: InputMaybe<Scalars['string']['input']>;
  serviceId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  serviceId_leq?: InputMaybe<Scalars['string']['input']>;
  serviceId_like?: InputMaybe<Scalars['string']['input']>;
  serviceId_lt?: InputMaybe<Scalars['string']['input']>;
  serviceId_neq?: InputMaybe<Scalars['string']['input']>;
  serviceId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  serviceId_notlike?: InputMaybe<Scalars['string']['input']>;
  traceId?: InputMaybe<Scalars['string']['input']>;
  traceId_geq?: InputMaybe<Scalars['string']['input']>;
  traceId_gt?: InputMaybe<Scalars['string']['input']>;
  traceId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  traceId_leq?: InputMaybe<Scalars['string']['input']>;
  traceId_like?: InputMaybe<Scalars['string']['input']>;
  traceId_lt?: InputMaybe<Scalars['string']['input']>;
  traceId_neq?: InputMaybe<Scalars['string']['input']>;
  traceId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  traceId_notlike?: InputMaybe<Scalars['string']['input']>;
  userAccountId?: InputMaybe<Scalars['string']['input']>;
  userAccountId_geq?: InputMaybe<Scalars['string']['input']>;
  userAccountId_gt?: InputMaybe<Scalars['string']['input']>;
  userAccountId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAccountId_leq?: InputMaybe<Scalars['string']['input']>;
  userAccountId_like?: InputMaybe<Scalars['string']['input']>;
  userAccountId_lt?: InputMaybe<Scalars['string']['input']>;
  userAccountId_neq?: InputMaybe<Scalars['string']['input']>;
  userAccountId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAccountId_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountStorageTracesOrderBy {
  /** containerId ascending */
  ContainerIdAsc = 'containerId_ASC',
  /** containerId descending */
  ContainerIdDesc = 'containerId_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** resourceId ascending */
  ResourceIdAsc = 'resourceId_ASC',
  /** resourceId descending */
  ResourceIdDesc = 'resourceId_DESC',
  /** serviceId ascending */
  ServiceIdAsc = 'serviceId_ASC',
  /** serviceId descending */
  ServiceIdDesc = 'serviceId_DESC',
  /** traceId ascending */
  TraceIdAsc = 'traceId_ASC',
  /** traceId descending */
  TraceIdDesc = 'traceId_DESC',
  /** userAccountId ascending */
  UserAccountIdAsc = 'userAccountId_ASC',
  /** userAccountId descending */
  UserAccountIdDesc = 'userAccountId_DESC'
}

/** A high-level summary of Cloudflare Stream minutes viewed. */
export type AccountStreamMinutesViewedAdaptiveGroups = {
  __typename?: 'AccountStreamMinutesViewedAdaptiveGroups';
  /** The number of values for a metric per dimension */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountStreamMinutesViewedAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountStreamMinutesViewedAdaptiveGroupsSum>;
};

export type AccountStreamMinutesViewedAdaptiveGroupsDimensions = {
  __typename?: 'AccountStreamMinutesViewedAdaptiveGroupsDimensions';
  /** ISO 3166 alpha2 country code from the client */
  clientCountryName: Scalars['string']['output'];
  /** Customer-provided creator ID of a video */
  creator: Scalars['string']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The source of the minutes viewed */
  mediaType: Scalars['string']['output'];
  /** Unique ID of a video */
  uid: Scalars['string']['output'];
};

export type AccountStreamMinutesViewedAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountStreamMinutesViewedAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountStreamMinutesViewedAdaptiveGroupsFilter_InputObject>>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  creator?: InputMaybe<Scalars['string']['input']>;
  creator_geq?: InputMaybe<Scalars['string']['input']>;
  creator_gt?: InputMaybe<Scalars['string']['input']>;
  creator_in?: InputMaybe<Array<Scalars['string']['input']>>;
  creator_leq?: InputMaybe<Scalars['string']['input']>;
  creator_like?: InputMaybe<Scalars['string']['input']>;
  creator_lt?: InputMaybe<Scalars['string']['input']>;
  creator_neq?: InputMaybe<Scalars['string']['input']>;
  creator_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  creator_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  mediaType?: InputMaybe<Scalars['string']['input']>;
  mediaType_geq?: InputMaybe<Scalars['string']['input']>;
  mediaType_gt?: InputMaybe<Scalars['string']['input']>;
  mediaType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mediaType_leq?: InputMaybe<Scalars['string']['input']>;
  mediaType_like?: InputMaybe<Scalars['string']['input']>;
  mediaType_lt?: InputMaybe<Scalars['string']['input']>;
  mediaType_neq?: InputMaybe<Scalars['string']['input']>;
  mediaType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mediaType_notlike?: InputMaybe<Scalars['string']['input']>;
  uid?: InputMaybe<Scalars['string']['input']>;
  uid_geq?: InputMaybe<Scalars['string']['input']>;
  uid_gt?: InputMaybe<Scalars['string']['input']>;
  uid_in?: InputMaybe<Array<Scalars['string']['input']>>;
  uid_leq?: InputMaybe<Scalars['string']['input']>;
  uid_like?: InputMaybe<Scalars['string']['input']>;
  uid_lt?: InputMaybe<Scalars['string']['input']>;
  uid_neq?: InputMaybe<Scalars['string']['input']>;
  uid_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  uid_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountStreamMinutesViewedAdaptiveGroupsOrderBy {
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** creator ascending */
  CreatorAsc = 'creator_ASC',
  /** creator descending */
  CreatorDesc = 'creator_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** mediaType ascending */
  MediaTypeAsc = 'mediaType_ASC',
  /** mediaType descending */
  MediaTypeDesc = 'mediaType_DESC',
  /** sum(minutesViewed) ascending */
  SumMinutesViewedAsc = 'sum_minutesViewed_ASC',
  /** sum(minutesViewed) descending */
  SumMinutesViewedDesc = 'sum_minutesViewed_DESC',
  /** uid ascending */
  UidAsc = 'uid_ASC',
  /** uid descending */
  UidDesc = 'uid_DESC'
}

export type AccountStreamMinutesViewedAdaptiveGroupsSum = {
  __typename?: 'AccountStreamMinutesViewedAdaptiveGroupsSum';
  minutesViewed: Scalars['uint64']['output'];
};

/** Beta. Cloudflare Turnstile aggregated events with adaptive sampling */
export type AccountTurnstileAdaptiveGroups = {
  __typename?: 'AccountTurnstileAdaptiveGroups';
  avg?: Maybe<AccountTurnstileAdaptiveGroupsAvg>;
  /** Number of Cloudflare Turnstile events processed */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountTurnstileAdaptiveGroupsDimensions>;
};

export type AccountTurnstileAdaptiveGroupsAvg = {
  __typename?: 'AccountTurnstileAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountTurnstileAdaptiveGroupsDimensions = {
  __typename?: 'AccountTurnstileAdaptiveGroupsDimensions';
  /** The action tag of the challenge event */
  action: Scalars['string']['output'];
  /** The date the challenge event was emitted */
  date: Scalars['Date']['output'];
  /** The date and time the challenge event was emitted */
  datetime: Scalars['Time']['output'];
  /** The date and time the challenge event was emitted truncated to the day */
  datetimeDay: Scalars['Time']['output'];
  /** The date and time the challenge event was emitted truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the challenge event was emitted truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the challenge event was emitted truncated to a multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** The date and time the challenge event was emitted truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the challenge event was emitted truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The type of the Cloudflare Turnstile event */
  eventType: Scalars['string']['output'];
  /** The sitekey of the widget associated with the event */
  siteKey: Scalars['string']['output'];
};

export type AccountTurnstileAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountTurnstileAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountTurnstileAdaptiveGroupsFilter_InputObject>>;
  action?: InputMaybe<Scalars['string']['input']>;
  action_geq?: InputMaybe<Scalars['string']['input']>;
  action_gt?: InputMaybe<Scalars['string']['input']>;
  action_in?: InputMaybe<Array<Scalars['string']['input']>>;
  action_leq?: InputMaybe<Scalars['string']['input']>;
  action_like?: InputMaybe<Scalars['string']['input']>;
  action_lt?: InputMaybe<Scalars['string']['input']>;
  action_neq?: InputMaybe<Scalars['string']['input']>;
  action_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  action_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeDay_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  eventType?: InputMaybe<Scalars['string']['input']>;
  eventType_geq?: InputMaybe<Scalars['string']['input']>;
  eventType_gt?: InputMaybe<Scalars['string']['input']>;
  eventType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  eventType_leq?: InputMaybe<Scalars['string']['input']>;
  eventType_like?: InputMaybe<Scalars['string']['input']>;
  eventType_lt?: InputMaybe<Scalars['string']['input']>;
  eventType_neq?: InputMaybe<Scalars['string']['input']>;
  eventType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  eventType_notlike?: InputMaybe<Scalars['string']['input']>;
  siteKey?: InputMaybe<Scalars['string']['input']>;
  siteKey_geq?: InputMaybe<Scalars['string']['input']>;
  siteKey_gt?: InputMaybe<Scalars['string']['input']>;
  siteKey_in?: InputMaybe<Array<Scalars['string']['input']>>;
  siteKey_leq?: InputMaybe<Scalars['string']['input']>;
  siteKey_like?: InputMaybe<Scalars['string']['input']>;
  siteKey_lt?: InputMaybe<Scalars['string']['input']>;
  siteKey_neq?: InputMaybe<Scalars['string']['input']>;
  siteKey_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  siteKey_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountTurnstileAdaptiveGroupsOrderBy {
  /** action ascending */
  ActionAsc = 'action_ASC',
  /** action descending */
  ActionDesc = 'action_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeDay ascending */
  DatetimeDayAsc = 'datetimeDay_ASC',
  /** datetimeDay descending */
  DatetimeDayDesc = 'datetimeDay_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** eventType ascending */
  EventTypeAsc = 'eventType_ASC',
  /** eventType descending */
  EventTypeDesc = 'eventType_DESC',
  /** siteKey ascending */
  SiteKeyAsc = 'siteKey_ASC',
  /** siteKey descending */
  SiteKeyDesc = 'siteKey_DESC'
}

/** Beta. Aggregated video streaming buffer event metrics with adaptive sampling */
export type AccountVideoBufferEventsAdaptiveGroups = {
  __typename?: 'AccountVideoBufferEventsAdaptiveGroups';
  avg?: Maybe<AccountVideoBufferEventsAdaptiveGroupsAvg>;
  /** Total number of buffer events */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountVideoBufferEventsAdaptiveGroupsDimensions>;
};

export type AccountVideoBufferEventsAdaptiveGroupsAvg = {
  __typename?: 'AccountVideoBufferEventsAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountVideoBufferEventsAdaptiveGroupsDimensions = {
  __typename?: 'AccountVideoBufferEventsAdaptiveGroupsDimensions';
  /** ISO 3166 alpha2 country code from the client */
  clientCountryName: Scalars['string']['output'];
  /** Request date of the event */
  date: Scalars['Date']['output'];
  /** Request datetime of the event */
  datetime: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Browser of the device used in playback */
  deviceBrowser: Scalars['string']['output'];
  /** OS of the device used in playback */
  deviceOs: Scalars['string']['output'];
  /** Device type used in playback */
  deviceType: Scalars['string']['output'];
  /** unique id for a video */
  uid: Scalars['string']['output'];
};

export type AccountVideoBufferEventsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountVideoBufferEventsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountVideoBufferEventsAdaptiveGroupsFilter_InputObject>>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  deviceBrowser?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_like?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  deviceOs?: InputMaybe<Scalars['string']['input']>;
  deviceOs_geq?: InputMaybe<Scalars['string']['input']>;
  deviceOs_gt?: InputMaybe<Scalars['string']['input']>;
  deviceOs_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceOs_leq?: InputMaybe<Scalars['string']['input']>;
  deviceOs_like?: InputMaybe<Scalars['string']['input']>;
  deviceOs_lt?: InputMaybe<Scalars['string']['input']>;
  deviceOs_neq?: InputMaybe<Scalars['string']['input']>;
  deviceOs_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceOs_notlike?: InputMaybe<Scalars['string']['input']>;
  deviceType?: InputMaybe<Scalars['string']['input']>;
  deviceType_geq?: InputMaybe<Scalars['string']['input']>;
  deviceType_gt?: InputMaybe<Scalars['string']['input']>;
  deviceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_leq?: InputMaybe<Scalars['string']['input']>;
  deviceType_like?: InputMaybe<Scalars['string']['input']>;
  deviceType_lt?: InputMaybe<Scalars['string']['input']>;
  deviceType_neq?: InputMaybe<Scalars['string']['input']>;
  deviceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_notlike?: InputMaybe<Scalars['string']['input']>;
  uid?: InputMaybe<Scalars['string']['input']>;
  uid_geq?: InputMaybe<Scalars['string']['input']>;
  uid_gt?: InputMaybe<Scalars['string']['input']>;
  uid_in?: InputMaybe<Array<Scalars['string']['input']>>;
  uid_leq?: InputMaybe<Scalars['string']['input']>;
  uid_like?: InputMaybe<Scalars['string']['input']>;
  uid_lt?: InputMaybe<Scalars['string']['input']>;
  uid_neq?: InputMaybe<Scalars['string']['input']>;
  uid_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  uid_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountVideoBufferEventsAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** deviceBrowser ascending */
  DeviceBrowserAsc = 'deviceBrowser_ASC',
  /** deviceBrowser descending */
  DeviceBrowserDesc = 'deviceBrowser_DESC',
  /** deviceOs ascending */
  DeviceOsAsc = 'deviceOs_ASC',
  /** deviceOs descending */
  DeviceOsDesc = 'deviceOs_DESC',
  /** deviceType ascending */
  DeviceTypeAsc = 'deviceType_ASC',
  /** deviceType descending */
  DeviceTypeDesc = 'deviceType_DESC',
  /** eventType ascending */
  EventTypeAsc = 'eventType_ASC',
  /** eventType descending */
  EventTypeDesc = 'eventType_DESC',
  /** uid ascending */
  UidAsc = 'uid_ASC',
  /** uid descending */
  UidDesc = 'uid_DESC'
}

/** Beta. Aggregated video streaming playback event metrics with adaptive sampling */
export type AccountVideoPlaybackEventsAdaptiveGroups = {
  __typename?: 'AccountVideoPlaybackEventsAdaptiveGroups';
  avg?: Maybe<AccountVideoPlaybackEventsAdaptiveGroupsAvg>;
  /** Total number of playback starts */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountVideoPlaybackEventsAdaptiveGroupsDimensions>;
  sum?: Maybe<AccountVideoPlaybackEventsAdaptiveGroupsSum>;
};

export type AccountVideoPlaybackEventsAdaptiveGroupsAvg = {
  __typename?: 'AccountVideoPlaybackEventsAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountVideoPlaybackEventsAdaptiveGroupsDimensions = {
  __typename?: 'AccountVideoPlaybackEventsAdaptiveGroupsDimensions';
  /** ISO 3166 alpha2 country code from the client */
  clientCountryName: Scalars['string']['output'];
  /** Request date of the event */
  date: Scalars['Date']['output'];
  /** Request datetime of the event */
  datetime: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Browser of the device used in playback */
  deviceBrowser: Scalars['string']['output'];
  /** OS of the device used in playback */
  deviceOs: Scalars['string']['output'];
  /** Device type used in playback */
  deviceType: Scalars['string']['output'];
  /** unique id for a video */
  uid: Scalars['string']['output'];
};

export type AccountVideoPlaybackEventsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountVideoPlaybackEventsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountVideoPlaybackEventsAdaptiveGroupsFilter_InputObject>>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  deviceBrowser?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_like?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  deviceOs?: InputMaybe<Scalars['string']['input']>;
  deviceOs_geq?: InputMaybe<Scalars['string']['input']>;
  deviceOs_gt?: InputMaybe<Scalars['string']['input']>;
  deviceOs_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceOs_leq?: InputMaybe<Scalars['string']['input']>;
  deviceOs_like?: InputMaybe<Scalars['string']['input']>;
  deviceOs_lt?: InputMaybe<Scalars['string']['input']>;
  deviceOs_neq?: InputMaybe<Scalars['string']['input']>;
  deviceOs_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceOs_notlike?: InputMaybe<Scalars['string']['input']>;
  deviceType?: InputMaybe<Scalars['string']['input']>;
  deviceType_geq?: InputMaybe<Scalars['string']['input']>;
  deviceType_gt?: InputMaybe<Scalars['string']['input']>;
  deviceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_leq?: InputMaybe<Scalars['string']['input']>;
  deviceType_like?: InputMaybe<Scalars['string']['input']>;
  deviceType_lt?: InputMaybe<Scalars['string']['input']>;
  deviceType_neq?: InputMaybe<Scalars['string']['input']>;
  deviceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_notlike?: InputMaybe<Scalars['string']['input']>;
  uid?: InputMaybe<Scalars['string']['input']>;
  uid_geq?: InputMaybe<Scalars['string']['input']>;
  uid_gt?: InputMaybe<Scalars['string']['input']>;
  uid_in?: InputMaybe<Array<Scalars['string']['input']>>;
  uid_leq?: InputMaybe<Scalars['string']['input']>;
  uid_like?: InputMaybe<Scalars['string']['input']>;
  uid_lt?: InputMaybe<Scalars['string']['input']>;
  uid_neq?: InputMaybe<Scalars['string']['input']>;
  uid_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  uid_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountVideoPlaybackEventsAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** deviceBrowser ascending */
  DeviceBrowserAsc = 'deviceBrowser_ASC',
  /** deviceBrowser descending */
  DeviceBrowserDesc = 'deviceBrowser_DESC',
  /** deviceOs ascending */
  DeviceOsAsc = 'deviceOs_ASC',
  /** deviceOs descending */
  DeviceOsDesc = 'deviceOs_DESC',
  /** deviceType ascending */
  DeviceTypeAsc = 'deviceType_ASC',
  /** deviceType descending */
  DeviceTypeDesc = 'deviceType_DESC',
  /** sum(timeViewedMinutes) ascending */
  SumTimeViewedMinutesAsc = 'sum_timeViewedMinutes_ASC',
  /** sum(timeViewedMinutes) descending */
  SumTimeViewedMinutesDesc = 'sum_timeViewedMinutes_DESC',
  /** uid ascending */
  UidAsc = 'uid_ASC',
  /** uid descending */
  UidDesc = 'uid_DESC'
}

export type AccountVideoPlaybackEventsAdaptiveGroupsSum = {
  __typename?: 'AccountVideoPlaybackEventsAdaptiveGroupsSum';
  /** Total time viewed in minutes */
  timeViewedMinutes: Scalars['uint64']['output'];
};

/** Beta. Aggregated video streaming quality change event metrics with adaptive sampling */
export type AccountVideoQualityEventsAdaptiveGroups = {
  __typename?: 'AccountVideoQualityEventsAdaptiveGroups';
  avg?: Maybe<AccountVideoQualityEventsAdaptiveGroupsAvg>;
  /** Total number of quality change events */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountVideoQualityEventsAdaptiveGroupsDimensions>;
};

export type AccountVideoQualityEventsAdaptiveGroupsAvg = {
  __typename?: 'AccountVideoQualityEventsAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type AccountVideoQualityEventsAdaptiveGroupsDimensions = {
  __typename?: 'AccountVideoQualityEventsAdaptiveGroupsDimensions';
  /** ISO 3166 alpha2 country code from the client */
  clientCountryName: Scalars['string']['output'];
  /** Request date of the event */
  date: Scalars['Date']['output'];
  /** Request datetime of the event */
  datetime: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime of the event, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Browser of the device used in playback */
  deviceBrowser: Scalars['string']['output'];
  /** OS of the device used in playback */
  deviceOs: Scalars['string']['output'];
  /** Device type used in playback */
  deviceType: Scalars['string']['output'];
  /** Video playback vertical resolution */
  qualityResolution: Scalars['uint64']['output'];
  /** unique id for a video */
  uid: Scalars['string']['output'];
};

export type AccountVideoQualityEventsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountVideoQualityEventsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountVideoQualityEventsAdaptiveGroupsFilter_InputObject>>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  deviceBrowser?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_like?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  deviceBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  deviceOs?: InputMaybe<Scalars['string']['input']>;
  deviceOs_geq?: InputMaybe<Scalars['string']['input']>;
  deviceOs_gt?: InputMaybe<Scalars['string']['input']>;
  deviceOs_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceOs_leq?: InputMaybe<Scalars['string']['input']>;
  deviceOs_like?: InputMaybe<Scalars['string']['input']>;
  deviceOs_lt?: InputMaybe<Scalars['string']['input']>;
  deviceOs_neq?: InputMaybe<Scalars['string']['input']>;
  deviceOs_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceOs_notlike?: InputMaybe<Scalars['string']['input']>;
  deviceType?: InputMaybe<Scalars['string']['input']>;
  deviceType_geq?: InputMaybe<Scalars['string']['input']>;
  deviceType_gt?: InputMaybe<Scalars['string']['input']>;
  deviceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_leq?: InputMaybe<Scalars['string']['input']>;
  deviceType_like?: InputMaybe<Scalars['string']['input']>;
  deviceType_lt?: InputMaybe<Scalars['string']['input']>;
  deviceType_neq?: InputMaybe<Scalars['string']['input']>;
  deviceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceType_notlike?: InputMaybe<Scalars['string']['input']>;
  qualityResolution?: InputMaybe<Scalars['uint64']['input']>;
  qualityResolution_geq?: InputMaybe<Scalars['uint64']['input']>;
  qualityResolution_gt?: InputMaybe<Scalars['uint64']['input']>;
  qualityResolution_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  qualityResolution_leq?: InputMaybe<Scalars['uint64']['input']>;
  qualityResolution_lt?: InputMaybe<Scalars['uint64']['input']>;
  qualityResolution_neq?: InputMaybe<Scalars['uint64']['input']>;
  qualityResolution_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  uid?: InputMaybe<Scalars['string']['input']>;
  uid_geq?: InputMaybe<Scalars['string']['input']>;
  uid_gt?: InputMaybe<Scalars['string']['input']>;
  uid_in?: InputMaybe<Array<Scalars['string']['input']>>;
  uid_leq?: InputMaybe<Scalars['string']['input']>;
  uid_like?: InputMaybe<Scalars['string']['input']>;
  uid_lt?: InputMaybe<Scalars['string']['input']>;
  uid_neq?: InputMaybe<Scalars['string']['input']>;
  uid_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  uid_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountVideoQualityEventsAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** deviceBrowser ascending */
  DeviceBrowserAsc = 'deviceBrowser_ASC',
  /** deviceBrowser descending */
  DeviceBrowserDesc = 'deviceBrowser_DESC',
  /** deviceOs ascending */
  DeviceOsAsc = 'deviceOs_ASC',
  /** deviceOs descending */
  DeviceOsDesc = 'deviceOs_DESC',
  /** deviceType ascending */
  DeviceTypeAsc = 'deviceType_ASC',
  /** deviceType descending */
  DeviceTypeDesc = 'deviceType_DESC',
  /** eventType ascending */
  EventTypeAsc = 'eventType_ASC',
  /** eventType descending */
  EventTypeDesc = 'eventType_DESC',
  /** qualityResolution ascending */
  QualityResolutionAsc = 'qualityResolution_ASC',
  /** qualityResolution descending */
  QualityResolutionDesc = 'qualityResolution_DESC',
  /** uid ascending */
  UidAsc = 'uid_ASC',
  /** uid descending */
  UidDesc = 'uid_DESC'
}

/** Beta. Warp device health events with adaptive sampling */
export type AccountWarpDeviceAdaptiveGroups = {
  __typename?: 'AccountWarpDeviceAdaptiveGroups';
  /** Number of device health events, which usually occur at 2m intervals per device */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountWarpDeviceAdaptiveGroupsDimensions>;
  uniq?: Maybe<AccountWarpDeviceAdaptiveGroupsUniq>;
};

export type AccountWarpDeviceAdaptiveGroupsDimensions = {
  __typename?: 'AccountWarpDeviceAdaptiveGroupsDimensions';
  /** Device's OS */
  clientPlatform: Scalars['string']['output'];
  /** Device's Warp version */
  clientVersion: Scalars['string']['output'];
  /** Device's connected colo */
  colo: Scalars['string']['output'];
  /** The date of the device log */
  date: Scalars['Date']['output'];
  /** The date and time of the device log */
  datetime: Scalars['Time']['output'];
  /** The date and time of the device log truncated to every five minutes */
  datetimeFiveMinute: Scalars['Time']['output'];
  /** The date and time of the device log truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time of the device log truncated to every ten minutes */
  datetimeTenMinute: Scalars['Time']['output'];
  /** Device ID */
  deviceId: Scalars['string']['output'];
  /** Device's Warp mode */
  mode: Scalars['string']['output'];
  /** Device connection status */
  status: Scalars['string']['output'];
};

export type AccountWarpDeviceAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountWarpDeviceAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountWarpDeviceAdaptiveGroupsFilter_InputObject>>;
  clientPlatform?: InputMaybe<Scalars['string']['input']>;
  clientPlatform_geq?: InputMaybe<Scalars['string']['input']>;
  clientPlatform_gt?: InputMaybe<Scalars['string']['input']>;
  clientPlatform_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientPlatform_leq?: InputMaybe<Scalars['string']['input']>;
  clientPlatform_like?: InputMaybe<Scalars['string']['input']>;
  clientPlatform_lt?: InputMaybe<Scalars['string']['input']>;
  clientPlatform_neq?: InputMaybe<Scalars['string']['input']>;
  clientPlatform_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientPlatform_notlike?: InputMaybe<Scalars['string']['input']>;
  clientVersion?: InputMaybe<Scalars['string']['input']>;
  clientVersion_geq?: InputMaybe<Scalars['string']['input']>;
  clientVersion_gt?: InputMaybe<Scalars['string']['input']>;
  clientVersion_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientVersion_leq?: InputMaybe<Scalars['string']['input']>;
  clientVersion_like?: InputMaybe<Scalars['string']['input']>;
  clientVersion_lt?: InputMaybe<Scalars['string']['input']>;
  clientVersion_neq?: InputMaybe<Scalars['string']['input']>;
  clientVersion_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientVersion_notlike?: InputMaybe<Scalars['string']['input']>;
  colo?: InputMaybe<Scalars['string']['input']>;
  colo_geq?: InputMaybe<Scalars['string']['input']>;
  colo_gt?: InputMaybe<Scalars['string']['input']>;
  colo_in?: InputMaybe<Array<Scalars['string']['input']>>;
  colo_leq?: InputMaybe<Scalars['string']['input']>;
  colo_like?: InputMaybe<Scalars['string']['input']>;
  colo_lt?: InputMaybe<Scalars['string']['input']>;
  colo_neq?: InputMaybe<Scalars['string']['input']>;
  colo_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  colo_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeTenMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeTenMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  deviceId?: InputMaybe<Scalars['string']['input']>;
  deviceId_geq?: InputMaybe<Scalars['string']['input']>;
  deviceId_gt?: InputMaybe<Scalars['string']['input']>;
  deviceId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceId_leq?: InputMaybe<Scalars['string']['input']>;
  deviceId_like?: InputMaybe<Scalars['string']['input']>;
  deviceId_lt?: InputMaybe<Scalars['string']['input']>;
  deviceId_neq?: InputMaybe<Scalars['string']['input']>;
  deviceId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  deviceId_notlike?: InputMaybe<Scalars['string']['input']>;
  mode?: InputMaybe<Scalars['string']['input']>;
  mode_geq?: InputMaybe<Scalars['string']['input']>;
  mode_gt?: InputMaybe<Scalars['string']['input']>;
  mode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  mode_leq?: InputMaybe<Scalars['string']['input']>;
  mode_like?: InputMaybe<Scalars['string']['input']>;
  mode_lt?: InputMaybe<Scalars['string']['input']>;
  mode_neq?: InputMaybe<Scalars['string']['input']>;
  mode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  mode_notlike?: InputMaybe<Scalars['string']['input']>;
  status?: InputMaybe<Scalars['string']['input']>;
  status_geq?: InputMaybe<Scalars['string']['input']>;
  status_gt?: InputMaybe<Scalars['string']['input']>;
  status_in?: InputMaybe<Array<Scalars['string']['input']>>;
  status_leq?: InputMaybe<Scalars['string']['input']>;
  status_like?: InputMaybe<Scalars['string']['input']>;
  status_lt?: InputMaybe<Scalars['string']['input']>;
  status_neq?: InputMaybe<Scalars['string']['input']>;
  status_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  status_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountWarpDeviceAdaptiveGroupsOrderBy {
  /** clientPlatform ascending */
  ClientPlatformAsc = 'clientPlatform_ASC',
  /** clientPlatform descending */
  ClientPlatformDesc = 'clientPlatform_DESC',
  /** clientVersion ascending */
  ClientVersionAsc = 'clientVersion_ASC',
  /** clientVersion descending */
  ClientVersionDesc = 'clientVersion_DESC',
  /** colo ascending */
  ColoAsc = 'colo_ASC',
  /** colo descending */
  ColoDesc = 'colo_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFiveMinute ascending */
  DatetimeFiveMinuteAsc = 'datetimeFiveMinute_ASC',
  /** datetimeFiveMinute descending */
  DatetimeFiveMinuteDesc = 'datetimeFiveMinute_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeTenMinute ascending */
  DatetimeTenMinuteAsc = 'datetimeTenMinute_ASC',
  /** datetimeTenMinute descending */
  DatetimeTenMinuteDesc = 'datetimeTenMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** deviceId ascending */
  DeviceIdAsc = 'deviceId_ASC',
  /** deviceId descending */
  DeviceIdDesc = 'deviceId_DESC',
  /** mode ascending */
  ModeAsc = 'mode_ASC',
  /** mode descending */
  ModeDesc = 'mode_DESC',
  /** status ascending */
  StatusAsc = 'status_ASC',
  /** status descending */
  StatusDesc = 'status_DESC',
  /** uniq(deviceIds) ascending */
  UniqDeviceIdsAsc = 'uniq_deviceIds_ASC',
  /** uniq(deviceIds) descending */
  UniqDeviceIdsDesc = 'uniq_deviceIds_DESC'
}

export type AccountWarpDeviceAdaptiveGroupsUniq = {
  __typename?: 'AccountWarpDeviceAdaptiveGroupsUniq';
  /** Approximate count of unique deviceIds */
  deviceIds: Scalars['uint64']['output'];
};

/** Worker placement metrics */
export type AccountWorkerPlacementAdaptiveGroups = {
  __typename?: 'AccountWorkerPlacementAdaptiveGroups';
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountWorkerPlacementAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountWorkerPlacementAdaptiveGroupsSum>;
};

export type AccountWorkerPlacementAdaptiveGroupsDimensions = {
  __typename?: 'AccountWorkerPlacementAdaptiveGroupsDimensions';
  /** Request timestamp, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Request timestamp */
  datetime: Scalars['Time']['output'];
  /** Request timestamp, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request timestamp, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Response status of worker */
  httpStatus: Scalars['uint16']['output'];
  /** 1 if the request was sampled to bypass Smart Placement, 0 otherwise */
  isSample: Scalars['uint8']['output'];
  /** 1 if the request was processed using Smart Placement, 0 if it was processed in default mode */
  placementUsed: Scalars['uint8']['output'];
  /** Bucket of request duration rounded down to nearest 10*2^n */
  requestDurationBucketMin: Scalars['uint32']['output'];
  /** Bucket of request duration rounded down to nearest 100ms */
  requestDurationBucketMin100ms: Scalars['uint32']['output'];
  /** The script name */
  scriptName: Scalars['string']['output'];
  /** The unique tag of the script */
  scriptTag: Scalars['string']['output'];
};

export type AccountWorkerPlacementAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountWorkerPlacementAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountWorkerPlacementAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  httpStatus?: InputMaybe<Scalars['uint16']['input']>;
  httpStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  httpStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  httpStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  httpStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  httpStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  httpStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  isSample?: InputMaybe<Scalars['uint8']['input']>;
  isSample_geq?: InputMaybe<Scalars['uint8']['input']>;
  isSample_gt?: InputMaybe<Scalars['uint8']['input']>;
  isSample_in?: InputMaybe<Scalars['bytes']['input']>;
  isSample_leq?: InputMaybe<Scalars['uint8']['input']>;
  isSample_lt?: InputMaybe<Scalars['uint8']['input']>;
  isSample_neq?: InputMaybe<Scalars['uint8']['input']>;
  isSample_notin?: InputMaybe<Scalars['bytes']['input']>;
  placementUsed?: InputMaybe<Scalars['uint8']['input']>;
  placementUsed_geq?: InputMaybe<Scalars['uint8']['input']>;
  placementUsed_gt?: InputMaybe<Scalars['uint8']['input']>;
  placementUsed_in?: InputMaybe<Scalars['bytes']['input']>;
  placementUsed_leq?: InputMaybe<Scalars['uint8']['input']>;
  placementUsed_lt?: InputMaybe<Scalars['uint8']['input']>;
  placementUsed_neq?: InputMaybe<Scalars['uint8']['input']>;
  placementUsed_notin?: InputMaybe<Scalars['bytes']['input']>;
  requestDurationBucketMin?: InputMaybe<Scalars['uint32']['input']>;
  requestDurationBucketMin100ms?: InputMaybe<Scalars['uint32']['input']>;
  requestDurationBucketMin100ms_geq?: InputMaybe<Scalars['uint32']['input']>;
  requestDurationBucketMin100ms_gt?: InputMaybe<Scalars['uint32']['input']>;
  requestDurationBucketMin100ms_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  requestDurationBucketMin100ms_leq?: InputMaybe<Scalars['uint32']['input']>;
  requestDurationBucketMin100ms_lt?: InputMaybe<Scalars['uint32']['input']>;
  requestDurationBucketMin100ms_neq?: InputMaybe<Scalars['uint32']['input']>;
  requestDurationBucketMin100ms_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  requestDurationBucketMin_geq?: InputMaybe<Scalars['uint32']['input']>;
  requestDurationBucketMin_gt?: InputMaybe<Scalars['uint32']['input']>;
  requestDurationBucketMin_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  requestDurationBucketMin_leq?: InputMaybe<Scalars['uint32']['input']>;
  requestDurationBucketMin_lt?: InputMaybe<Scalars['uint32']['input']>;
  requestDurationBucketMin_neq?: InputMaybe<Scalars['uint32']['input']>;
  requestDurationBucketMin_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  scriptName?: InputMaybe<Scalars['string']['input']>;
  scriptName_geq?: InputMaybe<Scalars['string']['input']>;
  scriptName_gt?: InputMaybe<Scalars['string']['input']>;
  scriptName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_leq?: InputMaybe<Scalars['string']['input']>;
  scriptName_like?: InputMaybe<Scalars['string']['input']>;
  scriptName_lt?: InputMaybe<Scalars['string']['input']>;
  scriptName_neq?: InputMaybe<Scalars['string']['input']>;
  scriptName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_notlike?: InputMaybe<Scalars['string']['input']>;
  scriptTag?: InputMaybe<Scalars['string']['input']>;
  scriptTag_geq?: InputMaybe<Scalars['string']['input']>;
  scriptTag_gt?: InputMaybe<Scalars['string']['input']>;
  scriptTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptTag_leq?: InputMaybe<Scalars['string']['input']>;
  scriptTag_like?: InputMaybe<Scalars['string']['input']>;
  scriptTag_lt?: InputMaybe<Scalars['string']['input']>;
  scriptTag_neq?: InputMaybe<Scalars['string']['input']>;
  scriptTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptTag_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountWorkerPlacementAdaptiveGroupsOrderBy {
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** httpStatus ascending */
  HttpStatusAsc = 'httpStatus_ASC',
  /** httpStatus descending */
  HttpStatusDesc = 'httpStatus_DESC',
  /** isSample ascending */
  IsSampleAsc = 'isSample_ASC',
  /** isSample descending */
  IsSampleDesc = 'isSample_DESC',
  /** placementUsed ascending */
  PlacementUsedAsc = 'placementUsed_ASC',
  /** placementUsed descending */
  PlacementUsedDesc = 'placementUsed_DESC',
  /** requestDurationBucketMin100ms ascending */
  RequestDurationBucketMin100msAsc = 'requestDurationBucketMin100ms_ASC',
  /** requestDurationBucketMin100ms descending */
  RequestDurationBucketMin100msDesc = 'requestDurationBucketMin100ms_DESC',
  /** requestDurationBucketMin ascending */
  RequestDurationBucketMinAsc = 'requestDurationBucketMin_ASC',
  /** requestDurationBucketMin descending */
  RequestDurationBucketMinDesc = 'requestDurationBucketMin_DESC',
  /** scriptName ascending */
  ScriptNameAsc = 'scriptName_ASC',
  /** scriptName descending */
  ScriptNameDesc = 'scriptName_DESC',
  /** scriptTag ascending */
  ScriptTagAsc = 'scriptTag_ASC',
  /** scriptTag descending */
  ScriptTagDesc = 'scriptTag_DESC',
  /** sum(requestDuration) ascending */
  SumRequestDurationAsc = 'sum_requestDuration_ASC',
  /** sum(requestDuration) descending */
  SumRequestDurationDesc = 'sum_requestDuration_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC'
}

export type AccountWorkerPlacementAdaptiveGroupsSum = {
  __typename?: 'AccountWorkerPlacementAdaptiveGroupsSum';
  /** Sum of duration ms of requests measured at the data centers that receive the requests */
  requestDuration: Scalars['uint64']['output'];
  /** Total number of requests */
  requests: Scalars['uint64']['output'];
};

/** Beta. Custom Events with adaptive sampling */
export type AccountWorkersAnalyticsEngineAdaptiveGroups = {
  __typename?: 'AccountWorkersAnalyticsEngineAdaptiveGroups';
  /** The number of values for a metric per dimension */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountWorkersAnalyticsEngineAdaptiveGroupsDimensions>;
};

export type AccountWorkersAnalyticsEngineAdaptiveGroupsDimensions = {
  __typename?: 'AccountWorkersAnalyticsEngineAdaptiveGroupsDimensions';
  /** The dataset name */
  dataset: Scalars['string']['output'];
  /** The date the event occurred */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred truncated to the start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred truncated to the start of a minute */
  datetimeMinute: Scalars['Time']['output'];
};

export type AccountWorkersAnalyticsEngineAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountWorkersAnalyticsEngineAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountWorkersAnalyticsEngineAdaptiveGroupsFilter_InputObject>>;
  dataset?: InputMaybe<Scalars['string']['input']>;
  dataset_geq?: InputMaybe<Scalars['string']['input']>;
  dataset_gt?: InputMaybe<Scalars['string']['input']>;
  dataset_in?: InputMaybe<Array<Scalars['string']['input']>>;
  dataset_leq?: InputMaybe<Scalars['string']['input']>;
  dataset_like?: InputMaybe<Scalars['string']['input']>;
  dataset_lt?: InputMaybe<Scalars['string']['input']>;
  dataset_neq?: InputMaybe<Scalars['string']['input']>;
  dataset_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  dataset_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export enum AccountWorkersAnalyticsEngineAdaptiveGroupsOrderBy {
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** dataset ascending */
  DatasetAsc = 'dataset_ASC',
  /** dataset descending */
  DatasetDesc = 'dataset_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC'
}

/** Beta. Workers invocations with adaptive sampling */
export type AccountWorkersInvocationsAdaptive = {
  __typename?: 'AccountWorkersInvocationsAdaptive';
  /** The average value used for sample interval */
  avg?: Maybe<AccountWorkersInvocationsAdaptiveAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountWorkersInvocationsAdaptiveDimensions>;
  /** The max value for a metric */
  max?: Maybe<AccountWorkersInvocationsAdaptiveMax>;
  /** The min value for a metric */
  min?: Maybe<AccountWorkersInvocationsAdaptiveMin>;
  /** Quantiles of a metric per dimension */
  quantiles?: Maybe<AccountWorkersInvocationsAdaptiveQuantiles>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountWorkersInvocationsAdaptiveSum>;
};

export type AccountWorkersInvocationsAdaptiveAvg = {
  __typename?: 'AccountWorkersInvocationsAdaptiveAvg';
  sampleInterval: Scalars['float64']['output'];
};

export type AccountWorkersInvocationsAdaptiveDimensions = {
  __typename?: 'AccountWorkersInvocationsAdaptiveDimensions';
  /** Request datetime, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** Request datetime, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The name of the script's dispatch namespace */
  dispatchNamespaceName: Scalars['string']['output'];
  /** The name of the script environment */
  environmentName: Scalars['string']['output'];
  /** The name of the script */
  scriptName: Scalars['string']['output'];
  /** The unique tag of the script */
  scriptTag: Scalars['string']['output'];
  /** Status of the worker invocation */
  status: Scalars['string']['output'];
  /** Usage model of the worker invocation */
  usageModel: Scalars['string']['output'];
};

export type AccountWorkersInvocationsAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<AccountWorkersInvocationsAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountWorkersInvocationsAdaptiveFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  dispatchNamespaceName?: InputMaybe<Scalars['string']['input']>;
  dispatchNamespaceName_geq?: InputMaybe<Scalars['string']['input']>;
  dispatchNamespaceName_gt?: InputMaybe<Scalars['string']['input']>;
  dispatchNamespaceName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  dispatchNamespaceName_leq?: InputMaybe<Scalars['string']['input']>;
  dispatchNamespaceName_like?: InputMaybe<Scalars['string']['input']>;
  dispatchNamespaceName_lt?: InputMaybe<Scalars['string']['input']>;
  dispatchNamespaceName_neq?: InputMaybe<Scalars['string']['input']>;
  dispatchNamespaceName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  dispatchNamespaceName_notlike?: InputMaybe<Scalars['string']['input']>;
  environmentName?: InputMaybe<Scalars['string']['input']>;
  environmentName_geq?: InputMaybe<Scalars['string']['input']>;
  environmentName_gt?: InputMaybe<Scalars['string']['input']>;
  environmentName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  environmentName_leq?: InputMaybe<Scalars['string']['input']>;
  environmentName_like?: InputMaybe<Scalars['string']['input']>;
  environmentName_lt?: InputMaybe<Scalars['string']['input']>;
  environmentName_neq?: InputMaybe<Scalars['string']['input']>;
  environmentName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  environmentName_notlike?: InputMaybe<Scalars['string']['input']>;
  scriptName?: InputMaybe<Scalars['string']['input']>;
  scriptName_geq?: InputMaybe<Scalars['string']['input']>;
  scriptName_gt?: InputMaybe<Scalars['string']['input']>;
  scriptName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_leq?: InputMaybe<Scalars['string']['input']>;
  scriptName_like?: InputMaybe<Scalars['string']['input']>;
  scriptName_lt?: InputMaybe<Scalars['string']['input']>;
  scriptName_neq?: InputMaybe<Scalars['string']['input']>;
  scriptName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_notlike?: InputMaybe<Scalars['string']['input']>;
  scriptTag?: InputMaybe<Scalars['string']['input']>;
  scriptTag_geq?: InputMaybe<Scalars['string']['input']>;
  scriptTag_gt?: InputMaybe<Scalars['string']['input']>;
  scriptTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptTag_leq?: InputMaybe<Scalars['string']['input']>;
  scriptTag_like?: InputMaybe<Scalars['string']['input']>;
  scriptTag_lt?: InputMaybe<Scalars['string']['input']>;
  scriptTag_neq?: InputMaybe<Scalars['string']['input']>;
  scriptTag_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptTag_notlike?: InputMaybe<Scalars['string']['input']>;
  status?: InputMaybe<Scalars['string']['input']>;
  status_geq?: InputMaybe<Scalars['string']['input']>;
  status_gt?: InputMaybe<Scalars['string']['input']>;
  status_in?: InputMaybe<Array<Scalars['string']['input']>>;
  status_leq?: InputMaybe<Scalars['string']['input']>;
  status_like?: InputMaybe<Scalars['string']['input']>;
  status_lt?: InputMaybe<Scalars['string']['input']>;
  status_neq?: InputMaybe<Scalars['string']['input']>;
  status_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  status_notlike?: InputMaybe<Scalars['string']['input']>;
  usageModel?: InputMaybe<Scalars['string']['input']>;
  usageModel_geq?: InputMaybe<Scalars['string']['input']>;
  usageModel_gt?: InputMaybe<Scalars['string']['input']>;
  usageModel_in?: InputMaybe<Array<Scalars['string']['input']>>;
  usageModel_leq?: InputMaybe<Scalars['string']['input']>;
  usageModel_like?: InputMaybe<Scalars['string']['input']>;
  usageModel_lt?: InputMaybe<Scalars['string']['input']>;
  usageModel_neq?: InputMaybe<Scalars['string']['input']>;
  usageModel_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  usageModel_notlike?: InputMaybe<Scalars['string']['input']>;
};

export type AccountWorkersInvocationsAdaptiveMax = {
  __typename?: 'AccountWorkersInvocationsAdaptiveMax';
  /** Maximum CPU time for one request - microseconds */
  cpuTime: Scalars['float64']['output'];
  /** Maximum duration of one request - GB*s */
  duration: Scalars['float64']['output'];
  /** Maximum response body size for one request - bytes */
  responseBodySize: Scalars['float64']['output'];
  /** Maximum wall time for one request - microseconds */
  wallTime: Scalars['float64']['output'];
};

export type AccountWorkersInvocationsAdaptiveMin = {
  __typename?: 'AccountWorkersInvocationsAdaptiveMin';
  /** Minimum CPU time for one request - microseconds */
  cpuTime: Scalars['float64']['output'];
  /** Minimum duration of one request - GB*s */
  duration: Scalars['float64']['output'];
  /** Minimum response body size for one request - bytes */
  responseBodySize: Scalars['float64']['output'];
  /** Minimum wall time for one request - microseconds */
  wallTime: Scalars['float64']['output'];
};

export enum AccountWorkersInvocationsAdaptiveOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** constantScriptId ascending */
  ConstantScriptIdAsc = 'constantScriptId_ASC',
  /** constantScriptId descending */
  ConstantScriptIdDesc = 'constantScriptId_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** dispatchNamespaceName ascending */
  DispatchNamespaceNameAsc = 'dispatchNamespaceName_ASC',
  /** dispatchNamespaceName descending */
  DispatchNamespaceNameDesc = 'dispatchNamespaceName_DESC',
  /** environmentName ascending */
  EnvironmentNameAsc = 'environmentName_ASC',
  /** environmentName descending */
  EnvironmentNameDesc = 'environmentName_DESC',
  /** max(cpuTime) ascending */
  MaxCpuTimeAsc = 'max_cpuTime_ASC',
  /** max(cpuTime) descending */
  MaxCpuTimeDesc = 'max_cpuTime_DESC',
  /** max(duration) ascending */
  MaxDurationAsc = 'max_duration_ASC',
  /** max(duration) descending */
  MaxDurationDesc = 'max_duration_DESC',
  /** max(responseBodySize) ascending */
  MaxResponseBodySizeAsc = 'max_responseBodySize_ASC',
  /** max(responseBodySize) descending */
  MaxResponseBodySizeDesc = 'max_responseBodySize_DESC',
  /** max(wallTime) ascending */
  MaxWallTimeAsc = 'max_wallTime_ASC',
  /** max(wallTime) descending */
  MaxWallTimeDesc = 'max_wallTime_DESC',
  /** min(cpuTime) ascending */
  MinCpuTimeAsc = 'min_cpuTime_ASC',
  /** min(cpuTime) descending */
  MinCpuTimeDesc = 'min_cpuTime_DESC',
  /** min(duration) ascending */
  MinDurationAsc = 'min_duration_ASC',
  /** min(duration) descending */
  MinDurationDesc = 'min_duration_DESC',
  /** min(responseBodySize) ascending */
  MinResponseBodySizeAsc = 'min_responseBodySize_ASC',
  /** min(responseBodySize) descending */
  MinResponseBodySizeDesc = 'min_responseBodySize_DESC',
  /** min(wallTime) ascending */
  MinWallTimeAsc = 'min_wallTime_ASC',
  /** min(wallTime) descending */
  MinWallTimeDesc = 'min_wallTime_DESC',
  /** quantiles(cpuTimeP25) ascending */
  QuantilesCpuTimeP25Asc = 'quantiles_cpuTimeP25_ASC',
  /** quantiles(cpuTimeP25) descending */
  QuantilesCpuTimeP25Desc = 'quantiles_cpuTimeP25_DESC',
  /** quantiles(cpuTimeP50) ascending */
  QuantilesCpuTimeP50Asc = 'quantiles_cpuTimeP50_ASC',
  /** quantiles(cpuTimeP50) descending */
  QuantilesCpuTimeP50Desc = 'quantiles_cpuTimeP50_DESC',
  /** quantiles(cpuTimeP75) ascending */
  QuantilesCpuTimeP75Asc = 'quantiles_cpuTimeP75_ASC',
  /** quantiles(cpuTimeP75) descending */
  QuantilesCpuTimeP75Desc = 'quantiles_cpuTimeP75_DESC',
  /** quantiles(cpuTimeP90) ascending */
  QuantilesCpuTimeP90Asc = 'quantiles_cpuTimeP90_ASC',
  /** quantiles(cpuTimeP90) descending */
  QuantilesCpuTimeP90Desc = 'quantiles_cpuTimeP90_DESC',
  /** quantiles(cpuTimeP99) ascending */
  QuantilesCpuTimeP99Asc = 'quantiles_cpuTimeP99_ASC',
  /** quantiles(cpuTimeP99) descending */
  QuantilesCpuTimeP99Desc = 'quantiles_cpuTimeP99_DESC',
  /** quantiles(cpuTimeP999) ascending */
  QuantilesCpuTimeP999Asc = 'quantiles_cpuTimeP999_ASC',
  /** quantiles(cpuTimeP999) descending */
  QuantilesCpuTimeP999Desc = 'quantiles_cpuTimeP999_DESC',
  /** quantiles(durationP25) ascending */
  QuantilesDurationP25Asc = 'quantiles_durationP25_ASC',
  /** quantiles(durationP25) descending */
  QuantilesDurationP25Desc = 'quantiles_durationP25_DESC',
  /** quantiles(durationP50) ascending */
  QuantilesDurationP50Asc = 'quantiles_durationP50_ASC',
  /** quantiles(durationP50) descending */
  QuantilesDurationP50Desc = 'quantiles_durationP50_DESC',
  /** quantiles(durationP75) ascending */
  QuantilesDurationP75Asc = 'quantiles_durationP75_ASC',
  /** quantiles(durationP75) descending */
  QuantilesDurationP75Desc = 'quantiles_durationP75_DESC',
  /** quantiles(durationP90) ascending */
  QuantilesDurationP90Asc = 'quantiles_durationP90_ASC',
  /** quantiles(durationP90) descending */
  QuantilesDurationP90Desc = 'quantiles_durationP90_DESC',
  /** quantiles(durationP99) ascending */
  QuantilesDurationP99Asc = 'quantiles_durationP99_ASC',
  /** quantiles(durationP99) descending */
  QuantilesDurationP99Desc = 'quantiles_durationP99_DESC',
  /** quantiles(durationP999) ascending */
  QuantilesDurationP999Asc = 'quantiles_durationP999_ASC',
  /** quantiles(durationP999) descending */
  QuantilesDurationP999Desc = 'quantiles_durationP999_DESC',
  /** quantiles(responseBodySizeP25) ascending */
  QuantilesResponseBodySizeP25Asc = 'quantiles_responseBodySizeP25_ASC',
  /** quantiles(responseBodySizeP25) descending */
  QuantilesResponseBodySizeP25Desc = 'quantiles_responseBodySizeP25_DESC',
  /** quantiles(responseBodySizeP50) ascending */
  QuantilesResponseBodySizeP50Asc = 'quantiles_responseBodySizeP50_ASC',
  /** quantiles(responseBodySizeP50) descending */
  QuantilesResponseBodySizeP50Desc = 'quantiles_responseBodySizeP50_DESC',
  /** quantiles(responseBodySizeP75) ascending */
  QuantilesResponseBodySizeP75Asc = 'quantiles_responseBodySizeP75_ASC',
  /** quantiles(responseBodySizeP75) descending */
  QuantilesResponseBodySizeP75Desc = 'quantiles_responseBodySizeP75_DESC',
  /** quantiles(responseBodySizeP90) ascending */
  QuantilesResponseBodySizeP90Asc = 'quantiles_responseBodySizeP90_ASC',
  /** quantiles(responseBodySizeP90) descending */
  QuantilesResponseBodySizeP90Desc = 'quantiles_responseBodySizeP90_DESC',
  /** quantiles(responseBodySizeP99) ascending */
  QuantilesResponseBodySizeP99Asc = 'quantiles_responseBodySizeP99_ASC',
  /** quantiles(responseBodySizeP99) descending */
  QuantilesResponseBodySizeP99Desc = 'quantiles_responseBodySizeP99_DESC',
  /** quantiles(responseBodySizeP999) ascending */
  QuantilesResponseBodySizeP999Asc = 'quantiles_responseBodySizeP999_ASC',
  /** quantiles(responseBodySizeP999) descending */
  QuantilesResponseBodySizeP999Desc = 'quantiles_responseBodySizeP999_DESC',
  /** quantiles(wallTimeP25) ascending */
  QuantilesWallTimeP25Asc = 'quantiles_wallTimeP25_ASC',
  /** quantiles(wallTimeP25) descending */
  QuantilesWallTimeP25Desc = 'quantiles_wallTimeP25_DESC',
  /** quantiles(wallTimeP50) ascending */
  QuantilesWallTimeP50Asc = 'quantiles_wallTimeP50_ASC',
  /** quantiles(wallTimeP50) descending */
  QuantilesWallTimeP50Desc = 'quantiles_wallTimeP50_DESC',
  /** quantiles(wallTimeP75) ascending */
  QuantilesWallTimeP75Asc = 'quantiles_wallTimeP75_ASC',
  /** quantiles(wallTimeP75) descending */
  QuantilesWallTimeP75Desc = 'quantiles_wallTimeP75_DESC',
  /** quantiles(wallTimeP90) ascending */
  QuantilesWallTimeP90Asc = 'quantiles_wallTimeP90_ASC',
  /** quantiles(wallTimeP90) descending */
  QuantilesWallTimeP90Desc = 'quantiles_wallTimeP90_DESC',
  /** quantiles(wallTimeP99) ascending */
  QuantilesWallTimeP99Asc = 'quantiles_wallTimeP99_ASC',
  /** quantiles(wallTimeP99) descending */
  QuantilesWallTimeP99Desc = 'quantiles_wallTimeP99_DESC',
  /** quantiles(wallTimeP999) ascending */
  QuantilesWallTimeP999Asc = 'quantiles_wallTimeP999_ASC',
  /** quantiles(wallTimeP999) descending */
  QuantilesWallTimeP999Desc = 'quantiles_wallTimeP999_DESC',
  /** scriptName ascending */
  ScriptNameAsc = 'scriptName_ASC',
  /** scriptName descending */
  ScriptNameDesc = 'scriptName_DESC',
  /** scriptTag ascending */
  ScriptTagAsc = 'scriptTag_ASC',
  /** scriptTag descending */
  ScriptTagDesc = 'scriptTag_DESC',
  /** stableId ascending */
  StableIdAsc = 'stableId_ASC',
  /** stableId descending */
  StableIdDesc = 'stableId_DESC',
  /** status ascending */
  StatusAsc = 'status_ASC',
  /** status descending */
  StatusDesc = 'status_DESC',
  /** sum(duration) ascending */
  SumDurationAsc = 'sum_duration_ASC',
  /** sum(duration) descending */
  SumDurationDesc = 'sum_duration_DESC',
  /** sum(errors) ascending */
  SumErrorsAsc = 'sum_errors_ASC',
  /** sum(errors) descending */
  SumErrorsDesc = 'sum_errors_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(responseBodySize) ascending */
  SumResponseBodySizeAsc = 'sum_responseBodySize_ASC',
  /** sum(responseBodySize) descending */
  SumResponseBodySizeDesc = 'sum_responseBodySize_DESC',
  /** sum(subrequests) ascending */
  SumSubrequestsAsc = 'sum_subrequests_ASC',
  /** sum(subrequests) descending */
  SumSubrequestsDesc = 'sum_subrequests_DESC',
  /** sum(wallTime) ascending */
  SumWallTimeAsc = 'sum_wallTime_ASC',
  /** sum(wallTime) descending */
  SumWallTimeDesc = 'sum_wallTime_DESC',
  /** usageModel ascending */
  UsageModelAsc = 'usageModel_ASC',
  /** usageModel descending */
  UsageModelDesc = 'usageModel_DESC'
}

export type AccountWorkersInvocationsAdaptiveQuantiles = {
  __typename?: 'AccountWorkersInvocationsAdaptiveQuantiles';
  /** CPU time 25th percentile - microseconds */
  cpuTimeP25: Scalars['float32']['output'];
  /** CPU time 50th percentile - microseconds */
  cpuTimeP50: Scalars['float32']['output'];
  /** CPU time 75th percentile - microseconds */
  cpuTimeP75: Scalars['float32']['output'];
  /** CPU time 90th percentile - microseconds */
  cpuTimeP90: Scalars['float32']['output'];
  /** CPU time 99th percentile - microseconds */
  cpuTimeP99: Scalars['float32']['output'];
  /** CPU time 99.9th percentile - microseconds */
  cpuTimeP999: Scalars['float32']['output'];
  /** Duration 25th percentile - GB*s */
  durationP25: Scalars['float32']['output'];
  /** Duration 50th percentile - GB*s */
  durationP50: Scalars['float32']['output'];
  /** Duration 75th percentile - GB*s */
  durationP75: Scalars['float32']['output'];
  /** Duration 90th percentile - GB*s */
  durationP90: Scalars['float32']['output'];
  /** Duration 99th percentile - GB*s */
  durationP99: Scalars['float32']['output'];
  /** Duration 99.9th percentile - GB*s */
  durationP999: Scalars['float32']['output'];
  /** Response body size 25th percentile - bytes */
  responseBodySizeP25: Scalars['float32']['output'];
  /** Response body size 50th percentile - bytes */
  responseBodySizeP50: Scalars['float32']['output'];
  /** Response body size 75th percentile - bytes */
  responseBodySizeP75: Scalars['float32']['output'];
  /** Response body size 90th percentile - bytes */
  responseBodySizeP90: Scalars['float32']['output'];
  /** Response body size 99th percentile - bytes */
  responseBodySizeP99: Scalars['float32']['output'];
  /** Response body size 99.9th percentile - bytes */
  responseBodySizeP999: Scalars['float32']['output'];
  /** Wall time 25th percentile - microseconds */
  wallTimeP25: Scalars['float32']['output'];
  /** Wall time 50th percentile - microseconds */
  wallTimeP50: Scalars['float32']['output'];
  /** Wall time 75th percentile - microseconds */
  wallTimeP75: Scalars['float32']['output'];
  /** Wall time 90th percentile - microseconds */
  wallTimeP90: Scalars['float32']['output'];
  /** Wall time 99th percentile - microseconds */
  wallTimeP99: Scalars['float32']['output'];
  /** Wall time 99.9th percentile - microseconds */
  wallTimeP999: Scalars['float32']['output'];
};

export type AccountWorkersInvocationsAdaptiveSum = {
  __typename?: 'AccountWorkersInvocationsAdaptiveSum';
  /** Sum of Duration - GB*s */
  duration: Scalars['float64']['output'];
  /** Sum of Errors */
  errors: Scalars['uint64']['output'];
  /** Sum of Requests */
  requests: Scalars['uint64']['output'];
  /** Sum of Response Body Sizes */
  responseBodySize: Scalars['uint64']['output'];
  /** Sum of Subrequests */
  subrequests: Scalars['uint64']['output'];
  /** Sum of Wall Time */
  wallTime: Scalars['uint64']['output'];
};

/** Workers scheduled invocations */
export type AccountWorkersInvocationsScheduled = {
  __typename?: 'AccountWorkersInvocationsScheduled';
  /** CPU time - microseconds */
  cpuTimeUs: Scalars['uint32']['output'];
  /** The cron string of the schedule */
  cron: Scalars['string']['output'];
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** The name of the script environment */
  environmentName: Scalars['string']['output'];
  /** Scheduled datetime */
  scheduledDatetime: Scalars['Time']['output'];
  /** The name of the script */
  scriptName: Scalars['string']['output'];
  /** Status of the worker invocation */
  status: Scalars['string']['output'];
};

export type AccountWorkersInvocationsScheduledFilter_InputObject = {
  AND?: InputMaybe<Array<AccountWorkersInvocationsScheduledFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountWorkersInvocationsScheduledFilter_InputObject>>;
  cpuTimeUs?: InputMaybe<Scalars['uint32']['input']>;
  cpuTimeUs_geq?: InputMaybe<Scalars['uint32']['input']>;
  cpuTimeUs_gt?: InputMaybe<Scalars['uint32']['input']>;
  cpuTimeUs_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  cpuTimeUs_leq?: InputMaybe<Scalars['uint32']['input']>;
  cpuTimeUs_lt?: InputMaybe<Scalars['uint32']['input']>;
  cpuTimeUs_neq?: InputMaybe<Scalars['uint32']['input']>;
  cpuTimeUs_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  cron?: InputMaybe<Scalars['string']['input']>;
  cron_geq?: InputMaybe<Scalars['string']['input']>;
  cron_gt?: InputMaybe<Scalars['string']['input']>;
  cron_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cron_leq?: InputMaybe<Scalars['string']['input']>;
  cron_like?: InputMaybe<Scalars['string']['input']>;
  cron_lt?: InputMaybe<Scalars['string']['input']>;
  cron_neq?: InputMaybe<Scalars['string']['input']>;
  cron_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cron_notlike?: InputMaybe<Scalars['string']['input']>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  environmentName?: InputMaybe<Scalars['string']['input']>;
  environmentName_geq?: InputMaybe<Scalars['string']['input']>;
  environmentName_gt?: InputMaybe<Scalars['string']['input']>;
  environmentName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  environmentName_leq?: InputMaybe<Scalars['string']['input']>;
  environmentName_like?: InputMaybe<Scalars['string']['input']>;
  environmentName_lt?: InputMaybe<Scalars['string']['input']>;
  environmentName_neq?: InputMaybe<Scalars['string']['input']>;
  environmentName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  environmentName_notlike?: InputMaybe<Scalars['string']['input']>;
  scheduledDatetime?: InputMaybe<Scalars['Time']['input']>;
  scheduledDatetime_geq?: InputMaybe<Scalars['Time']['input']>;
  scheduledDatetime_gt?: InputMaybe<Scalars['Time']['input']>;
  scheduledDatetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  scheduledDatetime_leq?: InputMaybe<Scalars['Time']['input']>;
  scheduledDatetime_lt?: InputMaybe<Scalars['Time']['input']>;
  scheduledDatetime_neq?: InputMaybe<Scalars['Time']['input']>;
  scheduledDatetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  scriptName?: InputMaybe<Scalars['string']['input']>;
  scriptName_geq?: InputMaybe<Scalars['string']['input']>;
  scriptName_gt?: InputMaybe<Scalars['string']['input']>;
  scriptName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_leq?: InputMaybe<Scalars['string']['input']>;
  scriptName_like?: InputMaybe<Scalars['string']['input']>;
  scriptName_lt?: InputMaybe<Scalars['string']['input']>;
  scriptName_neq?: InputMaybe<Scalars['string']['input']>;
  scriptName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_notlike?: InputMaybe<Scalars['string']['input']>;
  status?: InputMaybe<Scalars['string']['input']>;
  status_geq?: InputMaybe<Scalars['string']['input']>;
  status_gt?: InputMaybe<Scalars['string']['input']>;
  status_in?: InputMaybe<Array<Scalars['string']['input']>>;
  status_leq?: InputMaybe<Scalars['string']['input']>;
  status_like?: InputMaybe<Scalars['string']['input']>;
  status_lt?: InputMaybe<Scalars['string']['input']>;
  status_neq?: InputMaybe<Scalars['string']['input']>;
  status_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  status_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountWorkersInvocationsScheduledOrderBy {
  /** cpuTimeUs ascending */
  CpuTimeUsAsc = 'cpuTimeUs_ASC',
  /** cpuTimeUs descending */
  CpuTimeUsDesc = 'cpuTimeUs_DESC',
  /** cron ascending */
  CronAsc = 'cron_ASC',
  /** cron descending */
  CronDesc = 'cron_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** environmentName ascending */
  EnvironmentNameAsc = 'environmentName_ASC',
  /** environmentName descending */
  EnvironmentNameDesc = 'environmentName_DESC',
  /** scheduledDatetime ascending */
  ScheduledDatetimeAsc = 'scheduledDatetime_ASC',
  /** scheduledDatetime descending */
  ScheduledDatetimeDesc = 'scheduledDatetime_DESC',
  /** scriptName ascending */
  ScriptNameAsc = 'scriptName_ASC',
  /** scriptName descending */
  ScriptNameDesc = 'scriptName_DESC',
  /** status ascending */
  StatusAsc = 'status_ASC',
  /** status descending */
  StatusDesc = 'status_DESC'
}

/** Beta. Workers account overview invocation data with adaptive sampling */
export type AccountWorkersOverviewDataAdaptiveGroups = {
  __typename?: 'AccountWorkersOverviewDataAdaptiveGroups';
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountWorkersOverviewDataAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountWorkersOverviewDataAdaptiveGroupsSum>;
};

export type AccountWorkersOverviewDataAdaptiveGroupsDimensions = {
  __typename?: 'AccountWorkersOverviewDataAdaptiveGroupsDimensions';
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** Usage model of the worker invocation */
  usageModel: Scalars['uint8']['output'];
};

export type AccountWorkersOverviewDataAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountWorkersOverviewDataAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountWorkersOverviewDataAdaptiveGroupsFilter_InputObject>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  usageModel?: InputMaybe<Scalars['uint8']['input']>;
  usageModel_geq?: InputMaybe<Scalars['uint8']['input']>;
  usageModel_gt?: InputMaybe<Scalars['uint8']['input']>;
  usageModel_in?: InputMaybe<Scalars['bytes']['input']>;
  usageModel_leq?: InputMaybe<Scalars['uint8']['input']>;
  usageModel_lt?: InputMaybe<Scalars['uint8']['input']>;
  usageModel_neq?: InputMaybe<Scalars['uint8']['input']>;
  usageModel_notin?: InputMaybe<Scalars['bytes']['input']>;
};

export enum AccountWorkersOverviewDataAdaptiveGroupsOrderBy {
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** sum(standardCpuTimeUs) ascending */
  SumStandardCpuTimeUsAsc = 'sum_standardCpuTimeUs_ASC',
  /** sum(standardCpuTimeUs) descending */
  SumStandardCpuTimeUsDesc = 'sum_standardCpuTimeUs_DESC',
  /** sum(unboundDurationUs) ascending */
  SumUnboundDurationUsAsc = 'sum_unboundDurationUs_ASC',
  /** sum(unboundDurationUs) descending */
  SumUnboundDurationUsDesc = 'sum_unboundDurationUs_DESC',
  /** usageModel ascending */
  UsageModelAsc = 'usageModel_ASC',
  /** usageModel descending */
  UsageModelDesc = 'usageModel_DESC'
}

export type AccountWorkersOverviewDataAdaptiveGroupsSum = {
  __typename?: 'AccountWorkersOverviewDataAdaptiveGroupsSum';
  /** Standard usage model cpu time in us */
  standardCpuTimeUs: Scalars['uint32']['output'];
  /** Unbound usage model duration in us */
  unboundDurationUs: Scalars['float64']['output'];
};

/** Beta. Workers account overview invocation count with adaptive sampling */
export type AccountWorkersOverviewRequestsAdaptiveGroups = {
  __typename?: 'AccountWorkersOverviewRequestsAdaptiveGroups';
  /** The number of values for a metric per dimension */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountWorkersOverviewRequestsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountWorkersOverviewRequestsAdaptiveGroupsSum>;
};

export type AccountWorkersOverviewRequestsAdaptiveGroupsDimensions = {
  __typename?: 'AccountWorkersOverviewRequestsAdaptiveGroupsDimensions';
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** Status of the worker invocation */
  status: Scalars['uint8']['output'];
  /** Usage model of the worker invocation */
  usageModel: Scalars['uint8']['output'];
};

export type AccountWorkersOverviewRequestsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountWorkersOverviewRequestsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountWorkersOverviewRequestsAdaptiveGroupsFilter_InputObject>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  status?: InputMaybe<Scalars['uint8']['input']>;
  status_geq?: InputMaybe<Scalars['uint8']['input']>;
  status_gt?: InputMaybe<Scalars['uint8']['input']>;
  status_in?: InputMaybe<Scalars['bytes']['input']>;
  status_leq?: InputMaybe<Scalars['uint8']['input']>;
  status_lt?: InputMaybe<Scalars['uint8']['input']>;
  status_neq?: InputMaybe<Scalars['uint8']['input']>;
  status_notin?: InputMaybe<Scalars['bytes']['input']>;
  usageModel?: InputMaybe<Scalars['uint8']['input']>;
  usageModel_geq?: InputMaybe<Scalars['uint8']['input']>;
  usageModel_gt?: InputMaybe<Scalars['uint8']['input']>;
  usageModel_in?: InputMaybe<Scalars['bytes']['input']>;
  usageModel_leq?: InputMaybe<Scalars['uint8']['input']>;
  usageModel_lt?: InputMaybe<Scalars['uint8']['input']>;
  usageModel_neq?: InputMaybe<Scalars['uint8']['input']>;
  usageModel_notin?: InputMaybe<Scalars['bytes']['input']>;
};

export enum AccountWorkersOverviewRequestsAdaptiveGroupsOrderBy {
  /** actorNamespaceId ascending */
  ActorNamespaceIdAsc = 'actorNamespaceId_ASC',
  /** actorNamespaceId descending */
  ActorNamespaceIdDesc = 'actorNamespaceId_DESC',
  /** constantScriptId ascending */
  ConstantScriptIdAsc = 'constantScriptId_ASC',
  /** constantScriptId descending */
  ConstantScriptIdDesc = 'constantScriptId_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** stableId ascending */
  StableIdAsc = 'stableId_ASC',
  /** stableId descending */
  StableIdDesc = 'stableId_DESC',
  /** status ascending */
  StatusAsc = 'status_ASC',
  /** status descending */
  StatusDesc = 'status_DESC',
  /** sum(cpuTimeUs) ascending */
  SumCpuTimeUsAsc = 'sum_cpuTimeUs_ASC',
  /** sum(cpuTimeUs) descending */
  SumCpuTimeUsDesc = 'sum_cpuTimeUs_DESC',
  /** usageModel ascending */
  UsageModelAsc = 'usageModel_ASC',
  /** usageModel descending */
  UsageModelDesc = 'usageModel_DESC'
}

export type AccountWorkersOverviewRequestsAdaptiveGroupsSum = {
  __typename?: 'AccountWorkersOverviewRequestsAdaptiveGroupsSum';
  /** Cpu time in us */
  cpuTimeUs: Scalars['float64']['output'];
};

/** Beta. Workers subrequests with adaptive sampling */
export type AccountWorkersSubrequestsAdaptiveGroups = {
  __typename?: 'AccountWorkersSubrequestsAdaptiveGroups';
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountWorkersSubrequestsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<AccountWorkersSubrequestsAdaptiveGroupsSum>;
};

export type AccountWorkersSubrequestsAdaptiveGroupsDimensions = {
  __typename?: 'AccountWorkersSubrequestsAdaptiveGroupsDimensions';
  /** Cache status */
  cacheStatus: Scalars['uint64']['output'];
  /** Request datetime, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** Request datetime, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The name of the script environment */
  environmentName: Scalars['string']['output'];
  /** The name of the script */
  scriptName: Scalars['string']['output'];
  /** Usage model of the worker invocation */
  usageModel: Scalars['string']['output'];
};

export type AccountWorkersSubrequestsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountWorkersSubrequestsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountWorkersSubrequestsAdaptiveGroupsFilter_InputObject>>;
  cacheStatus?: InputMaybe<Scalars['uint64']['input']>;
  cacheStatus_geq?: InputMaybe<Scalars['uint64']['input']>;
  cacheStatus_gt?: InputMaybe<Scalars['uint64']['input']>;
  cacheStatus_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  cacheStatus_leq?: InputMaybe<Scalars['uint64']['input']>;
  cacheStatus_lt?: InputMaybe<Scalars['uint64']['input']>;
  cacheStatus_neq?: InputMaybe<Scalars['uint64']['input']>;
  cacheStatus_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  environmentName?: InputMaybe<Scalars['string']['input']>;
  environmentName_geq?: InputMaybe<Scalars['string']['input']>;
  environmentName_gt?: InputMaybe<Scalars['string']['input']>;
  environmentName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  environmentName_leq?: InputMaybe<Scalars['string']['input']>;
  environmentName_like?: InputMaybe<Scalars['string']['input']>;
  environmentName_lt?: InputMaybe<Scalars['string']['input']>;
  environmentName_neq?: InputMaybe<Scalars['string']['input']>;
  environmentName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  environmentName_notlike?: InputMaybe<Scalars['string']['input']>;
  scriptName?: InputMaybe<Scalars['string']['input']>;
  scriptName_geq?: InputMaybe<Scalars['string']['input']>;
  scriptName_gt?: InputMaybe<Scalars['string']['input']>;
  scriptName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_leq?: InputMaybe<Scalars['string']['input']>;
  scriptName_like?: InputMaybe<Scalars['string']['input']>;
  scriptName_lt?: InputMaybe<Scalars['string']['input']>;
  scriptName_neq?: InputMaybe<Scalars['string']['input']>;
  scriptName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  scriptName_notlike?: InputMaybe<Scalars['string']['input']>;
  usageModel?: InputMaybe<Scalars['string']['input']>;
  usageModel_geq?: InputMaybe<Scalars['string']['input']>;
  usageModel_gt?: InputMaybe<Scalars['string']['input']>;
  usageModel_in?: InputMaybe<Array<Scalars['string']['input']>>;
  usageModel_leq?: InputMaybe<Scalars['string']['input']>;
  usageModel_like?: InputMaybe<Scalars['string']['input']>;
  usageModel_lt?: InputMaybe<Scalars['string']['input']>;
  usageModel_neq?: InputMaybe<Scalars['string']['input']>;
  usageModel_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  usageModel_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountWorkersSubrequestsAdaptiveGroupsOrderBy {
  /** cacheStatus ascending */
  CacheStatusAsc = 'cacheStatus_ASC',
  /** cacheStatus descending */
  CacheStatusDesc = 'cacheStatus_DESC',
  /** constantScriptId ascending */
  ConstantScriptIdAsc = 'constantScriptId_ASC',
  /** constantScriptId descending */
  ConstantScriptIdDesc = 'constantScriptId_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** environmentName ascending */
  EnvironmentNameAsc = 'environmentName_ASC',
  /** environmentName descending */
  EnvironmentNameDesc = 'environmentName_DESC',
  /** scriptName ascending */
  ScriptNameAsc = 'scriptName_ASC',
  /** scriptName descending */
  ScriptNameDesc = 'scriptName_DESC',
  /** stableId ascending */
  StableIdAsc = 'stableId_ASC',
  /** stableId descending */
  StableIdDesc = 'stableId_DESC',
  /** sum(requestBodySizeUncached) ascending */
  SumRequestBodySizeUncachedAsc = 'sum_requestBodySizeUncached_ASC',
  /** sum(requestBodySizeUncached) descending */
  SumRequestBodySizeUncachedDesc = 'sum_requestBodySizeUncached_DESC',
  /** sum(subrequests) ascending */
  SumSubrequestsAsc = 'sum_subrequests_ASC',
  /** sum(subrequests) descending */
  SumSubrequestsDesc = 'sum_subrequests_DESC',
  /** usageModel ascending */
  UsageModelAsc = 'usageModel_ASC',
  /** usageModel descending */
  UsageModelDesc = 'usageModel_DESC'
}

export type AccountWorkersSubrequestsAdaptiveGroupsSum = {
  __typename?: 'AccountWorkersSubrequestsAdaptiveGroupsSum';
  /** Workers fetch request body size in bytes where the request was not cached */
  requestBodySizeUncached: Scalars['uint64']['output'];
  /** Number of subrequests */
  subrequests: Scalars['uint64']['output'];
};

/** Zaraz Triggers Analytics (a trigger is a set of rules that can trigger a zaraz action) */
export type AccountZarazTriggersAdaptiveGroups = {
  __typename?: 'AccountZarazTriggersAdaptiveGroups';
  /** Number of processed Zaraz Triggers */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountZarazTriggersAdaptiveGroupsDimensions>;
};

export type AccountZarazTriggersAdaptiveGroupsDimensions = {
  __typename?: 'AccountZarazTriggersAdaptiveGroupsDimensions';
  /** The date when trigger was triggerd */
  date: Scalars['Date']['output'];
  /** The date and time truncated to fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time truncated to five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Trigger Name */
  triggerName: Scalars['string']['output'];
};

export type AccountZarazTriggersAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountZarazTriggersAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountZarazTriggersAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  triggerName?: InputMaybe<Scalars['string']['input']>;
  triggerName_geq?: InputMaybe<Scalars['string']['input']>;
  triggerName_gt?: InputMaybe<Scalars['string']['input']>;
  triggerName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  triggerName_leq?: InputMaybe<Scalars['string']['input']>;
  triggerName_like?: InputMaybe<Scalars['string']['input']>;
  triggerName_lt?: InputMaybe<Scalars['string']['input']>;
  triggerName_neq?: InputMaybe<Scalars['string']['input']>;
  triggerName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  triggerName_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum AccountZarazTriggersAdaptiveGroupsOrderBy {
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** triggerName ascending */
  TriggerNameAsc = 'triggerName_ASC',
  /** triggerName descending */
  TriggerNameDesc = 'triggerName_DESC'
}

/** Beta - Unique origins, applications, and users discovered for Zero Trust private networks */
export type AccountZeroTrustPrivateNetworkDiscoveryGroups = {
  __typename?: 'AccountZeroTrustPrivateNetworkDiscoveryGroups';
  /** Sum of network access during the select range */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<AccountZeroTrustPrivateNetworkDiscoveryGroupsDimensions>;
  max?: Maybe<AccountZeroTrustPrivateNetworkDiscoveryGroupsMax>;
  uniq?: Maybe<AccountZeroTrustPrivateNetworkDiscoveryGroupsUniq>;
};

export type AccountZeroTrustPrivateNetworkDiscoveryGroupsDimensions = {
  __typename?: 'AccountZeroTrustPrivateNetworkDiscoveryGroupsDimensions';
  /** Request date */
  date: Scalars['Date']['output'];
  /** Request datetime and start of the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Destination IPv4 or IPv6 */
  destinationIP: Scalars['string']['output'];
  /** Destination port */
  destinationPort: Scalars['uint16']['output'];
  /** The email address of the user who accessed the resource */
  email: Scalars['string']['output'];
  /** SNI hostname of the origin if TLS intercept is enabled */
  hostname: Scalars['string']['output'];
  /** UUID of the origin if it has been identified before */
  originId: Scalars['string']['output'];
  /** status of the origin, one of unreviewed, in_review, approved, unapproved */
  status: Scalars['string']['output'];
  /** The transport protocol used in the session, one of (0, tcp) (1, quic) (2, udp) */
  transport: Scalars['string']['output'];
  /** The ID of the user who accessed the resource */
  userId: Scalars['string']['output'];
};

export type AccountZeroTrustPrivateNetworkDiscoveryGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<AccountZeroTrustPrivateNetworkDiscoveryGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<AccountZeroTrustPrivateNetworkDiscoveryGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationIP?: InputMaybe<Scalars['string']['input']>;
  destinationIP_geq?: InputMaybe<Scalars['string']['input']>;
  destinationIP_gt?: InputMaybe<Scalars['string']['input']>;
  destinationIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationIP_leq?: InputMaybe<Scalars['string']['input']>;
  destinationIP_like?: InputMaybe<Scalars['string']['input']>;
  destinationIP_lt?: InputMaybe<Scalars['string']['input']>;
  destinationIP_neq?: InputMaybe<Scalars['string']['input']>;
  destinationIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationIP_notlike?: InputMaybe<Scalars['string']['input']>;
  destinationPort?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_geq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_gt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  destinationPort_leq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_lt?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_neq?: InputMaybe<Scalars['uint16']['input']>;
  destinationPort_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  email?: InputMaybe<Scalars['string']['input']>;
  email_geq?: InputMaybe<Scalars['string']['input']>;
  email_gt?: InputMaybe<Scalars['string']['input']>;
  email_in?: InputMaybe<Array<Scalars['string']['input']>>;
  email_leq?: InputMaybe<Scalars['string']['input']>;
  email_like?: InputMaybe<Scalars['string']['input']>;
  email_lt?: InputMaybe<Scalars['string']['input']>;
  email_neq?: InputMaybe<Scalars['string']['input']>;
  email_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  email_notlike?: InputMaybe<Scalars['string']['input']>;
  hostname?: InputMaybe<Scalars['string']['input']>;
  hostname_geq?: InputMaybe<Scalars['string']['input']>;
  hostname_gt?: InputMaybe<Scalars['string']['input']>;
  hostname_in?: InputMaybe<Array<Scalars['string']['input']>>;
  hostname_leq?: InputMaybe<Scalars['string']['input']>;
  hostname_like?: InputMaybe<Scalars['string']['input']>;
  hostname_lt?: InputMaybe<Scalars['string']['input']>;
  hostname_neq?: InputMaybe<Scalars['string']['input']>;
  hostname_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  hostname_notlike?: InputMaybe<Scalars['string']['input']>;
  originId?: InputMaybe<Scalars['string']['input']>;
  originId_geq?: InputMaybe<Scalars['string']['input']>;
  originId_gt?: InputMaybe<Scalars['string']['input']>;
  originId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originId_leq?: InputMaybe<Scalars['string']['input']>;
  originId_like?: InputMaybe<Scalars['string']['input']>;
  originId_lt?: InputMaybe<Scalars['string']['input']>;
  originId_neq?: InputMaybe<Scalars['string']['input']>;
  originId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originId_notlike?: InputMaybe<Scalars['string']['input']>;
  status?: InputMaybe<Scalars['string']['input']>;
  status_geq?: InputMaybe<Scalars['string']['input']>;
  status_gt?: InputMaybe<Scalars['string']['input']>;
  status_in?: InputMaybe<Array<Scalars['string']['input']>>;
  status_leq?: InputMaybe<Scalars['string']['input']>;
  status_like?: InputMaybe<Scalars['string']['input']>;
  status_lt?: InputMaybe<Scalars['string']['input']>;
  status_neq?: InputMaybe<Scalars['string']['input']>;
  status_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  status_notlike?: InputMaybe<Scalars['string']['input']>;
  transport?: InputMaybe<Scalars['string']['input']>;
  transport_geq?: InputMaybe<Scalars['string']['input']>;
  transport_gt?: InputMaybe<Scalars['string']['input']>;
  transport_in?: InputMaybe<Array<Scalars['string']['input']>>;
  transport_leq?: InputMaybe<Scalars['string']['input']>;
  transport_like?: InputMaybe<Scalars['string']['input']>;
  transport_lt?: InputMaybe<Scalars['string']['input']>;
  transport_neq?: InputMaybe<Scalars['string']['input']>;
  transport_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  transport_notlike?: InputMaybe<Scalars['string']['input']>;
  userId?: InputMaybe<Scalars['string']['input']>;
  userId_geq?: InputMaybe<Scalars['string']['input']>;
  userId_gt?: InputMaybe<Scalars['string']['input']>;
  userId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userId_leq?: InputMaybe<Scalars['string']['input']>;
  userId_like?: InputMaybe<Scalars['string']['input']>;
  userId_lt?: InputMaybe<Scalars['string']['input']>;
  userId_neq?: InputMaybe<Scalars['string']['input']>;
  userId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userId_notlike?: InputMaybe<Scalars['string']['input']>;
};

export type AccountZeroTrustPrivateNetworkDiscoveryGroupsMax = {
  __typename?: 'AccountZeroTrustPrivateNetworkDiscoveryGroupsMax';
  /** Latest access time of a user */
  dateTime: Scalars['Time']['output'];
};

export enum AccountZeroTrustPrivateNetworkDiscoveryGroupsOrderBy {
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** destinationIP ascending */
  DestinationIpAsc = 'destinationIP_ASC',
  /** destinationIP descending */
  DestinationIpDesc = 'destinationIP_DESC',
  /** destinationPort ascending */
  DestinationPortAsc = 'destinationPort_ASC',
  /** destinationPort descending */
  DestinationPortDesc = 'destinationPort_DESC',
  /** email ascending */
  EmailAsc = 'email_ASC',
  /** email descending */
  EmailDesc = 'email_DESC',
  /** hostname ascending */
  HostnameAsc = 'hostname_ASC',
  /** hostname descending */
  HostnameDesc = 'hostname_DESC',
  /** max(dateTime) ascending */
  MaxDateTimeAsc = 'max_dateTime_ASC',
  /** max(dateTime) descending */
  MaxDateTimeDesc = 'max_dateTime_DESC',
  /** originId ascending */
  OriginIdAsc = 'originId_ASC',
  /** originId descending */
  OriginIdDesc = 'originId_DESC',
  /** status ascending */
  StatusAsc = 'status_ASC',
  /** status descending */
  StatusDesc = 'status_DESC',
  /** transport ascending */
  TransportAsc = 'transport_ASC',
  /** transport descending */
  TransportDesc = 'transport_DESC',
  /** uniq(emails) ascending */
  UniqEmailsAsc = 'uniq_emails_ASC',
  /** uniq(emails) descending */
  UniqEmailsDesc = 'uniq_emails_DESC',
  /** uniq(origins) ascending */
  UniqOriginsAsc = 'uniq_origins_ASC',
  /** uniq(origins) descending */
  UniqOriginsDesc = 'uniq_origins_DESC',
  /** uniq(userIds) ascending */
  UniqUserIdsAsc = 'uniq_userIds_ASC',
  /** uniq(userIds) descending */
  UniqUserIdsDesc = 'uniq_userIds_DESC',
  /** userId ascending */
  UserIdAsc = 'userId_ASC',
  /** userId descending */
  UserIdDesc = 'userId_DESC'
}

export type AccountZeroTrustPrivateNetworkDiscoveryGroupsUniq = {
  __typename?: 'AccountZeroTrustPrivateNetworkDiscoveryGroupsUniq';
  /** Approximate count of unique emails */
  emails: Scalars['uint64']['output'];
  /** Approximate count of unique origins. An origin is a (transport, destinationIP, destinationPort) */
  origins: Scalars['uint64']['output'];
  /** Approximate count of unique users */
  userIds: Scalars['uint64']['output'];
};

export type Confidence = {
  __typename?: 'Confidence';
  /** Estimated value of this metric */
  estimate: Scalars['float64']['output'];
  /** True if the confidence interval is valid, i.e. there is enough samples at low enough sample interval */
  isValid: Scalars['bool']['output'];
  /** Lower bound of confidence interval */
  lower: Scalars['float64']['output'];
  /** Number of samples that contributed to the estimate */
  sampleSize: Scalars['int64']['output'];
  /** Upper bound of confidence interval */
  upper: Scalars['float64']['output'];
};

/** Mutations are not supported */
export type Mutation = {
  __typename?: 'Mutation';
  do: Scalars['string']['output'];
};


/** Mutations are not supported */
export type MutationDoArgs = {
  nothing: Scalars['bool']['input'];
};

export type Query = {
  __typename?: 'Query';
  cost: Scalars['uint64']['output'];
  viewer?: Maybe<Viewer>;
};

/** Access and limitations */
export type Settings = {
  __typename?: 'Settings';
  /** The list of available fields to query */
  availableFields: Array<Scalars['string']['output']>;
  enabled: Scalars['bool']['output'];
  /** Requested time range should not be wider than this (seconds) */
  maxDuration: Scalars['int64']['output'];
  /** Maximum number of fields to request at once */
  maxNumberOfFields: Scalars['int64']['output'];
  /** Maximum allowed value for 'limit' */
  maxPageSize: Scalars['int64']['output'];
  /** Cannot reach for data beyond this distance in the past (seconds) */
  notOlderThan: Scalars['int64']['output'];
};

/** GraphQL query attributes and trends */
export type ZoneApiGatewayGraphqlQueryAnalyticsGroups = {
  __typename?: 'ZoneApiGatewayGraphqlQueryAnalyticsGroups';
  avg?: Maybe<ZoneApiGatewayGraphqlQueryAnalyticsGroupsAvg>;
  /** Number of events with GraphQL query attributes computed */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneApiGatewayGraphqlQueryAnalyticsGroupsDimensions>;
};

export type ZoneApiGatewayGraphqlQueryAnalyticsGroupsAvg = {
  __typename?: 'ZoneApiGatewayGraphqlQueryAnalyticsGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneApiGatewayGraphqlQueryAnalyticsGroupsDimensions = {
  __typename?: 'ZoneApiGatewayGraphqlQueryAnalyticsGroupsDimensions';
  /** Maximum depth level of a terminal (leaf) field in the query */
  apiGatewayGraphqlQueryDepth: Scalars['int8']['output'];
  /** Number of terminal (leaf) fields in the query */
  apiGatewayGraphqlQuerySize: Scalars['int16']['output'];
  date: Scalars['Date']['output'];
  datetime: Scalars['Time']['output'];
  datetimeDay: Scalars['Time']['output'];
  datetimeFifteenMinutes: Scalars['Time']['output'];
  datetimeFiveMinutes: Scalars['Time']['output'];
  datetimeHalfOfHour: Scalars['Time']['output'];
  datetimeHour: Scalars['Time']['output'];
  datetimeMinute: Scalars['Time']['output'];
};

export type ZoneApiGatewayGraphqlQueryAnalyticsGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneApiGatewayGraphqlQueryAnalyticsGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneApiGatewayGraphqlQueryAnalyticsGroupsFilter_InputObject>>;
  apiGatewayGraphqlQueryDepth?: InputMaybe<Scalars['int8']['input']>;
  apiGatewayGraphqlQueryDepth_geq?: InputMaybe<Scalars['int8']['input']>;
  apiGatewayGraphqlQueryDepth_gt?: InputMaybe<Scalars['int8']['input']>;
  apiGatewayGraphqlQueryDepth_in?: InputMaybe<Array<Scalars['int8']['input']>>;
  apiGatewayGraphqlQueryDepth_leq?: InputMaybe<Scalars['int8']['input']>;
  apiGatewayGraphqlQueryDepth_lt?: InputMaybe<Scalars['int8']['input']>;
  apiGatewayGraphqlQueryDepth_neq?: InputMaybe<Scalars['int8']['input']>;
  apiGatewayGraphqlQueryDepth_notin?: InputMaybe<Array<Scalars['int8']['input']>>;
  apiGatewayGraphqlQuerySize?: InputMaybe<Scalars['int16']['input']>;
  apiGatewayGraphqlQuerySize_geq?: InputMaybe<Scalars['int16']['input']>;
  apiGatewayGraphqlQuerySize_gt?: InputMaybe<Scalars['int16']['input']>;
  apiGatewayGraphqlQuerySize_in?: InputMaybe<Array<Scalars['int16']['input']>>;
  apiGatewayGraphqlQuerySize_leq?: InputMaybe<Scalars['int16']['input']>;
  apiGatewayGraphqlQuerySize_lt?: InputMaybe<Scalars['int16']['input']>;
  apiGatewayGraphqlQuerySize_neq?: InputMaybe<Scalars['int16']['input']>;
  apiGatewayGraphqlQuerySize_notin?: InputMaybe<Array<Scalars['int16']['input']>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeDay_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export enum ZoneApiGatewayGraphqlQueryAnalyticsGroupsOrderBy {
  /** apiGatewayGraphqlQueryDepth ascending */
  ApiGatewayGraphqlQueryDepthAsc = 'apiGatewayGraphqlQueryDepth_ASC',
  /** apiGatewayGraphqlQueryDepth descending */
  ApiGatewayGraphqlQueryDepthDesc = 'apiGatewayGraphqlQueryDepth_DESC',
  /** apiGatewayGraphqlQuerySize ascending */
  ApiGatewayGraphqlQuerySizeAsc = 'apiGatewayGraphqlQuerySize_ASC',
  /** apiGatewayGraphqlQuerySize descending */
  ApiGatewayGraphqlQuerySizeDesc = 'apiGatewayGraphqlQuerySize_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeDay ascending */
  DatetimeDayAsc = 'datetimeDay_ASC',
  /** datetimeDay descending */
  DatetimeDayDesc = 'datetimeDay_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC'
}

/** Beta. Aggregated count of Session Identifier matches */
export type ZoneApiGatewayMatchedSessionIDsAdaptiveGroups = {
  __typename?: 'ZoneApiGatewayMatchedSessionIDsAdaptiveGroups';
  avg?: Maybe<ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsAvg>;
  /** Number of events with Session Identifiers */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsDimensions>;
};

export type ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsAvg = {
  __typename?: 'ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsDimensions';
  /** Name of session identifier */
  apiGatewayMatchedSessionIdentifierName: Scalars['string']['output'];
  /** Type of session identifier. Possible values are header | cookie */
  apiGatewayMatchedSessionIdentifierType: Scalars['string']['output'];
  date: Scalars['Date']['output'];
  datetime: Scalars['Time']['output'];
  datetimeDay: Scalars['Time']['output'];
  datetimeFifteenMinutes: Scalars['Time']['output'];
  datetimeFiveMinutes: Scalars['Time']['output'];
  datetimeHalfOfHour: Scalars['Time']['output'];
  datetimeHour: Scalars['Time']['output'];
  datetimeMinute: Scalars['Time']['output'];
};

export type ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsFilter_InputObject>>;
  apiGatewayMatchedSessionIdentifierName?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierName_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierName_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedSessionIdentifierName_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierName_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierName_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierName_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedSessionIdentifierName_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierType?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierType_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierType_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedSessionIdentifierType_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierType_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierType_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierType_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedSessionIdentifierType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedSessionIdentifierType_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeDay_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export enum ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsOrderBy {
  /** apiGatewayMatchedSessionIdentifierName ascending */
  ApiGatewayMatchedSessionIdentifierNameAsc = 'apiGatewayMatchedSessionIdentifierName_ASC',
  /** apiGatewayMatchedSessionIdentifierName descending */
  ApiGatewayMatchedSessionIdentifierNameDesc = 'apiGatewayMatchedSessionIdentifierName_DESC',
  /** apiGatewayMatchedSessionIdentifierType ascending */
  ApiGatewayMatchedSessionIdentifierTypeAsc = 'apiGatewayMatchedSessionIdentifierType_ASC',
  /** apiGatewayMatchedSessionIdentifierType descending */
  ApiGatewayMatchedSessionIdentifierTypeDesc = 'apiGatewayMatchedSessionIdentifierType_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeDay ascending */
  DatetimeDayAsc = 'datetimeDay_ASC',
  /** datetimeDay descending */
  DatetimeDayDesc = 'datetimeDay_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC'
}

/**
 * Sequences of API endpoint operations. Sequences are grouped by AuthID and
 * currently ranked by correlation score. Correlation scores are estimated over a
 * 24 hour window and are current to within 10 minutes
 */
export type ZoneApiRequestSequencesGroups = {
  __typename?: 'ZoneApiRequestSequencesGroups';
  aggArgMax?: Maybe<ZoneApiRequestSequencesGroupsAggArgMax>;
  aggMax?: Maybe<ZoneApiRequestSequencesGroupsAggMax>;
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneApiRequestSequencesGroupsDimensions>;
};

export type ZoneApiRequestSequencesGroupsAggArgMax = {
  __typename?: 'ZoneApiRequestSequencesGroupsAggArgMax';
  /**
   * Correlation score estimated over a 24 hour window (higher scores mean more
   * correlation between requests in the sequence of endpoint operations)
   */
  correlation: Scalars['float64']['output'];
  /** Estimated number of occurrences of this sequence of endpoint operations */
  numOccurrences: Scalars['float64']['output'];
  /** Estimated number of occurrences of this sequence of endpoint operations, disregarding the last operation */
  numOccurrencesPrefix: Scalars['float64']['output'];
  /** Estimated number of occurrences of this sequence of endpoint operations, disregarding the first operation */
  numOccurrencesSuffix: Scalars['float64']['output'];
  /** API endpoints comprising the sequence of operations. Individual endpoints are delimited by # symbols */
  operationsApiEndpoints: Scalars['string']['output'];
  /** HTTP request methods comprising the sequence of operations. Individual request method names are delimited by # symbols */
  operationsClientRequestHTTPMethods: Scalars['string']['output'];
  /** Fraction of requests sampled */
  samplingFraction: Scalars['float64']['output'];
};

export type ZoneApiRequestSequencesGroupsAggMax = {
  __typename?: 'ZoneApiRequestSequencesGroupsAggMax';
  /**
   * Time of the most recent occurrence of this sequence of endpoint operations
   * (based on the timestamp of the first request in the sequence)
   */
  timeLastSeen: Scalars['Time']['output'];
  /** The time at which Cloudflare last refreshed this data */
  timeLastUpdated: Scalars['Time']['output'];
};

export type ZoneApiRequestSequencesGroupsDimensions = {
  __typename?: 'ZoneApiRequestSequencesGroupsDimensions';
  /** The host associated with this sequence of endpoint operations */
  apiHost: Scalars['string']['output'];
  /**
   * The host associated with this sequence of endpoint operations
   * @deprecated Field is replaced with <code>apiHost</code>
   */
  clientRequestHTTPHost: Scalars['string']['output'];
  /** Sequence generation timeslot, truncated to 10 minutes */
  datetime: Scalars['Time']['output'];
  /** Sequence rank based on ordering sequences by correlation */
  rank: Scalars['uint16']['output'];
};

export type ZoneApiRequestSequencesGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneApiRequestSequencesGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneApiRequestSequencesGroupsFilter_InputObject>>;
  apiHost?: InputMaybe<Scalars['string']['input']>;
  apiHost_geq?: InputMaybe<Scalars['string']['input']>;
  apiHost_gt?: InputMaybe<Scalars['string']['input']>;
  apiHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiHost_leq?: InputMaybe<Scalars['string']['input']>;
  apiHost_like?: InputMaybe<Scalars['string']['input']>;
  apiHost_lt?: InputMaybe<Scalars['string']['input']>;
  apiHost_neq?: InputMaybe<Scalars['string']['input']>;
  apiHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_notlike?: InputMaybe<Scalars['string']['input']>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  rank?: InputMaybe<Scalars['uint16']['input']>;
  rank_geq?: InputMaybe<Scalars['uint16']['input']>;
  rank_gt?: InputMaybe<Scalars['uint16']['input']>;
  rank_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  rank_leq?: InputMaybe<Scalars['uint16']['input']>;
  rank_lt?: InputMaybe<Scalars['uint16']['input']>;
  rank_neq?: InputMaybe<Scalars['uint16']['input']>;
  rank_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
};

export enum ZoneApiRequestSequencesGroupsOrderBy {
  /** aggArgMax(correlation) ascending */
  AggArgMaxCorrelationAsc = 'aggArgMax_correlation_ASC',
  /** aggArgMax(correlation) descending */
  AggArgMaxCorrelationDesc = 'aggArgMax_correlation_DESC',
  /** aggArgMax(numOccurrencesPrefix) ascending */
  AggArgMaxNumOccurrencesPrefixAsc = 'aggArgMax_numOccurrencesPrefix_ASC',
  /** aggArgMax(numOccurrencesPrefix) descending */
  AggArgMaxNumOccurrencesPrefixDesc = 'aggArgMax_numOccurrencesPrefix_DESC',
  /** aggArgMax(numOccurrencesSuffix) ascending */
  AggArgMaxNumOccurrencesSuffixAsc = 'aggArgMax_numOccurrencesSuffix_ASC',
  /** aggArgMax(numOccurrencesSuffix) descending */
  AggArgMaxNumOccurrencesSuffixDesc = 'aggArgMax_numOccurrencesSuffix_DESC',
  /** aggArgMax(numOccurrences) ascending */
  AggArgMaxNumOccurrencesAsc = 'aggArgMax_numOccurrences_ASC',
  /** aggArgMax(numOccurrences) descending */
  AggArgMaxNumOccurrencesDesc = 'aggArgMax_numOccurrences_DESC',
  /** aggArgMax(operationsApiEndpoints) ascending */
  AggArgMaxOperationsApiEndpointsAsc = 'aggArgMax_operationsApiEndpoints_ASC',
  /** aggArgMax(operationsApiEndpoints) descending */
  AggArgMaxOperationsApiEndpointsDesc = 'aggArgMax_operationsApiEndpoints_DESC',
  /** aggArgMax(operationsClientRequestHTTPMethods) ascending */
  AggArgMaxOperationsClientRequestHttpMethodsAsc = 'aggArgMax_operationsClientRequestHTTPMethods_ASC',
  /** aggArgMax(operationsClientRequestHTTPMethods) descending */
  AggArgMaxOperationsClientRequestHttpMethodsDesc = 'aggArgMax_operationsClientRequestHTTPMethods_DESC',
  /** aggArgMax(samplingFraction) ascending */
  AggArgMaxSamplingFractionAsc = 'aggArgMax_samplingFraction_ASC',
  /** aggArgMax(samplingFraction) descending */
  AggArgMaxSamplingFractionDesc = 'aggArgMax_samplingFraction_DESC',
  /** aggMax(timeLastSeen) ascending */
  AggMaxTimeLastSeenAsc = 'aggMax_timeLastSeen_ASC',
  /** aggMax(timeLastSeen) descending */
  AggMaxTimeLastSeenDesc = 'aggMax_timeLastSeen_DESC',
  /** aggMax(timeLastUpdated) ascending */
  AggMaxTimeLastUpdatedAsc = 'aggMax_timeLastUpdated_ASC',
  /** aggMax(timeLastUpdated) descending */
  AggMaxTimeLastUpdatedDesc = 'aggMax_timeLastUpdated_DESC',
  /** apiHost ascending */
  ApiHostAsc = 'apiHost_ASC',
  /** apiHost descending */
  ApiHostDesc = 'apiHost_DESC',
  /** clientRequestHTTPHost ascending */
  ClientRequestHttpHostAsc = 'clientRequestHTTPHost_ASC',
  /** clientRequestHTTPHost descending */
  ClientRequestHttpHostDesc = 'clientRequestHTTPHost_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** rank ascending */
  RankAsc = 'rank_ASC',
  /** rank descending */
  RankDesc = 'rank_DESC'
}

/** Beta. Cache Reserve operations with adaptive sampling */
export type ZoneCacheReserveOperationsAdaptiveGroups = {
  __typename?: 'ZoneCacheReserveOperationsAdaptiveGroups';
  /** The average value used for sample interval */
  avg?: Maybe<ZoneCacheReserveOperationsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneCacheReserveOperationsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<ZoneCacheReserveOperationsAdaptiveGroupsSum>;
};

export type ZoneCacheReserveOperationsAdaptiveGroupsAvg = {
  __typename?: 'ZoneCacheReserveOperationsAdaptiveGroupsAvg';
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneCacheReserveOperationsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneCacheReserveOperationsAdaptiveGroupsDimensions';
  /** Status of the R2 operation */
  actionStatus: Scalars['string']['output'];
  /** Name of bucket containing stored objects */
  bucketName: Scalars['string']['output'];
  /** Request timestamp, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Request timestamp */
  datetime: Scalars['Time']['output'];
  /** Request timestamp, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request timestamp, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request timestamp, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request timestamp, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Billable class of storage operation */
  operationClass: Scalars['string']['output'];
};

export type ZoneCacheReserveOperationsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneCacheReserveOperationsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneCacheReserveOperationsAdaptiveGroupsFilter_InputObject>>;
  actionStatus?: InputMaybe<Scalars['string']['input']>;
  actionStatus_geq?: InputMaybe<Scalars['string']['input']>;
  actionStatus_gt?: InputMaybe<Scalars['string']['input']>;
  actionStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  actionStatus_leq?: InputMaybe<Scalars['string']['input']>;
  actionStatus_like?: InputMaybe<Scalars['string']['input']>;
  actionStatus_lt?: InputMaybe<Scalars['string']['input']>;
  actionStatus_neq?: InputMaybe<Scalars['string']['input']>;
  actionStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  actionStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  bucketName?: InputMaybe<Scalars['string']['input']>;
  bucketName_geq?: InputMaybe<Scalars['string']['input']>;
  bucketName_gt?: InputMaybe<Scalars['string']['input']>;
  bucketName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  bucketName_leq?: InputMaybe<Scalars['string']['input']>;
  bucketName_like?: InputMaybe<Scalars['string']['input']>;
  bucketName_lt?: InputMaybe<Scalars['string']['input']>;
  bucketName_neq?: InputMaybe<Scalars['string']['input']>;
  bucketName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  bucketName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  operationClass?: InputMaybe<Scalars['string']['input']>;
  operationClass_geq?: InputMaybe<Scalars['string']['input']>;
  operationClass_gt?: InputMaybe<Scalars['string']['input']>;
  operationClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  operationClass_leq?: InputMaybe<Scalars['string']['input']>;
  operationClass_like?: InputMaybe<Scalars['string']['input']>;
  operationClass_lt?: InputMaybe<Scalars['string']['input']>;
  operationClass_neq?: InputMaybe<Scalars['string']['input']>;
  operationClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  operationClass_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZoneCacheReserveOperationsAdaptiveGroupsOrderBy {
  /** actionStatus ascending */
  ActionStatusAsc = 'actionStatus_ASC',
  /** actionStatus descending */
  ActionStatusDesc = 'actionStatus_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** bucketName ascending */
  BucketNameAsc = 'bucketName_ASC',
  /** bucketName descending */
  BucketNameDesc = 'bucketName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** operationClass ascending */
  OperationClassAsc = 'operationClass_ASC',
  /** operationClass descending */
  OperationClassDesc = 'operationClass_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC'
}

export type ZoneCacheReserveOperationsAdaptiveGroupsSum = {
  __typename?: 'ZoneCacheReserveOperationsAdaptiveGroupsSum';
  /** Sum of Requests */
  requests: Scalars['uint64']['output'];
};

/** Cache Reserve HTTP requests data with adaptive sampling */
export type ZoneCacheReserveRequestsAdaptiveGroups = {
  __typename?: 'ZoneCacheReserveRequestsAdaptiveGroups';
  /** The average value used for sample interval */
  avg?: Maybe<ZoneCacheReserveRequestsAdaptiveGroupsAvg>;
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneCacheReserveRequestsAdaptiveGroupsDimensions>;
  /** Sum of bytes returned to client */
  sum?: Maybe<ZoneCacheReserveRequestsAdaptiveGroupsSum>;
};

export type ZoneCacheReserveRequestsAdaptiveGroupsAvg = {
  __typename?: 'ZoneCacheReserveRequestsAdaptiveGroupsAvg';
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneCacheReserveRequestsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneCacheReserveRequestsAdaptiveGroupsDimensions';
  /** Cache status */
  cacheStatus: Scalars['string']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Content type returned to client */
  edgeResponseContentTypeName: Scalars['string']['output'];
  /** HTTP response status code returned to browser */
  edgeResponseStatus: Scalars['uint16']['output'];
};

export type ZoneCacheReserveRequestsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneCacheReserveRequestsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneCacheReserveRequestsAdaptiveGroupsFilter_InputObject>>;
  cacheStatus?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_geq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_gt?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cacheStatus_leq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_like?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_lt?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_neq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cacheStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  edgeResponseContentTypeName?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_like?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
};

export enum ZoneCacheReserveRequestsAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** cacheReserveUsed ascending */
  CacheReserveUsedAsc = 'cacheReserveUsed_ASC',
  /** cacheReserveUsed descending */
  CacheReserveUsedDesc = 'cacheReserveUsed_DESC',
  /** cacheStatus ascending */
  CacheStatusAsc = 'cacheStatus_ASC',
  /** cacheStatus descending */
  CacheStatusDesc = 'cacheStatus_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** edgeResponseContentTypeName ascending */
  EdgeResponseContentTypeNameAsc = 'edgeResponseContentTypeName_ASC',
  /** edgeResponseContentTypeName descending */
  EdgeResponseContentTypeNameDesc = 'edgeResponseContentTypeName_DESC',
  /** edgeResponseStatus ascending */
  EdgeResponseStatusAsc = 'edgeResponseStatus_ASC',
  /** edgeResponseStatus descending */
  EdgeResponseStatusDesc = 'edgeResponseStatus_DESC',
  /** sum(edgeResponseBytes) ascending */
  SumEdgeResponseBytesAsc = 'sum_edgeResponseBytes_ASC',
  /** sum(edgeResponseBytes) descending */
  SumEdgeResponseBytesDesc = 'sum_edgeResponseBytes_DESC'
}

export type ZoneCacheReserveRequestsAdaptiveGroupsSum = {
  __typename?: 'ZoneCacheReserveRequestsAdaptiveGroupsSum';
  edgeResponseBytes: Scalars['uint64']['output'];
};

/** Beta. Cache Reserve storage with adaptive sampling */
export type ZoneCacheReserveStorageAdaptiveGroups = {
  __typename?: 'ZoneCacheReserveStorageAdaptiveGroups';
  /** The average value used for sample interval */
  avg?: Maybe<ZoneCacheReserveStorageAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneCacheReserveStorageAdaptiveGroupsDimensions>;
  /** The max of values for a metric per dimension */
  max?: Maybe<ZoneCacheReserveStorageAdaptiveGroupsMax>;
};

export type ZoneCacheReserveStorageAdaptiveGroupsAvg = {
  __typename?: 'ZoneCacheReserveStorageAdaptiveGroupsAvg';
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneCacheReserveStorageAdaptiveGroupsDimensions = {
  __typename?: 'ZoneCacheReserveStorageAdaptiveGroupsDimensions';
  /** Hash of bucket containing stored objects */
  bucketHash: Scalars['string']['output'];
  /** Name of bucket containing stored objects */
  bucketName: Scalars['string']['output'];
  /** Storage sample timestamp, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Storage sample timestamp */
  datetime: Scalars['Time']['output'];
  /** Storage sample timestamp, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Storage sample timestamp, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Storage sample timestamp, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Storage sample timestamp, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
};

export type ZoneCacheReserveStorageAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneCacheReserveStorageAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneCacheReserveStorageAdaptiveGroupsFilter_InputObject>>;
  bucketHash?: InputMaybe<Scalars['string']['input']>;
  bucketHash_geq?: InputMaybe<Scalars['string']['input']>;
  bucketHash_gt?: InputMaybe<Scalars['string']['input']>;
  bucketHash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  bucketHash_leq?: InputMaybe<Scalars['string']['input']>;
  bucketHash_like?: InputMaybe<Scalars['string']['input']>;
  bucketHash_lt?: InputMaybe<Scalars['string']['input']>;
  bucketHash_neq?: InputMaybe<Scalars['string']['input']>;
  bucketHash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  bucketHash_notlike?: InputMaybe<Scalars['string']['input']>;
  bucketName?: InputMaybe<Scalars['string']['input']>;
  bucketName_geq?: InputMaybe<Scalars['string']['input']>;
  bucketName_gt?: InputMaybe<Scalars['string']['input']>;
  bucketName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  bucketName_leq?: InputMaybe<Scalars['string']['input']>;
  bucketName_like?: InputMaybe<Scalars['string']['input']>;
  bucketName_lt?: InputMaybe<Scalars['string']['input']>;
  bucketName_neq?: InputMaybe<Scalars['string']['input']>;
  bucketName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  bucketName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type ZoneCacheReserveStorageAdaptiveGroupsMax = {
  __typename?: 'ZoneCacheReserveStorageAdaptiveGroupsMax';
  /** Max of object count */
  objectCount: Scalars['uint64']['output'];
  /** Payload and metadata size of objects in bucket */
  storedBytes: Scalars['uint64']['output'];
};

export enum ZoneCacheReserveStorageAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** bucketHash ascending */
  BucketHashAsc = 'bucketHash_ASC',
  /** bucketHash descending */
  BucketHashDesc = 'bucketHash_DESC',
  /** bucketName ascending */
  BucketNameAsc = 'bucketName_ASC',
  /** bucketName descending */
  BucketNameDesc = 'bucketName_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** max(objectCount) ascending */
  MaxObjectCountAsc = 'max_objectCount_ASC',
  /** max(objectCount) descending */
  MaxObjectCountDesc = 'max_objectCount_DESC',
  /** max(storedBytes) ascending */
  MaxStoredBytesAsc = 'max_storedBytes_ASC',
  /** max(storedBytes) descending */
  MaxStoredBytesDesc = 'max_storedBytes_DESC'
}

/** Dmarc report records with adaptive sampling */
export type ZoneDmarcReportsAdaptive = {
  __typename?: 'ZoneDmarcReportsAdaptive';
  /** The date and time the source email was received */
  datetime: Scalars['Time']['output'];
  /** DMARC policy disposition */
  disposition: Scalars['string']['output'];
  /** DKIM result */
  dkim: Scalars['string']['output'];
  /** Domain to which this report refers to */
  domain: Scalars['string']['output'];
  /** Envelope From of emails */
  envelopeFrom: Scalars['string']['output'];
  /** Envelope To of emails */
  envelopeTo: Scalars['string']['output'];
  /** Reason (if any) why the record was evaluated */
  evaluatedReason: Scalars['string']['output'];
  /** Header From of emails */
  headerFrom: Scalars['string']['output'];
  /** Number of messages that matched */
  matchingMessages: Scalars['uint32']['output'];
  /** Organization that generated report */
  orgName: Scalars['string']['output'];
  /** DKIM alignment mode specified in the policy */
  policyDKIMAlignmentMode: Scalars['string']['output'];
  /** DMARC policy of the domain */
  policyDomain: Scalars['string']['output'];
  /** Percentage of emails that should be checked */
  policyPercentage: Scalars['uint8']['output'];
  /** SPF alignment mode specified in the policy */
  policySPFAlignmentMode: Scalars['string']['output'];
  /** DMARC policy of subdomains */
  policySubDomain: Scalars['string']['output'];
  /** Unique identifier of this record */
  recordId: Scalars['string']['output'];
  /** Index of this record within the report */
  recordIndex: Scalars['uint32']['output'];
  /** Start of the reporting period */
  reportBegin: Scalars['Time']['output'];
  /** End of the reporting period */
  reportEnd: Scalars['Time']['output'];
  /** Error message (if any) */
  reportError: Scalars['string']['output'];
  /** Unique identifier of the report to which this record belongs */
  reportId: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** Source IP address of the email */
  sourceIP: Scalars['string']['output'];
  /** Country name from source IP */
  sourceLocationName: Scalars['string']['output'];
  /** Source IP address organisation name */
  sourceOrgName: Scalars['string']['output'];
  /** Source IP address organisation slug */
  sourceOrgSlug: Scalars['string']['output'];
  /** Source Domain from IP address */
  sourcePTR: Scalars['string']['output'];
  /** SPF result */
  spf: Scalars['string']['output'];
  /** Checked domain from scope mfrom */
  spfMFromDomain: Scalars['string']['output'];
};

export type ZoneDmarcReportsAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneDmarcReportsAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneDmarcReportsAdaptiveFilter_InputObject>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  disposition?: InputMaybe<Scalars['string']['input']>;
  disposition_geq?: InputMaybe<Scalars['string']['input']>;
  disposition_gt?: InputMaybe<Scalars['string']['input']>;
  disposition_in?: InputMaybe<Array<Scalars['string']['input']>>;
  disposition_leq?: InputMaybe<Scalars['string']['input']>;
  disposition_like?: InputMaybe<Scalars['string']['input']>;
  disposition_lt?: InputMaybe<Scalars['string']['input']>;
  disposition_neq?: InputMaybe<Scalars['string']['input']>;
  disposition_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  disposition_notlike?: InputMaybe<Scalars['string']['input']>;
  dkim?: InputMaybe<Scalars['string']['input']>;
  dkim_geq?: InputMaybe<Scalars['string']['input']>;
  dkim_gt?: InputMaybe<Scalars['string']['input']>;
  dkim_in?: InputMaybe<Array<Scalars['string']['input']>>;
  dkim_leq?: InputMaybe<Scalars['string']['input']>;
  dkim_like?: InputMaybe<Scalars['string']['input']>;
  dkim_lt?: InputMaybe<Scalars['string']['input']>;
  dkim_neq?: InputMaybe<Scalars['string']['input']>;
  dkim_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  dkim_notlike?: InputMaybe<Scalars['string']['input']>;
  domain?: InputMaybe<Scalars['string']['input']>;
  domain_geq?: InputMaybe<Scalars['string']['input']>;
  domain_gt?: InputMaybe<Scalars['string']['input']>;
  domain_in?: InputMaybe<Array<Scalars['string']['input']>>;
  domain_leq?: InputMaybe<Scalars['string']['input']>;
  domain_like?: InputMaybe<Scalars['string']['input']>;
  domain_lt?: InputMaybe<Scalars['string']['input']>;
  domain_neq?: InputMaybe<Scalars['string']['input']>;
  domain_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  domain_notlike?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_geq?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_gt?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_in?: InputMaybe<Array<Scalars['string']['input']>>;
  envelopeFrom_leq?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_like?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_lt?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_neq?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  envelopeFrom_notlike?: InputMaybe<Scalars['string']['input']>;
  envelopeTo?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_geq?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_gt?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_in?: InputMaybe<Array<Scalars['string']['input']>>;
  envelopeTo_leq?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_like?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_lt?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_neq?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  envelopeTo_notlike?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_geq?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_gt?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_in?: InputMaybe<Array<Scalars['string']['input']>>;
  evaluatedReason_leq?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_like?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_lt?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_neq?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  evaluatedReason_notlike?: InputMaybe<Scalars['string']['input']>;
  headerFrom?: InputMaybe<Scalars['string']['input']>;
  headerFrom_geq?: InputMaybe<Scalars['string']['input']>;
  headerFrom_gt?: InputMaybe<Scalars['string']['input']>;
  headerFrom_in?: InputMaybe<Array<Scalars['string']['input']>>;
  headerFrom_leq?: InputMaybe<Scalars['string']['input']>;
  headerFrom_like?: InputMaybe<Scalars['string']['input']>;
  headerFrom_lt?: InputMaybe<Scalars['string']['input']>;
  headerFrom_neq?: InputMaybe<Scalars['string']['input']>;
  headerFrom_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  headerFrom_notlike?: InputMaybe<Scalars['string']['input']>;
  matchingMessages?: InputMaybe<Scalars['uint32']['input']>;
  matchingMessages_geq?: InputMaybe<Scalars['uint32']['input']>;
  matchingMessages_gt?: InputMaybe<Scalars['uint32']['input']>;
  matchingMessages_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  matchingMessages_leq?: InputMaybe<Scalars['uint32']['input']>;
  matchingMessages_lt?: InputMaybe<Scalars['uint32']['input']>;
  matchingMessages_neq?: InputMaybe<Scalars['uint32']['input']>;
  matchingMessages_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  orgName?: InputMaybe<Scalars['string']['input']>;
  orgName_geq?: InputMaybe<Scalars['string']['input']>;
  orgName_gt?: InputMaybe<Scalars['string']['input']>;
  orgName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  orgName_leq?: InputMaybe<Scalars['string']['input']>;
  orgName_like?: InputMaybe<Scalars['string']['input']>;
  orgName_lt?: InputMaybe<Scalars['string']['input']>;
  orgName_neq?: InputMaybe<Scalars['string']['input']>;
  orgName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  orgName_notlike?: InputMaybe<Scalars['string']['input']>;
  policyDKIMAlignmentMode?: InputMaybe<Scalars['string']['input']>;
  policyDKIMAlignmentMode_geq?: InputMaybe<Scalars['string']['input']>;
  policyDKIMAlignmentMode_gt?: InputMaybe<Scalars['string']['input']>;
  policyDKIMAlignmentMode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  policyDKIMAlignmentMode_leq?: InputMaybe<Scalars['string']['input']>;
  policyDKIMAlignmentMode_like?: InputMaybe<Scalars['string']['input']>;
  policyDKIMAlignmentMode_lt?: InputMaybe<Scalars['string']['input']>;
  policyDKIMAlignmentMode_neq?: InputMaybe<Scalars['string']['input']>;
  policyDKIMAlignmentMode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  policyDKIMAlignmentMode_notlike?: InputMaybe<Scalars['string']['input']>;
  policyDomain?: InputMaybe<Scalars['string']['input']>;
  policyDomain_geq?: InputMaybe<Scalars['string']['input']>;
  policyDomain_gt?: InputMaybe<Scalars['string']['input']>;
  policyDomain_in?: InputMaybe<Array<Scalars['string']['input']>>;
  policyDomain_leq?: InputMaybe<Scalars['string']['input']>;
  policyDomain_like?: InputMaybe<Scalars['string']['input']>;
  policyDomain_lt?: InputMaybe<Scalars['string']['input']>;
  policyDomain_neq?: InputMaybe<Scalars['string']['input']>;
  policyDomain_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  policyDomain_notlike?: InputMaybe<Scalars['string']['input']>;
  policyPercentage?: InputMaybe<Scalars['uint8']['input']>;
  policyPercentage_geq?: InputMaybe<Scalars['uint8']['input']>;
  policyPercentage_gt?: InputMaybe<Scalars['uint8']['input']>;
  policyPercentage_in?: InputMaybe<Scalars['bytes']['input']>;
  policyPercentage_leq?: InputMaybe<Scalars['uint8']['input']>;
  policyPercentage_lt?: InputMaybe<Scalars['uint8']['input']>;
  policyPercentage_neq?: InputMaybe<Scalars['uint8']['input']>;
  policyPercentage_notin?: InputMaybe<Scalars['bytes']['input']>;
  policySPFAlignmentMode?: InputMaybe<Scalars['string']['input']>;
  policySPFAlignmentMode_geq?: InputMaybe<Scalars['string']['input']>;
  policySPFAlignmentMode_gt?: InputMaybe<Scalars['string']['input']>;
  policySPFAlignmentMode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  policySPFAlignmentMode_leq?: InputMaybe<Scalars['string']['input']>;
  policySPFAlignmentMode_like?: InputMaybe<Scalars['string']['input']>;
  policySPFAlignmentMode_lt?: InputMaybe<Scalars['string']['input']>;
  policySPFAlignmentMode_neq?: InputMaybe<Scalars['string']['input']>;
  policySPFAlignmentMode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  policySPFAlignmentMode_notlike?: InputMaybe<Scalars['string']['input']>;
  policySubDomain?: InputMaybe<Scalars['string']['input']>;
  policySubDomain_geq?: InputMaybe<Scalars['string']['input']>;
  policySubDomain_gt?: InputMaybe<Scalars['string']['input']>;
  policySubDomain_in?: InputMaybe<Array<Scalars['string']['input']>>;
  policySubDomain_leq?: InputMaybe<Scalars['string']['input']>;
  policySubDomain_like?: InputMaybe<Scalars['string']['input']>;
  policySubDomain_lt?: InputMaybe<Scalars['string']['input']>;
  policySubDomain_neq?: InputMaybe<Scalars['string']['input']>;
  policySubDomain_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  policySubDomain_notlike?: InputMaybe<Scalars['string']['input']>;
  recordId?: InputMaybe<Scalars['string']['input']>;
  recordId_geq?: InputMaybe<Scalars['string']['input']>;
  recordId_gt?: InputMaybe<Scalars['string']['input']>;
  recordId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  recordId_leq?: InputMaybe<Scalars['string']['input']>;
  recordId_like?: InputMaybe<Scalars['string']['input']>;
  recordId_lt?: InputMaybe<Scalars['string']['input']>;
  recordId_neq?: InputMaybe<Scalars['string']['input']>;
  recordId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  recordId_notlike?: InputMaybe<Scalars['string']['input']>;
  recordIndex?: InputMaybe<Scalars['uint32']['input']>;
  recordIndex_geq?: InputMaybe<Scalars['uint32']['input']>;
  recordIndex_gt?: InputMaybe<Scalars['uint32']['input']>;
  recordIndex_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  recordIndex_leq?: InputMaybe<Scalars['uint32']['input']>;
  recordIndex_lt?: InputMaybe<Scalars['uint32']['input']>;
  recordIndex_neq?: InputMaybe<Scalars['uint32']['input']>;
  recordIndex_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  reportBegin?: InputMaybe<Scalars['Time']['input']>;
  reportBegin_geq?: InputMaybe<Scalars['Time']['input']>;
  reportBegin_gt?: InputMaybe<Scalars['Time']['input']>;
  reportBegin_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  reportBegin_leq?: InputMaybe<Scalars['Time']['input']>;
  reportBegin_lt?: InputMaybe<Scalars['Time']['input']>;
  reportBegin_neq?: InputMaybe<Scalars['Time']['input']>;
  reportBegin_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  reportEnd?: InputMaybe<Scalars['Time']['input']>;
  reportEnd_geq?: InputMaybe<Scalars['Time']['input']>;
  reportEnd_gt?: InputMaybe<Scalars['Time']['input']>;
  reportEnd_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  reportEnd_leq?: InputMaybe<Scalars['Time']['input']>;
  reportEnd_lt?: InputMaybe<Scalars['Time']['input']>;
  reportEnd_neq?: InputMaybe<Scalars['Time']['input']>;
  reportEnd_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  reportError?: InputMaybe<Scalars['string']['input']>;
  reportError_geq?: InputMaybe<Scalars['string']['input']>;
  reportError_gt?: InputMaybe<Scalars['string']['input']>;
  reportError_in?: InputMaybe<Array<Scalars['string']['input']>>;
  reportError_leq?: InputMaybe<Scalars['string']['input']>;
  reportError_like?: InputMaybe<Scalars['string']['input']>;
  reportError_lt?: InputMaybe<Scalars['string']['input']>;
  reportError_neq?: InputMaybe<Scalars['string']['input']>;
  reportError_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  reportError_notlike?: InputMaybe<Scalars['string']['input']>;
  reportId?: InputMaybe<Scalars['string']['input']>;
  reportId_geq?: InputMaybe<Scalars['string']['input']>;
  reportId_gt?: InputMaybe<Scalars['string']['input']>;
  reportId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  reportId_leq?: InputMaybe<Scalars['string']['input']>;
  reportId_like?: InputMaybe<Scalars['string']['input']>;
  reportId_lt?: InputMaybe<Scalars['string']['input']>;
  reportId_neq?: InputMaybe<Scalars['string']['input']>;
  reportId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  reportId_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceIP?: InputMaybe<Scalars['string']['input']>;
  sourceIP_geq?: InputMaybe<Scalars['string']['input']>;
  sourceIP_gt?: InputMaybe<Scalars['string']['input']>;
  sourceIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceIP_leq?: InputMaybe<Scalars['string']['input']>;
  sourceIP_like?: InputMaybe<Scalars['string']['input']>;
  sourceIP_lt?: InputMaybe<Scalars['string']['input']>;
  sourceIP_neq?: InputMaybe<Scalars['string']['input']>;
  sourceIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceIP_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceLocationName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_like?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceLocationName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceOrgName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_like?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceOrgName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_geq?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_gt?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceOrgSlug_leq?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_like?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_lt?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_neq?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceOrgSlug_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePTR?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_geq?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_gt?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourcePTR_leq?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_like?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_lt?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_neq?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourcePTR_notlike?: InputMaybe<Scalars['string']['input']>;
  spf?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_geq?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_gt?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_in?: InputMaybe<Array<Scalars['string']['input']>>;
  spfMFromDomain_leq?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_like?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_lt?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_neq?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  spfMFromDomain_notlike?: InputMaybe<Scalars['string']['input']>;
  spf_geq?: InputMaybe<Scalars['string']['input']>;
  spf_gt?: InputMaybe<Scalars['string']['input']>;
  spf_in?: InputMaybe<Array<Scalars['string']['input']>>;
  spf_leq?: InputMaybe<Scalars['string']['input']>;
  spf_like?: InputMaybe<Scalars['string']['input']>;
  spf_lt?: InputMaybe<Scalars['string']['input']>;
  spf_neq?: InputMaybe<Scalars['string']['input']>;
  spf_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  spf_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZoneDmarcReportsAdaptiveOrderBy {
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** disposition ascending */
  DispositionAsc = 'disposition_ASC',
  /** disposition descending */
  DispositionDesc = 'disposition_DESC',
  /** dkim ascending */
  DkimAsc = 'dkim_ASC',
  /** dkim descending */
  DkimDesc = 'dkim_DESC',
  /** domain ascending */
  DomainAsc = 'domain_ASC',
  /** domain descending */
  DomainDesc = 'domain_DESC',
  /** envelopeFrom ascending */
  EnvelopeFromAsc = 'envelopeFrom_ASC',
  /** envelopeFrom descending */
  EnvelopeFromDesc = 'envelopeFrom_DESC',
  /** envelopeTo ascending */
  EnvelopeToAsc = 'envelopeTo_ASC',
  /** envelopeTo descending */
  EnvelopeToDesc = 'envelopeTo_DESC',
  /** evaluatedReason ascending */
  EvaluatedReasonAsc = 'evaluatedReason_ASC',
  /** evaluatedReason descending */
  EvaluatedReasonDesc = 'evaluatedReason_DESC',
  /** headerFrom ascending */
  HeaderFromAsc = 'headerFrom_ASC',
  /** headerFrom descending */
  HeaderFromDesc = 'headerFrom_DESC',
  /** matchingMessages ascending */
  MatchingMessagesAsc = 'matchingMessages_ASC',
  /** matchingMessages descending */
  MatchingMessagesDesc = 'matchingMessages_DESC',
  /** orgName ascending */
  OrgNameAsc = 'orgName_ASC',
  /** orgName descending */
  OrgNameDesc = 'orgName_DESC',
  /** policyDKIMAlignmentMode ascending */
  PolicyDkimAlignmentModeAsc = 'policyDKIMAlignmentMode_ASC',
  /** policyDKIMAlignmentMode descending */
  PolicyDkimAlignmentModeDesc = 'policyDKIMAlignmentMode_DESC',
  /** policyDomain ascending */
  PolicyDomainAsc = 'policyDomain_ASC',
  /** policyDomain descending */
  PolicyDomainDesc = 'policyDomain_DESC',
  /** policyPercentage ascending */
  PolicyPercentageAsc = 'policyPercentage_ASC',
  /** policyPercentage descending */
  PolicyPercentageDesc = 'policyPercentage_DESC',
  /** policySPFAlignmentMode ascending */
  PolicySpfAlignmentModeAsc = 'policySPFAlignmentMode_ASC',
  /** policySPFAlignmentMode descending */
  PolicySpfAlignmentModeDesc = 'policySPFAlignmentMode_DESC',
  /** policySubDomain ascending */
  PolicySubDomainAsc = 'policySubDomain_ASC',
  /** policySubDomain descending */
  PolicySubDomainDesc = 'policySubDomain_DESC',
  /** recordId ascending */
  RecordIdAsc = 'recordId_ASC',
  /** recordId descending */
  RecordIdDesc = 'recordId_DESC',
  /** recordIndex ascending */
  RecordIndexAsc = 'recordIndex_ASC',
  /** recordIndex descending */
  RecordIndexDesc = 'recordIndex_DESC',
  /** reportBegin ascending */
  ReportBeginAsc = 'reportBegin_ASC',
  /** reportBegin descending */
  ReportBeginDesc = 'reportBegin_DESC',
  /** reportEnd ascending */
  ReportEndAsc = 'reportEnd_ASC',
  /** reportEnd descending */
  ReportEndDesc = 'reportEnd_DESC',
  /** reportError ascending */
  ReportErrorAsc = 'reportError_ASC',
  /** reportError descending */
  ReportErrorDesc = 'reportError_DESC',
  /** reportId ascending */
  ReportIdAsc = 'reportId_ASC',
  /** reportId descending */
  ReportIdDesc = 'reportId_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sourceIP ascending */
  SourceIpAsc = 'sourceIP_ASC',
  /** sourceIP descending */
  SourceIpDesc = 'sourceIP_DESC',
  /** sourceLocationName ascending */
  SourceLocationNameAsc = 'sourceLocationName_ASC',
  /** sourceLocationName descending */
  SourceLocationNameDesc = 'sourceLocationName_DESC',
  /** sourceOrgName ascending */
  SourceOrgNameAsc = 'sourceOrgName_ASC',
  /** sourceOrgName descending */
  SourceOrgNameDesc = 'sourceOrgName_DESC',
  /** sourceOrgSlug ascending */
  SourceOrgSlugAsc = 'sourceOrgSlug_ASC',
  /** sourceOrgSlug descending */
  SourceOrgSlugDesc = 'sourceOrgSlug_DESC',
  /** sourcePTR ascending */
  SourcePtrAsc = 'sourcePTR_ASC',
  /** sourcePTR descending */
  SourcePtrDesc = 'sourcePTR_DESC',
  /** spfMFromDomain ascending */
  SpfMFromDomainAsc = 'spfMFromDomain_ASC',
  /** spfMFromDomain descending */
  SpfMFromDomainDesc = 'spfMFromDomain_DESC',
  /** spf ascending */
  SpfAsc = 'spf_ASC',
  /** spf descending */
  SpfDesc = 'spf_DESC'
}

/** Aggregated dmarc reports by sources logs with adaptive sampling */
export type ZoneDmarcReportsSourcesAdaptiveGroups = {
  __typename?: 'ZoneDmarcReportsSourcesAdaptiveGroups';
  /** Beta. The avg of values for a metric per dimension */
  avg?: Maybe<ZoneDmarcReportsSourcesAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneDmarcReportsSourcesAdaptiveGroupsDimensions>;
  sum?: Maybe<ZoneDmarcReportsSourcesAdaptiveGroupsSum>;
  uniq?: Maybe<ZoneDmarcReportsSourcesAdaptiveGroupsUniq>;
};

export type ZoneDmarcReportsSourcesAdaptiveGroupsAvg = {
  __typename?: 'ZoneDmarcReportsSourcesAdaptiveGroupsAvg';
  /** Percentage of dkim messages pass */
  dkimPass: Scalars['float64']['output'];
  /** Percentage of dmarc messages pass */
  dmarc: Scalars['float64']['output'];
  /** Percentage of spf messages pass */
  spfPass: Scalars['float64']['output'];
};

export type ZoneDmarcReportsSourcesAdaptiveGroupsDimensions = {
  __typename?: 'ZoneDmarcReportsSourcesAdaptiveGroupsDimensions';
  /** The date the source email was received */
  date: Scalars['Date']['output'];
  /** The date and time the source email was received truncated to the day */
  datetimeDay: Scalars['Time']['output'];
  /** The date and time the source email was received truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the source email was received truncated to the last 31 days */
  datetimeLast31Days: Scalars['Time']['output'];
  /** The date and time the source email was received truncated to the month */
  datetimeMonth: Scalars['Time']['output'];
  /** The date and time the source email was received truncated to the week */
  datetimeWeek: Scalars['Time']['output'];
  /** DMARC policy disposition */
  disposition: Scalars['string']['output'];
  /** DKIM result */
  dkim: Scalars['string']['output'];
  /** Domain to which this report refers to */
  domain: Scalars['string']['output'];
  /** Envelope From of emails */
  envelopeFrom: Scalars['string']['output'];
  /** Envelope To of emails */
  envelopeTo: Scalars['string']['output'];
  /** Reason (if any) why the record was evaluated */
  evaluatedReason: Scalars['string']['output'];
  /** Header From of emails */
  headerFrom: Scalars['string']['output'];
  /** Organization that generated report */
  orgName: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** Source IP address of the email */
  sourceIP: Scalars['string']['output'];
  /** Country name from source IP */
  sourceLocationName: Scalars['string']['output'];
  /** Source IP address organisation name */
  sourceOrgName: Scalars['string']['output'];
  /** Source IP address organisation slug */
  sourceOrgSlug: Scalars['string']['output'];
  /** Source Domain from IP address */
  sourcePTR: Scalars['string']['output'];
  /** SPF result */
  spf: Scalars['string']['output'];
  /** Checked domain from scope mfrom */
  spfMFromDomain: Scalars['string']['output'];
};

export type ZoneDmarcReportsSourcesAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneDmarcReportsSourcesAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneDmarcReportsSourcesAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeDay?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeDay_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeLast31Days?: InputMaybe<Scalars['Time']['input']>;
  datetimeLast31Days_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeLast31Days_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeLast31Days_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeLast31Days_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeLast31Days_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeLast31Days_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeLast31Days_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMonth?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMonth_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMonth_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeWeek?: InputMaybe<Scalars['Time']['input']>;
  datetimeWeek_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeWeek_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeWeek_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeWeek_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeWeek_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeWeek_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeWeek_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  disposition?: InputMaybe<Scalars['string']['input']>;
  disposition_geq?: InputMaybe<Scalars['string']['input']>;
  disposition_gt?: InputMaybe<Scalars['string']['input']>;
  disposition_in?: InputMaybe<Array<Scalars['string']['input']>>;
  disposition_leq?: InputMaybe<Scalars['string']['input']>;
  disposition_like?: InputMaybe<Scalars['string']['input']>;
  disposition_lt?: InputMaybe<Scalars['string']['input']>;
  disposition_neq?: InputMaybe<Scalars['string']['input']>;
  disposition_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  disposition_notlike?: InputMaybe<Scalars['string']['input']>;
  dkim?: InputMaybe<Scalars['string']['input']>;
  dkim_geq?: InputMaybe<Scalars['string']['input']>;
  dkim_gt?: InputMaybe<Scalars['string']['input']>;
  dkim_in?: InputMaybe<Array<Scalars['string']['input']>>;
  dkim_leq?: InputMaybe<Scalars['string']['input']>;
  dkim_like?: InputMaybe<Scalars['string']['input']>;
  dkim_lt?: InputMaybe<Scalars['string']['input']>;
  dkim_neq?: InputMaybe<Scalars['string']['input']>;
  dkim_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  dkim_notlike?: InputMaybe<Scalars['string']['input']>;
  domain?: InputMaybe<Scalars['string']['input']>;
  domain_geq?: InputMaybe<Scalars['string']['input']>;
  domain_gt?: InputMaybe<Scalars['string']['input']>;
  domain_in?: InputMaybe<Array<Scalars['string']['input']>>;
  domain_leq?: InputMaybe<Scalars['string']['input']>;
  domain_like?: InputMaybe<Scalars['string']['input']>;
  domain_lt?: InputMaybe<Scalars['string']['input']>;
  domain_neq?: InputMaybe<Scalars['string']['input']>;
  domain_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  domain_notlike?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_geq?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_gt?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_in?: InputMaybe<Array<Scalars['string']['input']>>;
  envelopeFrom_leq?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_like?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_lt?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_neq?: InputMaybe<Scalars['string']['input']>;
  envelopeFrom_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  envelopeFrom_notlike?: InputMaybe<Scalars['string']['input']>;
  envelopeTo?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_geq?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_gt?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_in?: InputMaybe<Array<Scalars['string']['input']>>;
  envelopeTo_leq?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_like?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_lt?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_neq?: InputMaybe<Scalars['string']['input']>;
  envelopeTo_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  envelopeTo_notlike?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_geq?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_gt?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_in?: InputMaybe<Array<Scalars['string']['input']>>;
  evaluatedReason_leq?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_like?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_lt?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_neq?: InputMaybe<Scalars['string']['input']>;
  evaluatedReason_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  evaluatedReason_notlike?: InputMaybe<Scalars['string']['input']>;
  headerFrom?: InputMaybe<Scalars['string']['input']>;
  headerFrom_geq?: InputMaybe<Scalars['string']['input']>;
  headerFrom_gt?: InputMaybe<Scalars['string']['input']>;
  headerFrom_in?: InputMaybe<Array<Scalars['string']['input']>>;
  headerFrom_leq?: InputMaybe<Scalars['string']['input']>;
  headerFrom_like?: InputMaybe<Scalars['string']['input']>;
  headerFrom_lt?: InputMaybe<Scalars['string']['input']>;
  headerFrom_neq?: InputMaybe<Scalars['string']['input']>;
  headerFrom_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  headerFrom_notlike?: InputMaybe<Scalars['string']['input']>;
  orgName?: InputMaybe<Scalars['string']['input']>;
  orgName_geq?: InputMaybe<Scalars['string']['input']>;
  orgName_gt?: InputMaybe<Scalars['string']['input']>;
  orgName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  orgName_leq?: InputMaybe<Scalars['string']['input']>;
  orgName_like?: InputMaybe<Scalars['string']['input']>;
  orgName_lt?: InputMaybe<Scalars['string']['input']>;
  orgName_neq?: InputMaybe<Scalars['string']['input']>;
  orgName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  orgName_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sourceIP?: InputMaybe<Scalars['string']['input']>;
  sourceIP_geq?: InputMaybe<Scalars['string']['input']>;
  sourceIP_gt?: InputMaybe<Scalars['string']['input']>;
  sourceIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceIP_leq?: InputMaybe<Scalars['string']['input']>;
  sourceIP_like?: InputMaybe<Scalars['string']['input']>;
  sourceIP_lt?: InputMaybe<Scalars['string']['input']>;
  sourceIP_neq?: InputMaybe<Scalars['string']['input']>;
  sourceIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceIP_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceLocationName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_like?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceLocationName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceLocationName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_geq?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_gt?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceOrgName_leq?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_like?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_lt?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_neq?: InputMaybe<Scalars['string']['input']>;
  sourceOrgName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceOrgName_notlike?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_geq?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_gt?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceOrgSlug_leq?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_like?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_lt?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_neq?: InputMaybe<Scalars['string']['input']>;
  sourceOrgSlug_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourceOrgSlug_notlike?: InputMaybe<Scalars['string']['input']>;
  sourcePTR?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_geq?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_gt?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sourcePTR_leq?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_like?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_lt?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_neq?: InputMaybe<Scalars['string']['input']>;
  sourcePTR_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sourcePTR_notlike?: InputMaybe<Scalars['string']['input']>;
  spf?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_geq?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_gt?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_in?: InputMaybe<Array<Scalars['string']['input']>>;
  spfMFromDomain_leq?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_like?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_lt?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_neq?: InputMaybe<Scalars['string']['input']>;
  spfMFromDomain_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  spfMFromDomain_notlike?: InputMaybe<Scalars['string']['input']>;
  spf_geq?: InputMaybe<Scalars['string']['input']>;
  spf_gt?: InputMaybe<Scalars['string']['input']>;
  spf_in?: InputMaybe<Array<Scalars['string']['input']>>;
  spf_leq?: InputMaybe<Scalars['string']['input']>;
  spf_like?: InputMaybe<Scalars['string']['input']>;
  spf_lt?: InputMaybe<Scalars['string']['input']>;
  spf_neq?: InputMaybe<Scalars['string']['input']>;
  spf_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  spf_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZoneDmarcReportsSourcesAdaptiveGroupsOrderBy {
  /** avg(dkimPass) ascending */
  AvgDkimPassAsc = 'avg_dkimPass_ASC',
  /** avg(dkimPass) descending */
  AvgDkimPassDesc = 'avg_dkimPass_DESC',
  /** avg(dmarc) ascending */
  AvgDmarcAsc = 'avg_dmarc_ASC',
  /** avg(dmarc) descending */
  AvgDmarcDesc = 'avg_dmarc_DESC',
  /** avg(spfPass) ascending */
  AvgSpfPassAsc = 'avg_spfPass_ASC',
  /** avg(spfPass) descending */
  AvgSpfPassDesc = 'avg_spfPass_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeDay ascending */
  DatetimeDayAsc = 'datetimeDay_ASC',
  /** datetimeDay descending */
  DatetimeDayDesc = 'datetimeDay_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeLast31Days ascending */
  DatetimeLast31DaysAsc = 'datetimeLast31Days_ASC',
  /** datetimeLast31Days descending */
  DatetimeLast31DaysDesc = 'datetimeLast31Days_DESC',
  /** datetimeMonth ascending */
  DatetimeMonthAsc = 'datetimeMonth_ASC',
  /** datetimeMonth descending */
  DatetimeMonthDesc = 'datetimeMonth_DESC',
  /** datetimeWeek ascending */
  DatetimeWeekAsc = 'datetimeWeek_ASC',
  /** datetimeWeek descending */
  DatetimeWeekDesc = 'datetimeWeek_DESC',
  /** disposition ascending */
  DispositionAsc = 'disposition_ASC',
  /** disposition descending */
  DispositionDesc = 'disposition_DESC',
  /** dkim ascending */
  DkimAsc = 'dkim_ASC',
  /** dkim descending */
  DkimDesc = 'dkim_DESC',
  /** domain ascending */
  DomainAsc = 'domain_ASC',
  /** domain descending */
  DomainDesc = 'domain_DESC',
  /** envelopeFrom ascending */
  EnvelopeFromAsc = 'envelopeFrom_ASC',
  /** envelopeFrom descending */
  EnvelopeFromDesc = 'envelopeFrom_DESC',
  /** envelopeTo ascending */
  EnvelopeToAsc = 'envelopeTo_ASC',
  /** envelopeTo descending */
  EnvelopeToDesc = 'envelopeTo_DESC',
  /** evaluatedReason ascending */
  EvaluatedReasonAsc = 'evaluatedReason_ASC',
  /** evaluatedReason descending */
  EvaluatedReasonDesc = 'evaluatedReason_DESC',
  /** headerFrom ascending */
  HeaderFromAsc = 'headerFrom_ASC',
  /** headerFrom descending */
  HeaderFromDesc = 'headerFrom_DESC',
  /** orgName ascending */
  OrgNameAsc = 'orgName_ASC',
  /** orgName descending */
  OrgNameDesc = 'orgName_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sourceIP ascending */
  SourceIpAsc = 'sourceIP_ASC',
  /** sourceIP descending */
  SourceIpDesc = 'sourceIP_DESC',
  /** sourceLocationName ascending */
  SourceLocationNameAsc = 'sourceLocationName_ASC',
  /** sourceLocationName descending */
  SourceLocationNameDesc = 'sourceLocationName_DESC',
  /** sourceOrgName ascending */
  SourceOrgNameAsc = 'sourceOrgName_ASC',
  /** sourceOrgName descending */
  SourceOrgNameDesc = 'sourceOrgName_DESC',
  /** sourceOrgSlug ascending */
  SourceOrgSlugAsc = 'sourceOrgSlug_ASC',
  /** sourceOrgSlug descending */
  SourceOrgSlugDesc = 'sourceOrgSlug_DESC',
  /** sourcePTR ascending */
  SourcePtrAsc = 'sourcePTR_ASC',
  /** sourcePTR descending */
  SourcePtrDesc = 'sourcePTR_DESC',
  /** spfMFromDomain ascending */
  SpfMFromDomainAsc = 'spfMFromDomain_ASC',
  /** spfMFromDomain descending */
  SpfMFromDomainDesc = 'spfMFromDomain_DESC',
  /** spf ascending */
  SpfAsc = 'spf_ASC',
  /** spf descending */
  SpfDesc = 'spf_DESC',
  /** sum(dkimPass) ascending */
  SumDkimPassAsc = 'sum_dkimPass_ASC',
  /** sum(dkimPass) descending */
  SumDkimPassDesc = 'sum_dkimPass_DESC',
  /** sum(dmarc) ascending */
  SumDmarcAsc = 'sum_dmarc_ASC',
  /** sum(dmarc) descending */
  SumDmarcDesc = 'sum_dmarc_DESC',
  /** sum(spfPass) ascending */
  SumSpfPassAsc = 'sum_spfPass_ASC',
  /** sum(spfPass) descending */
  SumSpfPassDesc = 'sum_spfPass_DESC',
  /** sum(totalMatchingMessages) ascending */
  SumTotalMatchingMessagesAsc = 'sum_totalMatchingMessages_ASC',
  /** sum(totalMatchingMessages) descending */
  SumTotalMatchingMessagesDesc = 'sum_totalMatchingMessages_DESC',
  /** uniq(ipCount) ascending */
  UniqIpCountAsc = 'uniq_ipCount_ASC',
  /** uniq(ipCount) descending */
  UniqIpCountDesc = 'uniq_ipCount_DESC'
}

export type ZoneDmarcReportsSourcesAdaptiveGroupsSum = {
  __typename?: 'ZoneDmarcReportsSourcesAdaptiveGroupsSum';
  /** Total of dkim messages pass */
  dkimPass: Scalars['uint64']['output'];
  /** Total of dmarc messages pass */
  dmarc: Scalars['uint64']['output'];
  /** Total of spf messages pass */
  spfPass: Scalars['uint64']['output'];
  /** Total matching messages */
  totalMatchingMessages: Scalars['uint64']['output'];
};

export type ZoneDmarcReportsSourcesAdaptiveGroupsUniq = {
  __typename?: 'ZoneDmarcReportsSourcesAdaptiveGroupsUniq';
  /** Number of distinct IPs */
  ipCount: Scalars['uint64']['output'];
};

/** Analytics data for DNS queries (currently, only Foundation DNS zones are supported) */
export type ZoneDnsAnalyticsAdaptive = {
  __typename?: 'ZoneDnsAnalyticsAdaptive';
  /** IATA airport code of the data center that processed the query */
  coloName: Scalars['string']['output'];
  /** Internet Protocol version over which the query was received */
  ipVersion: Scalars['uint8']['output'];
  /** Transport protocol over which the query was received */
  protocol: Scalars['string']['output'];
  /** DNS query name without trailing dot */
  queryName: Scalars['string']['output'];
  /** Size of the DNS query in bytes */
  querySize: Scalars['uint16']['output'];
  /** DNS query type */
  queryType: Scalars['string']['output'];
  /** Whether the DNS response was served from cache */
  responseCached: Scalars['uint8']['output'];
  /** DNS response code */
  responseCode: Scalars['string']['output'];
  /** Size of the DNS response in bytes */
  responseSize: Scalars['uint16']['output'];
  /** Whether a stale DNS response was served from cache */
  responseStale: Scalars['uint8']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** Time at which the query was received */
  timestamp: Scalars['Time']['output'];
  /** Upstream server that the query was forwarded to */
  upstream: Scalars['string']['output'];
};

export type ZoneDnsAnalyticsAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneDnsAnalyticsAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneDnsAnalyticsAdaptiveFilter_InputObject>>;
  coloName?: InputMaybe<Scalars['string']['input']>;
  coloName_geq?: InputMaybe<Scalars['string']['input']>;
  coloName_gt?: InputMaybe<Scalars['string']['input']>;
  coloName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_leq?: InputMaybe<Scalars['string']['input']>;
  coloName_like?: InputMaybe<Scalars['string']['input']>;
  coloName_lt?: InputMaybe<Scalars['string']['input']>;
  coloName_neq?: InputMaybe<Scalars['string']['input']>;
  coloName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipVersion?: InputMaybe<Scalars['uint8']['input']>;
  ipVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  ipVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  protocol?: InputMaybe<Scalars['string']['input']>;
  protocol_geq?: InputMaybe<Scalars['string']['input']>;
  protocol_gt?: InputMaybe<Scalars['string']['input']>;
  protocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  protocol_leq?: InputMaybe<Scalars['string']['input']>;
  protocol_like?: InputMaybe<Scalars['string']['input']>;
  protocol_lt?: InputMaybe<Scalars['string']['input']>;
  protocol_neq?: InputMaybe<Scalars['string']['input']>;
  protocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  protocol_notlike?: InputMaybe<Scalars['string']['input']>;
  queryName?: InputMaybe<Scalars['string']['input']>;
  queryName_geq?: InputMaybe<Scalars['string']['input']>;
  queryName_gt?: InputMaybe<Scalars['string']['input']>;
  queryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  queryName_leq?: InputMaybe<Scalars['string']['input']>;
  queryName_like?: InputMaybe<Scalars['string']['input']>;
  queryName_lt?: InputMaybe<Scalars['string']['input']>;
  queryName_neq?: InputMaybe<Scalars['string']['input']>;
  queryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  queryName_notlike?: InputMaybe<Scalars['string']['input']>;
  querySize?: InputMaybe<Scalars['uint16']['input']>;
  querySize_geq?: InputMaybe<Scalars['uint16']['input']>;
  querySize_gt?: InputMaybe<Scalars['uint16']['input']>;
  querySize_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  querySize_leq?: InputMaybe<Scalars['uint16']['input']>;
  querySize_lt?: InputMaybe<Scalars['uint16']['input']>;
  querySize_neq?: InputMaybe<Scalars['uint16']['input']>;
  querySize_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  queryType?: InputMaybe<Scalars['string']['input']>;
  queryType_geq?: InputMaybe<Scalars['string']['input']>;
  queryType_gt?: InputMaybe<Scalars['string']['input']>;
  queryType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  queryType_leq?: InputMaybe<Scalars['string']['input']>;
  queryType_like?: InputMaybe<Scalars['string']['input']>;
  queryType_lt?: InputMaybe<Scalars['string']['input']>;
  queryType_neq?: InputMaybe<Scalars['string']['input']>;
  queryType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  queryType_notlike?: InputMaybe<Scalars['string']['input']>;
  responseCached?: InputMaybe<Scalars['uint8']['input']>;
  responseCached_geq?: InputMaybe<Scalars['uint8']['input']>;
  responseCached_gt?: InputMaybe<Scalars['uint8']['input']>;
  responseCached_in?: InputMaybe<Scalars['bytes']['input']>;
  responseCached_leq?: InputMaybe<Scalars['uint8']['input']>;
  responseCached_lt?: InputMaybe<Scalars['uint8']['input']>;
  responseCached_neq?: InputMaybe<Scalars['uint8']['input']>;
  responseCached_notin?: InputMaybe<Scalars['bytes']['input']>;
  responseCode?: InputMaybe<Scalars['string']['input']>;
  responseCode_geq?: InputMaybe<Scalars['string']['input']>;
  responseCode_gt?: InputMaybe<Scalars['string']['input']>;
  responseCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  responseCode_leq?: InputMaybe<Scalars['string']['input']>;
  responseCode_like?: InputMaybe<Scalars['string']['input']>;
  responseCode_lt?: InputMaybe<Scalars['string']['input']>;
  responseCode_neq?: InputMaybe<Scalars['string']['input']>;
  responseCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  responseCode_notlike?: InputMaybe<Scalars['string']['input']>;
  responseSize?: InputMaybe<Scalars['uint16']['input']>;
  responseSize_geq?: InputMaybe<Scalars['uint16']['input']>;
  responseSize_gt?: InputMaybe<Scalars['uint16']['input']>;
  responseSize_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  responseSize_leq?: InputMaybe<Scalars['uint16']['input']>;
  responseSize_lt?: InputMaybe<Scalars['uint16']['input']>;
  responseSize_neq?: InputMaybe<Scalars['uint16']['input']>;
  responseSize_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  responseStale?: InputMaybe<Scalars['uint8']['input']>;
  responseStale_geq?: InputMaybe<Scalars['uint8']['input']>;
  responseStale_gt?: InputMaybe<Scalars['uint8']['input']>;
  responseStale_in?: InputMaybe<Scalars['bytes']['input']>;
  responseStale_leq?: InputMaybe<Scalars['uint8']['input']>;
  responseStale_lt?: InputMaybe<Scalars['uint8']['input']>;
  responseStale_neq?: InputMaybe<Scalars['uint8']['input']>;
  responseStale_notin?: InputMaybe<Scalars['bytes']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  timestamp?: InputMaybe<Scalars['Time']['input']>;
  timestamp_geq?: InputMaybe<Scalars['Time']['input']>;
  timestamp_gt?: InputMaybe<Scalars['Time']['input']>;
  timestamp_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  timestamp_leq?: InputMaybe<Scalars['Time']['input']>;
  timestamp_lt?: InputMaybe<Scalars['Time']['input']>;
  timestamp_neq?: InputMaybe<Scalars['Time']['input']>;
  timestamp_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  upstream?: InputMaybe<Scalars['string']['input']>;
  upstream_geq?: InputMaybe<Scalars['string']['input']>;
  upstream_gt?: InputMaybe<Scalars['string']['input']>;
  upstream_in?: InputMaybe<Array<Scalars['string']['input']>>;
  upstream_leq?: InputMaybe<Scalars['string']['input']>;
  upstream_like?: InputMaybe<Scalars['string']['input']>;
  upstream_lt?: InputMaybe<Scalars['string']['input']>;
  upstream_neq?: InputMaybe<Scalars['string']['input']>;
  upstream_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  upstream_notlike?: InputMaybe<Scalars['string']['input']>;
};

/** Analytics data for DNS queries (currently, only Foundation DNS zones are supported) */
export type ZoneDnsAnalyticsAdaptiveGroups = {
  __typename?: 'ZoneDnsAnalyticsAdaptiveGroups';
  /** Average of a metric per dimension */
  avg?: Maybe<ZoneDnsAnalyticsAdaptiveGroupsAvg>;
  /** Number of queries per dimension */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneDnsAnalyticsAdaptiveGroupsDimensions>;
  /** Quantiles of a metric per dimension */
  quantiles?: Maybe<ZoneDnsAnalyticsAdaptiveGroupsQuantiles>;
};

export type ZoneDnsAnalyticsAdaptiveGroupsAvg = {
  __typename?: 'ZoneDnsAnalyticsAdaptiveGroupsAvg';
  /** Average response time in microseconds */
  responseTimeUs: Scalars['float64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneDnsAnalyticsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneDnsAnalyticsAdaptiveGroupsDimensions';
  /** IATA airport code of the data center that processed the query */
  coloName: Scalars['string']['output'];
  /** Internet Protocol version over which the query was received */
  ipVersion: Scalars['uint8']['output'];
  /** Transport protocol over which the query was received */
  protocol: Scalars['string']['output'];
  /** DNS query name without trailing dot */
  queryName: Scalars['string']['output'];
  /** Size of the DNS query in bytes (in multiples of 16) */
  querySizeBucket: Scalars['string']['output'];
  /** DNS query type */
  queryType: Scalars['string']['output'];
  /** Whether the DNS response was served from cache */
  responseCached: Scalars['uint8']['output'];
  /** DNS response code */
  responseCode: Scalars['string']['output'];
  /** Size of the DNS response in bytes (in multiples of 16) */
  responseSizeBucket: Scalars['string']['output'];
  /** Whether a stale DNS response was served from cache */
  responseStale: Scalars['uint8']['output'];
  /** Time at which the query was received */
  timestamp: Scalars['Time']['output'];
  /** Upstream server that the query was forwarded to */
  upstream: Scalars['string']['output'];
};

export type ZoneDnsAnalyticsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneDnsAnalyticsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneDnsAnalyticsAdaptiveGroupsFilter_InputObject>>;
  coloName?: InputMaybe<Scalars['string']['input']>;
  coloName_geq?: InputMaybe<Scalars['string']['input']>;
  coloName_gt?: InputMaybe<Scalars['string']['input']>;
  coloName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_leq?: InputMaybe<Scalars['string']['input']>;
  coloName_like?: InputMaybe<Scalars['string']['input']>;
  coloName_lt?: InputMaybe<Scalars['string']['input']>;
  coloName_neq?: InputMaybe<Scalars['string']['input']>;
  coloName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloName_notlike?: InputMaybe<Scalars['string']['input']>;
  ipVersion?: InputMaybe<Scalars['uint8']['input']>;
  ipVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  ipVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  ipVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  ipVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  ipVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  ipVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  ipVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  protocol?: InputMaybe<Scalars['string']['input']>;
  protocol_geq?: InputMaybe<Scalars['string']['input']>;
  protocol_gt?: InputMaybe<Scalars['string']['input']>;
  protocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  protocol_leq?: InputMaybe<Scalars['string']['input']>;
  protocol_like?: InputMaybe<Scalars['string']['input']>;
  protocol_lt?: InputMaybe<Scalars['string']['input']>;
  protocol_neq?: InputMaybe<Scalars['string']['input']>;
  protocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  protocol_notlike?: InputMaybe<Scalars['string']['input']>;
  queryName?: InputMaybe<Scalars['string']['input']>;
  queryName_geq?: InputMaybe<Scalars['string']['input']>;
  queryName_gt?: InputMaybe<Scalars['string']['input']>;
  queryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  queryName_leq?: InputMaybe<Scalars['string']['input']>;
  queryName_like?: InputMaybe<Scalars['string']['input']>;
  queryName_lt?: InputMaybe<Scalars['string']['input']>;
  queryName_neq?: InputMaybe<Scalars['string']['input']>;
  queryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  queryName_notlike?: InputMaybe<Scalars['string']['input']>;
  querySizeBucket?: InputMaybe<Scalars['string']['input']>;
  querySizeBucket_geq?: InputMaybe<Scalars['string']['input']>;
  querySizeBucket_gt?: InputMaybe<Scalars['string']['input']>;
  querySizeBucket_in?: InputMaybe<Array<Scalars['string']['input']>>;
  querySizeBucket_leq?: InputMaybe<Scalars['string']['input']>;
  querySizeBucket_like?: InputMaybe<Scalars['string']['input']>;
  querySizeBucket_lt?: InputMaybe<Scalars['string']['input']>;
  querySizeBucket_neq?: InputMaybe<Scalars['string']['input']>;
  querySizeBucket_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  querySizeBucket_notlike?: InputMaybe<Scalars['string']['input']>;
  queryType?: InputMaybe<Scalars['string']['input']>;
  queryType_geq?: InputMaybe<Scalars['string']['input']>;
  queryType_gt?: InputMaybe<Scalars['string']['input']>;
  queryType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  queryType_leq?: InputMaybe<Scalars['string']['input']>;
  queryType_like?: InputMaybe<Scalars['string']['input']>;
  queryType_lt?: InputMaybe<Scalars['string']['input']>;
  queryType_neq?: InputMaybe<Scalars['string']['input']>;
  queryType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  queryType_notlike?: InputMaybe<Scalars['string']['input']>;
  responseCached?: InputMaybe<Scalars['uint8']['input']>;
  responseCached_geq?: InputMaybe<Scalars['uint8']['input']>;
  responseCached_gt?: InputMaybe<Scalars['uint8']['input']>;
  responseCached_in?: InputMaybe<Scalars['bytes']['input']>;
  responseCached_leq?: InputMaybe<Scalars['uint8']['input']>;
  responseCached_lt?: InputMaybe<Scalars['uint8']['input']>;
  responseCached_neq?: InputMaybe<Scalars['uint8']['input']>;
  responseCached_notin?: InputMaybe<Scalars['bytes']['input']>;
  responseCode?: InputMaybe<Scalars['string']['input']>;
  responseCode_geq?: InputMaybe<Scalars['string']['input']>;
  responseCode_gt?: InputMaybe<Scalars['string']['input']>;
  responseCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  responseCode_leq?: InputMaybe<Scalars['string']['input']>;
  responseCode_like?: InputMaybe<Scalars['string']['input']>;
  responseCode_lt?: InputMaybe<Scalars['string']['input']>;
  responseCode_neq?: InputMaybe<Scalars['string']['input']>;
  responseCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  responseCode_notlike?: InputMaybe<Scalars['string']['input']>;
  responseSizeBucket?: InputMaybe<Scalars['string']['input']>;
  responseSizeBucket_geq?: InputMaybe<Scalars['string']['input']>;
  responseSizeBucket_gt?: InputMaybe<Scalars['string']['input']>;
  responseSizeBucket_in?: InputMaybe<Array<Scalars['string']['input']>>;
  responseSizeBucket_leq?: InputMaybe<Scalars['string']['input']>;
  responseSizeBucket_like?: InputMaybe<Scalars['string']['input']>;
  responseSizeBucket_lt?: InputMaybe<Scalars['string']['input']>;
  responseSizeBucket_neq?: InputMaybe<Scalars['string']['input']>;
  responseSizeBucket_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  responseSizeBucket_notlike?: InputMaybe<Scalars['string']['input']>;
  responseStale?: InputMaybe<Scalars['uint8']['input']>;
  responseStale_geq?: InputMaybe<Scalars['uint8']['input']>;
  responseStale_gt?: InputMaybe<Scalars['uint8']['input']>;
  responseStale_in?: InputMaybe<Scalars['bytes']['input']>;
  responseStale_leq?: InputMaybe<Scalars['uint8']['input']>;
  responseStale_lt?: InputMaybe<Scalars['uint8']['input']>;
  responseStale_neq?: InputMaybe<Scalars['uint8']['input']>;
  responseStale_notin?: InputMaybe<Scalars['bytes']['input']>;
  timestamp?: InputMaybe<Scalars['Time']['input']>;
  timestamp_geq?: InputMaybe<Scalars['Time']['input']>;
  timestamp_gt?: InputMaybe<Scalars['Time']['input']>;
  timestamp_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  timestamp_leq?: InputMaybe<Scalars['Time']['input']>;
  timestamp_lt?: InputMaybe<Scalars['Time']['input']>;
  timestamp_neq?: InputMaybe<Scalars['Time']['input']>;
  timestamp_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  upstream?: InputMaybe<Scalars['string']['input']>;
  upstream_geq?: InputMaybe<Scalars['string']['input']>;
  upstream_gt?: InputMaybe<Scalars['string']['input']>;
  upstream_in?: InputMaybe<Array<Scalars['string']['input']>>;
  upstream_leq?: InputMaybe<Scalars['string']['input']>;
  upstream_like?: InputMaybe<Scalars['string']['input']>;
  upstream_lt?: InputMaybe<Scalars['string']['input']>;
  upstream_neq?: InputMaybe<Scalars['string']['input']>;
  upstream_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  upstream_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZoneDnsAnalyticsAdaptiveGroupsOrderBy {
  /** avg(responseTimeUs) ascending */
  AvgResponseTimeUsAsc = 'avg_responseTimeUs_ASC',
  /** avg(responseTimeUs) descending */
  AvgResponseTimeUsDesc = 'avg_responseTimeUs_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** coloName ascending */
  ColoNameAsc = 'coloName_ASC',
  /** coloName descending */
  ColoNameDesc = 'coloName_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** instanceCode ascending */
  InstanceCodeAsc = 'instanceCode_ASC',
  /** instanceCode descending */
  InstanceCodeDesc = 'instanceCode_DESC',
  /** ipVersion ascending */
  IpVersionAsc = 'ipVersion_ASC',
  /** ipVersion descending */
  IpVersionDesc = 'ipVersion_DESC',
  /** protocol ascending */
  ProtocolAsc = 'protocol_ASC',
  /** protocol descending */
  ProtocolDesc = 'protocol_DESC',
  /** quantiles(responseTimeUsP50) ascending */
  QuantilesResponseTimeUsP50Asc = 'quantiles_responseTimeUsP50_ASC',
  /** quantiles(responseTimeUsP50) descending */
  QuantilesResponseTimeUsP50Desc = 'quantiles_responseTimeUsP50_DESC',
  /** quantiles(responseTimeUsP90) ascending */
  QuantilesResponseTimeUsP90Asc = 'quantiles_responseTimeUsP90_ASC',
  /** quantiles(responseTimeUsP90) descending */
  QuantilesResponseTimeUsP90Desc = 'quantiles_responseTimeUsP90_DESC',
  /** quantiles(responseTimeUsP99) ascending */
  QuantilesResponseTimeUsP99Asc = 'quantiles_responseTimeUsP99_ASC',
  /** quantiles(responseTimeUsP99) descending */
  QuantilesResponseTimeUsP99Desc = 'quantiles_responseTimeUsP99_DESC',
  /** queryName ascending */
  QueryNameAsc = 'queryName_ASC',
  /** queryName descending */
  QueryNameDesc = 'queryName_DESC',
  /** querySizeBucket ascending */
  QuerySizeBucketAsc = 'querySizeBucket_ASC',
  /** querySizeBucket descending */
  QuerySizeBucketDesc = 'querySizeBucket_DESC',
  /** queryType ascending */
  QueryTypeAsc = 'queryType_ASC',
  /** queryType descending */
  QueryTypeDesc = 'queryType_DESC',
  /** responseCached ascending */
  ResponseCachedAsc = 'responseCached_ASC',
  /** responseCached descending */
  ResponseCachedDesc = 'responseCached_DESC',
  /** responseCode ascending */
  ResponseCodeAsc = 'responseCode_ASC',
  /** responseCode descending */
  ResponseCodeDesc = 'responseCode_DESC',
  /** responseSizeBucket ascending */
  ResponseSizeBucketAsc = 'responseSizeBucket_ASC',
  /** responseSizeBucket descending */
  ResponseSizeBucketDesc = 'responseSizeBucket_DESC',
  /** responseStale ascending */
  ResponseStaleAsc = 'responseStale_ASC',
  /** responseStale descending */
  ResponseStaleDesc = 'responseStale_DESC',
  /** timestamp ascending */
  TimestampAsc = 'timestamp_ASC',
  /** timestamp descending */
  TimestampDesc = 'timestamp_DESC',
  /** upstream ascending */
  UpstreamAsc = 'upstream_ASC',
  /** upstream descending */
  UpstreamDesc = 'upstream_DESC'
}

export type ZoneDnsAnalyticsAdaptiveGroupsQuantiles = {
  __typename?: 'ZoneDnsAnalyticsAdaptiveGroupsQuantiles';
  /** 50th percentile response time in microseconds (median) */
  responseTimeUsP50: Scalars['float64']['output'];
  /** 90th percentile response time in microseconds */
  responseTimeUsP90: Scalars['float64']['output'];
  /** 99th percentile response time in microseconds */
  responseTimeUsP99: Scalars['float64']['output'];
};

export enum ZoneDnsAnalyticsAdaptiveOrderBy {
  /** coloName ascending */
  ColoNameAsc = 'coloName_ASC',
  /** coloName descending */
  ColoNameDesc = 'coloName_DESC',
  /** instanceCode ascending */
  InstanceCodeAsc = 'instanceCode_ASC',
  /** instanceCode descending */
  InstanceCodeDesc = 'instanceCode_DESC',
  /** ipVersion ascending */
  IpVersionAsc = 'ipVersion_ASC',
  /** ipVersion descending */
  IpVersionDesc = 'ipVersion_DESC',
  /** protocol ascending */
  ProtocolAsc = 'protocol_ASC',
  /** protocol descending */
  ProtocolDesc = 'protocol_DESC',
  /** queryName ascending */
  QueryNameAsc = 'queryName_ASC',
  /** queryName descending */
  QueryNameDesc = 'queryName_DESC',
  /** querySize ascending */
  QuerySizeAsc = 'querySize_ASC',
  /** querySize descending */
  QuerySizeDesc = 'querySize_DESC',
  /** queryType ascending */
  QueryTypeAsc = 'queryType_ASC',
  /** queryType descending */
  QueryTypeDesc = 'queryType_DESC',
  /** responseCached ascending */
  ResponseCachedAsc = 'responseCached_ASC',
  /** responseCached descending */
  ResponseCachedDesc = 'responseCached_DESC',
  /** responseCode ascending */
  ResponseCodeAsc = 'responseCode_ASC',
  /** responseCode descending */
  ResponseCodeDesc = 'responseCode_DESC',
  /** responseSize ascending */
  ResponseSizeAsc = 'responseSize_ASC',
  /** responseSize descending */
  ResponseSizeDesc = 'responseSize_DESC',
  /** responseStale ascending */
  ResponseStaleAsc = 'responseStale_ASC',
  /** responseStale descending */
  ResponseStaleDesc = 'responseStale_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** timestamp ascending */
  TimestampAsc = 'timestamp_ASC',
  /** timestamp descending */
  TimestampDesc = 'timestamp_DESC',
  /** upstream ascending */
  UpstreamAsc = 'upstream_ASC',
  /** upstream descending */
  UpstreamDesc = 'upstream_DESC'
}

/** Beta. Raw email routing logs with adaptive sampling */
export type ZoneEmailRoutingAdaptive = {
  __typename?: 'ZoneEmailRoutingAdaptive';
  /** The date and time the source email was received */
  datetime: Scalars['Time']['output'];
  /** DKIM check status of the source email */
  dkim: Scalars['string']['output'];
  /** DMARC check status of the source email */
  dmarc: Scalars['string']['output'];
  /** Detailed error message (if any) */
  errorDetail: Scalars['string']['output'];
  /** The sender email address of the source email */
  from: Scalars['string']['output'];
  /** Is this event related to a NDR (bounce) email? */
  isNDR: Scalars['uint8']['output'];
  /** The Message-ID header of the source email (if present) */
  messageId: Scalars['string']['output'];
  /** The UUID of the routing rule matched by the source email */
  ruleMatched: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** Unique identifier for the email log entry (note: retries for the same email may result in multiple log entries) */
  sessionId: Scalars['string']['output'];
  /** SPF check status of the source email */
  spf: Scalars['string']['output'];
  /** The resulting outcome (action) for the email */
  status: Scalars['string']['output'];
  /** The subject of the source email */
  subject: Scalars['string']['output'];
  /** The recipient email address of the source email */
  to: Scalars['string']['output'];
};

export type ZoneEmailRoutingAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneEmailRoutingAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneEmailRoutingAdaptiveFilter_InputObject>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  dkim?: InputMaybe<Scalars['string']['input']>;
  dkim_geq?: InputMaybe<Scalars['string']['input']>;
  dkim_gt?: InputMaybe<Scalars['string']['input']>;
  dkim_in?: InputMaybe<Array<Scalars['string']['input']>>;
  dkim_leq?: InputMaybe<Scalars['string']['input']>;
  dkim_like?: InputMaybe<Scalars['string']['input']>;
  dkim_lt?: InputMaybe<Scalars['string']['input']>;
  dkim_neq?: InputMaybe<Scalars['string']['input']>;
  dkim_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  dkim_notlike?: InputMaybe<Scalars['string']['input']>;
  dmarc?: InputMaybe<Scalars['string']['input']>;
  dmarc_geq?: InputMaybe<Scalars['string']['input']>;
  dmarc_gt?: InputMaybe<Scalars['string']['input']>;
  dmarc_in?: InputMaybe<Array<Scalars['string']['input']>>;
  dmarc_leq?: InputMaybe<Scalars['string']['input']>;
  dmarc_like?: InputMaybe<Scalars['string']['input']>;
  dmarc_lt?: InputMaybe<Scalars['string']['input']>;
  dmarc_neq?: InputMaybe<Scalars['string']['input']>;
  dmarc_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  dmarc_notlike?: InputMaybe<Scalars['string']['input']>;
  errorDetail?: InputMaybe<Scalars['string']['input']>;
  errorDetail_geq?: InputMaybe<Scalars['string']['input']>;
  errorDetail_gt?: InputMaybe<Scalars['string']['input']>;
  errorDetail_in?: InputMaybe<Array<Scalars['string']['input']>>;
  errorDetail_leq?: InputMaybe<Scalars['string']['input']>;
  errorDetail_like?: InputMaybe<Scalars['string']['input']>;
  errorDetail_lt?: InputMaybe<Scalars['string']['input']>;
  errorDetail_neq?: InputMaybe<Scalars['string']['input']>;
  errorDetail_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  errorDetail_notlike?: InputMaybe<Scalars['string']['input']>;
  from?: InputMaybe<Scalars['string']['input']>;
  from_geq?: InputMaybe<Scalars['string']['input']>;
  from_gt?: InputMaybe<Scalars['string']['input']>;
  from_in?: InputMaybe<Array<Scalars['string']['input']>>;
  from_leq?: InputMaybe<Scalars['string']['input']>;
  from_like?: InputMaybe<Scalars['string']['input']>;
  from_lt?: InputMaybe<Scalars['string']['input']>;
  from_neq?: InputMaybe<Scalars['string']['input']>;
  from_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  from_notlike?: InputMaybe<Scalars['string']['input']>;
  isNDR?: InputMaybe<Scalars['uint8']['input']>;
  isNDR_geq?: InputMaybe<Scalars['uint8']['input']>;
  isNDR_gt?: InputMaybe<Scalars['uint8']['input']>;
  isNDR_in?: InputMaybe<Scalars['bytes']['input']>;
  isNDR_leq?: InputMaybe<Scalars['uint8']['input']>;
  isNDR_lt?: InputMaybe<Scalars['uint8']['input']>;
  isNDR_neq?: InputMaybe<Scalars['uint8']['input']>;
  isNDR_notin?: InputMaybe<Scalars['bytes']['input']>;
  messageId?: InputMaybe<Scalars['string']['input']>;
  messageId_geq?: InputMaybe<Scalars['string']['input']>;
  messageId_gt?: InputMaybe<Scalars['string']['input']>;
  messageId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  messageId_leq?: InputMaybe<Scalars['string']['input']>;
  messageId_like?: InputMaybe<Scalars['string']['input']>;
  messageId_lt?: InputMaybe<Scalars['string']['input']>;
  messageId_neq?: InputMaybe<Scalars['string']['input']>;
  messageId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  messageId_notlike?: InputMaybe<Scalars['string']['input']>;
  ruleMatched?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_geq?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_gt?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleMatched_leq?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_like?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_lt?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_neq?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleMatched_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sessionId?: InputMaybe<Scalars['string']['input']>;
  sessionId_geq?: InputMaybe<Scalars['string']['input']>;
  sessionId_gt?: InputMaybe<Scalars['string']['input']>;
  sessionId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sessionId_leq?: InputMaybe<Scalars['string']['input']>;
  sessionId_like?: InputMaybe<Scalars['string']['input']>;
  sessionId_lt?: InputMaybe<Scalars['string']['input']>;
  sessionId_neq?: InputMaybe<Scalars['string']['input']>;
  sessionId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sessionId_notlike?: InputMaybe<Scalars['string']['input']>;
  spf?: InputMaybe<Scalars['string']['input']>;
  spf_geq?: InputMaybe<Scalars['string']['input']>;
  spf_gt?: InputMaybe<Scalars['string']['input']>;
  spf_in?: InputMaybe<Array<Scalars['string']['input']>>;
  spf_leq?: InputMaybe<Scalars['string']['input']>;
  spf_like?: InputMaybe<Scalars['string']['input']>;
  spf_lt?: InputMaybe<Scalars['string']['input']>;
  spf_neq?: InputMaybe<Scalars['string']['input']>;
  spf_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  spf_notlike?: InputMaybe<Scalars['string']['input']>;
  status?: InputMaybe<Scalars['string']['input']>;
  status_geq?: InputMaybe<Scalars['string']['input']>;
  status_gt?: InputMaybe<Scalars['string']['input']>;
  status_in?: InputMaybe<Array<Scalars['string']['input']>>;
  status_leq?: InputMaybe<Scalars['string']['input']>;
  status_like?: InputMaybe<Scalars['string']['input']>;
  status_lt?: InputMaybe<Scalars['string']['input']>;
  status_neq?: InputMaybe<Scalars['string']['input']>;
  status_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  status_notlike?: InputMaybe<Scalars['string']['input']>;
  subject?: InputMaybe<Scalars['string']['input']>;
  subject_geq?: InputMaybe<Scalars['string']['input']>;
  subject_gt?: InputMaybe<Scalars['string']['input']>;
  subject_in?: InputMaybe<Array<Scalars['string']['input']>>;
  subject_leq?: InputMaybe<Scalars['string']['input']>;
  subject_like?: InputMaybe<Scalars['string']['input']>;
  subject_lt?: InputMaybe<Scalars['string']['input']>;
  subject_neq?: InputMaybe<Scalars['string']['input']>;
  subject_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  subject_notlike?: InputMaybe<Scalars['string']['input']>;
  to?: InputMaybe<Scalars['string']['input']>;
  to_geq?: InputMaybe<Scalars['string']['input']>;
  to_gt?: InputMaybe<Scalars['string']['input']>;
  to_in?: InputMaybe<Array<Scalars['string']['input']>>;
  to_leq?: InputMaybe<Scalars['string']['input']>;
  to_like?: InputMaybe<Scalars['string']['input']>;
  to_lt?: InputMaybe<Scalars['string']['input']>;
  to_neq?: InputMaybe<Scalars['string']['input']>;
  to_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  to_notlike?: InputMaybe<Scalars['string']['input']>;
};

/** Beta. Aggregated email routing logs with adaptive sampling */
export type ZoneEmailRoutingAdaptiveGroups = {
  __typename?: 'ZoneEmailRoutingAdaptiveGroups';
  /** Number of emails processed (approximation when sampleInterval > 1) */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneEmailRoutingAdaptiveGroupsDimensions>;
};

export type ZoneEmailRoutingAdaptiveGroupsDimensions = {
  __typename?: 'ZoneEmailRoutingAdaptiveGroupsDimensions';
  /** The date the source email was received */
  date: Scalars['Date']['output'];
  /** The date and time the source email was received truncated to fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the source email was received truncated to five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the source email was received truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the source email was received truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** DKIM check status of the source email */
  dkim: Scalars['string']['output'];
  /** DMARC check status of the source email */
  dmarc: Scalars['string']['output'];
  /** Is this event related to a NDR (bounce) email? */
  isNDR: Scalars['uint8']['output'];
  /** The UUID of the routing rule matched by the source email */
  ruleMatched: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** SPF check status of the source email */
  spf: Scalars['string']['output'];
  /** The resulting outcome (action) for the email */
  status: Scalars['string']['output'];
};

export type ZoneEmailRoutingAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneEmailRoutingAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneEmailRoutingAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  dkim?: InputMaybe<Scalars['string']['input']>;
  dkim_geq?: InputMaybe<Scalars['string']['input']>;
  dkim_gt?: InputMaybe<Scalars['string']['input']>;
  dkim_in?: InputMaybe<Array<Scalars['string']['input']>>;
  dkim_leq?: InputMaybe<Scalars['string']['input']>;
  dkim_like?: InputMaybe<Scalars['string']['input']>;
  dkim_lt?: InputMaybe<Scalars['string']['input']>;
  dkim_neq?: InputMaybe<Scalars['string']['input']>;
  dkim_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  dkim_notlike?: InputMaybe<Scalars['string']['input']>;
  dmarc?: InputMaybe<Scalars['string']['input']>;
  dmarc_geq?: InputMaybe<Scalars['string']['input']>;
  dmarc_gt?: InputMaybe<Scalars['string']['input']>;
  dmarc_in?: InputMaybe<Array<Scalars['string']['input']>>;
  dmarc_leq?: InputMaybe<Scalars['string']['input']>;
  dmarc_like?: InputMaybe<Scalars['string']['input']>;
  dmarc_lt?: InputMaybe<Scalars['string']['input']>;
  dmarc_neq?: InputMaybe<Scalars['string']['input']>;
  dmarc_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  dmarc_notlike?: InputMaybe<Scalars['string']['input']>;
  isNDR?: InputMaybe<Scalars['uint8']['input']>;
  isNDR_geq?: InputMaybe<Scalars['uint8']['input']>;
  isNDR_gt?: InputMaybe<Scalars['uint8']['input']>;
  isNDR_in?: InputMaybe<Scalars['bytes']['input']>;
  isNDR_leq?: InputMaybe<Scalars['uint8']['input']>;
  isNDR_lt?: InputMaybe<Scalars['uint8']['input']>;
  isNDR_neq?: InputMaybe<Scalars['uint8']['input']>;
  isNDR_notin?: InputMaybe<Scalars['bytes']['input']>;
  ruleMatched?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_geq?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_gt?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleMatched_leq?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_like?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_lt?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_neq?: InputMaybe<Scalars['string']['input']>;
  ruleMatched_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleMatched_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  spf?: InputMaybe<Scalars['string']['input']>;
  spf_geq?: InputMaybe<Scalars['string']['input']>;
  spf_gt?: InputMaybe<Scalars['string']['input']>;
  spf_in?: InputMaybe<Array<Scalars['string']['input']>>;
  spf_leq?: InputMaybe<Scalars['string']['input']>;
  spf_like?: InputMaybe<Scalars['string']['input']>;
  spf_lt?: InputMaybe<Scalars['string']['input']>;
  spf_neq?: InputMaybe<Scalars['string']['input']>;
  spf_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  spf_notlike?: InputMaybe<Scalars['string']['input']>;
  status?: InputMaybe<Scalars['string']['input']>;
  status_geq?: InputMaybe<Scalars['string']['input']>;
  status_gt?: InputMaybe<Scalars['string']['input']>;
  status_in?: InputMaybe<Array<Scalars['string']['input']>>;
  status_leq?: InputMaybe<Scalars['string']['input']>;
  status_like?: InputMaybe<Scalars['string']['input']>;
  status_lt?: InputMaybe<Scalars['string']['input']>;
  status_neq?: InputMaybe<Scalars['string']['input']>;
  status_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  status_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZoneEmailRoutingAdaptiveGroupsOrderBy {
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** dkim ascending */
  DkimAsc = 'dkim_ASC',
  /** dkim descending */
  DkimDesc = 'dkim_DESC',
  /** dmarc ascending */
  DmarcAsc = 'dmarc_ASC',
  /** dmarc descending */
  DmarcDesc = 'dmarc_DESC',
  /** isNDR ascending */
  IsNdrAsc = 'isNDR_ASC',
  /** isNDR descending */
  IsNdrDesc = 'isNDR_DESC',
  /** ruleMatched ascending */
  RuleMatchedAsc = 'ruleMatched_ASC',
  /** ruleMatched descending */
  RuleMatchedDesc = 'ruleMatched_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** spf ascending */
  SpfAsc = 'spf_ASC',
  /** spf descending */
  SpfDesc = 'spf_DESC',
  /** status ascending */
  StatusAsc = 'status_ASC',
  /** status descending */
  StatusDesc = 'status_DESC'
}

export enum ZoneEmailRoutingAdaptiveOrderBy {
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** dkim ascending */
  DkimAsc = 'dkim_ASC',
  /** dkim descending */
  DkimDesc = 'dkim_DESC',
  /** dmarc ascending */
  DmarcAsc = 'dmarc_ASC',
  /** dmarc descending */
  DmarcDesc = 'dmarc_DESC',
  /** errorDetail ascending */
  ErrorDetailAsc = 'errorDetail_ASC',
  /** errorDetail descending */
  ErrorDetailDesc = 'errorDetail_DESC',
  /** from ascending */
  FromAsc = 'from_ASC',
  /** from descending */
  FromDesc = 'from_DESC',
  /** isNDR ascending */
  IsNdrAsc = 'isNDR_ASC',
  /** isNDR descending */
  IsNdrDesc = 'isNDR_DESC',
  /** messageId ascending */
  MessageIdAsc = 'messageId_ASC',
  /** messageId descending */
  MessageIdDesc = 'messageId_DESC',
  /** ruleMatched ascending */
  RuleMatchedAsc = 'ruleMatched_ASC',
  /** ruleMatched descending */
  RuleMatchedDesc = 'ruleMatched_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sessionId ascending */
  SessionIdAsc = 'sessionId_ASC',
  /** sessionId descending */
  SessionIdDesc = 'sessionId_DESC',
  /** spf ascending */
  SpfAsc = 'spf_ASC',
  /** spf descending */
  SpfDesc = 'spf_DESC',
  /** status ascending */
  StatusAsc = 'status_ASC',
  /** status descending */
  StatusDesc = 'status_DESC',
  /** subject ascending */
  SubjectAsc = 'subject_ASC',
  /** subject descending */
  SubjectDesc = 'subject_DESC',
  /** to ascending */
  ToAsc = 'to_ASC',
  /** to descending */
  ToDesc = 'to_DESC'
}

export type ZoneFilter_InputObject = {
  zoneTag?: InputMaybe<Scalars['string']['input']>;
  zoneTag_gt?: InputMaybe<Scalars['string']['input']>;
  zoneTag_in?: InputMaybe<Array<Scalars['string']['input']>>;
};

/** Raw Firewall events with adaptive sampling */
export type ZoneFirewallEventsAdaptive = {
  __typename?: 'ZoneFirewallEventsAdaptive';
  /** The code of the first-class action the Cloudflare Firewall took on this request */
  action: Scalars['string']['output'];
  /** API Gateway endpoint matched at the edge */
  apiGatewayMatchedEndpoint: Scalars['string']['output'];
  /** API Gateway host matched at the edge */
  apiGatewayMatchedHost: Scalars['string']['output'];
  /** The final score originated from bot management detections. */
  botScore: Scalars['uint8']['output'];
  /** Name of the source detection which generated the bot management score. */
  botScoreSrcName: Scalars['string']['output'];
  /** The ASN of the visitor as string */
  clientASNDescription: Scalars['string']['output'];
  /** The ASN number of the visitor */
  clientAsn: Scalars['string']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  /** The visitor's IP address (IPv4 or IPv6) */
  clientIP: Scalars['string']['output'];
  /**
   * The classification of the visitor's IP address, possible values are: unknown |
   * clean | badHost | searchEngine | allowlist | greylist | monitoringService |
   * securityScanner | noRecord | scan | backupService | mobilePlatform | tor
   */
  clientIPClass: Scalars['string']['output'];
  /** The referer host */
  clientRefererHost: Scalars['string']['output'];
  /** The referer path requested by visitor */
  clientRefererPath: Scalars['string']['output'];
  /** The referer query-string was requested by the visitor */
  clientRefererQuery: Scalars['string']['output'];
  /** The referer url scheme requested by the visitor */
  clientRefererScheme: Scalars['string']['output'];
  /** The HTTP hostname requested by the visitor */
  clientRequestHTTPHost: Scalars['string']['output'];
  /** The HTTP method used by the visitor */
  clientRequestHTTPMethodName: Scalars['string']['output'];
  /** The version of HTTP protocol requested by the visitor */
  clientRequestHTTPProtocol: Scalars['string']['output'];
  /** The path requested by visitor */
  clientRequestPath: Scalars['string']['output'];
  /** The query-string was requested by the visitor */
  clientRequestQuery: Scalars['string']['output'];
  /** The url scheme requested by the visitor */
  clientRequestScheme: Scalars['string']['output'];
  /** 1 if not all contents for this request where successfully scanned, else 0 */
  contentScanHasFailed: Scalars['uint8']['output'];
  /** Number of scannable content objects that are malicious */
  contentScanNumMaliciousObj: Scalars['uint8']['output'];
  /** Number of scannable content objects */
  contentScanNumObj: Scalars['uint8']['output'];
  /** Array of scan results in order of detection */
  contentScanObjResults: Scalars['string']['output'];
  /** Array of content types in order of detection */
  contentScanObjTypes: Scalars['string']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The description of the rule triggered by this request */
  description: Scalars['string']['output'];
  /** The airport code of the Cloudflare datacenter that served this request */
  edgeColoName: Scalars['string']['output'];
  /** HTTP response status code returned to browser */
  edgeResponseStatus: Scalars['uint16']['output'];
  /**
   * Version associated with HTTP Application
   * @deprecated Field is replaced with <code>zoneVersion</code>
   */
  httpApplicationVersion: Scalars['uint64']['output'];
  /** MD5 hash of the JA3 TLS fingerprint */
  ja3Hash: Scalars['string']['output'];
  /** The kind of event, currently only possible values are: firewall */
  kind: Scalars['string']['output'];
  /** The distinct result of checking for leaked credentials */
  leakedCredentialCheckResult: Scalars['string']['output'];
  /** Rules match index in the chain */
  matchIndex: Scalars['uint16']['output'];
  /** Additional product-specific information. Metadata is organized in key:value pairs */
  metadata: Array<ZoneFirewallEventsAdaptiveMetadataElem>;
  /** HTTP origin response status code returned to browser */
  originResponseStatus: Scalars['uint16']['output'];
  /** The RayId of the request that issued the challenge/jschallenge */
  originatorRayName: Scalars['string']['output'];
  /** The RayId of the request */
  rayName: Scalars['string']['output'];
  /**
   * The ref-field is a user-defined rule identifier that can be set via the API
   * for some firewall products and allows users to label their rules individually
   * alongside cloudflare provided identifiers (only available to entitled customers)
   */
  ref: Scalars['string']['output'];
  /** The Cloudflare security product-specific RuleId triggered by this request */
  ruleId: Scalars['string']['output'];
  /** The Cloudflare security product-specific RulesetId triggered by this request */
  rulesetId: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** The Cloudflare security product triggered by this request */
  source: Scalars['string']['output'];
  /** visitor's user-agent string */
  userAgent: Scalars['string']['output'];
  /** Beta. Overall request score generated by the WAF detection module */
  wafAttackScore: Scalars['uint8']['output'];
  /** Beta. Overall request score class generated by the WAF detection module */
  wafAttackScoreClass: Scalars['string']['output'];
  /**
   * Beta. Overall request score generated by the WAF detection module
   * @deprecated Field is replaced with <code>wafAttackScore</code>
   */
  wafMlAttackScore: Scalars['uint8']['output'];
  /**
   * Beta. WAF ML score for an SQLi attack
   * @deprecated Field is replaced with <code>wafSqliAttackScore</code>
   */
  wafMlSqliAttackScore: Scalars['uint8']['output'];
  /**
   * Beta. WAF ML score for an XSS attack
   * @deprecated Field is replaced with <code>wafXssAttackScore</code>
   */
  wafMlXssAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a RCE attack */
  wafRceAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a SQLi attack */
  wafSqliAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a XSS attack */
  wafXssAttackScore: Scalars['uint8']['output'];
  /** The version of a zone */
  zoneVersion: Scalars['uint64']['output'];
};

/** Aggregated Firewall events with adaptive sampling grouped by time */
export type ZoneFirewallEventsAdaptiveByTimeGroups = {
  __typename?: 'ZoneFirewallEventsAdaptiveByTimeGroups';
  /** The average value used for sample interval */
  avg?: Maybe<ZoneFirewallEventsAdaptiveByTimeGroupsAvg>;
  /** The sum of sample interval values */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneFirewallEventsAdaptiveByTimeGroupsDimensions>;
};

export type ZoneFirewallEventsAdaptiveByTimeGroupsAvg = {
  __typename?: 'ZoneFirewallEventsAdaptiveByTimeGroupsAvg';
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneFirewallEventsAdaptiveByTimeGroupsDimensions = {
  __typename?: 'ZoneFirewallEventsAdaptiveByTimeGroupsDimensions';
  /** API Gateway endpoint matched at the edge */
  apiGatewayMatchedEndpoint: Scalars['string']['output'];
  /** API Gateway host matched at the edge */
  apiGatewayMatchedHost: Scalars['string']['output'];
  /** The final score originated from bot management detections. */
  botScore: Scalars['uint8']['output'];
  /** Name of the source detection which generated the bot management score. */
  botScoreSrcName: Scalars['string']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The description of the rule triggered by this request */
  description: Scalars['string']['output'];
  /**
   * Version associated with HTTP Application
   * @deprecated Field is replaced with <code>zoneVersion</code>
   */
  httpApplicationVersion: Scalars['uint64']['output'];
  /** MD5 hash of the JA3 TLS fingerprint */
  ja3Hash: Scalars['string']['output'];
  /** Beta. Overall request score generated by the WAF detection module */
  wafAttackScore: Scalars['uint8']['output'];
  /** Beta. Overall request score class generated by the WAF detection module */
  wafAttackScoreClass: Scalars['string']['output'];
  /**
   * Beta. Overall request score generated by the WAF ML detection module
   * @deprecated Field is replaced with <code>wafAttackScore</code>
   */
  wafMlAttackScore: Scalars['uint8']['output'];
  /**
   * Beta. WAF ML score for an SQLi attack
   * @deprecated Field is replaced with <code>wafSqliAttackScore</code>
   */
  wafMlSqliAttackScore: Scalars['uint8']['output'];
  /**
   * Beta. WAF ML score for an XSS attack
   * @deprecated Field is replaced with <code>wafXssAttackScore</code>
   */
  wafMlXssAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a RCE attack */
  wafRceAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a SQLi attack */
  wafSqliAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a XSS attack */
  wafXssAttackScore: Scalars['uint8']['output'];
  /** The version of a zone */
  zoneVersion: Scalars['uint64']['output'];
};

export type ZoneFirewallEventsAdaptiveByTimeGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneFirewallEventsAdaptiveByTimeGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneFirewallEventsAdaptiveByTimeGroupsFilter_InputObject>>;
  action?: InputMaybe<Scalars['string']['input']>;
  action_geq?: InputMaybe<Scalars['string']['input']>;
  action_gt?: InputMaybe<Scalars['string']['input']>;
  action_in?: InputMaybe<Array<Scalars['string']['input']>>;
  action_leq?: InputMaybe<Scalars['string']['input']>;
  action_like?: InputMaybe<Scalars['string']['input']>;
  action_lt?: InputMaybe<Scalars['string']['input']>;
  action_neq?: InputMaybe<Scalars['string']['input']>;
  action_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  action_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore?: InputMaybe<Scalars['uint8']['input']>;
  botScoreSrcName?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_geq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_gt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_leq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_like?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_lt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_neq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_in?: InputMaybe<Scalars['bytes']['input']>;
  botScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  clientASNDescription?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  clientAsn?: InputMaybe<Scalars['string']['input']>;
  clientAsn_geq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_gt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_leq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_like?: InputMaybe<Scalars['string']['input']>;
  clientAsn_lt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_neq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_notlike?: InputMaybe<Scalars['string']['input']>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP?: InputMaybe<Scalars['string']['input']>;
  clientIPClass?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_geq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_gt?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPClass_leq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_like?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_lt?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_neq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPClass_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP_geq?: InputMaybe<Scalars['string']['input']>;
  clientIP_gt?: InputMaybe<Scalars['string']['input']>;
  clientIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_leq?: InputMaybe<Scalars['string']['input']>;
  clientIP_like?: InputMaybe<Scalars['string']['input']>;
  clientIP_lt?: InputMaybe<Scalars['string']['input']>;
  clientIP_neq?: InputMaybe<Scalars['string']['input']>;
  clientIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  description?: InputMaybe<Scalars['string']['input']>;
  description_geq?: InputMaybe<Scalars['string']['input']>;
  description_gt?: InputMaybe<Scalars['string']['input']>;
  description_in?: InputMaybe<Array<Scalars['string']['input']>>;
  description_leq?: InputMaybe<Scalars['string']['input']>;
  description_like?: InputMaybe<Scalars['string']['input']>;
  description_lt?: InputMaybe<Scalars['string']['input']>;
  description_neq?: InputMaybe<Scalars['string']['input']>;
  description_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  description_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoName?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpApplicationVersion?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  httpApplicationVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  ja3Hash?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_geq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_gt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_leq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_like?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_lt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_neq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_notlike?: InputMaybe<Scalars['string']['input']>;
  kind?: InputMaybe<Scalars['string']['input']>;
  kind_geq?: InputMaybe<Scalars['string']['input']>;
  kind_gt?: InputMaybe<Scalars['string']['input']>;
  kind_in?: InputMaybe<Array<Scalars['string']['input']>>;
  kind_leq?: InputMaybe<Scalars['string']['input']>;
  kind_like?: InputMaybe<Scalars['string']['input']>;
  kind_lt?: InputMaybe<Scalars['string']['input']>;
  kind_neq?: InputMaybe<Scalars['string']['input']>;
  kind_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  kind_notlike?: InputMaybe<Scalars['string']['input']>;
  matchIndex?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_geq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_gt?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  matchIndex_leq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_lt?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_neq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originatorRayName?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_geq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_gt?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originatorRayName_leq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_like?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_lt?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_neq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originatorRayName_notlike?: InputMaybe<Scalars['string']['input']>;
  rayName?: InputMaybe<Scalars['string']['input']>;
  rayName_geq?: InputMaybe<Scalars['string']['input']>;
  rayName_gt?: InputMaybe<Scalars['string']['input']>;
  rayName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rayName_leq?: InputMaybe<Scalars['string']['input']>;
  rayName_like?: InputMaybe<Scalars['string']['input']>;
  rayName_lt?: InputMaybe<Scalars['string']['input']>;
  rayName_neq?: InputMaybe<Scalars['string']['input']>;
  rayName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rayName_notlike?: InputMaybe<Scalars['string']['input']>;
  ref?: InputMaybe<Scalars['string']['input']>;
  ref_geq?: InputMaybe<Scalars['string']['input']>;
  ref_gt?: InputMaybe<Scalars['string']['input']>;
  ref_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ref_leq?: InputMaybe<Scalars['string']['input']>;
  ref_like?: InputMaybe<Scalars['string']['input']>;
  ref_lt?: InputMaybe<Scalars['string']['input']>;
  ref_neq?: InputMaybe<Scalars['string']['input']>;
  ref_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ref_notlike?: InputMaybe<Scalars['string']['input']>;
  ruleId?: InputMaybe<Scalars['string']['input']>;
  ruleId_geq?: InputMaybe<Scalars['string']['input']>;
  ruleId_gt?: InputMaybe<Scalars['string']['input']>;
  ruleId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_leq?: InputMaybe<Scalars['string']['input']>;
  ruleId_like?: InputMaybe<Scalars['string']['input']>;
  ruleId_lt?: InputMaybe<Scalars['string']['input']>;
  ruleId_neq?: InputMaybe<Scalars['string']['input']>;
  ruleId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_notlike?: InputMaybe<Scalars['string']['input']>;
  rulesetId?: InputMaybe<Scalars['string']['input']>;
  rulesetId_geq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_gt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_leq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_like?: InputMaybe<Scalars['string']['input']>;
  rulesetId_lt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_neq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  source?: InputMaybe<Scalars['string']['input']>;
  source_geq?: InputMaybe<Scalars['string']['input']>;
  source_gt?: InputMaybe<Scalars['string']['input']>;
  source_in?: InputMaybe<Array<Scalars['string']['input']>>;
  source_leq?: InputMaybe<Scalars['string']['input']>;
  source_like?: InputMaybe<Scalars['string']['input']>;
  source_lt?: InputMaybe<Scalars['string']['input']>;
  source_neq?: InputMaybe<Scalars['string']['input']>;
  source_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  source_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent?: InputMaybe<Scalars['string']['input']>;
  userAgent_geq?: InputMaybe<Scalars['string']['input']>;
  userAgent_gt?: InputMaybe<Scalars['string']['input']>;
  userAgent_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_leq?: InputMaybe<Scalars['string']['input']>;
  userAgent_like?: InputMaybe<Scalars['string']['input']>;
  userAgent_lt?: InputMaybe<Scalars['string']['input']>;
  userAgent_neq?: InputMaybe<Scalars['string']['input']>;
  userAgent_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScoreClass?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_geq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_gt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_leq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_like?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_lt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_neq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  zoneVersion?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  zoneVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

export enum ZoneFirewallEventsAdaptiveByTimeGroupsOrderBy {
  /** apiGatewayMatchedEndpoint ascending */
  ApiGatewayMatchedEndpointAsc = 'apiGatewayMatchedEndpoint_ASC',
  /** apiGatewayMatchedEndpoint descending */
  ApiGatewayMatchedEndpointDesc = 'apiGatewayMatchedEndpoint_DESC',
  /** apiGatewayMatchedHost ascending */
  ApiGatewayMatchedHostAsc = 'apiGatewayMatchedHost_ASC',
  /** apiGatewayMatchedHost descending */
  ApiGatewayMatchedHostDesc = 'apiGatewayMatchedHost_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** botScoreSrcName ascending */
  BotScoreSrcNameAsc = 'botScoreSrcName_ASC',
  /** botScoreSrcName descending */
  BotScoreSrcNameDesc = 'botScoreSrcName_DESC',
  /** botScore ascending */
  BotScoreAsc = 'botScore_ASC',
  /** botScore descending */
  BotScoreDesc = 'botScore_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** description ascending */
  DescriptionAsc = 'description_ASC',
  /** description descending */
  DescriptionDesc = 'description_DESC',
  /** httpApplicationVersion ascending */
  HttpApplicationVersionAsc = 'httpApplicationVersion_ASC',
  /** httpApplicationVersion descending */
  HttpApplicationVersionDesc = 'httpApplicationVersion_DESC',
  /** ja3Hash ascending */
  Ja3HashAsc = 'ja3Hash_ASC',
  /** ja3Hash descending */
  Ja3HashDesc = 'ja3Hash_DESC',
  /** visibility ascending */
  VisibilityAsc = 'visibility_ASC',
  /** visibility descending */
  VisibilityDesc = 'visibility_DESC',
  /** wafAttackScoreClass ascending */
  WafAttackScoreClassAsc = 'wafAttackScoreClass_ASC',
  /** wafAttackScoreClass descending */
  WafAttackScoreClassDesc = 'wafAttackScoreClass_DESC',
  /** wafAttackScore ascending */
  WafAttackScoreAsc = 'wafAttackScore_ASC',
  /** wafAttackScore descending */
  WafAttackScoreDesc = 'wafAttackScore_DESC',
  /** wafMlAttackScore ascending */
  WafMlAttackScoreAsc = 'wafMlAttackScore_ASC',
  /** wafMlAttackScore descending */
  WafMlAttackScoreDesc = 'wafMlAttackScore_DESC',
  /** wafMlSqliAttackScore ascending */
  WafMlSqliAttackScoreAsc = 'wafMlSqliAttackScore_ASC',
  /** wafMlSqliAttackScore descending */
  WafMlSqliAttackScoreDesc = 'wafMlSqliAttackScore_DESC',
  /** wafMlXssAttackScore ascending */
  WafMlXssAttackScoreAsc = 'wafMlXssAttackScore_ASC',
  /** wafMlXssAttackScore descending */
  WafMlXssAttackScoreDesc = 'wafMlXssAttackScore_DESC',
  /** wafRceAttackScore ascending */
  WafRceAttackScoreAsc = 'wafRceAttackScore_ASC',
  /** wafRceAttackScore descending */
  WafRceAttackScoreDesc = 'wafRceAttackScore_DESC',
  /** wafSqliAttackScore ascending */
  WafSqliAttackScoreAsc = 'wafSqliAttackScore_ASC',
  /** wafSqliAttackScore descending */
  WafSqliAttackScoreDesc = 'wafSqliAttackScore_DESC',
  /** wafXssAttackScore ascending */
  WafXssAttackScoreAsc = 'wafXssAttackScore_ASC',
  /** wafXssAttackScore descending */
  WafXssAttackScoreDesc = 'wafXssAttackScore_DESC',
  /** zoneVersion ascending */
  ZoneVersionAsc = 'zoneVersion_ASC',
  /** zoneVersion descending */
  ZoneVersionDesc = 'zoneVersion_DESC'
}

export type ZoneFirewallEventsAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneFirewallEventsAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneFirewallEventsAdaptiveFilter_InputObject>>;
  action?: InputMaybe<Scalars['string']['input']>;
  action_geq?: InputMaybe<Scalars['string']['input']>;
  action_gt?: InputMaybe<Scalars['string']['input']>;
  action_in?: InputMaybe<Array<Scalars['string']['input']>>;
  action_leq?: InputMaybe<Scalars['string']['input']>;
  action_like?: InputMaybe<Scalars['string']['input']>;
  action_lt?: InputMaybe<Scalars['string']['input']>;
  action_neq?: InputMaybe<Scalars['string']['input']>;
  action_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  action_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore?: InputMaybe<Scalars['uint8']['input']>;
  botScoreSrcName?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_geq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_gt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_leq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_like?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_lt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_neq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_in?: InputMaybe<Scalars['bytes']['input']>;
  botScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  clientASNDescription?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  clientAsn?: InputMaybe<Scalars['string']['input']>;
  clientAsn_geq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_gt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_leq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_like?: InputMaybe<Scalars['string']['input']>;
  clientAsn_lt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_neq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_notlike?: InputMaybe<Scalars['string']['input']>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP?: InputMaybe<Scalars['string']['input']>;
  clientIPClass?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_geq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_gt?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPClass_leq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_like?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_lt?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_neq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPClass_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP_geq?: InputMaybe<Scalars['string']['input']>;
  clientIP_gt?: InputMaybe<Scalars['string']['input']>;
  clientIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_leq?: InputMaybe<Scalars['string']['input']>;
  clientIP_like?: InputMaybe<Scalars['string']['input']>;
  clientIP_lt?: InputMaybe<Scalars['string']['input']>;
  clientIP_neq?: InputMaybe<Scalars['string']['input']>;
  clientIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  contentScanHasFailed?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanHasFailed_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumMaliciousObj?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumMaliciousObj_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumObj?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumObj_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanObjResults?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_geq?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_gt?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_in?: InputMaybe<Array<Scalars['string']['input']>>;
  contentScanObjResults_leq?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_like?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_lt?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_neq?: InputMaybe<Scalars['string']['input']>;
  contentScanObjResults_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  contentScanObjResults_notlike?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_geq?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_gt?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_in?: InputMaybe<Array<Scalars['string']['input']>>;
  contentScanObjTypes_leq?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_like?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_lt?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_neq?: InputMaybe<Scalars['string']['input']>;
  contentScanObjTypes_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  contentScanObjTypes_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  description?: InputMaybe<Scalars['string']['input']>;
  description_geq?: InputMaybe<Scalars['string']['input']>;
  description_gt?: InputMaybe<Scalars['string']['input']>;
  description_in?: InputMaybe<Array<Scalars['string']['input']>>;
  description_leq?: InputMaybe<Scalars['string']['input']>;
  description_like?: InputMaybe<Scalars['string']['input']>;
  description_lt?: InputMaybe<Scalars['string']['input']>;
  description_neq?: InputMaybe<Scalars['string']['input']>;
  description_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  description_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoName?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpApplicationVersion?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  httpApplicationVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  ja3Hash?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_geq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_gt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_leq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_like?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_lt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_neq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_notlike?: InputMaybe<Scalars['string']['input']>;
  kind?: InputMaybe<Scalars['string']['input']>;
  kind_geq?: InputMaybe<Scalars['string']['input']>;
  kind_gt?: InputMaybe<Scalars['string']['input']>;
  kind_in?: InputMaybe<Array<Scalars['string']['input']>>;
  kind_leq?: InputMaybe<Scalars['string']['input']>;
  kind_like?: InputMaybe<Scalars['string']['input']>;
  kind_lt?: InputMaybe<Scalars['string']['input']>;
  kind_neq?: InputMaybe<Scalars['string']['input']>;
  kind_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  kind_notlike?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_geq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_gt?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leakedCredentialCheckResult_leq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_like?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_lt?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_neq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leakedCredentialCheckResult_notlike?: InputMaybe<Scalars['string']['input']>;
  matchIndex?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_geq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_gt?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  matchIndex_leq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_lt?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_neq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originatorRayName?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_geq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_gt?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originatorRayName_leq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_like?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_lt?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_neq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originatorRayName_notlike?: InputMaybe<Scalars['string']['input']>;
  rayName?: InputMaybe<Scalars['string']['input']>;
  rayName_geq?: InputMaybe<Scalars['string']['input']>;
  rayName_gt?: InputMaybe<Scalars['string']['input']>;
  rayName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rayName_leq?: InputMaybe<Scalars['string']['input']>;
  rayName_like?: InputMaybe<Scalars['string']['input']>;
  rayName_lt?: InputMaybe<Scalars['string']['input']>;
  rayName_neq?: InputMaybe<Scalars['string']['input']>;
  rayName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rayName_notlike?: InputMaybe<Scalars['string']['input']>;
  ref?: InputMaybe<Scalars['string']['input']>;
  ref_geq?: InputMaybe<Scalars['string']['input']>;
  ref_gt?: InputMaybe<Scalars['string']['input']>;
  ref_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ref_leq?: InputMaybe<Scalars['string']['input']>;
  ref_like?: InputMaybe<Scalars['string']['input']>;
  ref_lt?: InputMaybe<Scalars['string']['input']>;
  ref_neq?: InputMaybe<Scalars['string']['input']>;
  ref_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ref_notlike?: InputMaybe<Scalars['string']['input']>;
  ruleId?: InputMaybe<Scalars['string']['input']>;
  ruleId_geq?: InputMaybe<Scalars['string']['input']>;
  ruleId_gt?: InputMaybe<Scalars['string']['input']>;
  ruleId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_leq?: InputMaybe<Scalars['string']['input']>;
  ruleId_like?: InputMaybe<Scalars['string']['input']>;
  ruleId_lt?: InputMaybe<Scalars['string']['input']>;
  ruleId_neq?: InputMaybe<Scalars['string']['input']>;
  ruleId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_notlike?: InputMaybe<Scalars['string']['input']>;
  rulesetId?: InputMaybe<Scalars['string']['input']>;
  rulesetId_geq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_gt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_leq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_like?: InputMaybe<Scalars['string']['input']>;
  rulesetId_lt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_neq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  source?: InputMaybe<Scalars['string']['input']>;
  source_geq?: InputMaybe<Scalars['string']['input']>;
  source_gt?: InputMaybe<Scalars['string']['input']>;
  source_in?: InputMaybe<Array<Scalars['string']['input']>>;
  source_leq?: InputMaybe<Scalars['string']['input']>;
  source_like?: InputMaybe<Scalars['string']['input']>;
  source_lt?: InputMaybe<Scalars['string']['input']>;
  source_neq?: InputMaybe<Scalars['string']['input']>;
  source_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  source_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent?: InputMaybe<Scalars['string']['input']>;
  userAgent_geq?: InputMaybe<Scalars['string']['input']>;
  userAgent_gt?: InputMaybe<Scalars['string']['input']>;
  userAgent_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_leq?: InputMaybe<Scalars['string']['input']>;
  userAgent_like?: InputMaybe<Scalars['string']['input']>;
  userAgent_lt?: InputMaybe<Scalars['string']['input']>;
  userAgent_neq?: InputMaybe<Scalars['string']['input']>;
  userAgent_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScoreClass?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_geq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_gt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_leq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_like?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_lt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_neq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  zoneVersion?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  zoneVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

/** Aggregated Firewall events with adaptive sampling */
export type ZoneFirewallEventsAdaptiveGroups = {
  __typename?: 'ZoneFirewallEventsAdaptiveGroups';
  /** The average value used for sample interval */
  avg?: Maybe<ZoneFirewallEventsAdaptiveGroupsAvg>;
  /** The sum of sample interval values */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneFirewallEventsAdaptiveGroupsDimensions>;
};

export type ZoneFirewallEventsAdaptiveGroupsAvg = {
  __typename?: 'ZoneFirewallEventsAdaptiveGroupsAvg';
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneFirewallEventsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneFirewallEventsAdaptiveGroupsDimensions';
  /** The code of the first-class action the Cloudflare Firewall took on this request */
  action: Scalars['string']['output'];
  /** API Gateway endpoint matched at the edge */
  apiGatewayMatchedEndpoint: Scalars['string']['output'];
  /** API Gateway host matched at the edge */
  apiGatewayMatchedHost: Scalars['string']['output'];
  /** The final score originated from bot management detections. */
  botScore: Scalars['uint8']['output'];
  /** Name of the source detection which generated the bot management score. */
  botScoreSrcName: Scalars['string']['output'];
  /** The ASN of the visitor as string */
  clientASNDescription: Scalars['string']['output'];
  /** The ASN number of the visitor */
  clientAsn: Scalars['string']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  /** The visitor's IP address (IPv4 or IPv6) */
  clientIP: Scalars['string']['output'];
  /**
   * The classification of the visitor's IP address, possible values are: unknown |
   * clean | badHost | searchEngine | allowlist | greylist | monitoringService |
   * securityScanner | noRecord | scan | backupService | mobilePlatform | tor
   */
  clientIPClass: Scalars['string']['output'];
  /** The referer host */
  clientRefererHost: Scalars['string']['output'];
  /** The referer path requested by visitor */
  clientRefererPath: Scalars['string']['output'];
  /** The referer query-string was requested by the visitor */
  clientRefererQuery: Scalars['string']['output'];
  /** The referer url scheme requested by the visitor */
  clientRefererScheme: Scalars['string']['output'];
  /** The HTTP hostname requested by the visitor */
  clientRequestHTTPHost: Scalars['string']['output'];
  /** The HTTP method used by the visitor */
  clientRequestHTTPMethodName: Scalars['string']['output'];
  /** The version of HTTP protocol requested by the visitor */
  clientRequestHTTPProtocol: Scalars['string']['output'];
  /** The path requested by visitor */
  clientRequestPath: Scalars['string']['output'];
  /** The query-string was requested by the visitor */
  clientRequestQuery: Scalars['string']['output'];
  /** The url scheme requested by the visitor */
  clientRequestScheme: Scalars['string']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The description of the rule triggered by this request */
  description: Scalars['string']['output'];
  /** The airport code of the Cloudflare datacenter that served this request */
  edgeColoName: Scalars['string']['output'];
  /** HTTP response status code returned to browser */
  edgeResponseStatus: Scalars['uint16']['output'];
  /**
   * Version associated with HTTP Application
   * @deprecated Field is replaced with <code>zoneVersion</code>
   */
  httpApplicationVersion: Scalars['uint64']['output'];
  /** MD5 hash of the JA3 TLS fingerprint */
  ja3Hash: Scalars['string']['output'];
  /** The kind of event, currently only possible values are: firewall */
  kind: Scalars['string']['output'];
  /** Rules match index in the chain */
  matchIndex: Scalars['uint16']['output'];
  /** HTTP origin response status code returned to browser */
  originResponseStatus: Scalars['uint16']['output'];
  /** The RayId of the request that issued the challenge/jschallenge */
  originatorRayName: Scalars['string']['output'];
  /** The RayId of the request */
  rayName: Scalars['string']['output'];
  /**
   * The ref-field is a user-defined rule identifier that can be set via the API
   * for some firewall products and allows users to label their rules individually
   * alongside cloudflare provided identifiers (only available to entitled customers)
   */
  ref: Scalars['string']['output'];
  /** The Cloudflare security product-specific RuleId triggered by this request */
  ruleId: Scalars['string']['output'];
  /** The Cloudflare security product-specific RulesetId triggered by this request */
  rulesetId: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** The Cloudflare security product triggered by this request */
  source: Scalars['string']['output'];
  /** visitor's user-agent string */
  userAgent: Scalars['string']['output'];
  /** Beta. Overall request score generated by the WAF detection module */
  wafAttackScore: Scalars['uint8']['output'];
  /** Beta. Overall request score class generated by the WAF detection module */
  wafAttackScoreClass: Scalars['string']['output'];
  /**
   * Beta. Overall request score generated by the WAF ML detection module
   * @deprecated Field is replaced with <code>wafAttackScore</code>
   */
  wafMlAttackScore: Scalars['uint8']['output'];
  /**
   * Beta. WAF ML score for an SQLi attack
   * @deprecated Field is replaced with <code>wafSqliAttackScore</code>
   */
  wafMlSqliAttackScore: Scalars['uint8']['output'];
  /**
   * Beta. WAF ML score for an XSS attack
   * @deprecated Field is replaced with <code>wafXssAttackScore</code>
   */
  wafMlXssAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a RCE attack */
  wafRceAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a SQLi attack */
  wafSqliAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a XSS attack */
  wafXssAttackScore: Scalars['uint8']['output'];
  /** The version of a zone */
  zoneVersion: Scalars['uint64']['output'];
};

export type ZoneFirewallEventsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneFirewallEventsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneFirewallEventsAdaptiveGroupsFilter_InputObject>>;
  action?: InputMaybe<Scalars['string']['input']>;
  action_geq?: InputMaybe<Scalars['string']['input']>;
  action_gt?: InputMaybe<Scalars['string']['input']>;
  action_in?: InputMaybe<Array<Scalars['string']['input']>>;
  action_leq?: InputMaybe<Scalars['string']['input']>;
  action_like?: InputMaybe<Scalars['string']['input']>;
  action_lt?: InputMaybe<Scalars['string']['input']>;
  action_neq?: InputMaybe<Scalars['string']['input']>;
  action_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  action_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore?: InputMaybe<Scalars['uint8']['input']>;
  botScoreSrcName?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_geq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_gt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_leq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_like?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_lt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_neq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_in?: InputMaybe<Scalars['bytes']['input']>;
  botScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  clientASNDescription?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  clientAsn?: InputMaybe<Scalars['string']['input']>;
  clientAsn_geq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_gt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_leq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_like?: InputMaybe<Scalars['string']['input']>;
  clientAsn_lt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_neq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_notlike?: InputMaybe<Scalars['string']['input']>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP?: InputMaybe<Scalars['string']['input']>;
  clientIPClass?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_geq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_gt?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPClass_leq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_like?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_lt?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_neq?: InputMaybe<Scalars['string']['input']>;
  clientIPClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPClass_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP_geq?: InputMaybe<Scalars['string']['input']>;
  clientIP_gt?: InputMaybe<Scalars['string']['input']>;
  clientIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_leq?: InputMaybe<Scalars['string']['input']>;
  clientIP_like?: InputMaybe<Scalars['string']['input']>;
  clientIP_lt?: InputMaybe<Scalars['string']['input']>;
  clientIP_neq?: InputMaybe<Scalars['string']['input']>;
  clientIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  description?: InputMaybe<Scalars['string']['input']>;
  description_geq?: InputMaybe<Scalars['string']['input']>;
  description_gt?: InputMaybe<Scalars['string']['input']>;
  description_in?: InputMaybe<Array<Scalars['string']['input']>>;
  description_leq?: InputMaybe<Scalars['string']['input']>;
  description_like?: InputMaybe<Scalars['string']['input']>;
  description_lt?: InputMaybe<Scalars['string']['input']>;
  description_neq?: InputMaybe<Scalars['string']['input']>;
  description_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  description_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeColoName?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_like?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeColoName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeColoName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpApplicationVersion?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  httpApplicationVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  ja3Hash?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_geq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_gt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_leq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_like?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_lt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_neq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_notlike?: InputMaybe<Scalars['string']['input']>;
  kind?: InputMaybe<Scalars['string']['input']>;
  kind_geq?: InputMaybe<Scalars['string']['input']>;
  kind_gt?: InputMaybe<Scalars['string']['input']>;
  kind_in?: InputMaybe<Array<Scalars['string']['input']>>;
  kind_leq?: InputMaybe<Scalars['string']['input']>;
  kind_like?: InputMaybe<Scalars['string']['input']>;
  kind_lt?: InputMaybe<Scalars['string']['input']>;
  kind_neq?: InputMaybe<Scalars['string']['input']>;
  kind_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  kind_notlike?: InputMaybe<Scalars['string']['input']>;
  matchIndex?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_geq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_gt?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  matchIndex_leq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_lt?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_neq?: InputMaybe<Scalars['uint16']['input']>;
  matchIndex_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originatorRayName?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_geq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_gt?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originatorRayName_leq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_like?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_lt?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_neq?: InputMaybe<Scalars['string']['input']>;
  originatorRayName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originatorRayName_notlike?: InputMaybe<Scalars['string']['input']>;
  rayName?: InputMaybe<Scalars['string']['input']>;
  rayName_geq?: InputMaybe<Scalars['string']['input']>;
  rayName_gt?: InputMaybe<Scalars['string']['input']>;
  rayName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rayName_leq?: InputMaybe<Scalars['string']['input']>;
  rayName_like?: InputMaybe<Scalars['string']['input']>;
  rayName_lt?: InputMaybe<Scalars['string']['input']>;
  rayName_neq?: InputMaybe<Scalars['string']['input']>;
  rayName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rayName_notlike?: InputMaybe<Scalars['string']['input']>;
  ref?: InputMaybe<Scalars['string']['input']>;
  ref_geq?: InputMaybe<Scalars['string']['input']>;
  ref_gt?: InputMaybe<Scalars['string']['input']>;
  ref_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ref_leq?: InputMaybe<Scalars['string']['input']>;
  ref_like?: InputMaybe<Scalars['string']['input']>;
  ref_lt?: InputMaybe<Scalars['string']['input']>;
  ref_neq?: InputMaybe<Scalars['string']['input']>;
  ref_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ref_notlike?: InputMaybe<Scalars['string']['input']>;
  ruleId?: InputMaybe<Scalars['string']['input']>;
  ruleId_geq?: InputMaybe<Scalars['string']['input']>;
  ruleId_gt?: InputMaybe<Scalars['string']['input']>;
  ruleId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_leq?: InputMaybe<Scalars['string']['input']>;
  ruleId_like?: InputMaybe<Scalars['string']['input']>;
  ruleId_lt?: InputMaybe<Scalars['string']['input']>;
  ruleId_neq?: InputMaybe<Scalars['string']['input']>;
  ruleId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ruleId_notlike?: InputMaybe<Scalars['string']['input']>;
  rulesetId?: InputMaybe<Scalars['string']['input']>;
  rulesetId_geq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_gt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_leq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_like?: InputMaybe<Scalars['string']['input']>;
  rulesetId_lt?: InputMaybe<Scalars['string']['input']>;
  rulesetId_neq?: InputMaybe<Scalars['string']['input']>;
  rulesetId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  rulesetId_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  source?: InputMaybe<Scalars['string']['input']>;
  source_geq?: InputMaybe<Scalars['string']['input']>;
  source_gt?: InputMaybe<Scalars['string']['input']>;
  source_in?: InputMaybe<Array<Scalars['string']['input']>>;
  source_leq?: InputMaybe<Scalars['string']['input']>;
  source_like?: InputMaybe<Scalars['string']['input']>;
  source_lt?: InputMaybe<Scalars['string']['input']>;
  source_neq?: InputMaybe<Scalars['string']['input']>;
  source_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  source_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent?: InputMaybe<Scalars['string']['input']>;
  userAgent_geq?: InputMaybe<Scalars['string']['input']>;
  userAgent_gt?: InputMaybe<Scalars['string']['input']>;
  userAgent_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_leq?: InputMaybe<Scalars['string']['input']>;
  userAgent_like?: InputMaybe<Scalars['string']['input']>;
  userAgent_lt?: InputMaybe<Scalars['string']['input']>;
  userAgent_neq?: InputMaybe<Scalars['string']['input']>;
  userAgent_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScoreClass?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_geq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_gt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_leq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_like?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_lt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_neq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafMlXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafMlXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafMlXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  zoneVersion?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  zoneVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

export enum ZoneFirewallEventsAdaptiveGroupsOrderBy {
  /** action ascending */
  ActionAsc = 'action_ASC',
  /** action descending */
  ActionDesc = 'action_DESC',
  /** apiGatewayMatchedEndpoint ascending */
  ApiGatewayMatchedEndpointAsc = 'apiGatewayMatchedEndpoint_ASC',
  /** apiGatewayMatchedEndpoint descending */
  ApiGatewayMatchedEndpointDesc = 'apiGatewayMatchedEndpoint_DESC',
  /** apiGatewayMatchedHost ascending */
  ApiGatewayMatchedHostAsc = 'apiGatewayMatchedHost_ASC',
  /** apiGatewayMatchedHost descending */
  ApiGatewayMatchedHostDesc = 'apiGatewayMatchedHost_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** botScoreSrcName ascending */
  BotScoreSrcNameAsc = 'botScoreSrcName_ASC',
  /** botScoreSrcName descending */
  BotScoreSrcNameDesc = 'botScoreSrcName_DESC',
  /** botScore ascending */
  BotScoreAsc = 'botScore_ASC',
  /** botScore descending */
  BotScoreDesc = 'botScore_DESC',
  /** clientASNDescription ascending */
  ClientAsnDescriptionAsc = 'clientASNDescription_ASC',
  /** clientASNDescription descending */
  ClientAsnDescriptionDesc = 'clientASNDescription_DESC',
  /** clientAsn ascending */
  ClientAsnAsc = 'clientAsn_ASC',
  /** clientAsn descending */
  ClientAsnDesc = 'clientAsn_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** clientIPClass ascending */
  ClientIpClassAsc = 'clientIPClass_ASC',
  /** clientIPClass descending */
  ClientIpClassDesc = 'clientIPClass_DESC',
  /** clientIP ascending */
  ClientIpAsc = 'clientIP_ASC',
  /** clientIP descending */
  ClientIpDesc = 'clientIP_DESC',
  /** clientRefererHost ascending */
  ClientRefererHostAsc = 'clientRefererHost_ASC',
  /** clientRefererHost descending */
  ClientRefererHostDesc = 'clientRefererHost_DESC',
  /** clientRefererPath ascending */
  ClientRefererPathAsc = 'clientRefererPath_ASC',
  /** clientRefererPath descending */
  ClientRefererPathDesc = 'clientRefererPath_DESC',
  /** clientRefererQuery ascending */
  ClientRefererQueryAsc = 'clientRefererQuery_ASC',
  /** clientRefererQuery descending */
  ClientRefererQueryDesc = 'clientRefererQuery_DESC',
  /** clientRefererScheme ascending */
  ClientRefererSchemeAsc = 'clientRefererScheme_ASC',
  /** clientRefererScheme descending */
  ClientRefererSchemeDesc = 'clientRefererScheme_DESC',
  /** clientRequestHTTPHost ascending */
  ClientRequestHttpHostAsc = 'clientRequestHTTPHost_ASC',
  /** clientRequestHTTPHost descending */
  ClientRequestHttpHostDesc = 'clientRequestHTTPHost_DESC',
  /** clientRequestHTTPMethodName ascending */
  ClientRequestHttpMethodNameAsc = 'clientRequestHTTPMethodName_ASC',
  /** clientRequestHTTPMethodName descending */
  ClientRequestHttpMethodNameDesc = 'clientRequestHTTPMethodName_DESC',
  /** clientRequestHTTPProtocol ascending */
  ClientRequestHttpProtocolAsc = 'clientRequestHTTPProtocol_ASC',
  /** clientRequestHTTPProtocol descending */
  ClientRequestHttpProtocolDesc = 'clientRequestHTTPProtocol_DESC',
  /** clientRequestPath ascending */
  ClientRequestPathAsc = 'clientRequestPath_ASC',
  /** clientRequestPath descending */
  ClientRequestPathDesc = 'clientRequestPath_DESC',
  /** clientRequestQuery ascending */
  ClientRequestQueryAsc = 'clientRequestQuery_ASC',
  /** clientRequestQuery descending */
  ClientRequestQueryDesc = 'clientRequestQuery_DESC',
  /** clientRequestScheme ascending */
  ClientRequestSchemeAsc = 'clientRequestScheme_ASC',
  /** clientRequestScheme descending */
  ClientRequestSchemeDesc = 'clientRequestScheme_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** description ascending */
  DescriptionAsc = 'description_ASC',
  /** description descending */
  DescriptionDesc = 'description_DESC',
  /** edgeColoName ascending */
  EdgeColoNameAsc = 'edgeColoName_ASC',
  /** edgeColoName descending */
  EdgeColoNameDesc = 'edgeColoName_DESC',
  /** edgeResponseStatus ascending */
  EdgeResponseStatusAsc = 'edgeResponseStatus_ASC',
  /** edgeResponseStatus descending */
  EdgeResponseStatusDesc = 'edgeResponseStatus_DESC',
  /** httpApplicationVersion ascending */
  HttpApplicationVersionAsc = 'httpApplicationVersion_ASC',
  /** httpApplicationVersion descending */
  HttpApplicationVersionDesc = 'httpApplicationVersion_DESC',
  /** ja3Hash ascending */
  Ja3HashAsc = 'ja3Hash_ASC',
  /** ja3Hash descending */
  Ja3HashDesc = 'ja3Hash_DESC',
  /** kind ascending */
  KindAsc = 'kind_ASC',
  /** kind descending */
  KindDesc = 'kind_DESC',
  /** matchIndex ascending */
  MatchIndexAsc = 'matchIndex_ASC',
  /** matchIndex descending */
  MatchIndexDesc = 'matchIndex_DESC',
  /** originResponseStatus ascending */
  OriginResponseStatusAsc = 'originResponseStatus_ASC',
  /** originResponseStatus descending */
  OriginResponseStatusDesc = 'originResponseStatus_DESC',
  /** originatorRayName ascending */
  OriginatorRayNameAsc = 'originatorRayName_ASC',
  /** originatorRayName descending */
  OriginatorRayNameDesc = 'originatorRayName_DESC',
  /** rayName ascending */
  RayNameAsc = 'rayName_ASC',
  /** rayName descending */
  RayNameDesc = 'rayName_DESC',
  /** ref ascending */
  RefAsc = 'ref_ASC',
  /** ref descending */
  RefDesc = 'ref_DESC',
  /** ruleId ascending */
  RuleIdAsc = 'ruleId_ASC',
  /** ruleId descending */
  RuleIdDesc = 'ruleId_DESC',
  /** rulesetId ascending */
  RulesetIdAsc = 'rulesetId_ASC',
  /** rulesetId descending */
  RulesetIdDesc = 'rulesetId_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** source ascending */
  SourceAsc = 'source_ASC',
  /** source descending */
  SourceDesc = 'source_DESC',
  /** userAgent ascending */
  UserAgentAsc = 'userAgent_ASC',
  /** userAgent descending */
  UserAgentDesc = 'userAgent_DESC',
  /** visibility ascending */
  VisibilityAsc = 'visibility_ASC',
  /** visibility descending */
  VisibilityDesc = 'visibility_DESC',
  /** wafAttackScoreClass ascending */
  WafAttackScoreClassAsc = 'wafAttackScoreClass_ASC',
  /** wafAttackScoreClass descending */
  WafAttackScoreClassDesc = 'wafAttackScoreClass_DESC',
  /** wafAttackScore ascending */
  WafAttackScoreAsc = 'wafAttackScore_ASC',
  /** wafAttackScore descending */
  WafAttackScoreDesc = 'wafAttackScore_DESC',
  /** wafMlAttackScore ascending */
  WafMlAttackScoreAsc = 'wafMlAttackScore_ASC',
  /** wafMlAttackScore descending */
  WafMlAttackScoreDesc = 'wafMlAttackScore_DESC',
  /** wafMlSqliAttackScore ascending */
  WafMlSqliAttackScoreAsc = 'wafMlSqliAttackScore_ASC',
  /** wafMlSqliAttackScore descending */
  WafMlSqliAttackScoreDesc = 'wafMlSqliAttackScore_DESC',
  /** wafMlXssAttackScore ascending */
  WafMlXssAttackScoreAsc = 'wafMlXssAttackScore_ASC',
  /** wafMlXssAttackScore descending */
  WafMlXssAttackScoreDesc = 'wafMlXssAttackScore_DESC',
  /** wafRceAttackScore ascending */
  WafRceAttackScoreAsc = 'wafRceAttackScore_ASC',
  /** wafRceAttackScore descending */
  WafRceAttackScoreDesc = 'wafRceAttackScore_DESC',
  /** wafSqliAttackScore ascending */
  WafSqliAttackScoreAsc = 'wafSqliAttackScore_ASC',
  /** wafSqliAttackScore descending */
  WafSqliAttackScoreDesc = 'wafSqliAttackScore_DESC',
  /** wafXssAttackScore ascending */
  WafXssAttackScoreAsc = 'wafXssAttackScore_ASC',
  /** wafXssAttackScore descending */
  WafXssAttackScoreDesc = 'wafXssAttackScore_DESC',
  /** zoneVersion ascending */
  ZoneVersionAsc = 'zoneVersion_ASC',
  /** zoneVersion descending */
  ZoneVersionDesc = 'zoneVersion_DESC'
}

export type ZoneFirewallEventsAdaptiveMetadataElem = {
  __typename?: 'ZoneFirewallEventsAdaptiveMetadataElem';
  /** The key of the metadata. Key format can vary by Cloudflare security product and can change over time. */
  key: Scalars['string']['output'];
  /** The value of the metadata. Value format can vary by Cloudflare security product and can change over time. */
  value: Scalars['string']['output'];
};

export enum ZoneFirewallEventsAdaptiveOrderBy {
  /** action ascending */
  ActionAsc = 'action_ASC',
  /** action descending */
  ActionDesc = 'action_DESC',
  /** apiGatewayMatchedEndpoint ascending */
  ApiGatewayMatchedEndpointAsc = 'apiGatewayMatchedEndpoint_ASC',
  /** apiGatewayMatchedEndpoint descending */
  ApiGatewayMatchedEndpointDesc = 'apiGatewayMatchedEndpoint_DESC',
  /** apiGatewayMatchedHost ascending */
  ApiGatewayMatchedHostAsc = 'apiGatewayMatchedHost_ASC',
  /** apiGatewayMatchedHost descending */
  ApiGatewayMatchedHostDesc = 'apiGatewayMatchedHost_DESC',
  /** botScoreSrcName ascending */
  BotScoreSrcNameAsc = 'botScoreSrcName_ASC',
  /** botScoreSrcName descending */
  BotScoreSrcNameDesc = 'botScoreSrcName_DESC',
  /** botScore ascending */
  BotScoreAsc = 'botScore_ASC',
  /** botScore descending */
  BotScoreDesc = 'botScore_DESC',
  /** clientASNDescription ascending */
  ClientAsnDescriptionAsc = 'clientASNDescription_ASC',
  /** clientASNDescription descending */
  ClientAsnDescriptionDesc = 'clientASNDescription_DESC',
  /** clientAsn ascending */
  ClientAsnAsc = 'clientAsn_ASC',
  /** clientAsn descending */
  ClientAsnDesc = 'clientAsn_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** clientIPClass ascending */
  ClientIpClassAsc = 'clientIPClass_ASC',
  /** clientIPClass descending */
  ClientIpClassDesc = 'clientIPClass_DESC',
  /** clientIP ascending */
  ClientIpAsc = 'clientIP_ASC',
  /** clientIP descending */
  ClientIpDesc = 'clientIP_DESC',
  /** clientRefererHost ascending */
  ClientRefererHostAsc = 'clientRefererHost_ASC',
  /** clientRefererHost descending */
  ClientRefererHostDesc = 'clientRefererHost_DESC',
  /** clientRefererPath ascending */
  ClientRefererPathAsc = 'clientRefererPath_ASC',
  /** clientRefererPath descending */
  ClientRefererPathDesc = 'clientRefererPath_DESC',
  /** clientRefererQuery ascending */
  ClientRefererQueryAsc = 'clientRefererQuery_ASC',
  /** clientRefererQuery descending */
  ClientRefererQueryDesc = 'clientRefererQuery_DESC',
  /** clientRefererScheme ascending */
  ClientRefererSchemeAsc = 'clientRefererScheme_ASC',
  /** clientRefererScheme descending */
  ClientRefererSchemeDesc = 'clientRefererScheme_DESC',
  /** clientRequestHTTPHost ascending */
  ClientRequestHttpHostAsc = 'clientRequestHTTPHost_ASC',
  /** clientRequestHTTPHost descending */
  ClientRequestHttpHostDesc = 'clientRequestHTTPHost_DESC',
  /** clientRequestHTTPMethodName ascending */
  ClientRequestHttpMethodNameAsc = 'clientRequestHTTPMethodName_ASC',
  /** clientRequestHTTPMethodName descending */
  ClientRequestHttpMethodNameDesc = 'clientRequestHTTPMethodName_DESC',
  /** clientRequestHTTPProtocol ascending */
  ClientRequestHttpProtocolAsc = 'clientRequestHTTPProtocol_ASC',
  /** clientRequestHTTPProtocol descending */
  ClientRequestHttpProtocolDesc = 'clientRequestHTTPProtocol_DESC',
  /** clientRequestPath ascending */
  ClientRequestPathAsc = 'clientRequestPath_ASC',
  /** clientRequestPath descending */
  ClientRequestPathDesc = 'clientRequestPath_DESC',
  /** clientRequestQuery ascending */
  ClientRequestQueryAsc = 'clientRequestQuery_ASC',
  /** clientRequestQuery descending */
  ClientRequestQueryDesc = 'clientRequestQuery_DESC',
  /** clientRequestScheme ascending */
  ClientRequestSchemeAsc = 'clientRequestScheme_ASC',
  /** clientRequestScheme descending */
  ClientRequestSchemeDesc = 'clientRequestScheme_DESC',
  /** contentScanHasFailed ascending */
  ContentScanHasFailedAsc = 'contentScanHasFailed_ASC',
  /** contentScanHasFailed descending */
  ContentScanHasFailedDesc = 'contentScanHasFailed_DESC',
  /** contentScanNumMaliciousObj ascending */
  ContentScanNumMaliciousObjAsc = 'contentScanNumMaliciousObj_ASC',
  /** contentScanNumMaliciousObj descending */
  ContentScanNumMaliciousObjDesc = 'contentScanNumMaliciousObj_DESC',
  /** contentScanNumObj ascending */
  ContentScanNumObjAsc = 'contentScanNumObj_ASC',
  /** contentScanNumObj descending */
  ContentScanNumObjDesc = 'contentScanNumObj_DESC',
  /** contentScanObjResults ascending */
  ContentScanObjResultsAsc = 'contentScanObjResults_ASC',
  /** contentScanObjResults descending */
  ContentScanObjResultsDesc = 'contentScanObjResults_DESC',
  /** contentScanObjTypes ascending */
  ContentScanObjTypesAsc = 'contentScanObjTypes_ASC',
  /** contentScanObjTypes descending */
  ContentScanObjTypesDesc = 'contentScanObjTypes_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** description ascending */
  DescriptionAsc = 'description_ASC',
  /** description descending */
  DescriptionDesc = 'description_DESC',
  /** edgeColoName ascending */
  EdgeColoNameAsc = 'edgeColoName_ASC',
  /** edgeColoName descending */
  EdgeColoNameDesc = 'edgeColoName_DESC',
  /** edgeResponseStatus ascending */
  EdgeResponseStatusAsc = 'edgeResponseStatus_ASC',
  /** edgeResponseStatus descending */
  EdgeResponseStatusDesc = 'edgeResponseStatus_DESC',
  /** httpApplicationVersion ascending */
  HttpApplicationVersionAsc = 'httpApplicationVersion_ASC',
  /** httpApplicationVersion descending */
  HttpApplicationVersionDesc = 'httpApplicationVersion_DESC',
  /** ja3Hash ascending */
  Ja3HashAsc = 'ja3Hash_ASC',
  /** ja3Hash descending */
  Ja3HashDesc = 'ja3Hash_DESC',
  /** kind ascending */
  KindAsc = 'kind_ASC',
  /** kind descending */
  KindDesc = 'kind_DESC',
  /** leakedCredentialCheckResult ascending */
  LeakedCredentialCheckResultAsc = 'leakedCredentialCheckResult_ASC',
  /** leakedCredentialCheckResult descending */
  LeakedCredentialCheckResultDesc = 'leakedCredentialCheckResult_DESC',
  /** matchIndex ascending */
  MatchIndexAsc = 'matchIndex_ASC',
  /** matchIndex descending */
  MatchIndexDesc = 'matchIndex_DESC',
  /** originResponseStatus ascending */
  OriginResponseStatusAsc = 'originResponseStatus_ASC',
  /** originResponseStatus descending */
  OriginResponseStatusDesc = 'originResponseStatus_DESC',
  /** originatorRayName ascending */
  OriginatorRayNameAsc = 'originatorRayName_ASC',
  /** originatorRayName descending */
  OriginatorRayNameDesc = 'originatorRayName_DESC',
  /** rayName ascending */
  RayNameAsc = 'rayName_ASC',
  /** rayName descending */
  RayNameDesc = 'rayName_DESC',
  /** ref ascending */
  RefAsc = 'ref_ASC',
  /** ref descending */
  RefDesc = 'ref_DESC',
  /** ruleId ascending */
  RuleIdAsc = 'ruleId_ASC',
  /** ruleId descending */
  RuleIdDesc = 'ruleId_DESC',
  /** rulesetId ascending */
  RulesetIdAsc = 'rulesetId_ASC',
  /** rulesetId descending */
  RulesetIdDesc = 'rulesetId_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** source ascending */
  SourceAsc = 'source_ASC',
  /** source descending */
  SourceDesc = 'source_DESC',
  /** userAgent ascending */
  UserAgentAsc = 'userAgent_ASC',
  /** userAgent descending */
  UserAgentDesc = 'userAgent_DESC',
  /** visibility ascending */
  VisibilityAsc = 'visibility_ASC',
  /** visibility descending */
  VisibilityDesc = 'visibility_DESC',
  /** wafAttackScoreClass ascending */
  WafAttackScoreClassAsc = 'wafAttackScoreClass_ASC',
  /** wafAttackScoreClass descending */
  WafAttackScoreClassDesc = 'wafAttackScoreClass_DESC',
  /** wafAttackScore ascending */
  WafAttackScoreAsc = 'wafAttackScore_ASC',
  /** wafAttackScore descending */
  WafAttackScoreDesc = 'wafAttackScore_DESC',
  /** wafMlAttackScore ascending */
  WafMlAttackScoreAsc = 'wafMlAttackScore_ASC',
  /** wafMlAttackScore descending */
  WafMlAttackScoreDesc = 'wafMlAttackScore_DESC',
  /** wafMlSqliAttackScore ascending */
  WafMlSqliAttackScoreAsc = 'wafMlSqliAttackScore_ASC',
  /** wafMlSqliAttackScore descending */
  WafMlSqliAttackScoreDesc = 'wafMlSqliAttackScore_DESC',
  /** wafMlXssAttackScore ascending */
  WafMlXssAttackScoreAsc = 'wafMlXssAttackScore_ASC',
  /** wafMlXssAttackScore descending */
  WafMlXssAttackScoreDesc = 'wafMlXssAttackScore_DESC',
  /** wafRceAttackScore ascending */
  WafRceAttackScoreAsc = 'wafRceAttackScore_ASC',
  /** wafRceAttackScore descending */
  WafRceAttackScoreDesc = 'wafRceAttackScore_DESC',
  /** wafSqliAttackScore ascending */
  WafSqliAttackScoreAsc = 'wafSqliAttackScore_ASC',
  /** wafSqliAttackScore descending */
  WafSqliAttackScoreDesc = 'wafSqliAttackScore_DESC',
  /** wafXssAttackScore ascending */
  WafXssAttackScoreAsc = 'wafXssAttackScore_ASC',
  /** wafXssAttackScore descending */
  WafXssAttackScoreDesc = 'wafXssAttackScore_DESC',
  /** zoneVersion ascending */
  ZoneVersionAsc = 'zoneVersion_ASC',
  /** zoneVersion descending */
  ZoneVersionDesc = 'zoneVersion_DESC'
}

/** Raw Health Check events with adaptive sampling */
export type ZoneHealthCheckEventsAdaptive = {
  __typename?: 'ZoneHealthCheckEventsAdaptive';
  /** The date the event was written to the database */
  date: Scalars['Date']['output'];
  /** The date and time the event was written to the database */
  datetime: Scalars['Time']['output'];
  /** The event id that created this healthcheck event */
  eventId: Scalars['string']['output'];
  /** The expected response codes for the health check */
  expectedResponseCodes: Scalars['string']['output'];
  /** Reason why the health check failed */
  failureReason: Scalars['string']['output'];
  /** Fully qualified domain name of the origin (if available) */
  fqdn: Scalars['string']['output'];
  /** 1 if the origin health status has changed since the last health check, 0 otherwise */
  healthChanged: Scalars['uint8']['output'];
  /** A unique identifier for the health check */
  healthCheckId: Scalars['string']['output'];
  /** Human-identifiable health check name */
  healthCheckName: Scalars['string']['output'];
  /** Origin health status */
  healthStatus: Scalars['string']['output'];
  /** IP address of the origin */
  originIP: Scalars['string']['output'];
  /** HTTP status code returned by the origin */
  originResponseStatus: Scalars['uint16']['output'];
  /** Region where the health check occurred */
  region: Scalars['string']['output'];
  /** RTT (milliseconds) to reach the origin */
  rttMs: Scalars['uint64']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** Geographic aggregation level of the health status */
  scope: Scalars['string']['output'];
  /** Time taken for the tcp connection to be established */
  tcpConnMs: Scalars['uint32']['output'];
  /** Time taken for the first byte to be received once connection is available */
  timeToFirstByteMs: Scalars['uint32']['output'];
  /** Time taken for the tls handshake to be completed */
  tlsHandshakeMs: Scalars['uint32']['output'];
};

export type ZoneHealthCheckEventsAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneHealthCheckEventsAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneHealthCheckEventsAdaptiveFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  eventId?: InputMaybe<Scalars['string']['input']>;
  eventId_geq?: InputMaybe<Scalars['string']['input']>;
  eventId_gt?: InputMaybe<Scalars['string']['input']>;
  eventId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  eventId_leq?: InputMaybe<Scalars['string']['input']>;
  eventId_like?: InputMaybe<Scalars['string']['input']>;
  eventId_lt?: InputMaybe<Scalars['string']['input']>;
  eventId_neq?: InputMaybe<Scalars['string']['input']>;
  eventId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  eventId_notlike?: InputMaybe<Scalars['string']['input']>;
  expectedResponseCodes?: InputMaybe<Scalars['string']['input']>;
  expectedResponseCodes_geq?: InputMaybe<Scalars['string']['input']>;
  expectedResponseCodes_gt?: InputMaybe<Scalars['string']['input']>;
  expectedResponseCodes_in?: InputMaybe<Array<Scalars['string']['input']>>;
  expectedResponseCodes_leq?: InputMaybe<Scalars['string']['input']>;
  expectedResponseCodes_like?: InputMaybe<Scalars['string']['input']>;
  expectedResponseCodes_lt?: InputMaybe<Scalars['string']['input']>;
  expectedResponseCodes_neq?: InputMaybe<Scalars['string']['input']>;
  expectedResponseCodes_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  expectedResponseCodes_notlike?: InputMaybe<Scalars['string']['input']>;
  failureReason?: InputMaybe<Scalars['string']['input']>;
  failureReason_geq?: InputMaybe<Scalars['string']['input']>;
  failureReason_gt?: InputMaybe<Scalars['string']['input']>;
  failureReason_in?: InputMaybe<Array<Scalars['string']['input']>>;
  failureReason_leq?: InputMaybe<Scalars['string']['input']>;
  failureReason_like?: InputMaybe<Scalars['string']['input']>;
  failureReason_lt?: InputMaybe<Scalars['string']['input']>;
  failureReason_neq?: InputMaybe<Scalars['string']['input']>;
  failureReason_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  failureReason_notlike?: InputMaybe<Scalars['string']['input']>;
  fqdn?: InputMaybe<Scalars['string']['input']>;
  fqdn_geq?: InputMaybe<Scalars['string']['input']>;
  fqdn_gt?: InputMaybe<Scalars['string']['input']>;
  fqdn_in?: InputMaybe<Array<Scalars['string']['input']>>;
  fqdn_leq?: InputMaybe<Scalars['string']['input']>;
  fqdn_like?: InputMaybe<Scalars['string']['input']>;
  fqdn_lt?: InputMaybe<Scalars['string']['input']>;
  fqdn_neq?: InputMaybe<Scalars['string']['input']>;
  fqdn_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  fqdn_notlike?: InputMaybe<Scalars['string']['input']>;
  healthChanged?: InputMaybe<Scalars['uint8']['input']>;
  healthChanged_geq?: InputMaybe<Scalars['uint8']['input']>;
  healthChanged_gt?: InputMaybe<Scalars['uint8']['input']>;
  healthChanged_in?: InputMaybe<Scalars['bytes']['input']>;
  healthChanged_leq?: InputMaybe<Scalars['uint8']['input']>;
  healthChanged_lt?: InputMaybe<Scalars['uint8']['input']>;
  healthChanged_neq?: InputMaybe<Scalars['uint8']['input']>;
  healthChanged_notin?: InputMaybe<Scalars['bytes']['input']>;
  healthCheckId?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_geq?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_gt?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  healthCheckId_leq?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_like?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_lt?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_neq?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  healthCheckId_notlike?: InputMaybe<Scalars['string']['input']>;
  healthCheckName?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_geq?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_gt?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  healthCheckName_leq?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_like?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_lt?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_neq?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  healthCheckName_notlike?: InputMaybe<Scalars['string']['input']>;
  healthStatus?: InputMaybe<Scalars['string']['input']>;
  healthStatus_geq?: InputMaybe<Scalars['string']['input']>;
  healthStatus_gt?: InputMaybe<Scalars['string']['input']>;
  healthStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  healthStatus_leq?: InputMaybe<Scalars['string']['input']>;
  healthStatus_like?: InputMaybe<Scalars['string']['input']>;
  healthStatus_lt?: InputMaybe<Scalars['string']['input']>;
  healthStatus_neq?: InputMaybe<Scalars['string']['input']>;
  healthStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  healthStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  originIP?: InputMaybe<Scalars['string']['input']>;
  originIP_geq?: InputMaybe<Scalars['string']['input']>;
  originIP_gt?: InputMaybe<Scalars['string']['input']>;
  originIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originIP_leq?: InputMaybe<Scalars['string']['input']>;
  originIP_like?: InputMaybe<Scalars['string']['input']>;
  originIP_lt?: InputMaybe<Scalars['string']['input']>;
  originIP_neq?: InputMaybe<Scalars['string']['input']>;
  originIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originIP_notlike?: InputMaybe<Scalars['string']['input']>;
  originResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  region?: InputMaybe<Scalars['string']['input']>;
  region_geq?: InputMaybe<Scalars['string']['input']>;
  region_gt?: InputMaybe<Scalars['string']['input']>;
  region_in?: InputMaybe<Array<Scalars['string']['input']>>;
  region_leq?: InputMaybe<Scalars['string']['input']>;
  region_like?: InputMaybe<Scalars['string']['input']>;
  region_lt?: InputMaybe<Scalars['string']['input']>;
  region_neq?: InputMaybe<Scalars['string']['input']>;
  region_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  region_notlike?: InputMaybe<Scalars['string']['input']>;
  rttMs?: InputMaybe<Scalars['uint64']['input']>;
  rttMs_geq?: InputMaybe<Scalars['uint64']['input']>;
  rttMs_gt?: InputMaybe<Scalars['uint64']['input']>;
  rttMs_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  rttMs_leq?: InputMaybe<Scalars['uint64']['input']>;
  rttMs_lt?: InputMaybe<Scalars['uint64']['input']>;
  rttMs_neq?: InputMaybe<Scalars['uint64']['input']>;
  rttMs_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  scope?: InputMaybe<Scalars['string']['input']>;
  scope_geq?: InputMaybe<Scalars['string']['input']>;
  scope_gt?: InputMaybe<Scalars['string']['input']>;
  scope_in?: InputMaybe<Array<Scalars['string']['input']>>;
  scope_leq?: InputMaybe<Scalars['string']['input']>;
  scope_like?: InputMaybe<Scalars['string']['input']>;
  scope_lt?: InputMaybe<Scalars['string']['input']>;
  scope_neq?: InputMaybe<Scalars['string']['input']>;
  scope_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  scope_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpConnMs?: InputMaybe<Scalars['uint32']['input']>;
  tcpConnMs_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpConnMs_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpConnMs_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpConnMs_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpConnMs_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpConnMs_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpConnMs_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  timeToFirstByteMs?: InputMaybe<Scalars['uint32']['input']>;
  timeToFirstByteMs_geq?: InputMaybe<Scalars['uint32']['input']>;
  timeToFirstByteMs_gt?: InputMaybe<Scalars['uint32']['input']>;
  timeToFirstByteMs_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  timeToFirstByteMs_leq?: InputMaybe<Scalars['uint32']['input']>;
  timeToFirstByteMs_lt?: InputMaybe<Scalars['uint32']['input']>;
  timeToFirstByteMs_neq?: InputMaybe<Scalars['uint32']['input']>;
  timeToFirstByteMs_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tlsHandshakeMs?: InputMaybe<Scalars['uint32']['input']>;
  tlsHandshakeMs_geq?: InputMaybe<Scalars['uint32']['input']>;
  tlsHandshakeMs_gt?: InputMaybe<Scalars['uint32']['input']>;
  tlsHandshakeMs_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tlsHandshakeMs_leq?: InputMaybe<Scalars['uint32']['input']>;
  tlsHandshakeMs_lt?: InputMaybe<Scalars['uint32']['input']>;
  tlsHandshakeMs_neq?: InputMaybe<Scalars['uint32']['input']>;
  tlsHandshakeMs_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
};

/** Aggregated Health Check events with adaptive sampling */
export type ZoneHealthCheckEventsAdaptiveGroups = {
  __typename?: 'ZoneHealthCheckEventsAdaptiveGroups';
  /** The average value for a metric */
  avg?: Maybe<ZoneHealthCheckEventsAdaptiveGroupsAvg>;
  /** The number of values for a metric per dimension */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneHealthCheckEventsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<ZoneHealthCheckEventsAdaptiveGroupsSum>;
};

export type ZoneHealthCheckEventsAdaptiveGroupsAvg = {
  __typename?: 'ZoneHealthCheckEventsAdaptiveGroupsAvg';
  /** Average RTT (milliseconds) */
  rttMs: Scalars['uint64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
  /** Average TCP Connection time (milliseconds) */
  tcpConnMs: Scalars['uint32']['output'];
  /** Average Time To First Byte (milliseconds) */
  timeToFirstByteMs: Scalars['uint32']['output'];
  /** Average TLS Handshake time (milliseconds) */
  tlsHandshakeMs: Scalars['uint32']['output'];
};

export type ZoneHealthCheckEventsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneHealthCheckEventsAdaptiveGroupsDimensions';
  /** The date the event was written to the database */
  date: Scalars['Date']['output'];
  /** Datetime the event was written to the database */
  datetime: Scalars['Time']['output'];
  /** Datetime the event was written to the database truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Datetime the event was written to the database truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Datetime the event was written to the database truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Datetime the event was written to the database truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Reason why the health check failed */
  failureReason: Scalars['string']['output'];
  /** Fully qualified domain name of the origin (if available) */
  fqdn: Scalars['string']['output'];
  /** 1 if the origin health status has changed since the last health check, 0 otherwise */
  healthChanged: Scalars['uint8']['output'];
  /** A unique identifier for the health check */
  healthCheckId: Scalars['string']['output'];
  /** Human-identifiable health check name */
  healthCheckName: Scalars['string']['output'];
  /** Origin health status */
  healthStatus: Scalars['string']['output'];
  /** IP address of the origin */
  originIP: Scalars['string']['output'];
  /** HTTP status code returned by the origin */
  originResponseStatus: Scalars['uint16']['output'];
  /** Region where the health check occurred */
  region: Scalars['string']['output'];
  /** RTT (milliseconds) to reach the origin */
  rttMs: Scalars['uint64']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** Geographic aggregation level of the health status */
  scope: Scalars['string']['output'];
  /** Time taken for the tcp connection to be established */
  tcpConnMs: Scalars['uint32']['output'];
  /** Time taken for the first byte to be received once connection is available */
  timeToFirstByteMs: Scalars['uint32']['output'];
  /** Time taken for the tls handshake to be completed */
  tlsHandshakeMs: Scalars['uint32']['output'];
};

export type ZoneHealthCheckEventsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneHealthCheckEventsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneHealthCheckEventsAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  failureReason?: InputMaybe<Scalars['string']['input']>;
  failureReason_geq?: InputMaybe<Scalars['string']['input']>;
  failureReason_gt?: InputMaybe<Scalars['string']['input']>;
  failureReason_in?: InputMaybe<Array<Scalars['string']['input']>>;
  failureReason_leq?: InputMaybe<Scalars['string']['input']>;
  failureReason_like?: InputMaybe<Scalars['string']['input']>;
  failureReason_lt?: InputMaybe<Scalars['string']['input']>;
  failureReason_neq?: InputMaybe<Scalars['string']['input']>;
  failureReason_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  failureReason_notlike?: InputMaybe<Scalars['string']['input']>;
  fqdn?: InputMaybe<Scalars['string']['input']>;
  fqdn_geq?: InputMaybe<Scalars['string']['input']>;
  fqdn_gt?: InputMaybe<Scalars['string']['input']>;
  fqdn_in?: InputMaybe<Array<Scalars['string']['input']>>;
  fqdn_leq?: InputMaybe<Scalars['string']['input']>;
  fqdn_like?: InputMaybe<Scalars['string']['input']>;
  fqdn_lt?: InputMaybe<Scalars['string']['input']>;
  fqdn_neq?: InputMaybe<Scalars['string']['input']>;
  fqdn_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  fqdn_notlike?: InputMaybe<Scalars['string']['input']>;
  healthChanged?: InputMaybe<Scalars['uint8']['input']>;
  healthChanged_geq?: InputMaybe<Scalars['uint8']['input']>;
  healthChanged_gt?: InputMaybe<Scalars['uint8']['input']>;
  healthChanged_in?: InputMaybe<Scalars['bytes']['input']>;
  healthChanged_leq?: InputMaybe<Scalars['uint8']['input']>;
  healthChanged_lt?: InputMaybe<Scalars['uint8']['input']>;
  healthChanged_neq?: InputMaybe<Scalars['uint8']['input']>;
  healthChanged_notin?: InputMaybe<Scalars['bytes']['input']>;
  healthCheckId?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_geq?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_gt?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  healthCheckId_leq?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_like?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_lt?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_neq?: InputMaybe<Scalars['string']['input']>;
  healthCheckId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  healthCheckId_notlike?: InputMaybe<Scalars['string']['input']>;
  healthCheckName?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_geq?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_gt?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  healthCheckName_leq?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_like?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_lt?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_neq?: InputMaybe<Scalars['string']['input']>;
  healthCheckName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  healthCheckName_notlike?: InputMaybe<Scalars['string']['input']>;
  healthStatus?: InputMaybe<Scalars['string']['input']>;
  healthStatus_geq?: InputMaybe<Scalars['string']['input']>;
  healthStatus_gt?: InputMaybe<Scalars['string']['input']>;
  healthStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  healthStatus_leq?: InputMaybe<Scalars['string']['input']>;
  healthStatus_like?: InputMaybe<Scalars['string']['input']>;
  healthStatus_lt?: InputMaybe<Scalars['string']['input']>;
  healthStatus_neq?: InputMaybe<Scalars['string']['input']>;
  healthStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  healthStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  originIP?: InputMaybe<Scalars['string']['input']>;
  originIP_geq?: InputMaybe<Scalars['string']['input']>;
  originIP_gt?: InputMaybe<Scalars['string']['input']>;
  originIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originIP_leq?: InputMaybe<Scalars['string']['input']>;
  originIP_like?: InputMaybe<Scalars['string']['input']>;
  originIP_lt?: InputMaybe<Scalars['string']['input']>;
  originIP_neq?: InputMaybe<Scalars['string']['input']>;
  originIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originIP_notlike?: InputMaybe<Scalars['string']['input']>;
  originResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  region?: InputMaybe<Scalars['string']['input']>;
  region_geq?: InputMaybe<Scalars['string']['input']>;
  region_gt?: InputMaybe<Scalars['string']['input']>;
  region_in?: InputMaybe<Array<Scalars['string']['input']>>;
  region_leq?: InputMaybe<Scalars['string']['input']>;
  region_like?: InputMaybe<Scalars['string']['input']>;
  region_lt?: InputMaybe<Scalars['string']['input']>;
  region_neq?: InputMaybe<Scalars['string']['input']>;
  region_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  region_notlike?: InputMaybe<Scalars['string']['input']>;
  rttMs?: InputMaybe<Scalars['uint64']['input']>;
  rttMs_geq?: InputMaybe<Scalars['uint64']['input']>;
  rttMs_gt?: InputMaybe<Scalars['uint64']['input']>;
  rttMs_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  rttMs_leq?: InputMaybe<Scalars['uint64']['input']>;
  rttMs_lt?: InputMaybe<Scalars['uint64']['input']>;
  rttMs_neq?: InputMaybe<Scalars['uint64']['input']>;
  rttMs_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  scope?: InputMaybe<Scalars['string']['input']>;
  scope_geq?: InputMaybe<Scalars['string']['input']>;
  scope_gt?: InputMaybe<Scalars['string']['input']>;
  scope_in?: InputMaybe<Array<Scalars['string']['input']>>;
  scope_leq?: InputMaybe<Scalars['string']['input']>;
  scope_like?: InputMaybe<Scalars['string']['input']>;
  scope_lt?: InputMaybe<Scalars['string']['input']>;
  scope_neq?: InputMaybe<Scalars['string']['input']>;
  scope_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  scope_notlike?: InputMaybe<Scalars['string']['input']>;
  tcpConnMs?: InputMaybe<Scalars['uint32']['input']>;
  tcpConnMs_geq?: InputMaybe<Scalars['uint32']['input']>;
  tcpConnMs_gt?: InputMaybe<Scalars['uint32']['input']>;
  tcpConnMs_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tcpConnMs_leq?: InputMaybe<Scalars['uint32']['input']>;
  tcpConnMs_lt?: InputMaybe<Scalars['uint32']['input']>;
  tcpConnMs_neq?: InputMaybe<Scalars['uint32']['input']>;
  tcpConnMs_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  timeToFirstByteMs?: InputMaybe<Scalars['uint32']['input']>;
  timeToFirstByteMs_geq?: InputMaybe<Scalars['uint32']['input']>;
  timeToFirstByteMs_gt?: InputMaybe<Scalars['uint32']['input']>;
  timeToFirstByteMs_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  timeToFirstByteMs_leq?: InputMaybe<Scalars['uint32']['input']>;
  timeToFirstByteMs_lt?: InputMaybe<Scalars['uint32']['input']>;
  timeToFirstByteMs_neq?: InputMaybe<Scalars['uint32']['input']>;
  timeToFirstByteMs_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tlsHandshakeMs?: InputMaybe<Scalars['uint32']['input']>;
  tlsHandshakeMs_geq?: InputMaybe<Scalars['uint32']['input']>;
  tlsHandshakeMs_gt?: InputMaybe<Scalars['uint32']['input']>;
  tlsHandshakeMs_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  tlsHandshakeMs_leq?: InputMaybe<Scalars['uint32']['input']>;
  tlsHandshakeMs_lt?: InputMaybe<Scalars['uint32']['input']>;
  tlsHandshakeMs_neq?: InputMaybe<Scalars['uint32']['input']>;
  tlsHandshakeMs_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
};

export enum ZoneHealthCheckEventsAdaptiveGroupsOrderBy {
  /** avg(rttMs) ascending */
  AvgRttMsAsc = 'avg_rttMs_ASC',
  /** avg(rttMs) descending */
  AvgRttMsDesc = 'avg_rttMs_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** avg(tcpConnMs) ascending */
  AvgTcpConnMsAsc = 'avg_tcpConnMs_ASC',
  /** avg(tcpConnMs) descending */
  AvgTcpConnMsDesc = 'avg_tcpConnMs_DESC',
  /** avg(timeToFirstByteMs) ascending */
  AvgTimeToFirstByteMsAsc = 'avg_timeToFirstByteMs_ASC',
  /** avg(timeToFirstByteMs) descending */
  AvgTimeToFirstByteMsDesc = 'avg_timeToFirstByteMs_DESC',
  /** avg(tlsHandshakeMs) ascending */
  AvgTlsHandshakeMsAsc = 'avg_tlsHandshakeMs_ASC',
  /** avg(tlsHandshakeMs) descending */
  AvgTlsHandshakeMsDesc = 'avg_tlsHandshakeMs_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** failureReason ascending */
  FailureReasonAsc = 'failureReason_ASC',
  /** failureReason descending */
  FailureReasonDesc = 'failureReason_DESC',
  /** fqdn ascending */
  FqdnAsc = 'fqdn_ASC',
  /** fqdn descending */
  FqdnDesc = 'fqdn_DESC',
  /** healthChanged ascending */
  HealthChangedAsc = 'healthChanged_ASC',
  /** healthChanged descending */
  HealthChangedDesc = 'healthChanged_DESC',
  /** healthCheckId ascending */
  HealthCheckIdAsc = 'healthCheckId_ASC',
  /** healthCheckId descending */
  HealthCheckIdDesc = 'healthCheckId_DESC',
  /** healthCheckName ascending */
  HealthCheckNameAsc = 'healthCheckName_ASC',
  /** healthCheckName descending */
  HealthCheckNameDesc = 'healthCheckName_DESC',
  /** healthStatus ascending */
  HealthStatusAsc = 'healthStatus_ASC',
  /** healthStatus descending */
  HealthStatusDesc = 'healthStatus_DESC',
  /** originIP ascending */
  OriginIpAsc = 'originIP_ASC',
  /** originIP descending */
  OriginIpDesc = 'originIP_DESC',
  /** originResponseStatus ascending */
  OriginResponseStatusAsc = 'originResponseStatus_ASC',
  /** originResponseStatus descending */
  OriginResponseStatusDesc = 'originResponseStatus_DESC',
  /** region ascending */
  RegionAsc = 'region_ASC',
  /** region descending */
  RegionDesc = 'region_DESC',
  /** rttMs ascending */
  RttMsAsc = 'rttMs_ASC',
  /** rttMs descending */
  RttMsDesc = 'rttMs_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** scope ascending */
  ScopeAsc = 'scope_ASC',
  /** scope descending */
  ScopeDesc = 'scope_DESC',
  /** sum(healthStatus) ascending */
  SumHealthStatusAsc = 'sum_healthStatus_ASC',
  /** sum(healthStatus) descending */
  SumHealthStatusDesc = 'sum_healthStatus_DESC',
  /** tcpConnMs ascending */
  TcpConnMsAsc = 'tcpConnMs_ASC',
  /** tcpConnMs descending */
  TcpConnMsDesc = 'tcpConnMs_DESC',
  /** timeToFirstByteMs ascending */
  TimeToFirstByteMsAsc = 'timeToFirstByteMs_ASC',
  /** timeToFirstByteMs descending */
  TimeToFirstByteMsDesc = 'timeToFirstByteMs_DESC',
  /** tlsHandshakeMs ascending */
  TlsHandshakeMsAsc = 'tlsHandshakeMs_ASC',
  /** tlsHandshakeMs descending */
  TlsHandshakeMsDesc = 'tlsHandshakeMs_DESC'
}

export type ZoneHealthCheckEventsAdaptiveGroupsSum = {
  __typename?: 'ZoneHealthCheckEventsAdaptiveGroupsSum';
  healthStatus: Scalars['uint64']['output'];
};

export enum ZoneHealthCheckEventsAdaptiveOrderBy {
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** eventId ascending */
  EventIdAsc = 'eventId_ASC',
  /** eventId descending */
  EventIdDesc = 'eventId_DESC',
  /** expectedResponseCodes ascending */
  ExpectedResponseCodesAsc = 'expectedResponseCodes_ASC',
  /** expectedResponseCodes descending */
  ExpectedResponseCodesDesc = 'expectedResponseCodes_DESC',
  /** failureReason ascending */
  FailureReasonAsc = 'failureReason_ASC',
  /** failureReason descending */
  FailureReasonDesc = 'failureReason_DESC',
  /** fqdn ascending */
  FqdnAsc = 'fqdn_ASC',
  /** fqdn descending */
  FqdnDesc = 'fqdn_DESC',
  /** healthChanged ascending */
  HealthChangedAsc = 'healthChanged_ASC',
  /** healthChanged descending */
  HealthChangedDesc = 'healthChanged_DESC',
  /** healthCheckId ascending */
  HealthCheckIdAsc = 'healthCheckId_ASC',
  /** healthCheckId descending */
  HealthCheckIdDesc = 'healthCheckId_DESC',
  /** healthCheckName ascending */
  HealthCheckNameAsc = 'healthCheckName_ASC',
  /** healthCheckName descending */
  HealthCheckNameDesc = 'healthCheckName_DESC',
  /** healthStatus ascending */
  HealthStatusAsc = 'healthStatus_ASC',
  /** healthStatus descending */
  HealthStatusDesc = 'healthStatus_DESC',
  /** originIP ascending */
  OriginIpAsc = 'originIP_ASC',
  /** originIP descending */
  OriginIpDesc = 'originIP_DESC',
  /** originResponseStatus ascending */
  OriginResponseStatusAsc = 'originResponseStatus_ASC',
  /** originResponseStatus descending */
  OriginResponseStatusDesc = 'originResponseStatus_DESC',
  /** region ascending */
  RegionAsc = 'region_ASC',
  /** region descending */
  RegionDesc = 'region_DESC',
  /** rttMs ascending */
  RttMsAsc = 'rttMs_ASC',
  /** rttMs descending */
  RttMsDesc = 'rttMs_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** scope ascending */
  ScopeAsc = 'scope_ASC',
  /** scope descending */
  ScopeDesc = 'scope_DESC',
  /** tcpConnMs ascending */
  TcpConnMsAsc = 'tcpConnMs_ASC',
  /** tcpConnMs descending */
  TcpConnMsDesc = 'tcpConnMs_DESC',
  /** timeToFirstByteMs ascending */
  TimeToFirstByteMsAsc = 'timeToFirstByteMs_ASC',
  /** timeToFirstByteMs descending */
  TimeToFirstByteMsDesc = 'timeToFirstByteMs_DESC',
  /** tlsHandshakeMs ascending */
  TlsHandshakeMsAsc = 'tlsHandshakeMs_ASC',
  /** tlsHandshakeMs descending */
  TlsHandshakeMsDesc = 'tlsHandshakeMs_DESC'
}

/** Daily rollups of request data by colo */
export type ZoneHttpRequests1dByColoGroups = {
  __typename?: 'ZoneHttpRequests1dByColoGroups';
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneHttpRequests1dByColoGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<ZoneHttpRequests1dByColoGroupsSum>;
};

export type ZoneHttpRequests1dByColoGroupsCountryMapElem = {
  __typename?: 'ZoneHttpRequests1dByColoGroupsCountryMapElem';
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1dByColoGroupsDimensions = {
  __typename?: 'ZoneHttpRequests1dByColoGroupsDimensions';
  /** Code of edge server */
  coloCode: Scalars['string']['output'];
  /** Request date */
  date: Scalars['Date']['output'];
};

export type ZoneHttpRequests1dByColoGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneHttpRequests1dByColoGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneHttpRequests1dByColoGroupsFilter_InputObject>>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
};

export enum ZoneHttpRequests1dByColoGroupsOrderBy {
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC',
  /** sum(cachedBytes) ascending */
  SumCachedBytesAsc = 'sum_cachedBytes_ASC',
  /** sum(cachedBytes) descending */
  SumCachedBytesDesc = 'sum_cachedBytes_DESC',
  /** sum(cachedRequests) ascending */
  SumCachedRequestsAsc = 'sum_cachedRequests_ASC',
  /** sum(cachedRequests) descending */
  SumCachedRequestsDesc = 'sum_cachedRequests_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC'
}

export type ZoneHttpRequests1dByColoGroupsResponseStatusMapElem = {
  __typename?: 'ZoneHttpRequests1dByColoGroupsResponseStatusMapElem';
  /** HTTP response status code returned to client */
  edgeResponseStatus: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1dByColoGroupsSum = {
  __typename?: 'ZoneHttpRequests1dByColoGroupsSum';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Bytes returned to client from cache */
  cachedBytes: Scalars['uint64']['output'];
  /** Requests served from cache */
  cachedRequests: Scalars['uint64']['output'];
  countryMap: Array<ZoneHttpRequests1dByColoGroupsCountryMapElem>;
  requests: Scalars['uint64']['output'];
  responseStatusMap: Array<ZoneHttpRequests1dByColoGroupsResponseStatusMapElem>;
  threatPathingMap: Array<ZoneHttpRequests1dByColoGroupsThreatPathingMapElem>;
};

export type ZoneHttpRequests1dByColoGroupsThreatPathingMapElem = {
  __typename?: 'ZoneHttpRequests1dByColoGroupsThreatPathingMapElem';
  requests: Scalars['uint64']['output'];
  /** Threat type */
  threatPathingName: Scalars['string']['output'];
};

/** Daily rollups of request data */
export type ZoneHttpRequests1dGroups = {
  __typename?: 'ZoneHttpRequests1dGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<ZoneHttpRequests1dGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneHttpRequests1dGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<ZoneHttpRequests1dGroupsSum>;
  /** The number of unique values for a metric per dimension */
  uniq?: Maybe<ZoneHttpRequests1dGroupsUniq>;
};

export type ZoneHttpRequests1dGroupsAvg = {
  __typename?: 'ZoneHttpRequests1dGroupsAvg';
  bytes: Scalars['float64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneHttpRequests1dGroupsBrowserMapElem = {
  __typename?: 'ZoneHttpRequests1dGroupsBrowserMapElem';
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  /** Browser type */
  uaBrowserFamily: Scalars['string']['output'];
};

export type ZoneHttpRequests1dGroupsClientHttpVersionMapElem = {
  __typename?: 'ZoneHttpRequests1dGroupsClientHTTPVersionMapElem';
  /** HTTP version */
  clientHTTPProtocol: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1dGroupsClientSslMapElem = {
  __typename?: 'ZoneHttpRequests1dGroupsClientSSLMapElem';
  /** Protocol version */
  clientSSLProtocol: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1dGroupsContentTypeMapElem = {
  __typename?: 'ZoneHttpRequests1dGroupsContentTypeMapElem';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Content type returned to client */
  edgeResponseContentTypeName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1dGroupsCountryMapElem = {
  __typename?: 'ZoneHttpRequests1dGroupsCountryMapElem';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1dGroupsDimensions = {
  __typename?: 'ZoneHttpRequests1dGroupsDimensions';
  /** Request date */
  date: Scalars['Date']['output'];
};

export type ZoneHttpRequests1dGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneHttpRequests1dGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneHttpRequests1dGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
};

export type ZoneHttpRequests1dGroupsIpClassMapElem = {
  __typename?: 'ZoneHttpRequests1dGroupsIpClassMapElem';
  /** IP class */
  ipType: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export enum ZoneHttpRequests1dGroupsOrderBy {
  /** avg(bytes) ascending */
  AvgBytesAsc = 'avg_bytes_ASC',
  /** avg(bytes) descending */
  AvgBytesDesc = 'avg_bytes_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC',
  /** sum(cachedBytes) ascending */
  SumCachedBytesAsc = 'sum_cachedBytes_ASC',
  /** sum(cachedBytes) descending */
  SumCachedBytesDesc = 'sum_cachedBytes_DESC',
  /** sum(cachedRequests) ascending */
  SumCachedRequestsAsc = 'sum_cachedRequests_ASC',
  /** sum(cachedRequests) descending */
  SumCachedRequestsDesc = 'sum_cachedRequests_DESC',
  /** sum(encryptedBytes) ascending */
  SumEncryptedBytesAsc = 'sum_encryptedBytes_ASC',
  /** sum(encryptedBytes) descending */
  SumEncryptedBytesDesc = 'sum_encryptedBytes_DESC',
  /** sum(encryptedRequests) ascending */
  SumEncryptedRequestsAsc = 'sum_encryptedRequests_ASC',
  /** sum(encryptedRequests) descending */
  SumEncryptedRequestsDesc = 'sum_encryptedRequests_DESC',
  /** sum(pageViews) ascending */
  SumPageViewsAsc = 'sum_pageViews_ASC',
  /** sum(pageViews) descending */
  SumPageViewsDesc = 'sum_pageViews_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(threats) ascending */
  SumThreatsAsc = 'sum_threats_ASC',
  /** sum(threats) descending */
  SumThreatsDesc = 'sum_threats_DESC',
  /** uniq(uniques) ascending */
  UniqUniquesAsc = 'uniq_uniques_ASC',
  /** uniq(uniques) descending */
  UniqUniquesDesc = 'uniq_uniques_DESC'
}

export type ZoneHttpRequests1dGroupsResponseStatusMapElem = {
  __typename?: 'ZoneHttpRequests1dGroupsResponseStatusMapElem';
  /** HTTP response status code returned to client */
  edgeResponseStatus: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1dGroupsSum = {
  __typename?: 'ZoneHttpRequests1dGroupsSum';
  browserMap: Array<ZoneHttpRequests1dGroupsBrowserMapElem>;
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Bytes returned to client from cache */
  cachedBytes: Scalars['uint64']['output'];
  /** Requests served from cache */
  cachedRequests: Scalars['uint64']['output'];
  clientHTTPVersionMap: Array<ZoneHttpRequests1dGroupsClientHttpVersionMapElem>;
  clientSSLMap: Array<ZoneHttpRequests1dGroupsClientSslMapElem>;
  contentTypeMap: Array<ZoneHttpRequests1dGroupsContentTypeMapElem>;
  countryMap: Array<ZoneHttpRequests1dGroupsCountryMapElem>;
  /** Bytes returned to client using SSL/TLS protocol */
  encryptedBytes: Scalars['uint64']['output'];
  /** Requests served using SSL/TLS protocol */
  encryptedRequests: Scalars['uint64']['output'];
  ipClassMap: Array<ZoneHttpRequests1dGroupsIpClassMapElem>;
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
  responseStatusMap: Array<ZoneHttpRequests1dGroupsResponseStatusMapElem>;
  threatPathingMap: Array<ZoneHttpRequests1dGroupsThreatPathingMapElem>;
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1dGroupsThreatPathingMapElem = {
  __typename?: 'ZoneHttpRequests1dGroupsThreatPathingMapElem';
  requests: Scalars['uint64']['output'];
  /** Threat type */
  threatPathingName: Scalars['string']['output'];
};

export type ZoneHttpRequests1dGroupsUniq = {
  __typename?: 'ZoneHttpRequests1dGroupsUniq';
  /** A number of unique IPs */
  uniques: Scalars['uint64']['output'];
};

/** Hourly rollups of request data */
export type ZoneHttpRequests1hGroups = {
  __typename?: 'ZoneHttpRequests1hGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<ZoneHttpRequests1hGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneHttpRequests1hGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<ZoneHttpRequests1hGroupsSum>;
  /** The number of unique values for a metric per dimension */
  uniq?: Maybe<ZoneHttpRequests1hGroupsUniq>;
};

export type ZoneHttpRequests1hGroupsAvg = {
  __typename?: 'ZoneHttpRequests1hGroupsAvg';
  bytes: Scalars['float64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneHttpRequests1hGroupsBrowserMapElem = {
  __typename?: 'ZoneHttpRequests1hGroupsBrowserMapElem';
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  /** Browser type */
  uaBrowserFamily: Scalars['string']['output'];
};

export type ZoneHttpRequests1hGroupsClientHttpVersionMapElem = {
  __typename?: 'ZoneHttpRequests1hGroupsClientHTTPVersionMapElem';
  /** HTTP version */
  clientHTTPProtocol: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1hGroupsClientSslMapElem = {
  __typename?: 'ZoneHttpRequests1hGroupsClientSSLMapElem';
  /** Protocol version */
  clientSSLProtocol: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1hGroupsContentTypeMapElem = {
  __typename?: 'ZoneHttpRequests1hGroupsContentTypeMapElem';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Content type returned to client */
  edgeResponseContentTypeName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1hGroupsCountryMapElem = {
  __typename?: 'ZoneHttpRequests1hGroupsCountryMapElem';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1hGroupsDimensions = {
  __typename?: 'ZoneHttpRequests1hGroupsDimensions';
  /** Request date */
  date: Scalars['Date']['output'];
  /** Request datetime truncated to the hour */
  datetime: Scalars['Time']['output'];
};

export type ZoneHttpRequests1hGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneHttpRequests1hGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneHttpRequests1hGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type ZoneHttpRequests1hGroupsIpClassMapElem = {
  __typename?: 'ZoneHttpRequests1hGroupsIpClassMapElem';
  /** IP class */
  ipType: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export enum ZoneHttpRequests1hGroupsOrderBy {
  /** avg(bytes) ascending */
  AvgBytesAsc = 'avg_bytes_ASC',
  /** avg(bytes) descending */
  AvgBytesDesc = 'avg_bytes_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC',
  /** sum(cachedBytes) ascending */
  SumCachedBytesAsc = 'sum_cachedBytes_ASC',
  /** sum(cachedBytes) descending */
  SumCachedBytesDesc = 'sum_cachedBytes_DESC',
  /** sum(cachedRequests) ascending */
  SumCachedRequestsAsc = 'sum_cachedRequests_ASC',
  /** sum(cachedRequests) descending */
  SumCachedRequestsDesc = 'sum_cachedRequests_DESC',
  /** sum(encryptedBytes) ascending */
  SumEncryptedBytesAsc = 'sum_encryptedBytes_ASC',
  /** sum(encryptedBytes) descending */
  SumEncryptedBytesDesc = 'sum_encryptedBytes_DESC',
  /** sum(encryptedRequests) ascending */
  SumEncryptedRequestsAsc = 'sum_encryptedRequests_ASC',
  /** sum(encryptedRequests) descending */
  SumEncryptedRequestsDesc = 'sum_encryptedRequests_DESC',
  /** sum(pageViews) ascending */
  SumPageViewsAsc = 'sum_pageViews_ASC',
  /** sum(pageViews) descending */
  SumPageViewsDesc = 'sum_pageViews_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(threats) ascending */
  SumThreatsAsc = 'sum_threats_ASC',
  /** sum(threats) descending */
  SumThreatsDesc = 'sum_threats_DESC',
  /** uniq(uniques) ascending */
  UniqUniquesAsc = 'uniq_uniques_ASC',
  /** uniq(uniques) descending */
  UniqUniquesDesc = 'uniq_uniques_DESC'
}

export type ZoneHttpRequests1hGroupsResponseStatusMapElem = {
  __typename?: 'ZoneHttpRequests1hGroupsResponseStatusMapElem';
  /** HTTP response status code returned to client */
  edgeResponseStatus: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1hGroupsSum = {
  __typename?: 'ZoneHttpRequests1hGroupsSum';
  browserMap: Array<ZoneHttpRequests1hGroupsBrowserMapElem>;
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Bytes returned to client from cache */
  cachedBytes: Scalars['uint64']['output'];
  /** Requests served from cache */
  cachedRequests: Scalars['uint64']['output'];
  clientHTTPVersionMap: Array<ZoneHttpRequests1hGroupsClientHttpVersionMapElem>;
  clientSSLMap: Array<ZoneHttpRequests1hGroupsClientSslMapElem>;
  contentTypeMap: Array<ZoneHttpRequests1hGroupsContentTypeMapElem>;
  countryMap: Array<ZoneHttpRequests1hGroupsCountryMapElem>;
  /** Bytes returned to client using SSL/TLS protocol */
  encryptedBytes: Scalars['uint64']['output'];
  /** Requests served using SSL/TLS protocol */
  encryptedRequests: Scalars['uint64']['output'];
  ipClassMap: Array<ZoneHttpRequests1hGroupsIpClassMapElem>;
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
  responseStatusMap: Array<ZoneHttpRequests1hGroupsResponseStatusMapElem>;
  threatPathingMap: Array<ZoneHttpRequests1hGroupsThreatPathingMapElem>;
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1hGroupsThreatPathingMapElem = {
  __typename?: 'ZoneHttpRequests1hGroupsThreatPathingMapElem';
  requests: Scalars['uint64']['output'];
  /** Threat type */
  threatPathingName: Scalars['string']['output'];
};

export type ZoneHttpRequests1hGroupsUniq = {
  __typename?: 'ZoneHttpRequests1hGroupsUniq';
  /** A number of unique IPs */
  uniques: Scalars['uint64']['output'];
};

/** Minutely rollups of request data by colo */
export type ZoneHttpRequests1mByColoGroups = {
  __typename?: 'ZoneHttpRequests1mByColoGroups';
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneHttpRequests1mByColoGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<ZoneHttpRequests1mByColoGroupsSum>;
};

export type ZoneHttpRequests1mByColoGroupsCountryMapElem = {
  __typename?: 'ZoneHttpRequests1mByColoGroupsCountryMapElem';
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1mByColoGroupsDimensions = {
  __typename?: 'ZoneHttpRequests1mByColoGroupsDimensions';
  /** Code of edge server */
  coloCode: Scalars['string']['output'];
  /** Request date */
  date: Scalars['Date']['output'];
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** Request datetime truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
};

export type ZoneHttpRequests1mByColoGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneHttpRequests1mByColoGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneHttpRequests1mByColoGroupsFilter_InputObject>>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export enum ZoneHttpRequests1mByColoGroupsOrderBy {
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC',
  /** sum(cachedBytes) ascending */
  SumCachedBytesAsc = 'sum_cachedBytes_ASC',
  /** sum(cachedBytes) descending */
  SumCachedBytesDesc = 'sum_cachedBytes_DESC',
  /** sum(cachedRequests) ascending */
  SumCachedRequestsAsc = 'sum_cachedRequests_ASC',
  /** sum(cachedRequests) descending */
  SumCachedRequestsDesc = 'sum_cachedRequests_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC'
}

export type ZoneHttpRequests1mByColoGroupsResponseStatusMapElem = {
  __typename?: 'ZoneHttpRequests1mByColoGroupsResponseStatusMapElem';
  /** HTTP response status code returned to client */
  edgeResponseStatus: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1mByColoGroupsSum = {
  __typename?: 'ZoneHttpRequests1mByColoGroupsSum';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Bytes returned to client from cache */
  cachedBytes: Scalars['uint64']['output'];
  /** Requests served from cache */
  cachedRequests: Scalars['uint64']['output'];
  countryMap: Array<ZoneHttpRequests1mByColoGroupsCountryMapElem>;
  requests: Scalars['uint64']['output'];
  responseStatusMap: Array<ZoneHttpRequests1mByColoGroupsResponseStatusMapElem>;
  threatPathingMap: Array<ZoneHttpRequests1mByColoGroupsThreatPathingMapElem>;
};

export type ZoneHttpRequests1mByColoGroupsThreatPathingMapElem = {
  __typename?: 'ZoneHttpRequests1mByColoGroupsThreatPathingMapElem';
  requests: Scalars['uint64']['output'];
  /** Threat type */
  threatPathingName: Scalars['string']['output'];
};

/** Minutely rollups of request data */
export type ZoneHttpRequests1mGroups = {
  __typename?: 'ZoneHttpRequests1mGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<ZoneHttpRequests1mGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneHttpRequests1mGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<ZoneHttpRequests1mGroupsSum>;
  /** The number of unique values for a metric per dimension */
  uniq?: Maybe<ZoneHttpRequests1mGroupsUniq>;
};

export type ZoneHttpRequests1mGroupsAvg = {
  __typename?: 'ZoneHttpRequests1mGroupsAvg';
  bytes: Scalars['float64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneHttpRequests1mGroupsBrowserMapElem = {
  __typename?: 'ZoneHttpRequests1mGroupsBrowserMapElem';
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  /** Browser type */
  uaBrowserFamily: Scalars['string']['output'];
};

export type ZoneHttpRequests1mGroupsClientHttpVersionMapElem = {
  __typename?: 'ZoneHttpRequests1mGroupsClientHTTPVersionMapElem';
  /** HTTP version */
  clientHTTPProtocol: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1mGroupsClientSslMapElem = {
  __typename?: 'ZoneHttpRequests1mGroupsClientSSLMapElem';
  /** Protocol version */
  clientSSLProtocol: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1mGroupsContentTypeMapElem = {
  __typename?: 'ZoneHttpRequests1mGroupsContentTypeMapElem';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Content type returned to client */
  edgeResponseContentTypeName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1mGroupsCountryMapElem = {
  __typename?: 'ZoneHttpRequests1mGroupsCountryMapElem';
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1mGroupsDimensions = {
  __typename?: 'ZoneHttpRequests1mGroupsDimensions';
  /** Request date */
  date: Scalars['Date']['output'];
  /** Request datetime, truncated to the minute */
  datetime: Scalars['Time']['output'];
  /** Request datetime truncated to the day */
  datetimeDay: Scalars['Time']['output'];
  /** Request datetime truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request datetime truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /**
   * Request datetime truncated to the minute
   * @deprecated Field is replaced with <code>datetime</code>
   */
  datetimeMinute: Scalars['Time']['output'];
};

export type ZoneHttpRequests1mGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneHttpRequests1mGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneHttpRequests1mGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeDay_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeDay_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type ZoneHttpRequests1mGroupsIpClassMapElem = {
  __typename?: 'ZoneHttpRequests1mGroupsIpClassMapElem';
  /** IP class */
  ipType: Scalars['string']['output'];
  requests: Scalars['uint64']['output'];
};

export enum ZoneHttpRequests1mGroupsOrderBy {
  /** avg(bytes) ascending */
  AvgBytesAsc = 'avg_bytes_ASC',
  /** avg(bytes) descending */
  AvgBytesDesc = 'avg_bytes_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeDay ascending */
  DatetimeDayAsc = 'datetimeDay_ASC',
  /** datetimeDay descending */
  DatetimeDayDesc = 'datetimeDay_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC',
  /** sum(cachedBytes) ascending */
  SumCachedBytesAsc = 'sum_cachedBytes_ASC',
  /** sum(cachedBytes) descending */
  SumCachedBytesDesc = 'sum_cachedBytes_DESC',
  /** sum(cachedRequests) ascending */
  SumCachedRequestsAsc = 'sum_cachedRequests_ASC',
  /** sum(cachedRequests) descending */
  SumCachedRequestsDesc = 'sum_cachedRequests_DESC',
  /** sum(encryptedBytes) ascending */
  SumEncryptedBytesAsc = 'sum_encryptedBytes_ASC',
  /** sum(encryptedBytes) descending */
  SumEncryptedBytesDesc = 'sum_encryptedBytes_DESC',
  /** sum(encryptedRequests) ascending */
  SumEncryptedRequestsAsc = 'sum_encryptedRequests_ASC',
  /** sum(encryptedRequests) descending */
  SumEncryptedRequestsDesc = 'sum_encryptedRequests_DESC',
  /** sum(pageViews) ascending */
  SumPageViewsAsc = 'sum_pageViews_ASC',
  /** sum(pageViews) descending */
  SumPageViewsDesc = 'sum_pageViews_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(threats) ascending */
  SumThreatsAsc = 'sum_threats_ASC',
  /** sum(threats) descending */
  SumThreatsDesc = 'sum_threats_DESC',
  /** uniq(uniques) ascending */
  UniqUniquesAsc = 'uniq_uniques_ASC',
  /** uniq(uniques) descending */
  UniqUniquesDesc = 'uniq_uniques_DESC'
}

export type ZoneHttpRequests1mGroupsResponseStatusMapElem = {
  __typename?: 'ZoneHttpRequests1mGroupsResponseStatusMapElem';
  /** HTTP response status code returned to client */
  edgeResponseStatus: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1mGroupsSum = {
  __typename?: 'ZoneHttpRequests1mGroupsSum';
  browserMap: Array<ZoneHttpRequests1mGroupsBrowserMapElem>;
  /** Bytes returned to client */
  bytes: Scalars['uint64']['output'];
  /** Bytes returned to client from cache */
  cachedBytes: Scalars['uint64']['output'];
  /** Requests served from cache */
  cachedRequests: Scalars['uint64']['output'];
  clientHTTPVersionMap: Array<ZoneHttpRequests1mGroupsClientHttpVersionMapElem>;
  clientSSLMap: Array<ZoneHttpRequests1mGroupsClientSslMapElem>;
  contentTypeMap: Array<ZoneHttpRequests1mGroupsContentTypeMapElem>;
  countryMap: Array<ZoneHttpRequests1mGroupsCountryMapElem>;
  /** Bytes returned to client using SSL/TLS protocol */
  encryptedBytes: Scalars['uint64']['output'];
  /** Requests served using SSL/TLS protocol */
  encryptedRequests: Scalars['uint64']['output'];
  ipClassMap: Array<ZoneHttpRequests1mGroupsIpClassMapElem>;
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
  responseStatusMap: Array<ZoneHttpRequests1mGroupsResponseStatusMapElem>;
  threatPathingMap: Array<ZoneHttpRequests1mGroupsThreatPathingMapElem>;
  /** Requests classified as threats */
  threats: Scalars['uint64']['output'];
};

export type ZoneHttpRequests1mGroupsThreatPathingMapElem = {
  __typename?: 'ZoneHttpRequests1mGroupsThreatPathingMapElem';
  requests: Scalars['uint64']['output'];
  /** Threat type */
  threatPathingName: Scalars['string']['output'];
};

export type ZoneHttpRequests1mGroupsUniq = {
  __typename?: 'ZoneHttpRequests1mGroupsUniq';
  /** A number of unique IPs */
  uniques: Scalars['uint64']['output'];
};

/** Raw HTTP requests with adaptive sampling */
export type ZoneHttpRequestsAdaptive = {
  __typename?: 'ZoneHttpRequestsAdaptive';
  /** API Gateway endpoint matched at the edge */
  apiGatewayMatchedEndpoint: Scalars['string']['output'];
  /** API Gateway host matched at the edge */
  apiGatewayMatchedHost: Scalars['string']['output'];
  /** Judgement of the bot management system */
  botManagementDecision: Scalars['string']['output'];
  /** The final score originated from bot management detections. */
  botScore: Scalars['uint8']['output'];
  /** Range of the bot management score */
  botScoreBucketBy10: Scalars['uint8']['output'];
  /** Name of the source detection which generated the bot management score. */
  botScoreSrcName: Scalars['string']['output'];
  /** Used Cache Reserve to serve the response */
  cacheReserveUsed: Scalars['uint8']['output'];
  /** Cache status */
  cacheStatus: Scalars['string']['output'];
  /** The ASN of the visitor as string */
  clientASNDescription: Scalars['string']['output'];
  /** The ASN number of the visitor */
  clientAsn: Scalars['string']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  clientDeviceType: Scalars['string']['output'];
  /** The visitor's IP address (IPv4 or IPv6) */
  clientIP: Scalars['string']['output'];
  /** The referrer host */
  clientRefererHost: Scalars['string']['output'];
  /** The HTTP hostname requested by the visitor */
  clientRequestHTTPHost: Scalars['string']['output'];
  /** HTTP method of client request */
  clientRequestHTTPMethodName: Scalars['string']['output'];
  /** The version of HTTP protocol requested by the visitor */
  clientRequestHTTPProtocol: Scalars['string']['output'];
  /** The path requested by visitor */
  clientRequestPath: Scalars['string']['output'];
  /** Query parameters of client request */
  clientRequestQuery: Scalars['string']['output'];
  /** HTTP request referrer */
  clientRequestReferer: Scalars['string']['output'];
  /** The url scheme requested by the visitor */
  clientRequestScheme: Scalars['string']['output'];
  /** SSL protocol version */
  clientSSLProtocol: Scalars['string']['output'];
  coloCode: Scalars['string']['output'];
  /** 1 if not all contents for this request where successfully scanned, else 0 */
  contentScanHasFailed: Scalars['uint8']['output'];
  /** Number of scannable content objects that are malicious */
  contentScanNumMaliciousObj: Scalars['uint8']['output'];
  /** Number of scannable content objects */
  contentScanNumObj: Scalars['uint8']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The time elapsed resolving a CNAME if it was required to reach your origin */
  edgeDnsResponseTimeMs: Scalars['uint16']['output'];
  edgeResponseContentTypeName: Scalars['string']['output'];
  /** HTTP response status code returned to browser */
  edgeResponseStatus: Scalars['uint16']['output'];
  /** The time elapsed between processing the first byte of the request until when we started sending a response */
  edgeTimeToFirstByteMs: Scalars['uint16']['output'];
  /**
   * Version associated with HTTP Application
   * @deprecated Field is replaced with <code>zoneVersion</code>
   */
  httpApplicationVersion: Scalars['uint64']['output'];
  /** '1' if a request was inititiated by a Cloudflare Worker on another zone; '0' otherwise. */
  isCrossZoneSubrequest: Scalars['uint8']['output'];
  /** MD5 hash of the JA3 TLS fingerprint */
  ja3Hash: Scalars['string']['output'];
  /** The distinct result of checking for leaked credentials */
  leakedCredentialCheckResult: Scalars['string']['output'];
  originASN: Scalars['uint32']['output'];
  /** ASN associated with origin */
  originASNDescription: Scalars['string']['output'];
  originIP: Scalars['string']['output'];
  originResponseDurationMs: Scalars['uint64']['output'];
  /** HTTP origin response status code returned to browser */
  originResponseStatus: Scalars['uint16']['output'];
  requestSource: Scalars['string']['output'];
  /** The code of the first-class action the Cloudflare Firewall took on this request */
  securityAction: Scalars['string']['output'];
  /** The Cloudflare security product triggered by this request */
  securitySource: Scalars['string']['output'];
  upperTierColoName: Scalars['string']['output'];
  /** visitor's user-agent string */
  userAgent: Scalars['string']['output'];
  /** Browser parsed from the user agent */
  userAgentBrowser: Scalars['string']['output'];
  /** OS parsed from the user agent */
  userAgentOS: Scalars['string']['output'];
  /** Beta. Overall request score generated by the WAF detection module */
  wafAttackScore: Scalars['uint8']['output'];
  /** Beta. Overall request score class generated by the WAF detection module */
  wafAttackScoreClass: Scalars['string']['output'];
  /** Beta. WAF score for a RCE attack */
  wafRceAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a SQLi attack */
  wafSqliAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a XSS attack */
  wafXssAttackScore: Scalars['uint8']['output'];
  /** The X-Requested-With header of the client request */
  xRequestedWith: Scalars['string']['output'];
  /** The version of a zone */
  zoneVersion: Scalars['uint64']['output'];
};

export type ZoneHttpRequestsAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneHttpRequestsAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneHttpRequestsAdaptiveFilter_InputObject>>;
  apiGatewayMatchedEndpoint?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_notlike?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_geq?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_gt?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botManagementDecision_leq?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_like?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_lt?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_neq?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botManagementDecision_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_in?: InputMaybe<Scalars['bytes']['input']>;
  botScoreBucketBy10_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_notin?: InputMaybe<Scalars['bytes']['input']>;
  botScoreSrcName?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_geq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_gt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_leq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_like?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_lt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_neq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_in?: InputMaybe<Scalars['bytes']['input']>;
  botScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  cacheReserveUsed?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_geq?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_gt?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_in?: InputMaybe<Scalars['bytes']['input']>;
  cacheReserveUsed_leq?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_lt?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_neq?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_notin?: InputMaybe<Scalars['bytes']['input']>;
  cacheStatus?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_geq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_gt?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cacheStatus_leq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_like?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_lt?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_neq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cacheStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  clientAsn?: InputMaybe<Scalars['string']['input']>;
  clientAsn_geq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_gt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_leq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_like?: InputMaybe<Scalars['string']['input']>;
  clientAsn_lt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_neq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_notlike?: InputMaybe<Scalars['string']['input']>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_geq?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_gt?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientDeviceType_leq?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_like?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_lt?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_neq?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientDeviceType_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP?: InputMaybe<Scalars['string']['input']>;
  clientIP_geq?: InputMaybe<Scalars['string']['input']>;
  clientIP_gt?: InputMaybe<Scalars['string']['input']>;
  clientIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_leq?: InputMaybe<Scalars['string']['input']>;
  clientIP_like?: InputMaybe<Scalars['string']['input']>;
  clientIP_lt?: InputMaybe<Scalars['string']['input']>;
  clientIP_neq?: InputMaybe<Scalars['string']['input']>;
  clientIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestReferer_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestReferer_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientSSLProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientSSLProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  contentScanHasFailed?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanHasFailed_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumMaliciousObj?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumMaliciousObj_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumObj?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumObj_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_notin?: InputMaybe<Scalars['bytes']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  edgeDnsResponseTimeMs?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeDnsResponseTimeMs_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseContentTypeName?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_like?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeTimeToFirstByteMs?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeTimeToFirstByteMs_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpApplicationVersion?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  httpApplicationVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  isCrossZoneSubrequest?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_geq?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_gt?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_in?: InputMaybe<Scalars['bytes']['input']>;
  isCrossZoneSubrequest_leq?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_lt?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_neq?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_notin?: InputMaybe<Scalars['bytes']['input']>;
  ja3Hash?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_geq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_gt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_leq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_like?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_lt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_neq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_notlike?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_geq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_gt?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leakedCredentialCheckResult_leq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_like?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_lt?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_neq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leakedCredentialCheckResult_notlike?: InputMaybe<Scalars['string']['input']>;
  originASN?: InputMaybe<Scalars['uint32']['input']>;
  originASNDescription?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  originASN_geq?: InputMaybe<Scalars['uint32']['input']>;
  originASN_gt?: InputMaybe<Scalars['uint32']['input']>;
  originASN_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  originASN_leq?: InputMaybe<Scalars['uint32']['input']>;
  originASN_lt?: InputMaybe<Scalars['uint32']['input']>;
  originASN_neq?: InputMaybe<Scalars['uint32']['input']>;
  originASN_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  originIP?: InputMaybe<Scalars['string']['input']>;
  originIP_geq?: InputMaybe<Scalars['string']['input']>;
  originIP_gt?: InputMaybe<Scalars['string']['input']>;
  originIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originIP_leq?: InputMaybe<Scalars['string']['input']>;
  originIP_like?: InputMaybe<Scalars['string']['input']>;
  originIP_lt?: InputMaybe<Scalars['string']['input']>;
  originIP_neq?: InputMaybe<Scalars['string']['input']>;
  originIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originIP_notlike?: InputMaybe<Scalars['string']['input']>;
  originResponseDurationMs?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_geq?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_gt?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  originResponseDurationMs_leq?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_lt?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_neq?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  originResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  requestSource?: InputMaybe<Scalars['string']['input']>;
  requestSource_geq?: InputMaybe<Scalars['string']['input']>;
  requestSource_gt?: InputMaybe<Scalars['string']['input']>;
  requestSource_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestSource_leq?: InputMaybe<Scalars['string']['input']>;
  requestSource_like?: InputMaybe<Scalars['string']['input']>;
  requestSource_lt?: InputMaybe<Scalars['string']['input']>;
  requestSource_neq?: InputMaybe<Scalars['string']['input']>;
  requestSource_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestSource_notlike?: InputMaybe<Scalars['string']['input']>;
  securityAction?: InputMaybe<Scalars['string']['input']>;
  securityAction_geq?: InputMaybe<Scalars['string']['input']>;
  securityAction_gt?: InputMaybe<Scalars['string']['input']>;
  securityAction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  securityAction_leq?: InputMaybe<Scalars['string']['input']>;
  securityAction_like?: InputMaybe<Scalars['string']['input']>;
  securityAction_lt?: InputMaybe<Scalars['string']['input']>;
  securityAction_neq?: InputMaybe<Scalars['string']['input']>;
  securityAction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  securityAction_notlike?: InputMaybe<Scalars['string']['input']>;
  securitySource?: InputMaybe<Scalars['string']['input']>;
  securitySource_geq?: InputMaybe<Scalars['string']['input']>;
  securitySource_gt?: InputMaybe<Scalars['string']['input']>;
  securitySource_in?: InputMaybe<Array<Scalars['string']['input']>>;
  securitySource_leq?: InputMaybe<Scalars['string']['input']>;
  securitySource_like?: InputMaybe<Scalars['string']['input']>;
  securitySource_lt?: InputMaybe<Scalars['string']['input']>;
  securitySource_neq?: InputMaybe<Scalars['string']['input']>;
  securitySource_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  securitySource_notlike?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_geq?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_gt?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  upperTierColoName_leq?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_like?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_lt?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_neq?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  upperTierColoName_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_like?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgentOS?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_like?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent_geq?: InputMaybe<Scalars['string']['input']>;
  userAgent_gt?: InputMaybe<Scalars['string']['input']>;
  userAgent_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_leq?: InputMaybe<Scalars['string']['input']>;
  userAgent_like?: InputMaybe<Scalars['string']['input']>;
  userAgent_lt?: InputMaybe<Scalars['string']['input']>;
  userAgent_neq?: InputMaybe<Scalars['string']['input']>;
  userAgent_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScoreClass?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_geq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_gt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_leq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_like?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_lt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_neq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  xRequestedWith?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_geq?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_gt?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_in?: InputMaybe<Array<Scalars['string']['input']>>;
  xRequestedWith_leq?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_like?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_lt?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_neq?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  xRequestedWith_notlike?: InputMaybe<Scalars['string']['input']>;
  zoneVersion?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  zoneVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

/** Aggregated HTTP requests data with adaptive sampling */
export type ZoneHttpRequestsAdaptiveGroups = {
  __typename?: 'ZoneHttpRequestsAdaptiveGroups';
  /** The average value used for sample interval */
  avg?: Maybe<ZoneHttpRequestsAdaptiveGroupsAvg>;
  /** ALPHA - DO NOT USE */
  confidence: ZoneHttpRequestsAdaptiveGroupsConfidence;
  /** The number of values for a metric per dimension */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneHttpRequestsAdaptiveGroupsDimensions>;
  /** Quantiles of a metric per dimension */
  quantiles?: Maybe<ZoneHttpRequestsAdaptiveGroupsQuantiles>;
  /** The ratio of a range of status codes, between 0 and 1 */
  ratio?: Maybe<ZoneHttpRequestsAdaptiveGroupsRatio>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<ZoneHttpRequestsAdaptiveGroupsSum>;
};


/** Aggregated HTTP requests data with adaptive sampling */
export type ZoneHttpRequestsAdaptiveGroupsConfidenceArgs = {
  level: Scalars['float64']['input'];
};

export type ZoneHttpRequestsAdaptiveGroupsAvg = {
  __typename?: 'ZoneHttpRequestsAdaptiveGroupsAvg';
  /** The proportion of requests that were inititiated by a Cloudflare Worker on another zone */
  crossZoneSubrequests: Scalars['float64']['output'];
  edgeDnsResponseTimeMs: Scalars['float64']['output'];
  edgeTimeToFirstByteMs: Scalars['float64']['output'];
  /** The average originResponseDuration, in milliseconds, excluding 0 values (i.e. cached ones) */
  originResponseDurationMs: Scalars['float64']['output'];
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneHttpRequestsAdaptiveGroupsConfidence = {
  __typename?: 'ZoneHttpRequestsAdaptiveGroupsConfidence';
  /** The number of values for a metric per dimension, with confidence intervals */
  count: Confidence;
  /** Confidence level that was requested */
  level: Scalars['float64']['output'];
  /** The sum of values for a metric per dimension, with confidence intervals */
  sum?: Maybe<ZoneHttpRequestsAdaptiveGroupsSumConfidence>;
};

export type ZoneHttpRequestsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneHttpRequestsAdaptiveGroupsDimensions';
  /** API Gateway endpoint matched at the edge */
  apiGatewayMatchedEndpoint: Scalars['string']['output'];
  /** API Gateway host matched at the edge */
  apiGatewayMatchedHost: Scalars['string']['output'];
  /** Judgement of the bot management system */
  botManagementDecision: Scalars['string']['output'];
  /** The final score originated from bot management detections. */
  botScore: Scalars['uint8']['output'];
  /** Range of the bot management score */
  botScoreBucketBy10: Scalars['uint8']['output'];
  /** Name of the source detection which generated the bot management score. */
  botScoreSrcName: Scalars['string']['output'];
  /** Used Cache Reserve to serve the response */
  cacheReserveUsed: Scalars['uint8']['output'];
  cacheStatus: Scalars['string']['output'];
  /** The ASN of the visitor as string */
  clientASNDescription: Scalars['string']['output'];
  clientAsn: Scalars['string']['output'];
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  clientDeviceType: Scalars['string']['output'];
  clientIP: Scalars['string']['output'];
  /** The referrer host */
  clientRefererHost: Scalars['string']['output'];
  /** Host requested by the client */
  clientRequestHTTPHost: Scalars['string']['output'];
  /** HTTP method of client request */
  clientRequestHTTPMethodName: Scalars['string']['output'];
  /** HTTP protocol version */
  clientRequestHTTPProtocol: Scalars['string']['output'];
  /** Path of client request */
  clientRequestPath: Scalars['string']['output'];
  /** Query parameters of client request */
  clientRequestQuery: Scalars['string']['output'];
  /** HTTP request referrer */
  clientRequestReferer: Scalars['string']['output'];
  /** HTTP request URI scheme (http/https) */
  clientRequestScheme: Scalars['string']['output'];
  /** SSL protocol version */
  clientSSLProtocol: Scalars['string']['output'];
  coloCode: Scalars['string']['output'];
  /** 1 if not all contents for this request where successfully scanned, else 0 */
  contentScanHasFailed: Scalars['uint8']['output'];
  /** Number of scannable content objects that are malicious */
  contentScanNumMaliciousObj: Scalars['uint8']['output'];
  /** Number of scannable content objects */
  contentScanNumObj: Scalars['uint8']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** The time elapsed resolving a CNAME if it was required to reach your origin */
  edgeDnsResponseTimeMs: Scalars['uint16']['output'];
  edgeResponseContentTypeName: Scalars['string']['output'];
  edgeResponseStatus: Scalars['uint16']['output'];
  /** The time elapsed between processing the first byte of the request until when we started sending a response */
  edgeTimeToFirstByteMs: Scalars['uint16']['output'];
  /**
   * Version associated with HTTP Application
   * @deprecated Field is replaced with <code>zoneVersion</code>
   */
  httpApplicationVersion: Scalars['uint64']['output'];
  /** '1' if a request was inititiated by a Cloudflare Worker on another zone; '0' otherwise. */
  isCrossZoneSubrequest: Scalars['uint8']['output'];
  /** MD5 hash of the JA3 TLS fingerprint */
  ja3Hash: Scalars['string']['output'];
  /** The distinct result of checking for leaked credentials */
  leakedCredentialCheckResult: Scalars['string']['output'];
  originASN: Scalars['uint32']['output'];
  /** ASN associated with origin */
  originASNDescription: Scalars['string']['output'];
  originIP: Scalars['string']['output'];
  originResponseDurationMs: Scalars['uint64']['output'];
  /** HTTP response status code returned by the origin */
  originResponseStatus: Scalars['uint16']['output'];
  requestSource: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** The code of the first-class action the Cloudflare Firewall took on this request */
  securityAction: Scalars['string']['output'];
  /** The Cloudflare security product triggered by this request */
  securitySource: Scalars['string']['output'];
  upperTierColoName: Scalars['string']['output'];
  userAgent: Scalars['string']['output'];
  /** Browser parsed from the user agent */
  userAgentBrowser: Scalars['string']['output'];
  /** OS parsed from the user agent */
  userAgentOS: Scalars['string']['output'];
  /** Beta. Overall request score generated by the WAF detection module */
  wafAttackScore: Scalars['uint8']['output'];
  /** Beta. Overall request score class generated by the WAF detection module */
  wafAttackScoreClass: Scalars['string']['output'];
  /** Beta. WAF score for a RCE attack */
  wafRceAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a SQLi attack */
  wafSqliAttackScore: Scalars['uint8']['output'];
  /** Beta. WAF score for a XSS attack */
  wafXssAttackScore: Scalars['uint8']['output'];
  /** The X-Requested-With header of the client request */
  xRequestedWith: Scalars['string']['output'];
  /** The version of a zone */
  zoneVersion: Scalars['uint64']['output'];
};

export type ZoneHttpRequestsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneHttpRequestsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneHttpRequestsAdaptiveGroupsFilter_InputObject>>;
  apiGatewayMatchedEndpoint?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedEndpoint_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedEndpoint_notlike?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_geq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_gt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_leq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_like?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_lt?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_neq?: InputMaybe<Scalars['string']['input']>;
  apiGatewayMatchedHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  apiGatewayMatchedHost_notlike?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_geq?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_gt?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botManagementDecision_leq?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_like?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_lt?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_neq?: InputMaybe<Scalars['string']['input']>;
  botManagementDecision_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botManagementDecision_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_in?: InputMaybe<Scalars['bytes']['input']>;
  botScoreBucketBy10_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScoreBucketBy10_notin?: InputMaybe<Scalars['bytes']['input']>;
  botScoreSrcName?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_geq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_gt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_leq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_like?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_lt?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_neq?: InputMaybe<Scalars['string']['input']>;
  botScoreSrcName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  botScoreSrcName_notlike?: InputMaybe<Scalars['string']['input']>;
  botScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_in?: InputMaybe<Scalars['bytes']['input']>;
  botScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  botScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  botScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  cacheReserveUsed?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_geq?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_gt?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_in?: InputMaybe<Scalars['bytes']['input']>;
  cacheReserveUsed_leq?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_lt?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_neq?: InputMaybe<Scalars['uint8']['input']>;
  cacheReserveUsed_notin?: InputMaybe<Scalars['bytes']['input']>;
  cacheStatus?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_geq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_gt?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cacheStatus_leq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_like?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_lt?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_neq?: InputMaybe<Scalars['string']['input']>;
  cacheStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cacheStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  clientASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  clientAsn?: InputMaybe<Scalars['string']['input']>;
  clientAsn_geq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_gt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_leq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_like?: InputMaybe<Scalars['string']['input']>;
  clientAsn_lt?: InputMaybe<Scalars['string']['input']>;
  clientAsn_neq?: InputMaybe<Scalars['string']['input']>;
  clientAsn_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientAsn_notlike?: InputMaybe<Scalars['string']['input']>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_geq?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_gt?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientDeviceType_leq?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_like?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_lt?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_neq?: InputMaybe<Scalars['string']['input']>;
  clientDeviceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientDeviceType_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIP?: InputMaybe<Scalars['string']['input']>;
  clientIP_geq?: InputMaybe<Scalars['string']['input']>;
  clientIP_gt?: InputMaybe<Scalars['string']['input']>;
  clientIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_leq?: InputMaybe<Scalars['string']['input']>;
  clientIP_like?: InputMaybe<Scalars['string']['input']>;
  clientIP_lt?: InputMaybe<Scalars['string']['input']>;
  clientIP_neq?: InputMaybe<Scalars['string']['input']>;
  clientIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIP_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRefererHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRefererHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPHost_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPMethodName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPMethodName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestPath_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestQuery_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestQuery_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestReferer_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestReferer_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestReferer_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestScheme_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestScheme_notlike?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientSSLProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientSSLProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  contentScanHasFailed?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanHasFailed_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanHasFailed_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumMaliciousObj?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumMaliciousObj_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumMaliciousObj_notin?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumObj?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_geq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_gt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_in?: InputMaybe<Scalars['bytes']['input']>;
  contentScanNumObj_leq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_lt?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_neq?: InputMaybe<Scalars['uint8']['input']>;
  contentScanNumObj_notin?: InputMaybe<Scalars['bytes']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  edgeDnsResponseTimeMs?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeDnsResponseTimeMs_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeDnsResponseTimeMs_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseContentTypeName?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_like?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeTimeToFirstByteMs?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeTimeToFirstByteMs_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeTimeToFirstByteMs_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpApplicationVersion?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  httpApplicationVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  isCrossZoneSubrequest?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_geq?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_gt?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_in?: InputMaybe<Scalars['bytes']['input']>;
  isCrossZoneSubrequest_leq?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_lt?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_neq?: InputMaybe<Scalars['uint8']['input']>;
  isCrossZoneSubrequest_notin?: InputMaybe<Scalars['bytes']['input']>;
  ja3Hash?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_geq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_gt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_in?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_leq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_like?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_lt?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_neq?: InputMaybe<Scalars['string']['input']>;
  ja3Hash_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  ja3Hash_notlike?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_geq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_gt?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_in?: InputMaybe<Array<Scalars['string']['input']>>;
  leakedCredentialCheckResult_leq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_like?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_lt?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_neq?: InputMaybe<Scalars['string']['input']>;
  leakedCredentialCheckResult_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  leakedCredentialCheckResult_notlike?: InputMaybe<Scalars['string']['input']>;
  originASN?: InputMaybe<Scalars['uint32']['input']>;
  originASNDescription?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  originASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  originASN_geq?: InputMaybe<Scalars['uint32']['input']>;
  originASN_gt?: InputMaybe<Scalars['uint32']['input']>;
  originASN_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  originASN_leq?: InputMaybe<Scalars['uint32']['input']>;
  originASN_lt?: InputMaybe<Scalars['uint32']['input']>;
  originASN_neq?: InputMaybe<Scalars['uint32']['input']>;
  originASN_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  originIP?: InputMaybe<Scalars['string']['input']>;
  originIP_geq?: InputMaybe<Scalars['string']['input']>;
  originIP_gt?: InputMaybe<Scalars['string']['input']>;
  originIP_in?: InputMaybe<Array<Scalars['string']['input']>>;
  originIP_leq?: InputMaybe<Scalars['string']['input']>;
  originIP_like?: InputMaybe<Scalars['string']['input']>;
  originIP_lt?: InputMaybe<Scalars['string']['input']>;
  originIP_neq?: InputMaybe<Scalars['string']['input']>;
  originIP_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  originIP_notlike?: InputMaybe<Scalars['string']['input']>;
  originResponseDurationMs?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_geq?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_gt?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  originResponseDurationMs_leq?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_lt?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_neq?: InputMaybe<Scalars['uint64']['input']>;
  originResponseDurationMs_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  originResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  originResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  originResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  requestSource?: InputMaybe<Scalars['string']['input']>;
  requestSource_geq?: InputMaybe<Scalars['string']['input']>;
  requestSource_gt?: InputMaybe<Scalars['string']['input']>;
  requestSource_in?: InputMaybe<Array<Scalars['string']['input']>>;
  requestSource_leq?: InputMaybe<Scalars['string']['input']>;
  requestSource_like?: InputMaybe<Scalars['string']['input']>;
  requestSource_lt?: InputMaybe<Scalars['string']['input']>;
  requestSource_neq?: InputMaybe<Scalars['string']['input']>;
  requestSource_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  requestSource_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  securityAction?: InputMaybe<Scalars['string']['input']>;
  securityAction_geq?: InputMaybe<Scalars['string']['input']>;
  securityAction_gt?: InputMaybe<Scalars['string']['input']>;
  securityAction_in?: InputMaybe<Array<Scalars['string']['input']>>;
  securityAction_leq?: InputMaybe<Scalars['string']['input']>;
  securityAction_like?: InputMaybe<Scalars['string']['input']>;
  securityAction_lt?: InputMaybe<Scalars['string']['input']>;
  securityAction_neq?: InputMaybe<Scalars['string']['input']>;
  securityAction_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  securityAction_notlike?: InputMaybe<Scalars['string']['input']>;
  securitySource?: InputMaybe<Scalars['string']['input']>;
  securitySource_geq?: InputMaybe<Scalars['string']['input']>;
  securitySource_gt?: InputMaybe<Scalars['string']['input']>;
  securitySource_in?: InputMaybe<Array<Scalars['string']['input']>>;
  securitySource_leq?: InputMaybe<Scalars['string']['input']>;
  securitySource_like?: InputMaybe<Scalars['string']['input']>;
  securitySource_lt?: InputMaybe<Scalars['string']['input']>;
  securitySource_neq?: InputMaybe<Scalars['string']['input']>;
  securitySource_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  securitySource_notlike?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_geq?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_gt?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  upperTierColoName_leq?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_like?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_lt?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_neq?: InputMaybe<Scalars['string']['input']>;
  upperTierColoName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  upperTierColoName_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_like?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgentOS?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_like?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentOS_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentOS_notlike?: InputMaybe<Scalars['string']['input']>;
  userAgent_geq?: InputMaybe<Scalars['string']['input']>;
  userAgent_gt?: InputMaybe<Scalars['string']['input']>;
  userAgent_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_leq?: InputMaybe<Scalars['string']['input']>;
  userAgent_like?: InputMaybe<Scalars['string']['input']>;
  userAgent_lt?: InputMaybe<Scalars['string']['input']>;
  userAgent_neq?: InputMaybe<Scalars['string']['input']>;
  userAgent_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgent_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScoreClass?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_geq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_gt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_in?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_leq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_like?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_lt?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_neq?: InputMaybe<Scalars['string']['input']>;
  wafAttackScoreClass_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  wafAttackScoreClass_notlike?: InputMaybe<Scalars['string']['input']>;
  wafAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafRceAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafRceAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafSqliAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafSqliAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_geq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_gt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_in?: InputMaybe<Scalars['bytes']['input']>;
  wafXssAttackScore_leq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_lt?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_neq?: InputMaybe<Scalars['uint8']['input']>;
  wafXssAttackScore_notin?: InputMaybe<Scalars['bytes']['input']>;
  xRequestedWith?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_geq?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_gt?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_in?: InputMaybe<Array<Scalars['string']['input']>>;
  xRequestedWith_leq?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_like?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_lt?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_neq?: InputMaybe<Scalars['string']['input']>;
  xRequestedWith_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  xRequestedWith_notlike?: InputMaybe<Scalars['string']['input']>;
  zoneVersion?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  zoneVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

export enum ZoneHttpRequestsAdaptiveGroupsOrderBy {
  /** apiGatewayMatchedEndpoint ascending */
  ApiGatewayMatchedEndpointAsc = 'apiGatewayMatchedEndpoint_ASC',
  /** apiGatewayMatchedEndpoint descending */
  ApiGatewayMatchedEndpointDesc = 'apiGatewayMatchedEndpoint_DESC',
  /** apiGatewayMatchedHost ascending */
  ApiGatewayMatchedHostAsc = 'apiGatewayMatchedHost_ASC',
  /** apiGatewayMatchedHost descending */
  ApiGatewayMatchedHostDesc = 'apiGatewayMatchedHost_DESC',
  /** avg(crossZoneSubrequests) ascending */
  AvgCrossZoneSubrequestsAsc = 'avg_crossZoneSubrequests_ASC',
  /** avg(crossZoneSubrequests) descending */
  AvgCrossZoneSubrequestsDesc = 'avg_crossZoneSubrequests_DESC',
  /** avg(edgeDnsResponseTimeMs) ascending */
  AvgEdgeDnsResponseTimeMsAsc = 'avg_edgeDnsResponseTimeMs_ASC',
  /** avg(edgeDnsResponseTimeMs) descending */
  AvgEdgeDnsResponseTimeMsDesc = 'avg_edgeDnsResponseTimeMs_DESC',
  /** avg(edgeTimeToFirstByteMs) ascending */
  AvgEdgeTimeToFirstByteMsAsc = 'avg_edgeTimeToFirstByteMs_ASC',
  /** avg(edgeTimeToFirstByteMs) descending */
  AvgEdgeTimeToFirstByteMsDesc = 'avg_edgeTimeToFirstByteMs_DESC',
  /** avg(originResponseDurationMs) ascending */
  AvgOriginResponseDurationMsAsc = 'avg_originResponseDurationMs_ASC',
  /** avg(originResponseDurationMs) descending */
  AvgOriginResponseDurationMsDesc = 'avg_originResponseDurationMs_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** botManagementDecision ascending */
  BotManagementDecisionAsc = 'botManagementDecision_ASC',
  /** botManagementDecision descending */
  BotManagementDecisionDesc = 'botManagementDecision_DESC',
  /** botScoreBucketBy10 ascending */
  BotScoreBucketBy10Asc = 'botScoreBucketBy10_ASC',
  /** botScoreBucketBy10 descending */
  BotScoreBucketBy10Desc = 'botScoreBucketBy10_DESC',
  /** botScoreSrcName ascending */
  BotScoreSrcNameAsc = 'botScoreSrcName_ASC',
  /** botScoreSrcName descending */
  BotScoreSrcNameDesc = 'botScoreSrcName_DESC',
  /** botScore ascending */
  BotScoreAsc = 'botScore_ASC',
  /** botScore descending */
  BotScoreDesc = 'botScore_DESC',
  /** cacheReserveUsed ascending */
  CacheReserveUsedAsc = 'cacheReserveUsed_ASC',
  /** cacheReserveUsed descending */
  CacheReserveUsedDesc = 'cacheReserveUsed_DESC',
  /** cacheStatus ascending */
  CacheStatusAsc = 'cacheStatus_ASC',
  /** cacheStatus descending */
  CacheStatusDesc = 'cacheStatus_DESC',
  /** clientASNDescription ascending */
  ClientAsnDescriptionAsc = 'clientASNDescription_ASC',
  /** clientASNDescription descending */
  ClientAsnDescriptionDesc = 'clientASNDescription_DESC',
  /** clientAsn ascending */
  ClientAsnAsc = 'clientAsn_ASC',
  /** clientAsn descending */
  ClientAsnDesc = 'clientAsn_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** clientDeviceType ascending */
  ClientDeviceTypeAsc = 'clientDeviceType_ASC',
  /** clientDeviceType descending */
  ClientDeviceTypeDesc = 'clientDeviceType_DESC',
  /** clientIP ascending */
  ClientIpAsc = 'clientIP_ASC',
  /** clientIP descending */
  ClientIpDesc = 'clientIP_DESC',
  /** clientRefererHost ascending */
  ClientRefererHostAsc = 'clientRefererHost_ASC',
  /** clientRefererHost descending */
  ClientRefererHostDesc = 'clientRefererHost_DESC',
  /** clientRequestHTTPHost ascending */
  ClientRequestHttpHostAsc = 'clientRequestHTTPHost_ASC',
  /** clientRequestHTTPHost descending */
  ClientRequestHttpHostDesc = 'clientRequestHTTPHost_DESC',
  /** clientRequestHTTPMethodName ascending */
  ClientRequestHttpMethodNameAsc = 'clientRequestHTTPMethodName_ASC',
  /** clientRequestHTTPMethodName descending */
  ClientRequestHttpMethodNameDesc = 'clientRequestHTTPMethodName_DESC',
  /** clientRequestHTTPProtocol ascending */
  ClientRequestHttpProtocolAsc = 'clientRequestHTTPProtocol_ASC',
  /** clientRequestHTTPProtocol descending */
  ClientRequestHttpProtocolDesc = 'clientRequestHTTPProtocol_DESC',
  /** clientRequestPath ascending */
  ClientRequestPathAsc = 'clientRequestPath_ASC',
  /** clientRequestPath descending */
  ClientRequestPathDesc = 'clientRequestPath_DESC',
  /** clientRequestQuery ascending */
  ClientRequestQueryAsc = 'clientRequestQuery_ASC',
  /** clientRequestQuery descending */
  ClientRequestQueryDesc = 'clientRequestQuery_DESC',
  /** clientRequestReferer ascending */
  ClientRequestRefererAsc = 'clientRequestReferer_ASC',
  /** clientRequestReferer descending */
  ClientRequestRefererDesc = 'clientRequestReferer_DESC',
  /** clientRequestScheme ascending */
  ClientRequestSchemeAsc = 'clientRequestScheme_ASC',
  /** clientRequestScheme descending */
  ClientRequestSchemeDesc = 'clientRequestScheme_DESC',
  /** clientSSLProtocol ascending */
  ClientSslProtocolAsc = 'clientSSLProtocol_ASC',
  /** clientSSLProtocol descending */
  ClientSslProtocolDesc = 'clientSSLProtocol_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** contentScanHasFailed ascending */
  ContentScanHasFailedAsc = 'contentScanHasFailed_ASC',
  /** contentScanHasFailed descending */
  ContentScanHasFailedDesc = 'contentScanHasFailed_DESC',
  /** contentScanNumMaliciousObj ascending */
  ContentScanNumMaliciousObjAsc = 'contentScanNumMaliciousObj_ASC',
  /** contentScanNumMaliciousObj descending */
  ContentScanNumMaliciousObjDesc = 'contentScanNumMaliciousObj_DESC',
  /** contentScanNumObj ascending */
  ContentScanNumObjAsc = 'contentScanNumObj_ASC',
  /** contentScanNumObj descending */
  ContentScanNumObjDesc = 'contentScanNumObj_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** edgeDnsResponseTimeMs ascending */
  EdgeDnsResponseTimeMsAsc = 'edgeDnsResponseTimeMs_ASC',
  /** edgeDnsResponseTimeMs descending */
  EdgeDnsResponseTimeMsDesc = 'edgeDnsResponseTimeMs_DESC',
  /** edgeResponseContentTypeName ascending */
  EdgeResponseContentTypeNameAsc = 'edgeResponseContentTypeName_ASC',
  /** edgeResponseContentTypeName descending */
  EdgeResponseContentTypeNameDesc = 'edgeResponseContentTypeName_DESC',
  /** edgeResponseStatus ascending */
  EdgeResponseStatusAsc = 'edgeResponseStatus_ASC',
  /** edgeResponseStatus descending */
  EdgeResponseStatusDesc = 'edgeResponseStatus_DESC',
  /** edgeTimeToFirstByteMs ascending */
  EdgeTimeToFirstByteMsAsc = 'edgeTimeToFirstByteMs_ASC',
  /** edgeTimeToFirstByteMs descending */
  EdgeTimeToFirstByteMsDesc = 'edgeTimeToFirstByteMs_DESC',
  /** httpApplicationVersion ascending */
  HttpApplicationVersionAsc = 'httpApplicationVersion_ASC',
  /** httpApplicationVersion descending */
  HttpApplicationVersionDesc = 'httpApplicationVersion_DESC',
  /** isCrossZoneSubrequest ascending */
  IsCrossZoneSubrequestAsc = 'isCrossZoneSubrequest_ASC',
  /** isCrossZoneSubrequest descending */
  IsCrossZoneSubrequestDesc = 'isCrossZoneSubrequest_DESC',
  /** ja3Hash ascending */
  Ja3HashAsc = 'ja3Hash_ASC',
  /** ja3Hash descending */
  Ja3HashDesc = 'ja3Hash_DESC',
  /** leakedCredentialCheckResult ascending */
  LeakedCredentialCheckResultAsc = 'leakedCredentialCheckResult_ASC',
  /** leakedCredentialCheckResult descending */
  LeakedCredentialCheckResultDesc = 'leakedCredentialCheckResult_DESC',
  /** originASNDescription ascending */
  OriginAsnDescriptionAsc = 'originASNDescription_ASC',
  /** originASNDescription descending */
  OriginAsnDescriptionDesc = 'originASNDescription_DESC',
  /** originASN ascending */
  OriginAsnAsc = 'originASN_ASC',
  /** originASN descending */
  OriginAsnDesc = 'originASN_DESC',
  /** originIP ascending */
  OriginIpAsc = 'originIP_ASC',
  /** originIP descending */
  OriginIpDesc = 'originIP_DESC',
  /** originResponseDurationMs ascending */
  OriginResponseDurationMsAsc = 'originResponseDurationMs_ASC',
  /** originResponseDurationMs descending */
  OriginResponseDurationMsDesc = 'originResponseDurationMs_DESC',
  /** originResponseStatus ascending */
  OriginResponseStatusAsc = 'originResponseStatus_ASC',
  /** originResponseStatus descending */
  OriginResponseStatusDesc = 'originResponseStatus_DESC',
  /** quantiles(edgeDnsResponseTimeMsP50) ascending */
  QuantilesEdgeDnsResponseTimeMsP50Asc = 'quantiles_edgeDnsResponseTimeMsP50_ASC',
  /** quantiles(edgeDnsResponseTimeMsP50) descending */
  QuantilesEdgeDnsResponseTimeMsP50Desc = 'quantiles_edgeDnsResponseTimeMsP50_DESC',
  /** quantiles(edgeDnsResponseTimeMsP95) ascending */
  QuantilesEdgeDnsResponseTimeMsP95Asc = 'quantiles_edgeDnsResponseTimeMsP95_ASC',
  /** quantiles(edgeDnsResponseTimeMsP95) descending */
  QuantilesEdgeDnsResponseTimeMsP95Desc = 'quantiles_edgeDnsResponseTimeMsP95_DESC',
  /** quantiles(edgeDnsResponseTimeMsP99) ascending */
  QuantilesEdgeDnsResponseTimeMsP99Asc = 'quantiles_edgeDnsResponseTimeMsP99_ASC',
  /** quantiles(edgeDnsResponseTimeMsP99) descending */
  QuantilesEdgeDnsResponseTimeMsP99Desc = 'quantiles_edgeDnsResponseTimeMsP99_DESC',
  /** quantiles(edgeTimeToFirstByteMsP50) ascending */
  QuantilesEdgeTimeToFirstByteMsP50Asc = 'quantiles_edgeTimeToFirstByteMsP50_ASC',
  /** quantiles(edgeTimeToFirstByteMsP50) descending */
  QuantilesEdgeTimeToFirstByteMsP50Desc = 'quantiles_edgeTimeToFirstByteMsP50_DESC',
  /** quantiles(edgeTimeToFirstByteMsP95) ascending */
  QuantilesEdgeTimeToFirstByteMsP95Asc = 'quantiles_edgeTimeToFirstByteMsP95_ASC',
  /** quantiles(edgeTimeToFirstByteMsP95) descending */
  QuantilesEdgeTimeToFirstByteMsP95Desc = 'quantiles_edgeTimeToFirstByteMsP95_DESC',
  /** quantiles(edgeTimeToFirstByteMsP99) ascending */
  QuantilesEdgeTimeToFirstByteMsP99Asc = 'quantiles_edgeTimeToFirstByteMsP99_ASC',
  /** quantiles(edgeTimeToFirstByteMsP99) descending */
  QuantilesEdgeTimeToFirstByteMsP99Desc = 'quantiles_edgeTimeToFirstByteMsP99_DESC',
  /** quantiles(originResponseDurationMsP50) ascending */
  QuantilesOriginResponseDurationMsP50Asc = 'quantiles_originResponseDurationMsP50_ASC',
  /** quantiles(originResponseDurationMsP50) descending */
  QuantilesOriginResponseDurationMsP50Desc = 'quantiles_originResponseDurationMsP50_DESC',
  /** quantiles(originResponseDurationMsP95) ascending */
  QuantilesOriginResponseDurationMsP95Asc = 'quantiles_originResponseDurationMsP95_ASC',
  /** quantiles(originResponseDurationMsP95) descending */
  QuantilesOriginResponseDurationMsP95Desc = 'quantiles_originResponseDurationMsP95_DESC',
  /** quantiles(originResponseDurationMsP99) ascending */
  QuantilesOriginResponseDurationMsP99Asc = 'quantiles_originResponseDurationMsP99_ASC',
  /** quantiles(originResponseDurationMsP99) descending */
  QuantilesOriginResponseDurationMsP99Desc = 'quantiles_originResponseDurationMsP99_DESC',
  /** ratio(status4xx) ascending */
  RatioStatus4xxAsc = 'ratio_status4xx_ASC',
  /** ratio(status4xx) descending */
  RatioStatus4xxDesc = 'ratio_status4xx_DESC',
  /** ratio(status5xx) ascending */
  RatioStatus5xxAsc = 'ratio_status5xx_ASC',
  /** ratio(status5xx) descending */
  RatioStatus5xxDesc = 'ratio_status5xx_DESC',
  /** requestSource ascending */
  RequestSourceAsc = 'requestSource_ASC',
  /** requestSource descending */
  RequestSourceDesc = 'requestSource_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** securityAction ascending */
  SecurityActionAsc = 'securityAction_ASC',
  /** securityAction descending */
  SecurityActionDesc = 'securityAction_DESC',
  /** securitySource ascending */
  SecuritySourceAsc = 'securitySource_ASC',
  /** securitySource descending */
  SecuritySourceDesc = 'securitySource_DESC',
  /** sum(crossZoneSubrequests) ascending */
  SumCrossZoneSubrequestsAsc = 'sum_crossZoneSubrequests_ASC',
  /** sum(crossZoneSubrequests) descending */
  SumCrossZoneSubrequestsDesc = 'sum_crossZoneSubrequests_DESC',
  /** sum(edgeDnsResponseTimeMs) ascending */
  SumEdgeDnsResponseTimeMsAsc = 'sum_edgeDnsResponseTimeMs_ASC',
  /** sum(edgeDnsResponseTimeMs) descending */
  SumEdgeDnsResponseTimeMsDesc = 'sum_edgeDnsResponseTimeMs_DESC',
  /** sum(edgeResponseBytes) ascending */
  SumEdgeResponseBytesAsc = 'sum_edgeResponseBytes_ASC',
  /** sum(edgeResponseBytes) descending */
  SumEdgeResponseBytesDesc = 'sum_edgeResponseBytes_DESC',
  /** sum(edgeTimeToFirstByteMs) ascending */
  SumEdgeTimeToFirstByteMsAsc = 'sum_edgeTimeToFirstByteMs_ASC',
  /** sum(edgeTimeToFirstByteMs) descending */
  SumEdgeTimeToFirstByteMsDesc = 'sum_edgeTimeToFirstByteMs_DESC',
  /** sum(originResponseDurationMs) ascending */
  SumOriginResponseDurationMsAsc = 'sum_originResponseDurationMs_ASC',
  /** sum(originResponseDurationMs) descending */
  SumOriginResponseDurationMsDesc = 'sum_originResponseDurationMs_DESC',
  /** sum(visits) ascending */
  SumVisitsAsc = 'sum_visits_ASC',
  /** sum(visits) descending */
  SumVisitsDesc = 'sum_visits_DESC',
  /** upperTierColoName ascending */
  UpperTierColoNameAsc = 'upperTierColoName_ASC',
  /** upperTierColoName descending */
  UpperTierColoNameDesc = 'upperTierColoName_DESC',
  /** userAgentBrowser ascending */
  UserAgentBrowserAsc = 'userAgentBrowser_ASC',
  /** userAgentBrowser descending */
  UserAgentBrowserDesc = 'userAgentBrowser_DESC',
  /** userAgentOS ascending */
  UserAgentOsAsc = 'userAgentOS_ASC',
  /** userAgentOS descending */
  UserAgentOsDesc = 'userAgentOS_DESC',
  /** userAgent ascending */
  UserAgentAsc = 'userAgent_ASC',
  /** userAgent descending */
  UserAgentDesc = 'userAgent_DESC',
  /** wafAttackScoreClass ascending */
  WafAttackScoreClassAsc = 'wafAttackScoreClass_ASC',
  /** wafAttackScoreClass descending */
  WafAttackScoreClassDesc = 'wafAttackScoreClass_DESC',
  /** wafAttackScore ascending */
  WafAttackScoreAsc = 'wafAttackScore_ASC',
  /** wafAttackScore descending */
  WafAttackScoreDesc = 'wafAttackScore_DESC',
  /** wafRceAttackScore ascending */
  WafRceAttackScoreAsc = 'wafRceAttackScore_ASC',
  /** wafRceAttackScore descending */
  WafRceAttackScoreDesc = 'wafRceAttackScore_DESC',
  /** wafSqliAttackScore ascending */
  WafSqliAttackScoreAsc = 'wafSqliAttackScore_ASC',
  /** wafSqliAttackScore descending */
  WafSqliAttackScoreDesc = 'wafSqliAttackScore_DESC',
  /** wafXssAttackScore ascending */
  WafXssAttackScoreAsc = 'wafXssAttackScore_ASC',
  /** wafXssAttackScore descending */
  WafXssAttackScoreDesc = 'wafXssAttackScore_DESC',
  /** xRequestedWith ascending */
  XRequestedWithAsc = 'xRequestedWith_ASC',
  /** xRequestedWith descending */
  XRequestedWithDesc = 'xRequestedWith_DESC',
  /** zoneVersion ascending */
  ZoneVersionAsc = 'zoneVersion_ASC',
  /** zoneVersion descending */
  ZoneVersionDesc = 'zoneVersion_DESC'
}

export type ZoneHttpRequestsAdaptiveGroupsQuantiles = {
  __typename?: 'ZoneHttpRequestsAdaptiveGroupsQuantiles';
  /** 50th percentile DNS Response Time (milliseconds) */
  edgeDnsResponseTimeMsP50: Scalars['float64']['output'];
  /** 95th percentile DNS Response Time (milliseconds) */
  edgeDnsResponseTimeMsP95: Scalars['float64']['output'];
  /** 99th percentile DNS Response Time (milliseconds) */
  edgeDnsResponseTimeMsP99: Scalars['float64']['output'];
  /** 50th percentile Time To First Byte (milliseconds) */
  edgeTimeToFirstByteMsP50: Scalars['float64']['output'];
  /** 95th percentile Time To First Byte (milliseconds) */
  edgeTimeToFirstByteMsP95: Scalars['float64']['output'];
  /** 99th percentile Time To First Byte (milliseconds) */
  edgeTimeToFirstByteMsP99: Scalars['float64']['output'];
  /** 50th percentile Origin Response Duration (milliseconds) */
  originResponseDurationMsP50: Scalars['float64']['output'];
  /** 95th percentile Origin Response Duration (milliseconds) */
  originResponseDurationMsP95: Scalars['float64']['output'];
  /** 99th percentile Origin Response Duration (milliseconds) */
  originResponseDurationMsP99: Scalars['float64']['output'];
};

export type ZoneHttpRequestsAdaptiveGroupsRatio = {
  __typename?: 'ZoneHttpRequestsAdaptiveGroupsRatio';
  status4xx: Scalars['float64']['output'];
  status5xx: Scalars['float64']['output'];
};

export type ZoneHttpRequestsAdaptiveGroupsSum = {
  __typename?: 'ZoneHttpRequestsAdaptiveGroupsSum';
  /** The number of requests that were inititiated by a Cloudflare Worker on another zone */
  crossZoneSubrequests: Scalars['uint64']['output'];
  edgeDnsResponseTimeMs: Scalars['uint64']['output'];
  edgeResponseBytes: Scalars['uint64']['output'];
  edgeTimeToFirstByteMs: Scalars['uint64']['output'];
  originResponseDurationMs: Scalars['uint64']['output'];
  /**
   * The number of requests by end-users that were initiated from a different
   * website (i.e. where the request HTTP Referer header does not match the host in
   * the HTTP Host header)
   */
  visits: Scalars['uint64']['output'];
};

export type ZoneHttpRequestsAdaptiveGroupsSumConfidence = {
  __typename?: 'ZoneHttpRequestsAdaptiveGroupsSumConfidence';
  /** Confidence interval for the corresponding point estimate */
  edgeResponseBytes: Confidence;
};

export enum ZoneHttpRequestsAdaptiveOrderBy {
  /** apiGatewayMatchedEndpoint ascending */
  ApiGatewayMatchedEndpointAsc = 'apiGatewayMatchedEndpoint_ASC',
  /** apiGatewayMatchedEndpoint descending */
  ApiGatewayMatchedEndpointDesc = 'apiGatewayMatchedEndpoint_DESC',
  /** apiGatewayMatchedHost ascending */
  ApiGatewayMatchedHostAsc = 'apiGatewayMatchedHost_ASC',
  /** apiGatewayMatchedHost descending */
  ApiGatewayMatchedHostDesc = 'apiGatewayMatchedHost_DESC',
  /** botManagementDecision ascending */
  BotManagementDecisionAsc = 'botManagementDecision_ASC',
  /** botManagementDecision descending */
  BotManagementDecisionDesc = 'botManagementDecision_DESC',
  /** botScoreBucketBy10 ascending */
  BotScoreBucketBy10Asc = 'botScoreBucketBy10_ASC',
  /** botScoreBucketBy10 descending */
  BotScoreBucketBy10Desc = 'botScoreBucketBy10_DESC',
  /** botScoreSrcName ascending */
  BotScoreSrcNameAsc = 'botScoreSrcName_ASC',
  /** botScoreSrcName descending */
  BotScoreSrcNameDesc = 'botScoreSrcName_DESC',
  /** botScore ascending */
  BotScoreAsc = 'botScore_ASC',
  /** botScore descending */
  BotScoreDesc = 'botScore_DESC',
  /** cacheReserveUsed ascending */
  CacheReserveUsedAsc = 'cacheReserveUsed_ASC',
  /** cacheReserveUsed descending */
  CacheReserveUsedDesc = 'cacheReserveUsed_DESC',
  /** cacheStatus ascending */
  CacheStatusAsc = 'cacheStatus_ASC',
  /** cacheStatus descending */
  CacheStatusDesc = 'cacheStatus_DESC',
  /** clientASNDescription ascending */
  ClientAsnDescriptionAsc = 'clientASNDescription_ASC',
  /** clientASNDescription descending */
  ClientAsnDescriptionDesc = 'clientASNDescription_DESC',
  /** clientAsn ascending */
  ClientAsnAsc = 'clientAsn_ASC',
  /** clientAsn descending */
  ClientAsnDesc = 'clientAsn_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** clientDeviceType ascending */
  ClientDeviceTypeAsc = 'clientDeviceType_ASC',
  /** clientDeviceType descending */
  ClientDeviceTypeDesc = 'clientDeviceType_DESC',
  /** clientIP ascending */
  ClientIpAsc = 'clientIP_ASC',
  /** clientIP descending */
  ClientIpDesc = 'clientIP_DESC',
  /** clientRefererHost ascending */
  ClientRefererHostAsc = 'clientRefererHost_ASC',
  /** clientRefererHost descending */
  ClientRefererHostDesc = 'clientRefererHost_DESC',
  /** clientRequestHTTPHost ascending */
  ClientRequestHttpHostAsc = 'clientRequestHTTPHost_ASC',
  /** clientRequestHTTPHost descending */
  ClientRequestHttpHostDesc = 'clientRequestHTTPHost_DESC',
  /** clientRequestHTTPMethodName ascending */
  ClientRequestHttpMethodNameAsc = 'clientRequestHTTPMethodName_ASC',
  /** clientRequestHTTPMethodName descending */
  ClientRequestHttpMethodNameDesc = 'clientRequestHTTPMethodName_DESC',
  /** clientRequestHTTPProtocol ascending */
  ClientRequestHttpProtocolAsc = 'clientRequestHTTPProtocol_ASC',
  /** clientRequestHTTPProtocol descending */
  ClientRequestHttpProtocolDesc = 'clientRequestHTTPProtocol_DESC',
  /** clientRequestPath ascending */
  ClientRequestPathAsc = 'clientRequestPath_ASC',
  /** clientRequestPath descending */
  ClientRequestPathDesc = 'clientRequestPath_DESC',
  /** clientRequestQuery ascending */
  ClientRequestQueryAsc = 'clientRequestQuery_ASC',
  /** clientRequestQuery descending */
  ClientRequestQueryDesc = 'clientRequestQuery_DESC',
  /** clientRequestReferer ascending */
  ClientRequestRefererAsc = 'clientRequestReferer_ASC',
  /** clientRequestReferer descending */
  ClientRequestRefererDesc = 'clientRequestReferer_DESC',
  /** clientRequestScheme ascending */
  ClientRequestSchemeAsc = 'clientRequestScheme_ASC',
  /** clientRequestScheme descending */
  ClientRequestSchemeDesc = 'clientRequestScheme_DESC',
  /** clientSSLProtocol ascending */
  ClientSslProtocolAsc = 'clientSSLProtocol_ASC',
  /** clientSSLProtocol descending */
  ClientSslProtocolDesc = 'clientSSLProtocol_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** contentScanHasFailed ascending */
  ContentScanHasFailedAsc = 'contentScanHasFailed_ASC',
  /** contentScanHasFailed descending */
  ContentScanHasFailedDesc = 'contentScanHasFailed_DESC',
  /** contentScanNumMaliciousObj ascending */
  ContentScanNumMaliciousObjAsc = 'contentScanNumMaliciousObj_ASC',
  /** contentScanNumMaliciousObj descending */
  ContentScanNumMaliciousObjDesc = 'contentScanNumMaliciousObj_DESC',
  /** contentScanNumObj ascending */
  ContentScanNumObjAsc = 'contentScanNumObj_ASC',
  /** contentScanNumObj descending */
  ContentScanNumObjDesc = 'contentScanNumObj_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** edgeDnsResponseTimeMs ascending */
  EdgeDnsResponseTimeMsAsc = 'edgeDnsResponseTimeMs_ASC',
  /** edgeDnsResponseTimeMs descending */
  EdgeDnsResponseTimeMsDesc = 'edgeDnsResponseTimeMs_DESC',
  /** edgeResponseContentTypeName ascending */
  EdgeResponseContentTypeNameAsc = 'edgeResponseContentTypeName_ASC',
  /** edgeResponseContentTypeName descending */
  EdgeResponseContentTypeNameDesc = 'edgeResponseContentTypeName_DESC',
  /** edgeResponseStatus ascending */
  EdgeResponseStatusAsc = 'edgeResponseStatus_ASC',
  /** edgeResponseStatus descending */
  EdgeResponseStatusDesc = 'edgeResponseStatus_DESC',
  /** edgeTimeToFirstByteMs ascending */
  EdgeTimeToFirstByteMsAsc = 'edgeTimeToFirstByteMs_ASC',
  /** edgeTimeToFirstByteMs descending */
  EdgeTimeToFirstByteMsDesc = 'edgeTimeToFirstByteMs_DESC',
  /** httpApplicationVersion ascending */
  HttpApplicationVersionAsc = 'httpApplicationVersion_ASC',
  /** httpApplicationVersion descending */
  HttpApplicationVersionDesc = 'httpApplicationVersion_DESC',
  /** isCrossZoneSubrequest ascending */
  IsCrossZoneSubrequestAsc = 'isCrossZoneSubrequest_ASC',
  /** isCrossZoneSubrequest descending */
  IsCrossZoneSubrequestDesc = 'isCrossZoneSubrequest_DESC',
  /** ja3Hash ascending */
  Ja3HashAsc = 'ja3Hash_ASC',
  /** ja3Hash descending */
  Ja3HashDesc = 'ja3Hash_DESC',
  /** leakedCredentialCheckResult ascending */
  LeakedCredentialCheckResultAsc = 'leakedCredentialCheckResult_ASC',
  /** leakedCredentialCheckResult descending */
  LeakedCredentialCheckResultDesc = 'leakedCredentialCheckResult_DESC',
  /** originASNDescription ascending */
  OriginAsnDescriptionAsc = 'originASNDescription_ASC',
  /** originASNDescription descending */
  OriginAsnDescriptionDesc = 'originASNDescription_DESC',
  /** originASN ascending */
  OriginAsnAsc = 'originASN_ASC',
  /** originASN descending */
  OriginAsnDesc = 'originASN_DESC',
  /** originIP ascending */
  OriginIpAsc = 'originIP_ASC',
  /** originIP descending */
  OriginIpDesc = 'originIP_DESC',
  /** originResponseDurationMs ascending */
  OriginResponseDurationMsAsc = 'originResponseDurationMs_ASC',
  /** originResponseDurationMs descending */
  OriginResponseDurationMsDesc = 'originResponseDurationMs_DESC',
  /** originResponseStatus ascending */
  OriginResponseStatusAsc = 'originResponseStatus_ASC',
  /** originResponseStatus descending */
  OriginResponseStatusDesc = 'originResponseStatus_DESC',
  /** requestSource ascending */
  RequestSourceAsc = 'requestSource_ASC',
  /** requestSource descending */
  RequestSourceDesc = 'requestSource_DESC',
  /** securityAction ascending */
  SecurityActionAsc = 'securityAction_ASC',
  /** securityAction descending */
  SecurityActionDesc = 'securityAction_DESC',
  /** securitySource ascending */
  SecuritySourceAsc = 'securitySource_ASC',
  /** securitySource descending */
  SecuritySourceDesc = 'securitySource_DESC',
  /** upperTierColoName ascending */
  UpperTierColoNameAsc = 'upperTierColoName_ASC',
  /** upperTierColoName descending */
  UpperTierColoNameDesc = 'upperTierColoName_DESC',
  /** userAgentBrowser ascending */
  UserAgentBrowserAsc = 'userAgentBrowser_ASC',
  /** userAgentBrowser descending */
  UserAgentBrowserDesc = 'userAgentBrowser_DESC',
  /** userAgentOS ascending */
  UserAgentOsAsc = 'userAgentOS_ASC',
  /** userAgentOS descending */
  UserAgentOsDesc = 'userAgentOS_DESC',
  /** userAgent ascending */
  UserAgentAsc = 'userAgent_ASC',
  /** userAgent descending */
  UserAgentDesc = 'userAgent_DESC',
  /** wafAttackScoreClass ascending */
  WafAttackScoreClassAsc = 'wafAttackScoreClass_ASC',
  /** wafAttackScoreClass descending */
  WafAttackScoreClassDesc = 'wafAttackScoreClass_DESC',
  /** wafAttackScore ascending */
  WafAttackScoreAsc = 'wafAttackScore_ASC',
  /** wafAttackScore descending */
  WafAttackScoreDesc = 'wafAttackScore_DESC',
  /** wafRceAttackScore ascending */
  WafRceAttackScoreAsc = 'wafRceAttackScore_ASC',
  /** wafRceAttackScore descending */
  WafRceAttackScoreDesc = 'wafRceAttackScore_DESC',
  /** wafSqliAttackScore ascending */
  WafSqliAttackScoreAsc = 'wafSqliAttackScore_ASC',
  /** wafSqliAttackScore descending */
  WafSqliAttackScoreDesc = 'wafSqliAttackScore_DESC',
  /** wafXssAttackScore ascending */
  WafXssAttackScoreAsc = 'wafXssAttackScore_ASC',
  /** wafXssAttackScore descending */
  WafXssAttackScoreDesc = 'wafXssAttackScore_DESC',
  /** xRequestedWith ascending */
  XRequestedWithAsc = 'xRequestedWith_ASC',
  /** xRequestedWith descending */
  XRequestedWithDesc = 'xRequestedWith_DESC',
  /** zoneVersion ascending */
  ZoneVersionAsc = 'zoneVersion_ASC',
  /** zoneVersion descending */
  ZoneVersionDesc = 'zoneVersion_DESC'
}

/** A high-level summary of HTTP requests made by end users. */
export type ZoneHttpRequestsOverviewAdaptiveGroups = {
  __typename?: 'ZoneHttpRequestsOverviewAdaptiveGroups';
  /** The average value for a metric per dimension */
  avg?: Maybe<ZoneHttpRequestsOverviewAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneHttpRequestsOverviewAdaptiveGroupsDimensions>;
  /** The ratio of a metric in comparison to the rest of the traffic, between 0 and 1 */
  ratio?: Maybe<ZoneHttpRequestsOverviewAdaptiveGroupsRatio>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<ZoneHttpRequestsOverviewAdaptiveGroupsSum>;
};

export type ZoneHttpRequestsOverviewAdaptiveGroupsAvg = {
  __typename?: 'ZoneHttpRequestsOverviewAdaptiveGroupsAvg';
  /** The average originResponseDuration, in milliseconds, excluding 0 values (i.e. cached ones) */
  originResponseDurationMs: Scalars['float64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneHttpRequestsOverviewAdaptiveGroupsDimensions = {
  __typename?: 'ZoneHttpRequestsOverviewAdaptiveGroupsDimensions';
  /** Country from which request originated */
  clientCountryName: Scalars['string']['output'];
  /** HTTP protocol version */
  clientRequestHTTPProtocol: Scalars['string']['output'];
  /** SSL protocol version */
  clientSSLProtocol: Scalars['string']['output'];
  /** The date the event occurred at the edge */
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to hours */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event occurred at the edge truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Content type returned to client */
  edgeResponseContentTypeName: Scalars['string']['output'];
  /** HTTP response status code returned to client */
  edgeResponseStatus: Scalars['uint16']['output'];
  /**
   * Version associated with HTTP Application
   * @deprecated Field is replaced with <code>zoneVersion</code>
   */
  httpApplicationVersion: Scalars['uint64']['output'];
  /** Browser parsed from the user agent */
  userAgentBrowser: Scalars['string']['output'];
  /** The version of a zone */
  zoneVersion: Scalars['uint64']['output'];
};

export type ZoneHttpRequestsOverviewAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneHttpRequestsOverviewAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneHttpRequestsOverviewAdaptiveGroupsFilter_InputObject>>;
  clientCountryName?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_geq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_gt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_leq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_like?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_lt?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_neq?: InputMaybe<Scalars['string']['input']>;
  clientCountryName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientCountryName_notlike?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientRequestHTTPProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientRequestHTTPProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_geq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_gt?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientSSLProtocol_leq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_like?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_lt?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_neq?: InputMaybe<Scalars['string']['input']>;
  clientSSLProtocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientSSLProtocol_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  edgeResponseContentTypeName?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_geq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_gt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_leq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_like?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_lt?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_neq?: InputMaybe<Scalars['string']['input']>;
  edgeResponseContentTypeName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  edgeResponseContentTypeName_notlike?: InputMaybe<Scalars['string']['input']>;
  edgeResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  edgeResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  edgeResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpApplicationVersion?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  httpApplicationVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  httpApplicationVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  userAgentBrowser?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_geq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_gt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_in?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_leq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_like?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_lt?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_neq?: InputMaybe<Scalars['string']['input']>;
  userAgentBrowser_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  userAgentBrowser_notlike?: InputMaybe<Scalars['string']['input']>;
  zoneVersion?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_geq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_gt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  zoneVersion_leq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_lt?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_neq?: InputMaybe<Scalars['uint64']['input']>;
  zoneVersion_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

export enum ZoneHttpRequestsOverviewAdaptiveGroupsOrderBy {
  /** avg(originResponseDurationMs) ascending */
  AvgOriginResponseDurationMsAsc = 'avg_originResponseDurationMs_ASC',
  /** avg(originResponseDurationMs) descending */
  AvgOriginResponseDurationMsDesc = 'avg_originResponseDurationMs_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** clientCountryName ascending */
  ClientCountryNameAsc = 'clientCountryName_ASC',
  /** clientCountryName descending */
  ClientCountryNameDesc = 'clientCountryName_DESC',
  /** clientRequestHTTPProtocol ascending */
  ClientRequestHttpProtocolAsc = 'clientRequestHTTPProtocol_ASC',
  /** clientRequestHTTPProtocol descending */
  ClientRequestHttpProtocolDesc = 'clientRequestHTTPProtocol_DESC',
  /** clientSSLProtocol ascending */
  ClientSslProtocolAsc = 'clientSSLProtocol_ASC',
  /** clientSSLProtocol descending */
  ClientSslProtocolDesc = 'clientSSLProtocol_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** edgeResponseContentTypeName ascending */
  EdgeResponseContentTypeNameAsc = 'edgeResponseContentTypeName_ASC',
  /** edgeResponseContentTypeName descending */
  EdgeResponseContentTypeNameDesc = 'edgeResponseContentTypeName_DESC',
  /** edgeResponseStatus ascending */
  EdgeResponseStatusAsc = 'edgeResponseStatus_ASC',
  /** edgeResponseStatus descending */
  EdgeResponseStatusDesc = 'edgeResponseStatus_DESC',
  /** httpApplicationVersion ascending */
  HttpApplicationVersionAsc = 'httpApplicationVersion_ASC',
  /** httpApplicationVersion descending */
  HttpApplicationVersionDesc = 'httpApplicationVersion_DESC',
  /** ratio(cachedBytes) ascending */
  RatioCachedBytesAsc = 'ratio_cachedBytes_ASC',
  /** ratio(cachedBytes) descending */
  RatioCachedBytesDesc = 'ratio_cachedBytes_DESC',
  /** ratio(cachedRequests) ascending */
  RatioCachedRequestsAsc = 'ratio_cachedRequests_ASC',
  /** ratio(cachedRequests) descending */
  RatioCachedRequestsDesc = 'ratio_cachedRequests_DESC',
  /** ratio(encryptedBytes) ascending */
  RatioEncryptedBytesAsc = 'ratio_encryptedBytes_ASC',
  /** ratio(encryptedBytes) descending */
  RatioEncryptedBytesDesc = 'ratio_encryptedBytes_DESC',
  /** ratio(encryptedRequests) ascending */
  RatioEncryptedRequestsAsc = 'ratio_encryptedRequests_ASC',
  /** ratio(encryptedRequests) descending */
  RatioEncryptedRequestsDesc = 'ratio_encryptedRequests_DESC',
  /** ratio(status4xx) ascending */
  RatioStatus4xxAsc = 'ratio_status4xx_ASC',
  /** ratio(status4xx) descending */
  RatioStatus4xxDesc = 'ratio_status4xx_DESC',
  /** ratio(status5xx) ascending */
  RatioStatus5xxAsc = 'ratio_status5xx_ASC',
  /** ratio(status5xx) descending */
  RatioStatus5xxDesc = 'ratio_status5xx_DESC',
  /** requestSource ascending */
  RequestSourceAsc = 'requestSource_ASC',
  /** requestSource descending */
  RequestSourceDesc = 'requestSource_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC',
  /** sum(cachedBytes) ascending */
  SumCachedBytesAsc = 'sum_cachedBytes_ASC',
  /** sum(cachedBytes) descending */
  SumCachedBytesDesc = 'sum_cachedBytes_DESC',
  /** sum(cachedRequests) ascending */
  SumCachedRequestsAsc = 'sum_cachedRequests_ASC',
  /** sum(cachedRequests) descending */
  SumCachedRequestsDesc = 'sum_cachedRequests_DESC',
  /** sum(pageViews) ascending */
  SumPageViewsAsc = 'sum_pageViews_ASC',
  /** sum(pageViews) descending */
  SumPageViewsDesc = 'sum_pageViews_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(visits) ascending */
  SumVisitsAsc = 'sum_visits_ASC',
  /** sum(visits) descending */
  SumVisitsDesc = 'sum_visits_DESC',
  /** userAgentBrowser ascending */
  UserAgentBrowserAsc = 'userAgentBrowser_ASC',
  /** userAgentBrowser descending */
  UserAgentBrowserDesc = 'userAgentBrowser_DESC',
  /** zoneVersion ascending */
  ZoneVersionAsc = 'zoneVersion_ASC',
  /** zoneVersion descending */
  ZoneVersionDesc = 'zoneVersion_DESC'
}

export type ZoneHttpRequestsOverviewAdaptiveGroupsRatio = {
  __typename?: 'ZoneHttpRequestsOverviewAdaptiveGroupsRatio';
  cachedBytes: Scalars['float64']['output'];
  cachedRequests: Scalars['float64']['output'];
  encryptedBytes: Scalars['float64']['output'];
  encryptedRequests: Scalars['float64']['output'];
  status4xx: Scalars['float64']['output'];
  status5xx: Scalars['float64']['output'];
};

export type ZoneHttpRequestsOverviewAdaptiveGroupsSum = {
  __typename?: 'ZoneHttpRequestsOverviewAdaptiveGroupsSum';
  bytes: Scalars['uint64']['output'];
  /** Bytes returned to client from cache */
  cachedBytes: Scalars['uint64']['output'];
  /** Requests served from cache */
  cachedRequests: Scalars['uint64']['output'];
  /** Successful requests for HTML content */
  pageViews: Scalars['uint64']['output'];
  requests: Scalars['uint64']['output'];
  /**
   * The number of requests by end-users that were initiated from a different
   * website (i.e. where the request HTTP Referer header does not match the host in
   * the HTTP Host header)
   */
  visits: Scalars['uint64']['output'];
};

/** Minutely rollups of Image Resizing requests */
export type ZoneImageResizingRequests1mGroups = {
  __typename?: 'ZoneImageResizingRequests1mGroups';
  /** Counts a number of rows per specific dimensions */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneImageResizingRequests1mGroupsDimensions>;
  /** Calculates a sum of each field per speicific dimensions */
  sum?: Maybe<ZoneImageResizingRequests1mGroupsSum>;
};

export type ZoneImageResizingRequests1mGroupsDimensions = {
  __typename?: 'ZoneImageResizingRequests1mGroupsDimensions';
  contentType: Scalars['string']['output'];
  date: Scalars['Date']['output'];
  datetime: Scalars['Time']['output'];
  datetimeFifteenMinutes: Scalars['Time']['output'];
  datetimeFiveMinutes: Scalars['Time']['output'];
  datetimeHour: Scalars['Time']['output'];
  datetimeMinute: Scalars['Time']['output'];
  /** Error description when a resized image was requested but could not be served */
  resizeError: Scalars['string']['output'];
};

export type ZoneImageResizingRequests1mGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneImageResizingRequests1mGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneImageResizingRequests1mGroupsFilter_InputObject>>;
  contentType?: InputMaybe<Scalars['string']['input']>;
  contentType_geq?: InputMaybe<Scalars['string']['input']>;
  contentType_gt?: InputMaybe<Scalars['string']['input']>;
  contentType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  contentType_leq?: InputMaybe<Scalars['string']['input']>;
  contentType_like?: InputMaybe<Scalars['string']['input']>;
  contentType_lt?: InputMaybe<Scalars['string']['input']>;
  contentType_neq?: InputMaybe<Scalars['string']['input']>;
  contentType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  contentType_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  resizeError?: InputMaybe<Scalars['string']['input']>;
  resizeError_geq?: InputMaybe<Scalars['string']['input']>;
  resizeError_gt?: InputMaybe<Scalars['string']['input']>;
  resizeError_in?: InputMaybe<Array<Scalars['string']['input']>>;
  resizeError_leq?: InputMaybe<Scalars['string']['input']>;
  resizeError_like?: InputMaybe<Scalars['string']['input']>;
  resizeError_lt?: InputMaybe<Scalars['string']['input']>;
  resizeError_neq?: InputMaybe<Scalars['string']['input']>;
  resizeError_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  resizeError_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZoneImageResizingRequests1mGroupsOrderBy {
  /** contentType ascending */
  ContentTypeAsc = 'contentType_ASC',
  /** contentType descending */
  ContentTypeDesc = 'contentType_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** resizeError ascending */
  ResizeErrorAsc = 'resizeError_ASC',
  /** resizeError descending */
  ResizeErrorDesc = 'resizeError_DESC',
  /** sum(originalBytes) ascending */
  SumOriginalBytesAsc = 'sum_originalBytes_ASC',
  /** sum(originalBytes) descending */
  SumOriginalBytesDesc = 'sum_originalBytes_DESC',
  /** sum(originalPixels) ascending */
  SumOriginalPixelsAsc = 'sum_originalPixels_ASC',
  /** sum(originalPixels) descending */
  SumOriginalPixelsDesc = 'sum_originalPixels_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(resizedBytes) ascending */
  SumResizedBytesAsc = 'sum_resizedBytes_ASC',
  /** sum(resizedBytes) descending */
  SumResizedBytesDesc = 'sum_resizedBytes_DESC',
  /** sum(resizedPixels) ascending */
  SumResizedPixelsAsc = 'sum_resizedPixels_ASC',
  /** sum(resizedPixels) descending */
  SumResizedPixelsDesc = 'sum_resizedPixels_DESC'
}

export type ZoneImageResizingRequests1mGroupsSum = {
  __typename?: 'ZoneImageResizingRequests1mGroupsSum';
  /** The size of the image before resizing */
  originalBytes: Scalars['uint64']['output'];
  /** The area of the image before resizing */
  originalPixels: Scalars['uint64']['output'];
  /** Count of image resizing requests */
  requests: Scalars['uint64']['output'];
  /** The size of the image after resizing */
  resizedBytes: Scalars['uint64']['output'];
  /** The area of the image after resizing */
  resizedPixels: Scalars['uint64']['output'];
};

/** Raw Load Balancing origin requests with adaptive sampling */
export type ZoneLoadBalancingRequestsAdaptive = {
  __typename?: 'ZoneLoadBalancingRequestsAdaptive';
  /** IATA airport code of data center that received the request */
  coloCode: Scalars['string']['output'];
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** Error generated when selecting an origin */
  errorType: Scalars['string']['output'];
  /** Load balancer name */
  lbName: Scalars['string']['output'];
  /** Number of origins that were selected and returned to the client */
  numberOriginsSelected: Scalars['uint16']['output'];
  /** All origins in the pool that was selected based on steering policy */
  origins: Array<ZoneLoadBalancingRequestsAdaptiveOriginsElem>;
  /** List of pools from which a pool will be selected based on steering policy */
  pools: Array<ZoneLoadBalancingRequestsAdaptivePoolsElem>;
  /** Whether traffic is proxied through the Cloudflare network (orange-clouded) */
  proxied: Scalars['uint8']['output'];
  /** Load balancing region where request originated */
  region: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /**
   * Index of the selected origin from the list of all origins. If multiple origins
   * were selected, this is the index of the first origin in that list
   */
  selectedOriginIndex: Scalars['uint16']['output'];
  /** Average RTT (milliseconds) to reach the origins within the selected pool */
  selectedPoolAvgRttMs: Scalars['uint64']['output'];
  /** Health checks active status for the selected pool */
  selectedPoolHealthChecksEnabled: Scalars['uint8']['output'];
  /** Health status for the selected pool */
  selectedPoolHealthy: Scalars['uint8']['output'];
  /** A unique identifier for the selected pool */
  selectedPoolId: Scalars['string']['output'];
  /** Index of the selected pool from the list of all pools */
  selectedPoolIndex: Scalars['uint32']['output'];
  /** Name for the selected pool */
  selectedPoolName: Scalars['string']['output'];
  /** Type of session affinity enabled */
  sessionAffinity: Scalars['string']['output'];
  /** Current status of session affinity */
  sessionAffinityStatus: Scalars['string']['output'];
  /** Policy by which the load balancer will route traffic */
  steeringPolicy: Scalars['string']['output'];
};

export type ZoneLoadBalancingRequestsAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneLoadBalancingRequestsAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneLoadBalancingRequestsAdaptiveFilter_InputObject>>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  errorType?: InputMaybe<Scalars['string']['input']>;
  errorType_geq?: InputMaybe<Scalars['string']['input']>;
  errorType_gt?: InputMaybe<Scalars['string']['input']>;
  errorType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  errorType_leq?: InputMaybe<Scalars['string']['input']>;
  errorType_like?: InputMaybe<Scalars['string']['input']>;
  errorType_lt?: InputMaybe<Scalars['string']['input']>;
  errorType_neq?: InputMaybe<Scalars['string']['input']>;
  errorType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  errorType_notlike?: InputMaybe<Scalars['string']['input']>;
  lbName?: InputMaybe<Scalars['string']['input']>;
  lbName_geq?: InputMaybe<Scalars['string']['input']>;
  lbName_gt?: InputMaybe<Scalars['string']['input']>;
  lbName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  lbName_leq?: InputMaybe<Scalars['string']['input']>;
  lbName_like?: InputMaybe<Scalars['string']['input']>;
  lbName_lt?: InputMaybe<Scalars['string']['input']>;
  lbName_neq?: InputMaybe<Scalars['string']['input']>;
  lbName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  lbName_notlike?: InputMaybe<Scalars['string']['input']>;
  numberOriginsSelected?: InputMaybe<Scalars['uint16']['input']>;
  numberOriginsSelected_geq?: InputMaybe<Scalars['uint16']['input']>;
  numberOriginsSelected_gt?: InputMaybe<Scalars['uint16']['input']>;
  numberOriginsSelected_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  numberOriginsSelected_leq?: InputMaybe<Scalars['uint16']['input']>;
  numberOriginsSelected_lt?: InputMaybe<Scalars['uint16']['input']>;
  numberOriginsSelected_neq?: InputMaybe<Scalars['uint16']['input']>;
  numberOriginsSelected_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  proxied?: InputMaybe<Scalars['uint8']['input']>;
  proxied_geq?: InputMaybe<Scalars['uint8']['input']>;
  proxied_gt?: InputMaybe<Scalars['uint8']['input']>;
  proxied_in?: InputMaybe<Scalars['bytes']['input']>;
  proxied_leq?: InputMaybe<Scalars['uint8']['input']>;
  proxied_lt?: InputMaybe<Scalars['uint8']['input']>;
  proxied_neq?: InputMaybe<Scalars['uint8']['input']>;
  proxied_notin?: InputMaybe<Scalars['bytes']['input']>;
  region?: InputMaybe<Scalars['string']['input']>;
  region_geq?: InputMaybe<Scalars['string']['input']>;
  region_gt?: InputMaybe<Scalars['string']['input']>;
  region_in?: InputMaybe<Array<Scalars['string']['input']>>;
  region_leq?: InputMaybe<Scalars['string']['input']>;
  region_like?: InputMaybe<Scalars['string']['input']>;
  region_lt?: InputMaybe<Scalars['string']['input']>;
  region_neq?: InputMaybe<Scalars['string']['input']>;
  region_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  region_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  selectedOriginIndex?: InputMaybe<Scalars['uint16']['input']>;
  selectedOriginIndex_geq?: InputMaybe<Scalars['uint16']['input']>;
  selectedOriginIndex_gt?: InputMaybe<Scalars['uint16']['input']>;
  selectedOriginIndex_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  selectedOriginIndex_leq?: InputMaybe<Scalars['uint16']['input']>;
  selectedOriginIndex_lt?: InputMaybe<Scalars['uint16']['input']>;
  selectedOriginIndex_neq?: InputMaybe<Scalars['uint16']['input']>;
  selectedOriginIndex_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  selectedPoolAvgRttMs?: InputMaybe<Scalars['uint64']['input']>;
  selectedPoolAvgRttMs_geq?: InputMaybe<Scalars['uint64']['input']>;
  selectedPoolAvgRttMs_gt?: InputMaybe<Scalars['uint64']['input']>;
  selectedPoolAvgRttMs_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  selectedPoolAvgRttMs_leq?: InputMaybe<Scalars['uint64']['input']>;
  selectedPoolAvgRttMs_lt?: InputMaybe<Scalars['uint64']['input']>;
  selectedPoolAvgRttMs_neq?: InputMaybe<Scalars['uint64']['input']>;
  selectedPoolAvgRttMs_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  selectedPoolHealthChecksEnabled?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthChecksEnabled_geq?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthChecksEnabled_gt?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthChecksEnabled_in?: InputMaybe<Scalars['bytes']['input']>;
  selectedPoolHealthChecksEnabled_leq?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthChecksEnabled_lt?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthChecksEnabled_neq?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthChecksEnabled_notin?: InputMaybe<Scalars['bytes']['input']>;
  selectedPoolHealthy?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthy_geq?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthy_gt?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthy_in?: InputMaybe<Scalars['bytes']['input']>;
  selectedPoolHealthy_leq?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthy_lt?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthy_neq?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthy_notin?: InputMaybe<Scalars['bytes']['input']>;
  selectedPoolId?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_geq?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_gt?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  selectedPoolId_leq?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_like?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_lt?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_neq?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  selectedPoolId_notlike?: InputMaybe<Scalars['string']['input']>;
  selectedPoolIndex?: InputMaybe<Scalars['uint32']['input']>;
  selectedPoolIndex_geq?: InputMaybe<Scalars['uint32']['input']>;
  selectedPoolIndex_gt?: InputMaybe<Scalars['uint32']['input']>;
  selectedPoolIndex_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  selectedPoolIndex_leq?: InputMaybe<Scalars['uint32']['input']>;
  selectedPoolIndex_lt?: InputMaybe<Scalars['uint32']['input']>;
  selectedPoolIndex_neq?: InputMaybe<Scalars['uint32']['input']>;
  selectedPoolIndex_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  selectedPoolName?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_geq?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_gt?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  selectedPoolName_leq?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_like?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_lt?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_neq?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  selectedPoolName_notlike?: InputMaybe<Scalars['string']['input']>;
  sessionAffinity?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_geq?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_gt?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sessionAffinityStatus_leq?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_like?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_lt?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_neq?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sessionAffinityStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  sessionAffinity_geq?: InputMaybe<Scalars['string']['input']>;
  sessionAffinity_gt?: InputMaybe<Scalars['string']['input']>;
  sessionAffinity_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sessionAffinity_leq?: InputMaybe<Scalars['string']['input']>;
  sessionAffinity_like?: InputMaybe<Scalars['string']['input']>;
  sessionAffinity_lt?: InputMaybe<Scalars['string']['input']>;
  sessionAffinity_neq?: InputMaybe<Scalars['string']['input']>;
  sessionAffinity_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sessionAffinity_notlike?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_geq?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_gt?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_in?: InputMaybe<Array<Scalars['string']['input']>>;
  steeringPolicy_leq?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_like?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_lt?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_neq?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  steeringPolicy_notlike?: InputMaybe<Scalars['string']['input']>;
};

/** Aggregated Load Balancing origin requests with adaptive sampling */
export type ZoneLoadBalancingRequestsAdaptiveGroups = {
  __typename?: 'ZoneLoadBalancingRequestsAdaptiveGroups';
  avg?: Maybe<ZoneLoadBalancingRequestsAdaptiveGroupsAvg>;
  /** The number of values for a metric per dimension */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneLoadBalancingRequestsAdaptiveGroupsDimensions>;
};

export type ZoneLoadBalancingRequestsAdaptiveGroupsAvg = {
  __typename?: 'ZoneLoadBalancingRequestsAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneLoadBalancingRequestsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneLoadBalancingRequestsAdaptiveGroupsDimensions';
  /** IATA airport code of data center that received the request */
  coloCode: Scalars['string']['output'];
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** Request datetime truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request datetime truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime truncated to multiple of 1 minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Error generated when selecting an origin */
  errorType: Scalars['string']['output'];
  /** Load balancer name */
  lbName: Scalars['string']['output'];
  /** Indicates whether multiple origins were returned to the client */
  multipleOriginsSelected: Scalars['uint8']['output'];
  /** Number of origins that were selected and returned to the client */
  numberOriginsSelected: Scalars['uint16']['output'];
  /** Whether traffic is proxied through the Cloudflare network (orange-clouded) */
  proxied: Scalars['uint8']['output'];
  /** Load balancing region where request originated */
  region: Scalars['string']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /**
   * Index of the selected origin from the list of all origins. If multiple origins
   * were selected, this is the index of the first origin in that list
   */
  selectedOriginIndex: Scalars['uint16']['output'];
  /** Name of the selected origin */
  selectedOriginName: Scalars['string']['output'];
  /** Names of each selected origin */
  selectedOriginNames: Scalars['string']['output'];
  /** Dynamic Latency: RTT (milliseconds) to reach the origin pool */
  selectedPoolAvgRttMs: Scalars['uint64']['output'];
  /** Health checks status for the selected pool */
  selectedPoolHealthChecksEnabled: Scalars['uint8']['output'];
  /** Health status for the selected pool */
  selectedPoolHealthy: Scalars['uint8']['output'];
  /** A unique identifier for the selected pool */
  selectedPoolId: Scalars['string']['output'];
  /** Index of the selected pool from the list of all pools */
  selectedPoolIndex: Scalars['uint32']['output'];
  /** Name for the selected pool */
  selectedPoolName: Scalars['string']['output'];
  /** Type of session affinity enabled */
  sessionAffinityEnabled: Scalars['string']['output'];
  /** Current status of session affinity */
  sessionAffinityStatus: Scalars['string']['output'];
  /** Policy by which the load balancer will route traffic */
  steeringPolicy: Scalars['string']['output'];
};

export type ZoneLoadBalancingRequestsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneLoadBalancingRequestsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneLoadBalancingRequestsAdaptiveGroupsFilter_InputObject>>;
  coloCode?: InputMaybe<Scalars['string']['input']>;
  coloCode_geq?: InputMaybe<Scalars['string']['input']>;
  coloCode_gt?: InputMaybe<Scalars['string']['input']>;
  coloCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_leq?: InputMaybe<Scalars['string']['input']>;
  coloCode_like?: InputMaybe<Scalars['string']['input']>;
  coloCode_lt?: InputMaybe<Scalars['string']['input']>;
  coloCode_neq?: InputMaybe<Scalars['string']['input']>;
  coloCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  coloCode_notlike?: InputMaybe<Scalars['string']['input']>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  errorType?: InputMaybe<Scalars['string']['input']>;
  errorType_geq?: InputMaybe<Scalars['string']['input']>;
  errorType_gt?: InputMaybe<Scalars['string']['input']>;
  errorType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  errorType_leq?: InputMaybe<Scalars['string']['input']>;
  errorType_like?: InputMaybe<Scalars['string']['input']>;
  errorType_lt?: InputMaybe<Scalars['string']['input']>;
  errorType_neq?: InputMaybe<Scalars['string']['input']>;
  errorType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  errorType_notlike?: InputMaybe<Scalars['string']['input']>;
  lbName?: InputMaybe<Scalars['string']['input']>;
  lbName_geq?: InputMaybe<Scalars['string']['input']>;
  lbName_gt?: InputMaybe<Scalars['string']['input']>;
  lbName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  lbName_leq?: InputMaybe<Scalars['string']['input']>;
  lbName_like?: InputMaybe<Scalars['string']['input']>;
  lbName_lt?: InputMaybe<Scalars['string']['input']>;
  lbName_neq?: InputMaybe<Scalars['string']['input']>;
  lbName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  lbName_notlike?: InputMaybe<Scalars['string']['input']>;
  multipleOriginsSelected?: InputMaybe<Scalars['uint8']['input']>;
  multipleOriginsSelected_geq?: InputMaybe<Scalars['uint8']['input']>;
  multipleOriginsSelected_gt?: InputMaybe<Scalars['uint8']['input']>;
  multipleOriginsSelected_in?: InputMaybe<Scalars['bytes']['input']>;
  multipleOriginsSelected_leq?: InputMaybe<Scalars['uint8']['input']>;
  multipleOriginsSelected_lt?: InputMaybe<Scalars['uint8']['input']>;
  multipleOriginsSelected_neq?: InputMaybe<Scalars['uint8']['input']>;
  multipleOriginsSelected_notin?: InputMaybe<Scalars['bytes']['input']>;
  numberOriginsSelected?: InputMaybe<Scalars['uint16']['input']>;
  numberOriginsSelected_geq?: InputMaybe<Scalars['uint16']['input']>;
  numberOriginsSelected_gt?: InputMaybe<Scalars['uint16']['input']>;
  numberOriginsSelected_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  numberOriginsSelected_leq?: InputMaybe<Scalars['uint16']['input']>;
  numberOriginsSelected_lt?: InputMaybe<Scalars['uint16']['input']>;
  numberOriginsSelected_neq?: InputMaybe<Scalars['uint16']['input']>;
  numberOriginsSelected_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  proxied?: InputMaybe<Scalars['uint8']['input']>;
  proxied_geq?: InputMaybe<Scalars['uint8']['input']>;
  proxied_gt?: InputMaybe<Scalars['uint8']['input']>;
  proxied_in?: InputMaybe<Scalars['bytes']['input']>;
  proxied_leq?: InputMaybe<Scalars['uint8']['input']>;
  proxied_lt?: InputMaybe<Scalars['uint8']['input']>;
  proxied_neq?: InputMaybe<Scalars['uint8']['input']>;
  proxied_notin?: InputMaybe<Scalars['bytes']['input']>;
  region?: InputMaybe<Scalars['string']['input']>;
  region_geq?: InputMaybe<Scalars['string']['input']>;
  region_gt?: InputMaybe<Scalars['string']['input']>;
  region_in?: InputMaybe<Array<Scalars['string']['input']>>;
  region_leq?: InputMaybe<Scalars['string']['input']>;
  region_like?: InputMaybe<Scalars['string']['input']>;
  region_lt?: InputMaybe<Scalars['string']['input']>;
  region_neq?: InputMaybe<Scalars['string']['input']>;
  region_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  region_notlike?: InputMaybe<Scalars['string']['input']>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  selectedOriginIndex?: InputMaybe<Scalars['uint16']['input']>;
  selectedOriginIndex_geq?: InputMaybe<Scalars['uint16']['input']>;
  selectedOriginIndex_gt?: InputMaybe<Scalars['uint16']['input']>;
  selectedOriginIndex_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  selectedOriginIndex_leq?: InputMaybe<Scalars['uint16']['input']>;
  selectedOriginIndex_lt?: InputMaybe<Scalars['uint16']['input']>;
  selectedOriginIndex_neq?: InputMaybe<Scalars['uint16']['input']>;
  selectedOriginIndex_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  selectedOriginName?: InputMaybe<Scalars['string']['input']>;
  selectedOriginName_geq?: InputMaybe<Scalars['string']['input']>;
  selectedOriginName_gt?: InputMaybe<Scalars['string']['input']>;
  selectedOriginName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  selectedOriginName_leq?: InputMaybe<Scalars['string']['input']>;
  selectedOriginName_like?: InputMaybe<Scalars['string']['input']>;
  selectedOriginName_lt?: InputMaybe<Scalars['string']['input']>;
  selectedOriginName_neq?: InputMaybe<Scalars['string']['input']>;
  selectedOriginName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  selectedOriginName_notlike?: InputMaybe<Scalars['string']['input']>;
  selectedOriginNames?: InputMaybe<Scalars['string']['input']>;
  selectedOriginNames_geq?: InputMaybe<Scalars['string']['input']>;
  selectedOriginNames_gt?: InputMaybe<Scalars['string']['input']>;
  selectedOriginNames_in?: InputMaybe<Array<Scalars['string']['input']>>;
  selectedOriginNames_leq?: InputMaybe<Scalars['string']['input']>;
  selectedOriginNames_like?: InputMaybe<Scalars['string']['input']>;
  selectedOriginNames_lt?: InputMaybe<Scalars['string']['input']>;
  selectedOriginNames_neq?: InputMaybe<Scalars['string']['input']>;
  selectedOriginNames_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  selectedOriginNames_notlike?: InputMaybe<Scalars['string']['input']>;
  selectedPoolAvgRttMs?: InputMaybe<Scalars['uint64']['input']>;
  selectedPoolAvgRttMs_geq?: InputMaybe<Scalars['uint64']['input']>;
  selectedPoolAvgRttMs_gt?: InputMaybe<Scalars['uint64']['input']>;
  selectedPoolAvgRttMs_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  selectedPoolAvgRttMs_leq?: InputMaybe<Scalars['uint64']['input']>;
  selectedPoolAvgRttMs_lt?: InputMaybe<Scalars['uint64']['input']>;
  selectedPoolAvgRttMs_neq?: InputMaybe<Scalars['uint64']['input']>;
  selectedPoolAvgRttMs_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  selectedPoolHealthChecksEnabled?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthChecksEnabled_geq?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthChecksEnabled_gt?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthChecksEnabled_in?: InputMaybe<Scalars['bytes']['input']>;
  selectedPoolHealthChecksEnabled_leq?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthChecksEnabled_lt?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthChecksEnabled_neq?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthChecksEnabled_notin?: InputMaybe<Scalars['bytes']['input']>;
  selectedPoolHealthy?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthy_geq?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthy_gt?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthy_in?: InputMaybe<Scalars['bytes']['input']>;
  selectedPoolHealthy_leq?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthy_lt?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthy_neq?: InputMaybe<Scalars['uint8']['input']>;
  selectedPoolHealthy_notin?: InputMaybe<Scalars['bytes']['input']>;
  selectedPoolId?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_geq?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_gt?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  selectedPoolId_leq?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_like?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_lt?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_neq?: InputMaybe<Scalars['string']['input']>;
  selectedPoolId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  selectedPoolId_notlike?: InputMaybe<Scalars['string']['input']>;
  selectedPoolIndex?: InputMaybe<Scalars['uint32']['input']>;
  selectedPoolIndex_geq?: InputMaybe<Scalars['uint32']['input']>;
  selectedPoolIndex_gt?: InputMaybe<Scalars['uint32']['input']>;
  selectedPoolIndex_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  selectedPoolIndex_leq?: InputMaybe<Scalars['uint32']['input']>;
  selectedPoolIndex_lt?: InputMaybe<Scalars['uint32']['input']>;
  selectedPoolIndex_neq?: InputMaybe<Scalars['uint32']['input']>;
  selectedPoolIndex_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  selectedPoolName?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_geq?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_gt?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  selectedPoolName_leq?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_like?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_lt?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_neq?: InputMaybe<Scalars['string']['input']>;
  selectedPoolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  selectedPoolName_notlike?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityEnabled?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityEnabled_geq?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityEnabled_gt?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityEnabled_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sessionAffinityEnabled_leq?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityEnabled_like?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityEnabled_lt?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityEnabled_neq?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityEnabled_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sessionAffinityEnabled_notlike?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_geq?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_gt?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_in?: InputMaybe<Array<Scalars['string']['input']>>;
  sessionAffinityStatus_leq?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_like?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_lt?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_neq?: InputMaybe<Scalars['string']['input']>;
  sessionAffinityStatus_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  sessionAffinityStatus_notlike?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_geq?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_gt?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_in?: InputMaybe<Array<Scalars['string']['input']>>;
  steeringPolicy_leq?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_like?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_lt?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_neq?: InputMaybe<Scalars['string']['input']>;
  steeringPolicy_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  steeringPolicy_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZoneLoadBalancingRequestsAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** errorType ascending */
  ErrorTypeAsc = 'errorType_ASC',
  /** errorType descending */
  ErrorTypeDesc = 'errorType_DESC',
  /** lbName ascending */
  LbNameAsc = 'lbName_ASC',
  /** lbName descending */
  LbNameDesc = 'lbName_DESC',
  /** multipleOriginsSelected ascending */
  MultipleOriginsSelectedAsc = 'multipleOriginsSelected_ASC',
  /** multipleOriginsSelected descending */
  MultipleOriginsSelectedDesc = 'multipleOriginsSelected_DESC',
  /** numberOriginsSelected ascending */
  NumberOriginsSelectedAsc = 'numberOriginsSelected_ASC',
  /** numberOriginsSelected descending */
  NumberOriginsSelectedDesc = 'numberOriginsSelected_DESC',
  /** proxied ascending */
  ProxiedAsc = 'proxied_ASC',
  /** proxied descending */
  ProxiedDesc = 'proxied_DESC',
  /** region ascending */
  RegionAsc = 'region_ASC',
  /** region descending */
  RegionDesc = 'region_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** selectedOriginIndex ascending */
  SelectedOriginIndexAsc = 'selectedOriginIndex_ASC',
  /** selectedOriginIndex descending */
  SelectedOriginIndexDesc = 'selectedOriginIndex_DESC',
  /** selectedOriginName ascending */
  SelectedOriginNameAsc = 'selectedOriginName_ASC',
  /** selectedOriginName descending */
  SelectedOriginNameDesc = 'selectedOriginName_DESC',
  /** selectedOriginNames ascending */
  SelectedOriginNamesAsc = 'selectedOriginNames_ASC',
  /** selectedOriginNames descending */
  SelectedOriginNamesDesc = 'selectedOriginNames_DESC',
  /** selectedPoolAvgRttMs ascending */
  SelectedPoolAvgRttMsAsc = 'selectedPoolAvgRttMs_ASC',
  /** selectedPoolAvgRttMs descending */
  SelectedPoolAvgRttMsDesc = 'selectedPoolAvgRttMs_DESC',
  /** selectedPoolHealthChecksEnabled ascending */
  SelectedPoolHealthChecksEnabledAsc = 'selectedPoolHealthChecksEnabled_ASC',
  /** selectedPoolHealthChecksEnabled descending */
  SelectedPoolHealthChecksEnabledDesc = 'selectedPoolHealthChecksEnabled_DESC',
  /** selectedPoolHealthy ascending */
  SelectedPoolHealthyAsc = 'selectedPoolHealthy_ASC',
  /** selectedPoolHealthy descending */
  SelectedPoolHealthyDesc = 'selectedPoolHealthy_DESC',
  /** selectedPoolId ascending */
  SelectedPoolIdAsc = 'selectedPoolId_ASC',
  /** selectedPoolId descending */
  SelectedPoolIdDesc = 'selectedPoolId_DESC',
  /** selectedPoolIndex ascending */
  SelectedPoolIndexAsc = 'selectedPoolIndex_ASC',
  /** selectedPoolIndex descending */
  SelectedPoolIndexDesc = 'selectedPoolIndex_DESC',
  /** selectedPoolName ascending */
  SelectedPoolNameAsc = 'selectedPoolName_ASC',
  /** selectedPoolName descending */
  SelectedPoolNameDesc = 'selectedPoolName_DESC',
  /** sessionAffinityEnabled ascending */
  SessionAffinityEnabledAsc = 'sessionAffinityEnabled_ASC',
  /** sessionAffinityEnabled descending */
  SessionAffinityEnabledDesc = 'sessionAffinityEnabled_DESC',
  /** sessionAffinityStatus ascending */
  SessionAffinityStatusAsc = 'sessionAffinityStatus_ASC',
  /** sessionAffinityStatus descending */
  SessionAffinityStatusDesc = 'sessionAffinityStatus_DESC',
  /** steeringPolicy ascending */
  SteeringPolicyAsc = 'steeringPolicy_ASC',
  /** steeringPolicy descending */
  SteeringPolicyDesc = 'steeringPolicy_DESC'
}

export enum ZoneLoadBalancingRequestsAdaptiveOrderBy {
  /** coloCode ascending */
  ColoCodeAsc = 'coloCode_ASC',
  /** coloCode descending */
  ColoCodeDesc = 'coloCode_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** errorType ascending */
  ErrorTypeAsc = 'errorType_ASC',
  /** errorType descending */
  ErrorTypeDesc = 'errorType_DESC',
  /** lbName ascending */
  LbNameAsc = 'lbName_ASC',
  /** lbName descending */
  LbNameDesc = 'lbName_DESC',
  /** numberOriginsSelected ascending */
  NumberOriginsSelectedAsc = 'numberOriginsSelected_ASC',
  /** numberOriginsSelected descending */
  NumberOriginsSelectedDesc = 'numberOriginsSelected_DESC',
  /** proxied ascending */
  ProxiedAsc = 'proxied_ASC',
  /** proxied descending */
  ProxiedDesc = 'proxied_DESC',
  /** region ascending */
  RegionAsc = 'region_ASC',
  /** region descending */
  RegionDesc = 'region_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** selectedOriginIndex ascending */
  SelectedOriginIndexAsc = 'selectedOriginIndex_ASC',
  /** selectedOriginIndex descending */
  SelectedOriginIndexDesc = 'selectedOriginIndex_DESC',
  /** selectedPoolAvgRttMs ascending */
  SelectedPoolAvgRttMsAsc = 'selectedPoolAvgRttMs_ASC',
  /** selectedPoolAvgRttMs descending */
  SelectedPoolAvgRttMsDesc = 'selectedPoolAvgRttMs_DESC',
  /** selectedPoolHealthChecksEnabled ascending */
  SelectedPoolHealthChecksEnabledAsc = 'selectedPoolHealthChecksEnabled_ASC',
  /** selectedPoolHealthChecksEnabled descending */
  SelectedPoolHealthChecksEnabledDesc = 'selectedPoolHealthChecksEnabled_DESC',
  /** selectedPoolHealthy ascending */
  SelectedPoolHealthyAsc = 'selectedPoolHealthy_ASC',
  /** selectedPoolHealthy descending */
  SelectedPoolHealthyDesc = 'selectedPoolHealthy_DESC',
  /** selectedPoolId ascending */
  SelectedPoolIdAsc = 'selectedPoolId_ASC',
  /** selectedPoolId descending */
  SelectedPoolIdDesc = 'selectedPoolId_DESC',
  /** selectedPoolIndex ascending */
  SelectedPoolIndexAsc = 'selectedPoolIndex_ASC',
  /** selectedPoolIndex descending */
  SelectedPoolIndexDesc = 'selectedPoolIndex_DESC',
  /** selectedPoolName ascending */
  SelectedPoolNameAsc = 'selectedPoolName_ASC',
  /** selectedPoolName descending */
  SelectedPoolNameDesc = 'selectedPoolName_DESC',
  /** sessionAffinityStatus ascending */
  SessionAffinityStatusAsc = 'sessionAffinityStatus_ASC',
  /** sessionAffinityStatus descending */
  SessionAffinityStatusDesc = 'sessionAffinityStatus_DESC',
  /** sessionAffinity ascending */
  SessionAffinityAsc = 'sessionAffinity_ASC',
  /** sessionAffinity descending */
  SessionAffinityDesc = 'sessionAffinity_DESC',
  /** steeringPolicy ascending */
  SteeringPolicyAsc = 'steeringPolicy_ASC',
  /** steeringPolicy descending */
  SteeringPolicyDesc = 'steeringPolicy_DESC'
}

export type ZoneLoadBalancingRequestsAdaptiveOriginsElem = {
  __typename?: 'ZoneLoadBalancingRequestsAdaptiveOriginsElem';
  /** Fully qualified domain name of the origin (if available) */
  fqdn: Scalars['string']['output'];
  /** Origin health status */
  health: Scalars['uint8']['output'];
  /** IPv4 Address of the origin */
  ipv4: Scalars['string']['output'];
  /** IPv6 address of the origin */
  ipv6: Scalars['string']['output'];
  /** Origin name */
  originName: Scalars['string']['output'];
  /** All the origins that were returned to the client */
  selected: Scalars['uint8']['output'];
  /** Ratio of traffic that will be distributed to this origin among all origins in the pool */
  weight: Scalars['float64']['output'];
};

export type ZoneLoadBalancingRequestsAdaptivePoolsElem = {
  __typename?: 'ZoneLoadBalancingRequestsAdaptivePoolsElem';
  /** Dynamic Latency: RTT (milliseconds) to reach the origin pool */
  avgRttMs: Scalars['uint64']['output'];
  /** Distance to Pool KM */
  distance: Scalars['float32']['output'];
  /** Health checks status */
  healthCheckEnabled: Scalars['uint8']['output'];
  /** Pool health status */
  healthy: Scalars['uint8']['output'];
  /** A unique identifier for the pool */
  id: Scalars['string']['output'];
  /** Pool name */
  poolName: Scalars['string']['output'];
};

/** Beta. Logpush job health metrics */
export type ZoneLogpushHealthAdaptiveGroups = {
  __typename?: 'ZoneLogpushHealthAdaptiveGroups';
  avg?: Maybe<ZoneLogpushHealthAdaptiveGroupsAvg>;
  /** The number of values for a metric per dimension */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneLogpushHealthAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<ZoneLogpushHealthAdaptiveGroupsSum>;
};

export type ZoneLogpushHealthAdaptiveGroupsAvg = {
  __typename?: 'ZoneLogpushHealthAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type ZoneLogpushHealthAdaptiveGroupsDimensions = {
  __typename?: 'ZoneLogpushHealthAdaptiveGroupsDimensions';
  /** Date that we completed pushing the log batch */
  date: Scalars['Date']['output'];
  /** Datetime that we completed pushing the log batch */
  datetime: Scalars['Time']['output'];
  /** Datetime that we completed pushing the log batch, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Datetime that we completed pushing the log batch, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Datetime that we completed pushing the log batch, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Datetime that we completed pushing the log batch, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Destination type, e.g. 'S3' or 'GCS' */
  destinationType: Scalars['string']['output'];
  /**
   * Cloudflare may attempt to push a batch of logs multiple times if we encounter
   * a failure. This field will be set to 'true' if this was the last push attempt
   * for this batch of logs. If this field is set to false, it means the push
   * failed but another retry was attempted. If this field is set to true and
   * status >= 300, then the batch of logs failed to push and log data was lost. If
   * you want to count the total number of logs that succeeded or failed, you
   * should always set final = true.
   */
  final: Scalars['uint8']['output'];
  /** The Logpush Job ID */
  jobId: Scalars['uint64']['output'];
  /** HTTP response status code of the log destination */
  status: Scalars['uint16']['output'];
};

export type ZoneLogpushHealthAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneLogpushHealthAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneLogpushHealthAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  destinationType?: InputMaybe<Scalars['string']['input']>;
  destinationType_geq?: InputMaybe<Scalars['string']['input']>;
  destinationType_gt?: InputMaybe<Scalars['string']['input']>;
  destinationType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationType_leq?: InputMaybe<Scalars['string']['input']>;
  destinationType_like?: InputMaybe<Scalars['string']['input']>;
  destinationType_lt?: InputMaybe<Scalars['string']['input']>;
  destinationType_neq?: InputMaybe<Scalars['string']['input']>;
  destinationType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  destinationType_notlike?: InputMaybe<Scalars['string']['input']>;
  final?: InputMaybe<Scalars['uint8']['input']>;
  final_geq?: InputMaybe<Scalars['uint8']['input']>;
  final_gt?: InputMaybe<Scalars['uint8']['input']>;
  final_in?: InputMaybe<Scalars['bytes']['input']>;
  final_leq?: InputMaybe<Scalars['uint8']['input']>;
  final_lt?: InputMaybe<Scalars['uint8']['input']>;
  final_neq?: InputMaybe<Scalars['uint8']['input']>;
  final_notin?: InputMaybe<Scalars['bytes']['input']>;
  jobId?: InputMaybe<Scalars['uint64']['input']>;
  jobId_geq?: InputMaybe<Scalars['uint64']['input']>;
  jobId_gt?: InputMaybe<Scalars['uint64']['input']>;
  jobId_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  jobId_leq?: InputMaybe<Scalars['uint64']['input']>;
  jobId_lt?: InputMaybe<Scalars['uint64']['input']>;
  jobId_neq?: InputMaybe<Scalars['uint64']['input']>;
  jobId_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  status?: InputMaybe<Scalars['uint16']['input']>;
  status_geq?: InputMaybe<Scalars['uint16']['input']>;
  status_gt?: InputMaybe<Scalars['uint16']['input']>;
  status_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  status_leq?: InputMaybe<Scalars['uint16']['input']>;
  status_lt?: InputMaybe<Scalars['uint16']['input']>;
  status_neq?: InputMaybe<Scalars['uint16']['input']>;
  status_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
};

export enum ZoneLogpushHealthAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** destinationType ascending */
  DestinationTypeAsc = 'destinationType_ASC',
  /** destinationType descending */
  DestinationTypeDesc = 'destinationType_DESC',
  /** final ascending */
  FinalAsc = 'final_ASC',
  /** final descending */
  FinalDesc = 'final_DESC',
  /** jobId ascending */
  JobIdAsc = 'jobId_ASC',
  /** jobId descending */
  JobIdDesc = 'jobId_DESC',
  /** status ascending */
  StatusAsc = 'status_ASC',
  /** status descending */
  StatusDesc = 'status_DESC',
  /** sum(bytesCompressed) ascending */
  SumBytesCompressedAsc = 'sum_bytesCompressed_ASC',
  /** sum(bytesCompressed) descending */
  SumBytesCompressedDesc = 'sum_bytesCompressed_DESC',
  /** sum(bytes) ascending */
  SumBytesAsc = 'sum_bytes_ASC',
  /** sum(bytes) descending */
  SumBytesDesc = 'sum_bytes_DESC',
  /** sum(records) ascending */
  SumRecordsAsc = 'sum_records_ASC',
  /** sum(records) descending */
  SumRecordsDesc = 'sum_records_DESC'
}

export type ZoneLogpushHealthAdaptiveGroupsSum = {
  __typename?: 'ZoneLogpushHealthAdaptiveGroupsSum';
  /** Bytes of uncompressed log data pushed */
  bytes: Scalars['uint64']['output'];
  /** Bytes of compressed log data pushed */
  bytesCompressed: Scalars['uint64']['output'];
  /** A count of the total number of records pushed. */
  records: Scalars['uint64']['output'];
};

/** Data to visualize network error logs */
export type ZoneNelReportsAdaptiveGroups = {
  __typename?: 'ZoneNelReportsAdaptiveGroups';
  avg?: Maybe<ZoneNelReportsAdaptiveGroupsAvg>;
  /** The number of NEL Reports */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneNelReportsAdaptiveGroupsDimensions>;
};

export type ZoneNelReportsAdaptiveGroupsAvg = {
  __typename?: 'ZoneNelReportsAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['uint64']['output'];
};

export type ZoneNelReportsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneNelReportsAdaptiveGroupsDimensions';
  /** Client ASN */
  clientIPASN: Scalars['uint32']['output'];
  /** Client ASN Description */
  clientIPASNDescription: Scalars['string']['output'];
  /** Client Country */
  clientIPCountry: Scalars['string']['output'];
  /** 2 letter client country code using ISO 3166-1 alpha-2 syntax */
  clientIPCountryCode: Scalars['string']['output'];
  /** IP Version the client used to connect */
  clientIPVersion: Scalars['uint8']['output'];
  /** Request date from browser */
  date: Scalars['Date']['output'];
  /** Request datetime from browser */
  datetime: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime from browser, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** IATA airport code of colo the client connected to */
  lastKnownGoodColoCode: Scalars['string']['output'];
  /** The phase of connection the error occurred in */
  phase: Scalars['string']['output'];
  /** HTTP Protocol used when the error occured */
  protocol: Scalars['string']['output'];
  /** The type of error in the phase */
  type: Scalars['string']['output'];
};

export type ZoneNelReportsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneNelReportsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneNelReportsAdaptiveGroupsFilter_InputObject>>;
  clientIPASN?: InputMaybe<Scalars['uint32']['input']>;
  clientIPASNDescription?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_geq?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_gt?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPASNDescription_leq?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_like?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_lt?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_neq?: InputMaybe<Scalars['string']['input']>;
  clientIPASNDescription_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPASNDescription_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIPASN_geq?: InputMaybe<Scalars['uint32']['input']>;
  clientIPASN_gt?: InputMaybe<Scalars['uint32']['input']>;
  clientIPASN_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  clientIPASN_leq?: InputMaybe<Scalars['uint32']['input']>;
  clientIPASN_lt?: InputMaybe<Scalars['uint32']['input']>;
  clientIPASN_neq?: InputMaybe<Scalars['uint32']['input']>;
  clientIPASN_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  clientIPCountry?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_geq?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_gt?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPCountryCode_leq?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_like?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_lt?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_neq?: InputMaybe<Scalars['string']['input']>;
  clientIPCountryCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPCountryCode_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_geq?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_gt?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_in?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPCountry_leq?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_like?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_lt?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_neq?: InputMaybe<Scalars['string']['input']>;
  clientIPCountry_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  clientIPCountry_notlike?: InputMaybe<Scalars['string']['input']>;
  clientIPVersion?: InputMaybe<Scalars['uint8']['input']>;
  clientIPVersion_geq?: InputMaybe<Scalars['uint8']['input']>;
  clientIPVersion_gt?: InputMaybe<Scalars['uint8']['input']>;
  clientIPVersion_in?: InputMaybe<Scalars['bytes']['input']>;
  clientIPVersion_leq?: InputMaybe<Scalars['uint8']['input']>;
  clientIPVersion_lt?: InputMaybe<Scalars['uint8']['input']>;
  clientIPVersion_neq?: InputMaybe<Scalars['uint8']['input']>;
  clientIPVersion_notin?: InputMaybe<Scalars['bytes']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  lastKnownGoodColoCode?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_geq?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_gt?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_in?: InputMaybe<Array<Scalars['string']['input']>>;
  lastKnownGoodColoCode_leq?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_like?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_lt?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_neq?: InputMaybe<Scalars['string']['input']>;
  lastKnownGoodColoCode_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  lastKnownGoodColoCode_notlike?: InputMaybe<Scalars['string']['input']>;
  phase?: InputMaybe<Scalars['string']['input']>;
  phase_geq?: InputMaybe<Scalars['string']['input']>;
  phase_gt?: InputMaybe<Scalars['string']['input']>;
  phase_in?: InputMaybe<Array<Scalars['string']['input']>>;
  phase_leq?: InputMaybe<Scalars['string']['input']>;
  phase_like?: InputMaybe<Scalars['string']['input']>;
  phase_lt?: InputMaybe<Scalars['string']['input']>;
  phase_neq?: InputMaybe<Scalars['string']['input']>;
  phase_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  phase_notlike?: InputMaybe<Scalars['string']['input']>;
  protocol?: InputMaybe<Scalars['string']['input']>;
  protocol_geq?: InputMaybe<Scalars['string']['input']>;
  protocol_gt?: InputMaybe<Scalars['string']['input']>;
  protocol_in?: InputMaybe<Array<Scalars['string']['input']>>;
  protocol_leq?: InputMaybe<Scalars['string']['input']>;
  protocol_like?: InputMaybe<Scalars['string']['input']>;
  protocol_lt?: InputMaybe<Scalars['string']['input']>;
  protocol_neq?: InputMaybe<Scalars['string']['input']>;
  protocol_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  protocol_notlike?: InputMaybe<Scalars['string']['input']>;
  type?: InputMaybe<Scalars['string']['input']>;
  type_geq?: InputMaybe<Scalars['string']['input']>;
  type_gt?: InputMaybe<Scalars['string']['input']>;
  type_in?: InputMaybe<Array<Scalars['string']['input']>>;
  type_leq?: InputMaybe<Scalars['string']['input']>;
  type_like?: InputMaybe<Scalars['string']['input']>;
  type_lt?: InputMaybe<Scalars['string']['input']>;
  type_neq?: InputMaybe<Scalars['string']['input']>;
  type_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  type_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZoneNelReportsAdaptiveGroupsOrderBy {
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** clientIPASNDescription ascending */
  ClientIpasnDescriptionAsc = 'clientIPASNDescription_ASC',
  /** clientIPASNDescription descending */
  ClientIpasnDescriptionDesc = 'clientIPASNDescription_DESC',
  /** clientIPASN ascending */
  ClientIpasnAsc = 'clientIPASN_ASC',
  /** clientIPASN descending */
  ClientIpasnDesc = 'clientIPASN_DESC',
  /** clientIPCountryCode ascending */
  ClientIpCountryCodeAsc = 'clientIPCountryCode_ASC',
  /** clientIPCountryCode descending */
  ClientIpCountryCodeDesc = 'clientIPCountryCode_DESC',
  /** clientIPCountry ascending */
  ClientIpCountryAsc = 'clientIPCountry_ASC',
  /** clientIPCountry descending */
  ClientIpCountryDesc = 'clientIPCountry_DESC',
  /** clientIPVersion ascending */
  ClientIpVersionAsc = 'clientIPVersion_ASC',
  /** clientIPVersion descending */
  ClientIpVersionDesc = 'clientIPVersion_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** lastKnownGoodColoCode ascending */
  LastKnownGoodColoCodeAsc = 'lastKnownGoodColoCode_ASC',
  /** lastKnownGoodColoCode descending */
  LastKnownGoodColoCodeDesc = 'lastKnownGoodColoCode_DESC',
  /** phase ascending */
  PhaseAsc = 'phase_ASC',
  /** phase descending */
  PhaseDesc = 'phase_DESC',
  /** protocol ascending */
  ProtocolAsc = 'protocol_ASC',
  /** protocol descending */
  ProtocolDesc = 'protocol_DESC',
  /** type ascending */
  TypeAsc = 'type_ASC',
  /** type descending */
  TypeDesc = 'type_DESC'
}

/** Page Shield CSP reports */
export type ZonePageShieldReportsAdaptiveGroups = {
  __typename?: 'ZonePageShieldReportsAdaptiveGroups';
  avg?: Maybe<ZonePageShieldReportsAdaptiveGroupsAvg>;
  /** Number of Page Shield CSP reports */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZonePageShieldReportsAdaptiveGroupsDimensions>;
};

export type ZonePageShieldReportsAdaptiveGroupsAvg = {
  __typename?: 'ZonePageShieldReportsAdaptiveGroupsAvg';
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
};

export type ZonePageShieldReportsAdaptiveGroupsDimensions = {
  __typename?: 'ZonePageShieldReportsAdaptiveGroupsDimensions';
  /** policy action, log | allow */
  action: Scalars['string']['output'];
  /** csp directive e.g 'script-src' */
  cspDirective: Scalars['string']['output'];
  date: Scalars['Date']['output'];
  /** The date and time the event occurred at the edge */
  datetime: Scalars['Time']['output'];
  /** Report datetime from edge, truncated to multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** Report datetime from edge, truncated to multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** Report datetime from edge, truncated to multiple of 30 minutes */
  datetimeHalfOfHour: Scalars['Time']['output'];
  /** Report datetime from edge, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** Report datetime from edge, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** hostname of the zone */
  host: Scalars['string']['output'];
  /** page on which the resource was found */
  pageURL: Scalars['string']['output'];
  /** The ID of the Policy */
  policyID: Scalars['string']['output'];
  /** resource type e.g script */
  resourceType: Scalars['string']['output'];
  /** URL of the CSP reported resource */
  url: Scalars['string']['output'];
  /** hostname of the resource URL */
  urlHost: Scalars['string']['output'];
};

export type ZonePageShieldReportsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZonePageShieldReportsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZonePageShieldReportsAdaptiveGroupsFilter_InputObject>>;
  action?: InputMaybe<Scalars['string']['input']>;
  action_geq?: InputMaybe<Scalars['string']['input']>;
  action_gt?: InputMaybe<Scalars['string']['input']>;
  action_in?: InputMaybe<Array<Scalars['string']['input']>>;
  action_leq?: InputMaybe<Scalars['string']['input']>;
  action_like?: InputMaybe<Scalars['string']['input']>;
  action_lt?: InputMaybe<Scalars['string']['input']>;
  action_neq?: InputMaybe<Scalars['string']['input']>;
  action_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  action_notlike?: InputMaybe<Scalars['string']['input']>;
  cspDirective?: InputMaybe<Scalars['string']['input']>;
  cspDirective_geq?: InputMaybe<Scalars['string']['input']>;
  cspDirective_gt?: InputMaybe<Scalars['string']['input']>;
  cspDirective_in?: InputMaybe<Array<Scalars['string']['input']>>;
  cspDirective_leq?: InputMaybe<Scalars['string']['input']>;
  cspDirective_like?: InputMaybe<Scalars['string']['input']>;
  cspDirective_lt?: InputMaybe<Scalars['string']['input']>;
  cspDirective_neq?: InputMaybe<Scalars['string']['input']>;
  cspDirective_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  cspDirective_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHalfOfHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHalfOfHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  host?: InputMaybe<Scalars['string']['input']>;
  host_geq?: InputMaybe<Scalars['string']['input']>;
  host_gt?: InputMaybe<Scalars['string']['input']>;
  host_in?: InputMaybe<Array<Scalars['string']['input']>>;
  host_leq?: InputMaybe<Scalars['string']['input']>;
  host_like?: InputMaybe<Scalars['string']['input']>;
  host_lt?: InputMaybe<Scalars['string']['input']>;
  host_neq?: InputMaybe<Scalars['string']['input']>;
  host_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  host_notlike?: InputMaybe<Scalars['string']['input']>;
  pageURL?: InputMaybe<Scalars['string']['input']>;
  pageURL_geq?: InputMaybe<Scalars['string']['input']>;
  pageURL_gt?: InputMaybe<Scalars['string']['input']>;
  pageURL_in?: InputMaybe<Array<Scalars['string']['input']>>;
  pageURL_leq?: InputMaybe<Scalars['string']['input']>;
  pageURL_like?: InputMaybe<Scalars['string']['input']>;
  pageURL_lt?: InputMaybe<Scalars['string']['input']>;
  pageURL_neq?: InputMaybe<Scalars['string']['input']>;
  pageURL_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  pageURL_notlike?: InputMaybe<Scalars['string']['input']>;
  policyID?: InputMaybe<Scalars['string']['input']>;
  policyID_geq?: InputMaybe<Scalars['string']['input']>;
  policyID_gt?: InputMaybe<Scalars['string']['input']>;
  policyID_in?: InputMaybe<Array<Scalars['string']['input']>>;
  policyID_leq?: InputMaybe<Scalars['string']['input']>;
  policyID_like?: InputMaybe<Scalars['string']['input']>;
  policyID_lt?: InputMaybe<Scalars['string']['input']>;
  policyID_neq?: InputMaybe<Scalars['string']['input']>;
  policyID_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  policyID_notlike?: InputMaybe<Scalars['string']['input']>;
  resourceType?: InputMaybe<Scalars['string']['input']>;
  resourceType_geq?: InputMaybe<Scalars['string']['input']>;
  resourceType_gt?: InputMaybe<Scalars['string']['input']>;
  resourceType_in?: InputMaybe<Array<Scalars['string']['input']>>;
  resourceType_leq?: InputMaybe<Scalars['string']['input']>;
  resourceType_like?: InputMaybe<Scalars['string']['input']>;
  resourceType_lt?: InputMaybe<Scalars['string']['input']>;
  resourceType_neq?: InputMaybe<Scalars['string']['input']>;
  resourceType_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  resourceType_notlike?: InputMaybe<Scalars['string']['input']>;
  url?: InputMaybe<Scalars['string']['input']>;
  urlHost?: InputMaybe<Scalars['string']['input']>;
  urlHost_geq?: InputMaybe<Scalars['string']['input']>;
  urlHost_gt?: InputMaybe<Scalars['string']['input']>;
  urlHost_in?: InputMaybe<Array<Scalars['string']['input']>>;
  urlHost_leq?: InputMaybe<Scalars['string']['input']>;
  urlHost_like?: InputMaybe<Scalars['string']['input']>;
  urlHost_lt?: InputMaybe<Scalars['string']['input']>;
  urlHost_neq?: InputMaybe<Scalars['string']['input']>;
  urlHost_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  urlHost_notlike?: InputMaybe<Scalars['string']['input']>;
  url_geq?: InputMaybe<Scalars['string']['input']>;
  url_gt?: InputMaybe<Scalars['string']['input']>;
  url_in?: InputMaybe<Array<Scalars['string']['input']>>;
  url_leq?: InputMaybe<Scalars['string']['input']>;
  url_like?: InputMaybe<Scalars['string']['input']>;
  url_lt?: InputMaybe<Scalars['string']['input']>;
  url_neq?: InputMaybe<Scalars['string']['input']>;
  url_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  url_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZonePageShieldReportsAdaptiveGroupsOrderBy {
  /** action ascending */
  ActionAsc = 'action_ASC',
  /** action descending */
  ActionDesc = 'action_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** cspDirective ascending */
  CspDirectiveAsc = 'cspDirective_ASC',
  /** cspDirective descending */
  CspDirectiveDesc = 'cspDirective_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHalfOfHour ascending */
  DatetimeHalfOfHourAsc = 'datetimeHalfOfHour_ASC',
  /** datetimeHalfOfHour descending */
  DatetimeHalfOfHourDesc = 'datetimeHalfOfHour_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** host ascending */
  HostAsc = 'host_ASC',
  /** host descending */
  HostDesc = 'host_DESC',
  /** pageURL ascending */
  PageUrlAsc = 'pageURL_ASC',
  /** pageURL descending */
  PageUrlDesc = 'pageURL_DESC',
  /** policyID ascending */
  PolicyIdAsc = 'policyID_ASC',
  /** policyID descending */
  PolicyIdDesc = 'policyID_DESC',
  /** resourceType ascending */
  ResourceTypeAsc = 'resourceType_ASC',
  /** resourceType descending */
  ResourceTypeDesc = 'resourceType_DESC',
  /** urlHost ascending */
  UrlHostAsc = 'urlHost_ASC',
  /** urlHost descending */
  UrlHostDesc = 'urlHost_DESC',
  /** url ascending */
  UrlAsc = 'url_ASC',
  /** url descending */
  UrlDesc = 'url_DESC'
}

/** Access and limitations for a zone */
export type ZoneSettings = {
  __typename?: 'ZoneSettings';
  apiGatewayGraphqlQueryAnalyticsGroups: Settings;
  apiGatewayMatchedSessionIDsAdaptiveGroups: Settings;
  apiRequestSequencesGroups: Settings;
  cacheReserveOperationsAdaptiveGroups: Settings;
  cacheReserveRequestsAdaptiveGroups: Settings;
  cacheReserveStorageAdaptiveGroups: Settings;
  dmarcReportsAdaptive: Settings;
  dmarcReportsSourcesAdaptiveGroups: Settings;
  dnsAnalyticsAdaptive: Settings;
  dnsAnalyticsAdaptiveGroups: Settings;
  emailRoutingAdaptive: Settings;
  emailRoutingAdaptiveGroups: Settings;
  firewallEventsAdaptive: Settings;
  firewallEventsAdaptiveByTimeGroups: Settings;
  firewallEventsAdaptiveGroups: Settings;
  healthCheckEventsAdaptive: Settings;
  healthCheckEventsAdaptiveGroups: Settings;
  httpRequests1dByColoGroups: Settings;
  httpRequests1dGroups: Settings;
  httpRequests1hGroups: Settings;
  httpRequests1mByColoGroups: Settings;
  httpRequests1mGroups: Settings;
  httpRequestsAdaptive: Settings;
  httpRequestsAdaptiveGroups: Settings;
  httpRequestsOverviewAdaptiveGroups: Settings;
  imageResizingRequests1mGroups: Settings;
  loadBalancingRequestsAdaptive: Settings;
  loadBalancingRequestsAdaptiveGroups: Settings;
  logpushHealthAdaptiveGroups: Settings;
  nelReportsAdaptiveGroups: Settings;
  pageShieldReportsAdaptiveGroups: Settings;
  waitingRoomAnalyticsAdaptive: Settings;
  waitingRoomAnalyticsAdaptiveGroups: Settings;
  workersZoneInvocationsAdaptiveGroups: Settings;
  workersZoneSubrequestsAdaptiveGroups: Settings;
  zarazActionsAdaptiveGroups: Settings;
  zarazTrackAdaptiveGroups: Settings;
  zarazTriggersAdaptiveGroups: Settings;
};

/** Raw Waiting Room analytics logs */
export type ZoneWaitingRoomAnalyticsAdaptive = {
  __typename?: 'ZoneWaitingRoomAnalyticsAdaptive';
  /** The date and time of the state of analytics for the waiting room */
  datetime: Scalars['Time']['output'];
  /** Maximum value of estimated time in minutes */
  maxEstimatedTimeMinutes: Scalars['int64']['output'];
  /** Actual value of new users per minute */
  newUsersPerMinute: Scalars['int64']['output'];
  /** Configured value of new users per minute */
  newUsersPerMinuteConfig: Scalars['int64']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** Configured value of session duration */
  sessionDuration: Scalars['int64']['output'];
  /** 50th percentile of the time between session refreshes in seconds */
  timeBetweenRefreshesP50: Scalars['int64']['output'];
  /** 75th percentile of the time between session refreshes in seconds */
  timeBetweenRefreshesP75: Scalars['int64']['output'];
  /** 90th percentile of the time between session refreshes in seconds */
  timeBetweenRefreshesP90: Scalars['int64']['output'];
  /** 95th percentile of the time between session refreshes in seconds */
  timeBetweenRefreshesP95: Scalars['int64']['output'];
  /** 50th percentile of the time spent waiting in queue in seconds */
  timeInQueueP50: Scalars['int64']['output'];
  /** 75th percentile of the time spent waiting in queue in seconds */
  timeInQueueP75: Scalars['int64']['output'];
  /** 90th percentile of the time spent waiting in queue in seconds */
  timeInQueueP90: Scalars['int64']['output'];
  /** 95th percentile of the time spent waiting in queue in seconds */
  timeInQueueP95: Scalars['int64']['output'];
  /** 50th percentile of the time spent on the origin in seconds */
  timeOnOriginP50: Scalars['int64']['output'];
  /** 75th percentile of the time spent on the origin in seconds */
  timeOnOriginP75: Scalars['int64']['output'];
  /** 90th percentile of the time spent on the origin in seconds */
  timeOnOriginP90: Scalars['int64']['output'];
  /** 95th percentile of the time spent on the origin in seconds */
  timeOnOriginP95: Scalars['int64']['output'];
  /** Actual value of total active users */
  totalActiveUsers: Scalars['int64']['output'];
  /** Configured value of total active users */
  totalActiveUsersConfig: Scalars['int64']['output'];
  /** Total number of users that are queued */
  totalQueuedUsers: Scalars['int64']['output'];
  /**
   * 50th percentile of the total time (in seconds) spent waiting in queue by users
   * who were queued and then gained access to the origin
   */
  totalTimeWaitedP50: Scalars['int64']['output'];
  /**
   * 75th percentile of the total time (in seconds) spent waiting in queue by users
   * who were queued and then gained access to the origin
   */
  totalTimeWaitedP75: Scalars['int64']['output'];
  /**
   * 90th percentile of the total time (in seconds) spent waiting in queue by users
   * who were queued and then gained access to the origin
   */
  totalTimeWaitedP90: Scalars['int64']['output'];
  /**
   * 95th percentile of the total time (in seconds) spent waiting in queue by users
   * who were queued and then gained access to the origin
   */
  totalTimeWaitedP95: Scalars['int64']['output'];
  /** Unique Identifier for the waiting room */
  waitingRoomId: Scalars['string']['output'];
  /** Name of the waiting room */
  waitingRoomName: Scalars['string']['output'];
};

export type ZoneWaitingRoomAnalyticsAdaptiveFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneWaitingRoomAnalyticsAdaptiveFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneWaitingRoomAnalyticsAdaptiveFilter_InputObject>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  maxEstimatedTimeMinutes?: InputMaybe<Scalars['int64']['input']>;
  maxEstimatedTimeMinutes_geq?: InputMaybe<Scalars['int64']['input']>;
  maxEstimatedTimeMinutes_gt?: InputMaybe<Scalars['int64']['input']>;
  maxEstimatedTimeMinutes_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  maxEstimatedTimeMinutes_leq?: InputMaybe<Scalars['int64']['input']>;
  maxEstimatedTimeMinutes_lt?: InputMaybe<Scalars['int64']['input']>;
  maxEstimatedTimeMinutes_neq?: InputMaybe<Scalars['int64']['input']>;
  maxEstimatedTimeMinutes_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  newUsersPerMinute?: InputMaybe<Scalars['int64']['input']>;
  newUsersPerMinuteConfig?: InputMaybe<Scalars['int64']['input']>;
  newUsersPerMinuteConfig_geq?: InputMaybe<Scalars['int64']['input']>;
  newUsersPerMinuteConfig_gt?: InputMaybe<Scalars['int64']['input']>;
  newUsersPerMinuteConfig_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  newUsersPerMinuteConfig_leq?: InputMaybe<Scalars['int64']['input']>;
  newUsersPerMinuteConfig_lt?: InputMaybe<Scalars['int64']['input']>;
  newUsersPerMinuteConfig_neq?: InputMaybe<Scalars['int64']['input']>;
  newUsersPerMinuteConfig_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  newUsersPerMinute_geq?: InputMaybe<Scalars['int64']['input']>;
  newUsersPerMinute_gt?: InputMaybe<Scalars['int64']['input']>;
  newUsersPerMinute_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  newUsersPerMinute_leq?: InputMaybe<Scalars['int64']['input']>;
  newUsersPerMinute_lt?: InputMaybe<Scalars['int64']['input']>;
  newUsersPerMinute_neq?: InputMaybe<Scalars['int64']['input']>;
  newUsersPerMinute_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sessionDuration?: InputMaybe<Scalars['int64']['input']>;
  sessionDuration_geq?: InputMaybe<Scalars['int64']['input']>;
  sessionDuration_gt?: InputMaybe<Scalars['int64']['input']>;
  sessionDuration_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  sessionDuration_leq?: InputMaybe<Scalars['int64']['input']>;
  sessionDuration_lt?: InputMaybe<Scalars['int64']['input']>;
  sessionDuration_neq?: InputMaybe<Scalars['int64']['input']>;
  sessionDuration_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeBetweenRefreshesP50?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP50_geq?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP50_gt?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP50_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeBetweenRefreshesP50_leq?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP50_lt?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP50_neq?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP50_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeBetweenRefreshesP75?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP75_geq?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP75_gt?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP75_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeBetweenRefreshesP75_leq?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP75_lt?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP75_neq?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP75_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeBetweenRefreshesP90?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP90_geq?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP90_gt?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP90_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeBetweenRefreshesP90_leq?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP90_lt?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP90_neq?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP90_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeBetweenRefreshesP95?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP95_geq?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP95_gt?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP95_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeBetweenRefreshesP95_leq?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP95_lt?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP95_neq?: InputMaybe<Scalars['int64']['input']>;
  timeBetweenRefreshesP95_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeInQueueP50?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP50_geq?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP50_gt?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP50_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeInQueueP50_leq?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP50_lt?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP50_neq?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP50_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeInQueueP75?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP75_geq?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP75_gt?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP75_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeInQueueP75_leq?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP75_lt?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP75_neq?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP75_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeInQueueP90?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP90_geq?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP90_gt?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP90_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeInQueueP90_leq?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP90_lt?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP90_neq?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP90_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeInQueueP95?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP95_geq?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP95_gt?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP95_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeInQueueP95_leq?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP95_lt?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP95_neq?: InputMaybe<Scalars['int64']['input']>;
  timeInQueueP95_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeOnOriginP50?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP50_geq?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP50_gt?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP50_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeOnOriginP50_leq?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP50_lt?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP50_neq?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP50_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeOnOriginP75?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP75_geq?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP75_gt?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP75_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeOnOriginP75_leq?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP75_lt?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP75_neq?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP75_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeOnOriginP90?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP90_geq?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP90_gt?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP90_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeOnOriginP90_leq?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP90_lt?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP90_neq?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP90_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeOnOriginP95?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP95_geq?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP95_gt?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP95_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  timeOnOriginP95_leq?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP95_lt?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP95_neq?: InputMaybe<Scalars['int64']['input']>;
  timeOnOriginP95_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalActiveUsers?: InputMaybe<Scalars['int64']['input']>;
  totalActiveUsersConfig?: InputMaybe<Scalars['int64']['input']>;
  totalActiveUsersConfig_geq?: InputMaybe<Scalars['int64']['input']>;
  totalActiveUsersConfig_gt?: InputMaybe<Scalars['int64']['input']>;
  totalActiveUsersConfig_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalActiveUsersConfig_leq?: InputMaybe<Scalars['int64']['input']>;
  totalActiveUsersConfig_lt?: InputMaybe<Scalars['int64']['input']>;
  totalActiveUsersConfig_neq?: InputMaybe<Scalars['int64']['input']>;
  totalActiveUsersConfig_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalActiveUsers_geq?: InputMaybe<Scalars['int64']['input']>;
  totalActiveUsers_gt?: InputMaybe<Scalars['int64']['input']>;
  totalActiveUsers_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalActiveUsers_leq?: InputMaybe<Scalars['int64']['input']>;
  totalActiveUsers_lt?: InputMaybe<Scalars['int64']['input']>;
  totalActiveUsers_neq?: InputMaybe<Scalars['int64']['input']>;
  totalActiveUsers_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalQueuedUsers?: InputMaybe<Scalars['int64']['input']>;
  totalQueuedUsers_geq?: InputMaybe<Scalars['int64']['input']>;
  totalQueuedUsers_gt?: InputMaybe<Scalars['int64']['input']>;
  totalQueuedUsers_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalQueuedUsers_leq?: InputMaybe<Scalars['int64']['input']>;
  totalQueuedUsers_lt?: InputMaybe<Scalars['int64']['input']>;
  totalQueuedUsers_neq?: InputMaybe<Scalars['int64']['input']>;
  totalQueuedUsers_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalTimeWaitedP50?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP50_geq?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP50_gt?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP50_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalTimeWaitedP50_leq?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP50_lt?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP50_neq?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP50_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalTimeWaitedP75?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP75_geq?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP75_gt?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP75_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalTimeWaitedP75_leq?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP75_lt?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP75_neq?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP75_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalTimeWaitedP90?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP90_geq?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP90_gt?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP90_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalTimeWaitedP90_leq?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP90_lt?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP90_neq?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP90_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalTimeWaitedP95?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP95_geq?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP95_gt?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP95_in?: InputMaybe<Array<Scalars['int64']['input']>>;
  totalTimeWaitedP95_leq?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP95_lt?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP95_neq?: InputMaybe<Scalars['int64']['input']>;
  totalTimeWaitedP95_notin?: InputMaybe<Array<Scalars['int64']['input']>>;
  waitingRoomId?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_geq?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_gt?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  waitingRoomId_leq?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_like?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_lt?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_neq?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  waitingRoomId_notlike?: InputMaybe<Scalars['string']['input']>;
  waitingRoomName?: InputMaybe<Scalars['string']['input']>;
  waitingRoomName_geq?: InputMaybe<Scalars['string']['input']>;
  waitingRoomName_gt?: InputMaybe<Scalars['string']['input']>;
  waitingRoomName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  waitingRoomName_leq?: InputMaybe<Scalars['string']['input']>;
  waitingRoomName_like?: InputMaybe<Scalars['string']['input']>;
  waitingRoomName_lt?: InputMaybe<Scalars['string']['input']>;
  waitingRoomName_neq?: InputMaybe<Scalars['string']['input']>;
  waitingRoomName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  waitingRoomName_notlike?: InputMaybe<Scalars['string']['input']>;
};

/** Aggregated Waiting Room analytics logs with adaptive sampling */
export type ZoneWaitingRoomAnalyticsAdaptiveGroups = {
  __typename?: 'ZoneWaitingRoomAnalyticsAdaptiveGroups';
  /** Beta. The avg of values for a metric per dimension */
  avg?: Maybe<ZoneWaitingRoomAnalyticsAdaptiveGroupsAvg>;
  /** Beta. The avgWeighted values for a metric per dimension */
  avgWeighted?: Maybe<ZoneWaitingRoomAnalyticsAdaptiveGroupsAvgWeighted>;
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneWaitingRoomAnalyticsAdaptiveGroupsDimensions>;
  /** Beta. The max value for a metric per dimenstion */
  max?: Maybe<ZoneWaitingRoomAnalyticsAdaptiveGroupsMax>;
  /** Beta. The minimum value for a metric per dimenstion */
  min?: Maybe<ZoneWaitingRoomAnalyticsAdaptiveGroupsMin>;
  /** The sum for a metric per dimension. Use for shorter queries since data gets sampled after 7 days. */
  sum?: Maybe<ZoneWaitingRoomAnalyticsAdaptiveGroupsSum>;
};

export type ZoneWaitingRoomAnalyticsAdaptiveGroupsAvg = {
  __typename?: 'ZoneWaitingRoomAnalyticsAdaptiveGroupsAvg';
  /** Average of the maximum estimated wait time per minute. A negative number means no data */
  maxEstimatedTimeMinutes: Scalars['int64']['output'];
  /** Average rate of new users per minute. A negative number means no data */
  newUsersPerMinute: Scalars['int64']['output'];
  /** Configured value of new users per minute. A negative number means no data */
  newUsersPerMinuteConfig: Scalars['int64']['output'];
  /** Average sample interval */
  sampleInterval: Scalars['float64']['output'];
  /** Configured value of session duration. A negative number means no data */
  sessionDuration: Scalars['int64']['output'];
  /** Average rate of total active users. A negative number means no data */
  totalActiveUsers: Scalars['int64']['output'];
  /** Configured value of total active users. A negative number means no data */
  totalActiveUsersConfig: Scalars['int64']['output'];
  /** Average of total queued users */
  totalQueuedUsers: Scalars['int64']['output'];
};

export type ZoneWaitingRoomAnalyticsAdaptiveGroupsAvgWeighted = {
  __typename?: 'ZoneWaitingRoomAnalyticsAdaptiveGroupsAvgWeighted';
  /** Weighted average of 50th percentile of time spent between session refreshes in seconds. A negative number means no data */
  timeBetweenRefreshesP50: Scalars['float64']['output'];
  /** Weighted average of 75th percentile of time spent between session refreshes in seconds. A negative number means no data */
  timeBetweenRefreshesP75: Scalars['float64']['output'];
  /** Weighted average of 90th percentile of time spent between session refreshes in seconds. A negative number means no data */
  timeBetweenRefreshesP90: Scalars['float64']['output'];
  /** Weighted average of 95th percentile of time spent between session refreshes in seconds. A negative number means no data */
  timeBetweenRefreshesP95: Scalars['float64']['output'];
  /** Weighted average of 50th percentile of time spent in queue in seconds. A negative number means no data */
  timeInQueueP50: Scalars['float64']['output'];
  /** Weighted average of 75th percentile of time spent in queue in seconds. A negative number means no data */
  timeInQueueP75: Scalars['float64']['output'];
  /** Weighted average of 90th percentile of time spent in queue in seconds. A negative number means no data */
  timeInQueueP90: Scalars['float64']['output'];
  /** Weighted average of 95th percentile of time spent in queue in seconds. A negative number means no data */
  timeInQueueP95: Scalars['float64']['output'];
  /** Weighted average of 50th percentile of time spent on origin in seconds. A negative number means no data */
  timeOnOriginP50: Scalars['float64']['output'];
  /** Weighted average of 75th percentile of time spent on origin in seconds. A negative number means no data */
  timeOnOriginP75: Scalars['float64']['output'];
  /** Weighted average of 90th percentile of time spent on origin in seconds. A negative number means no data */
  timeOnOriginP90: Scalars['float64']['output'];
  /** Weighted average of 95th percentile of time spent on origin in seconds. A negative number means no data */
  timeOnOriginP95: Scalars['float64']['output'];
  /**
   * Weighted average of 50th percentile of the total time spent waiting in queue
   * by users who have gained access to the origin in seconds. A negative number means no data
   */
  totalTimeWaitedP50: Scalars['float64']['output'];
  /**
   * Weighted average of 75th percentile of the total time spent waiting in queue
   * by users who have gained access to the origin in seconds. A negative number means no data
   */
  totalTimeWaitedP75: Scalars['float64']['output'];
  /**
   * Weighted average of 90th percentile of the total time spent waiting in queue
   * by users who have gained access to the origin in seconds. A negative number means no data
   */
  totalTimeWaitedP90: Scalars['float64']['output'];
  /**
   * Weighted average of 95th percentile of the total time spent waiting in queue
   * by users who have gained access to the origin in seconds. A negative number means no data
   */
  totalTimeWaitedP95: Scalars['float64']['output'];
};

export type ZoneWaitingRoomAnalyticsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneWaitingRoomAnalyticsAdaptiveGroupsDimensions';
  /** The date the event was written to the database */
  date: Scalars['Date']['output'];
  /** The date and time the event was written to the database */
  datetime: Scalars['Time']['output'];
  /** The date and time the event was written to the database, truncated to a multiple of 15 minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time the event was written to the database, truncated to a multiple of 5 minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time the event was written to the database, truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time the event was written to the database, truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** ABR sample interval */
  sampleInterval: Scalars['uint32']['output'];
  /** Unique Identifier for the waiting room */
  waitingRoomId: Scalars['string']['output'];
};

export type ZoneWaitingRoomAnalyticsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneWaitingRoomAnalyticsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneWaitingRoomAnalyticsAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  sampleInterval?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_geq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_gt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  sampleInterval_leq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_lt?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_neq?: InputMaybe<Scalars['uint32']['input']>;
  sampleInterval_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  waitingRoomId?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_geq?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_gt?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_in?: InputMaybe<Array<Scalars['string']['input']>>;
  waitingRoomId_leq?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_like?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_lt?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_neq?: InputMaybe<Scalars['string']['input']>;
  waitingRoomId_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  waitingRoomId_notlike?: InputMaybe<Scalars['string']['input']>;
};

export type ZoneWaitingRoomAnalyticsAdaptiveGroupsMax = {
  __typename?: 'ZoneWaitingRoomAnalyticsAdaptiveGroupsMax';
  /** The maximum value of estimated time in minutes. A negative number means no data */
  maxEstimatedTimeMinutes: Scalars['int64']['output'];
  /** The maximum value of the actual new users per minute. A negative number means no data */
  newUsersPerMinute: Scalars['int64']['output'];
  /** The maximum value of the configured new users per minute. A negative number means no data */
  newUsersPerMinuteConfig: Scalars['int64']['output'];
  /** The maximum value of the configured session duration configuration. A negative number means no data */
  sessionDuration: Scalars['int64']['output'];
  /** The maximum value of the actual total active users. A negative number means no data */
  totalActiveUsers: Scalars['int64']['output'];
  /** The maximum value of the configured total active users. A negative number means no data */
  totalActiveUsersConfig: Scalars['int64']['output'];
  /** The maximum value of total number of queued users. A negative number means no data */
  totalQueuedUsers: Scalars['int64']['output'];
};

export type ZoneWaitingRoomAnalyticsAdaptiveGroupsMin = {
  __typename?: 'ZoneWaitingRoomAnalyticsAdaptiveGroupsMin';
  /** The minimum value of estimated time in minutes. A negative number means no data */
  maxEstimatedTimeMinutes: Scalars['int64']['output'];
  /** The minimum value of the actual new users per minute. A negative number means no data */
  newUsersPerMinute: Scalars['int64']['output'];
  /**
   * The minimum value of the configured new users per minute. A negative number
   * means either Waiting Room is in passthrough or no data
   */
  newUsersPerMinuteConfig: Scalars['int64']['output'];
  /** The minimum value of the configured session duration configuration. A negative number means no data */
  sessionDuration: Scalars['int64']['output'];
  /** The minimum value of the actual total active users. A negative number means no data */
  totalActiveUsers: Scalars['int64']['output'];
  /**
   * The minimum value of the configured total active users. A negative number
   * means either Waiting Room is in passthrough or no data
   */
  totalActiveUsersConfig: Scalars['int64']['output'];
  /** The minimum value of total number of queued users. A negative number means no data */
  totalQueuedUsers: Scalars['int64']['output'];
};

export enum ZoneWaitingRoomAnalyticsAdaptiveGroupsOrderBy {
  /** avgWeighted(timeBetweenRefreshesP50) ascending */
  AvgWeightedTimeBetweenRefreshesP50Asc = 'avgWeighted_timeBetweenRefreshesP50_ASC',
  /** avgWeighted(timeBetweenRefreshesP50) descending */
  AvgWeightedTimeBetweenRefreshesP50Desc = 'avgWeighted_timeBetweenRefreshesP50_DESC',
  /** avgWeighted(timeBetweenRefreshesP75) ascending */
  AvgWeightedTimeBetweenRefreshesP75Asc = 'avgWeighted_timeBetweenRefreshesP75_ASC',
  /** avgWeighted(timeBetweenRefreshesP75) descending */
  AvgWeightedTimeBetweenRefreshesP75Desc = 'avgWeighted_timeBetweenRefreshesP75_DESC',
  /** avgWeighted(timeBetweenRefreshesP90) ascending */
  AvgWeightedTimeBetweenRefreshesP90Asc = 'avgWeighted_timeBetweenRefreshesP90_ASC',
  /** avgWeighted(timeBetweenRefreshesP90) descending */
  AvgWeightedTimeBetweenRefreshesP90Desc = 'avgWeighted_timeBetweenRefreshesP90_DESC',
  /** avgWeighted(timeBetweenRefreshesP95) ascending */
  AvgWeightedTimeBetweenRefreshesP95Asc = 'avgWeighted_timeBetweenRefreshesP95_ASC',
  /** avgWeighted(timeBetweenRefreshesP95) descending */
  AvgWeightedTimeBetweenRefreshesP95Desc = 'avgWeighted_timeBetweenRefreshesP95_DESC',
  /** avgWeighted(timeInQueueP50) ascending */
  AvgWeightedTimeInQueueP50Asc = 'avgWeighted_timeInQueueP50_ASC',
  /** avgWeighted(timeInQueueP50) descending */
  AvgWeightedTimeInQueueP50Desc = 'avgWeighted_timeInQueueP50_DESC',
  /** avgWeighted(timeInQueueP75) ascending */
  AvgWeightedTimeInQueueP75Asc = 'avgWeighted_timeInQueueP75_ASC',
  /** avgWeighted(timeInQueueP75) descending */
  AvgWeightedTimeInQueueP75Desc = 'avgWeighted_timeInQueueP75_DESC',
  /** avgWeighted(timeInQueueP90) ascending */
  AvgWeightedTimeInQueueP90Asc = 'avgWeighted_timeInQueueP90_ASC',
  /** avgWeighted(timeInQueueP90) descending */
  AvgWeightedTimeInQueueP90Desc = 'avgWeighted_timeInQueueP90_DESC',
  /** avgWeighted(timeInQueueP95) ascending */
  AvgWeightedTimeInQueueP95Asc = 'avgWeighted_timeInQueueP95_ASC',
  /** avgWeighted(timeInQueueP95) descending */
  AvgWeightedTimeInQueueP95Desc = 'avgWeighted_timeInQueueP95_DESC',
  /** avgWeighted(timeOnOriginP50) ascending */
  AvgWeightedTimeOnOriginP50Asc = 'avgWeighted_timeOnOriginP50_ASC',
  /** avgWeighted(timeOnOriginP50) descending */
  AvgWeightedTimeOnOriginP50Desc = 'avgWeighted_timeOnOriginP50_DESC',
  /** avgWeighted(timeOnOriginP75) ascending */
  AvgWeightedTimeOnOriginP75Asc = 'avgWeighted_timeOnOriginP75_ASC',
  /** avgWeighted(timeOnOriginP75) descending */
  AvgWeightedTimeOnOriginP75Desc = 'avgWeighted_timeOnOriginP75_DESC',
  /** avgWeighted(timeOnOriginP90) ascending */
  AvgWeightedTimeOnOriginP90Asc = 'avgWeighted_timeOnOriginP90_ASC',
  /** avgWeighted(timeOnOriginP90) descending */
  AvgWeightedTimeOnOriginP90Desc = 'avgWeighted_timeOnOriginP90_DESC',
  /** avgWeighted(timeOnOriginP95) ascending */
  AvgWeightedTimeOnOriginP95Asc = 'avgWeighted_timeOnOriginP95_ASC',
  /** avgWeighted(timeOnOriginP95) descending */
  AvgWeightedTimeOnOriginP95Desc = 'avgWeighted_timeOnOriginP95_DESC',
  /** avgWeighted(totalTimeWaitedP50) ascending */
  AvgWeightedTotalTimeWaitedP50Asc = 'avgWeighted_totalTimeWaitedP50_ASC',
  /** avgWeighted(totalTimeWaitedP50) descending */
  AvgWeightedTotalTimeWaitedP50Desc = 'avgWeighted_totalTimeWaitedP50_DESC',
  /** avgWeighted(totalTimeWaitedP75) ascending */
  AvgWeightedTotalTimeWaitedP75Asc = 'avgWeighted_totalTimeWaitedP75_ASC',
  /** avgWeighted(totalTimeWaitedP75) descending */
  AvgWeightedTotalTimeWaitedP75Desc = 'avgWeighted_totalTimeWaitedP75_DESC',
  /** avgWeighted(totalTimeWaitedP90) ascending */
  AvgWeightedTotalTimeWaitedP90Asc = 'avgWeighted_totalTimeWaitedP90_ASC',
  /** avgWeighted(totalTimeWaitedP90) descending */
  AvgWeightedTotalTimeWaitedP90Desc = 'avgWeighted_totalTimeWaitedP90_DESC',
  /** avgWeighted(totalTimeWaitedP95) ascending */
  AvgWeightedTotalTimeWaitedP95Asc = 'avgWeighted_totalTimeWaitedP95_ASC',
  /** avgWeighted(totalTimeWaitedP95) descending */
  AvgWeightedTotalTimeWaitedP95Desc = 'avgWeighted_totalTimeWaitedP95_DESC',
  /** avg(abandoningUsersPerMinute) ascending */
  AvgAbandoningUsersPerMinuteAsc = 'avg_abandoningUsersPerMinute_ASC',
  /** avg(abandoningUsersPerMinute) descending */
  AvgAbandoningUsersPerMinuteDesc = 'avg_abandoningUsersPerMinute_DESC',
  /** avg(maxEstimatedTimeMinutes) ascending */
  AvgMaxEstimatedTimeMinutesAsc = 'avg_maxEstimatedTimeMinutes_ASC',
  /** avg(maxEstimatedTimeMinutes) descending */
  AvgMaxEstimatedTimeMinutesDesc = 'avg_maxEstimatedTimeMinutes_DESC',
  /** avg(newUsersPerMinuteConfig) ascending */
  AvgNewUsersPerMinuteConfigAsc = 'avg_newUsersPerMinuteConfig_ASC',
  /** avg(newUsersPerMinuteConfig) descending */
  AvgNewUsersPerMinuteConfigDesc = 'avg_newUsersPerMinuteConfig_DESC',
  /** avg(newUsersPerMinute) ascending */
  AvgNewUsersPerMinuteAsc = 'avg_newUsersPerMinute_ASC',
  /** avg(newUsersPerMinute) descending */
  AvgNewUsersPerMinuteDesc = 'avg_newUsersPerMinute_DESC',
  /** avg(sampleInterval) ascending */
  AvgSampleIntervalAsc = 'avg_sampleInterval_ASC',
  /** avg(sampleInterval) descending */
  AvgSampleIntervalDesc = 'avg_sampleInterval_DESC',
  /** avg(sessionDuration) ascending */
  AvgSessionDurationAsc = 'avg_sessionDuration_ASC',
  /** avg(sessionDuration) descending */
  AvgSessionDurationDesc = 'avg_sessionDuration_DESC',
  /** avg(totalActiveUsersConfig) ascending */
  AvgTotalActiveUsersConfigAsc = 'avg_totalActiveUsersConfig_ASC',
  /** avg(totalActiveUsersConfig) descending */
  AvgTotalActiveUsersConfigDesc = 'avg_totalActiveUsersConfig_DESC',
  /** avg(totalActiveUsers) ascending */
  AvgTotalActiveUsersAsc = 'avg_totalActiveUsers_ASC',
  /** avg(totalActiveUsers) descending */
  AvgTotalActiveUsersDesc = 'avg_totalActiveUsers_DESC',
  /** avg(totalQueuedUsers) ascending */
  AvgTotalQueuedUsersAsc = 'avg_totalQueuedUsers_ASC',
  /** avg(totalQueuedUsers) descending */
  AvgTotalQueuedUsersDesc = 'avg_totalQueuedUsers_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** max(abandoningUsersPerMinute) ascending */
  MaxAbandoningUsersPerMinuteAsc = 'max_abandoningUsersPerMinute_ASC',
  /** max(abandoningUsersPerMinute) descending */
  MaxAbandoningUsersPerMinuteDesc = 'max_abandoningUsersPerMinute_DESC',
  /** max(maxEstimatedTimeMinutes) ascending */
  MaxMaxEstimatedTimeMinutesAsc = 'max_maxEstimatedTimeMinutes_ASC',
  /** max(maxEstimatedTimeMinutes) descending */
  MaxMaxEstimatedTimeMinutesDesc = 'max_maxEstimatedTimeMinutes_DESC',
  /** max(newUsersPerMinuteConfig) ascending */
  MaxNewUsersPerMinuteConfigAsc = 'max_newUsersPerMinuteConfig_ASC',
  /** max(newUsersPerMinuteConfig) descending */
  MaxNewUsersPerMinuteConfigDesc = 'max_newUsersPerMinuteConfig_DESC',
  /** max(newUsersPerMinute) ascending */
  MaxNewUsersPerMinuteAsc = 'max_newUsersPerMinute_ASC',
  /** max(newUsersPerMinute) descending */
  MaxNewUsersPerMinuteDesc = 'max_newUsersPerMinute_DESC',
  /** max(sessionDuration) ascending */
  MaxSessionDurationAsc = 'max_sessionDuration_ASC',
  /** max(sessionDuration) descending */
  MaxSessionDurationDesc = 'max_sessionDuration_DESC',
  /** max(totalActiveUsersConfig) ascending */
  MaxTotalActiveUsersConfigAsc = 'max_totalActiveUsersConfig_ASC',
  /** max(totalActiveUsersConfig) descending */
  MaxTotalActiveUsersConfigDesc = 'max_totalActiveUsersConfig_DESC',
  /** max(totalActiveUsers) ascending */
  MaxTotalActiveUsersAsc = 'max_totalActiveUsers_ASC',
  /** max(totalActiveUsers) descending */
  MaxTotalActiveUsersDesc = 'max_totalActiveUsers_DESC',
  /** max(totalQueuedUsers) ascending */
  MaxTotalQueuedUsersAsc = 'max_totalQueuedUsers_ASC',
  /** max(totalQueuedUsers) descending */
  MaxTotalQueuedUsersDesc = 'max_totalQueuedUsers_DESC',
  /** min(maxEstimatedTimeMinutes) ascending */
  MinMaxEstimatedTimeMinutesAsc = 'min_maxEstimatedTimeMinutes_ASC',
  /** min(maxEstimatedTimeMinutes) descending */
  MinMaxEstimatedTimeMinutesDesc = 'min_maxEstimatedTimeMinutes_DESC',
  /** min(newUsersPerMinuteConfig) ascending */
  MinNewUsersPerMinuteConfigAsc = 'min_newUsersPerMinuteConfig_ASC',
  /** min(newUsersPerMinuteConfig) descending */
  MinNewUsersPerMinuteConfigDesc = 'min_newUsersPerMinuteConfig_DESC',
  /** min(newUsersPerMinute) ascending */
  MinNewUsersPerMinuteAsc = 'min_newUsersPerMinute_ASC',
  /** min(newUsersPerMinute) descending */
  MinNewUsersPerMinuteDesc = 'min_newUsersPerMinute_DESC',
  /** min(sessionDuration) ascending */
  MinSessionDurationAsc = 'min_sessionDuration_ASC',
  /** min(sessionDuration) descending */
  MinSessionDurationDesc = 'min_sessionDuration_DESC',
  /** min(totalActiveUsersConfig) ascending */
  MinTotalActiveUsersConfigAsc = 'min_totalActiveUsersConfig_ASC',
  /** min(totalActiveUsersConfig) descending */
  MinTotalActiveUsersConfigDesc = 'min_totalActiveUsersConfig_DESC',
  /** min(totalActiveUsers) ascending */
  MinTotalActiveUsersAsc = 'min_totalActiveUsers_ASC',
  /** min(totalActiveUsers) descending */
  MinTotalActiveUsersDesc = 'min_totalActiveUsers_DESC',
  /** min(totalQueuedUsers) ascending */
  MinTotalQueuedUsersAsc = 'min_totalQueuedUsers_ASC',
  /** min(totalQueuedUsers) descending */
  MinTotalQueuedUsersDesc = 'min_totalQueuedUsers_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sum(newUsersPerMinute) ascending */
  SumNewUsersPerMinuteAsc = 'sum_newUsersPerMinute_ASC',
  /** sum(newUsersPerMinute) descending */
  SumNewUsersPerMinuteDesc = 'sum_newUsersPerMinute_DESC',
  /** waitingRoomId ascending */
  WaitingRoomIdAsc = 'waitingRoomId_ASC',
  /** waitingRoomId descending */
  WaitingRoomIdDesc = 'waitingRoomId_DESC'
}

export type ZoneWaitingRoomAnalyticsAdaptiveGroupsSum = {
  __typename?: 'ZoneWaitingRoomAnalyticsAdaptiveGroupsSum';
  /** Sum of new users per minute. A negative number means no data */
  newUsersPerMinute: Scalars['int64']['output'];
};

export enum ZoneWaitingRoomAnalyticsAdaptiveOrderBy {
  /** abandoningUsersPerMinute ascending */
  AbandoningUsersPerMinuteAsc = 'abandoningUsersPerMinute_ASC',
  /** abandoningUsersPerMinute descending */
  AbandoningUsersPerMinuteDesc = 'abandoningUsersPerMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** maxEstimatedTimeMinutes ascending */
  MaxEstimatedTimeMinutesAsc = 'maxEstimatedTimeMinutes_ASC',
  /** maxEstimatedTimeMinutes descending */
  MaxEstimatedTimeMinutesDesc = 'maxEstimatedTimeMinutes_DESC',
  /** newUsersPerMinuteConfig ascending */
  NewUsersPerMinuteConfigAsc = 'newUsersPerMinuteConfig_ASC',
  /** newUsersPerMinuteConfig descending */
  NewUsersPerMinuteConfigDesc = 'newUsersPerMinuteConfig_DESC',
  /** newUsersPerMinute ascending */
  NewUsersPerMinuteAsc = 'newUsersPerMinute_ASC',
  /** newUsersPerMinute descending */
  NewUsersPerMinuteDesc = 'newUsersPerMinute_DESC',
  /** sampleInterval ascending */
  SampleIntervalAsc = 'sampleInterval_ASC',
  /** sampleInterval descending */
  SampleIntervalDesc = 'sampleInterval_DESC',
  /** sessionDuration ascending */
  SessionDurationAsc = 'sessionDuration_ASC',
  /** sessionDuration descending */
  SessionDurationDesc = 'sessionDuration_DESC',
  /** timeBetweenRefreshesP50 ascending */
  TimeBetweenRefreshesP50Asc = 'timeBetweenRefreshesP50_ASC',
  /** timeBetweenRefreshesP50 descending */
  TimeBetweenRefreshesP50Desc = 'timeBetweenRefreshesP50_DESC',
  /** timeBetweenRefreshesP75 ascending */
  TimeBetweenRefreshesP75Asc = 'timeBetweenRefreshesP75_ASC',
  /** timeBetweenRefreshesP75 descending */
  TimeBetweenRefreshesP75Desc = 'timeBetweenRefreshesP75_DESC',
  /** timeBetweenRefreshesP90 ascending */
  TimeBetweenRefreshesP90Asc = 'timeBetweenRefreshesP90_ASC',
  /** timeBetweenRefreshesP90 descending */
  TimeBetweenRefreshesP90Desc = 'timeBetweenRefreshesP90_DESC',
  /** timeBetweenRefreshesP95 ascending */
  TimeBetweenRefreshesP95Asc = 'timeBetweenRefreshesP95_ASC',
  /** timeBetweenRefreshesP95 descending */
  TimeBetweenRefreshesP95Desc = 'timeBetweenRefreshesP95_DESC',
  /** timeInQueueP50 ascending */
  TimeInQueueP50Asc = 'timeInQueueP50_ASC',
  /** timeInQueueP50 descending */
  TimeInQueueP50Desc = 'timeInQueueP50_DESC',
  /** timeInQueueP75 ascending */
  TimeInQueueP75Asc = 'timeInQueueP75_ASC',
  /** timeInQueueP75 descending */
  TimeInQueueP75Desc = 'timeInQueueP75_DESC',
  /** timeInQueueP90 ascending */
  TimeInQueueP90Asc = 'timeInQueueP90_ASC',
  /** timeInQueueP90 descending */
  TimeInQueueP90Desc = 'timeInQueueP90_DESC',
  /** timeInQueueP95 ascending */
  TimeInQueueP95Asc = 'timeInQueueP95_ASC',
  /** timeInQueueP95 descending */
  TimeInQueueP95Desc = 'timeInQueueP95_DESC',
  /** timeOnOriginP50 ascending */
  TimeOnOriginP50Asc = 'timeOnOriginP50_ASC',
  /** timeOnOriginP50 descending */
  TimeOnOriginP50Desc = 'timeOnOriginP50_DESC',
  /** timeOnOriginP75 ascending */
  TimeOnOriginP75Asc = 'timeOnOriginP75_ASC',
  /** timeOnOriginP75 descending */
  TimeOnOriginP75Desc = 'timeOnOriginP75_DESC',
  /** timeOnOriginP90 ascending */
  TimeOnOriginP90Asc = 'timeOnOriginP90_ASC',
  /** timeOnOriginP90 descending */
  TimeOnOriginP90Desc = 'timeOnOriginP90_DESC',
  /** timeOnOriginP95 ascending */
  TimeOnOriginP95Asc = 'timeOnOriginP95_ASC',
  /** timeOnOriginP95 descending */
  TimeOnOriginP95Desc = 'timeOnOriginP95_DESC',
  /** totalActiveUsersConfig ascending */
  TotalActiveUsersConfigAsc = 'totalActiveUsersConfig_ASC',
  /** totalActiveUsersConfig descending */
  TotalActiveUsersConfigDesc = 'totalActiveUsersConfig_DESC',
  /** totalActiveUsers ascending */
  TotalActiveUsersAsc = 'totalActiveUsers_ASC',
  /** totalActiveUsers descending */
  TotalActiveUsersDesc = 'totalActiveUsers_DESC',
  /** totalQueuedUsers ascending */
  TotalQueuedUsersAsc = 'totalQueuedUsers_ASC',
  /** totalQueuedUsers descending */
  TotalQueuedUsersDesc = 'totalQueuedUsers_DESC',
  /** totalTimeWaitedP50 ascending */
  TotalTimeWaitedP50Asc = 'totalTimeWaitedP50_ASC',
  /** totalTimeWaitedP50 descending */
  TotalTimeWaitedP50Desc = 'totalTimeWaitedP50_DESC',
  /** totalTimeWaitedP75 ascending */
  TotalTimeWaitedP75Asc = 'totalTimeWaitedP75_ASC',
  /** totalTimeWaitedP75 descending */
  TotalTimeWaitedP75Desc = 'totalTimeWaitedP75_DESC',
  /** totalTimeWaitedP90 ascending */
  TotalTimeWaitedP90Asc = 'totalTimeWaitedP90_ASC',
  /** totalTimeWaitedP90 descending */
  TotalTimeWaitedP90Desc = 'totalTimeWaitedP90_DESC',
  /** totalTimeWaitedP95 ascending */
  TotalTimeWaitedP95Asc = 'totalTimeWaitedP95_ASC',
  /** totalTimeWaitedP95 descending */
  TotalTimeWaitedP95Desc = 'totalTimeWaitedP95_DESC',
  /** waitingRoomId ascending */
  WaitingRoomIdAsc = 'waitingRoomId_ASC',
  /** waitingRoomId descending */
  WaitingRoomIdDesc = 'waitingRoomId_DESC',
  /** waitingRoomName ascending */
  WaitingRoomNameAsc = 'waitingRoomName_ASC',
  /** waitingRoomName descending */
  WaitingRoomNameDesc = 'waitingRoomName_DESC'
}

/** Workers invocations with adaptive sampling */
export type ZoneWorkersZoneInvocationsAdaptiveGroups = {
  __typename?: 'ZoneWorkersZoneInvocationsAdaptiveGroups';
  /** The average of values for a metric per dimension */
  avg?: Maybe<ZoneWorkersZoneInvocationsAdaptiveGroupsAvg>;
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneWorkersZoneInvocationsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<ZoneWorkersZoneInvocationsAdaptiveGroupsSum>;
};

export type ZoneWorkersZoneInvocationsAdaptiveGroupsAvg = {
  __typename?: 'ZoneWorkersZoneInvocationsAdaptiveGroupsAvg';
  /** Average CPU time used per request (in microseconds) */
  avgCpuTime: Scalars['uint64']['output'];
};

export type ZoneWorkersZoneInvocationsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneWorkersZoneInvocationsAdaptiveGroupsDimensions';
  /** Worker script Id */
  constantScriptId: Scalars['uint32']['output'];
  /** Request datetime, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** Request datetime, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Origin HTTP response code */
  httpResponseStatus: Scalars['uint16']['output'];
  /** Status of the worker invocation */
  status: Scalars['string']['output'];
};

export type ZoneWorkersZoneInvocationsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneWorkersZoneInvocationsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneWorkersZoneInvocationsAdaptiveGroupsFilter_InputObject>>;
  constantScriptId?: InputMaybe<Scalars['uint32']['input']>;
  constantScriptId_geq?: InputMaybe<Scalars['uint32']['input']>;
  constantScriptId_gt?: InputMaybe<Scalars['uint32']['input']>;
  constantScriptId_in?: InputMaybe<Array<Scalars['uint32']['input']>>;
  constantScriptId_leq?: InputMaybe<Scalars['uint32']['input']>;
  constantScriptId_lt?: InputMaybe<Scalars['uint32']['input']>;
  constantScriptId_neq?: InputMaybe<Scalars['uint32']['input']>;
  constantScriptId_notin?: InputMaybe<Array<Scalars['uint32']['input']>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  httpResponseStatus?: InputMaybe<Scalars['uint16']['input']>;
  httpResponseStatus_geq?: InputMaybe<Scalars['uint16']['input']>;
  httpResponseStatus_gt?: InputMaybe<Scalars['uint16']['input']>;
  httpResponseStatus_in?: InputMaybe<Array<Scalars['uint16']['input']>>;
  httpResponseStatus_leq?: InputMaybe<Scalars['uint16']['input']>;
  httpResponseStatus_lt?: InputMaybe<Scalars['uint16']['input']>;
  httpResponseStatus_neq?: InputMaybe<Scalars['uint16']['input']>;
  httpResponseStatus_notin?: InputMaybe<Array<Scalars['uint16']['input']>>;
  status?: InputMaybe<Scalars['string']['input']>;
  status_geq?: InputMaybe<Scalars['string']['input']>;
  status_gt?: InputMaybe<Scalars['string']['input']>;
  status_in?: InputMaybe<Array<Scalars['string']['input']>>;
  status_leq?: InputMaybe<Scalars['string']['input']>;
  status_like?: InputMaybe<Scalars['string']['input']>;
  status_lt?: InputMaybe<Scalars['string']['input']>;
  status_neq?: InputMaybe<Scalars['string']['input']>;
  status_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  status_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZoneWorkersZoneInvocationsAdaptiveGroupsOrderBy {
  /** avg(avgCpuTime) ascending */
  AvgAvgCpuTimeAsc = 'avg_avgCpuTime_ASC',
  /** avg(avgCpuTime) descending */
  AvgAvgCpuTimeDesc = 'avg_avgCpuTime_DESC',
  /** constantScriptId ascending */
  ConstantScriptIdAsc = 'constantScriptId_ASC',
  /** constantScriptId descending */
  ConstantScriptIdDesc = 'constantScriptId_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** httpResponseStatus ascending */
  HttpResponseStatusAsc = 'httpResponseStatus_ASC',
  /** httpResponseStatus descending */
  HttpResponseStatusDesc = 'httpResponseStatus_DESC',
  /** scriptName ascending */
  ScriptNameAsc = 'scriptName_ASC',
  /** scriptName descending */
  ScriptNameDesc = 'scriptName_DESC',
  /** stableId ascending */
  StableIdAsc = 'stableId_ASC',
  /** stableId descending */
  StableIdDesc = 'stableId_DESC',
  /** status ascending */
  StatusAsc = 'status_ASC',
  /** status descending */
  StatusDesc = 'status_DESC',
  /** sum(requests) ascending */
  SumRequestsAsc = 'sum_requests_ASC',
  /** sum(requests) descending */
  SumRequestsDesc = 'sum_requests_DESC',
  /** sum(responseBodySize) ascending */
  SumResponseBodySizeAsc = 'sum_responseBodySize_ASC',
  /** sum(responseBodySize) descending */
  SumResponseBodySizeDesc = 'sum_responseBodySize_DESC',
  /** sum(subrequests) ascending */
  SumSubrequestsAsc = 'sum_subrequests_ASC',
  /** sum(subrequests) descending */
  SumSubrequestsDesc = 'sum_subrequests_DESC',
  /** sum(totalCpuTime) ascending */
  SumTotalCpuTimeAsc = 'sum_totalCpuTime_ASC',
  /** sum(totalCpuTime) descending */
  SumTotalCpuTimeDesc = 'sum_totalCpuTime_DESC'
}

export type ZoneWorkersZoneInvocationsAdaptiveGroupsSum = {
  __typename?: 'ZoneWorkersZoneInvocationsAdaptiveGroupsSum';
  /** Sum of Requests */
  requests: Scalars['uint64']['output'];
  /** Bandwidth (in bytes) returned to eyeball */
  responseBodySize: Scalars['uint64']['output'];
  /** Number of sub-requests issued by the edge worker */
  subrequests: Scalars['uint64']['output'];
  /** Total CPU time used (in microseconds) */
  totalCpuTime: Scalars['uint64']['output'];
};

/** Workers subrequests with adaptive sampling */
export type ZoneWorkersZoneSubrequestsAdaptiveGroups = {
  __typename?: 'ZoneWorkersZoneSubrequestsAdaptiveGroups';
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneWorkersZoneSubrequestsAdaptiveGroupsDimensions>;
  /** The sum of values for a metric per dimension */
  sum?: Maybe<ZoneWorkersZoneSubrequestsAdaptiveGroupsSum>;
};

export type ZoneWorkersZoneSubrequestsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneWorkersZoneSubrequestsAdaptiveGroupsDimensions';
  /** Cache status */
  cacheStatus: Scalars['uint64']['output'];
  /** Request datetime, truncated to start of a day */
  date: Scalars['Date']['output'];
  /** Request datetime */
  datetime: Scalars['Time']['output'];
  /** Request datetime, truncated to start of an hour */
  datetimeHour: Scalars['Time']['output'];
  /** Request datetime, truncated to start of an minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Origin HTTP response code */
  httpResponseStatus: Scalars['uint64']['output'];
};

export type ZoneWorkersZoneSubrequestsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneWorkersZoneSubrequestsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneWorkersZoneSubrequestsAdaptiveGroupsFilter_InputObject>>;
  cacheStatus?: InputMaybe<Scalars['uint64']['input']>;
  cacheStatus_geq?: InputMaybe<Scalars['uint64']['input']>;
  cacheStatus_gt?: InputMaybe<Scalars['uint64']['input']>;
  cacheStatus_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  cacheStatus_leq?: InputMaybe<Scalars['uint64']['input']>;
  cacheStatus_lt?: InputMaybe<Scalars['uint64']['input']>;
  cacheStatus_neq?: InputMaybe<Scalars['uint64']['input']>;
  cacheStatus_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetime?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_geq?: InputMaybe<Scalars['Time']['input']>;
  datetime_gt?: InputMaybe<Scalars['Time']['input']>;
  datetime_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetime_leq?: InputMaybe<Scalars['Time']['input']>;
  datetime_lt?: InputMaybe<Scalars['Time']['input']>;
  datetime_neq?: InputMaybe<Scalars['Time']['input']>;
  datetime_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  httpResponseStatus?: InputMaybe<Scalars['uint64']['input']>;
  httpResponseStatus_geq?: InputMaybe<Scalars['uint64']['input']>;
  httpResponseStatus_gt?: InputMaybe<Scalars['uint64']['input']>;
  httpResponseStatus_in?: InputMaybe<Array<Scalars['uint64']['input']>>;
  httpResponseStatus_leq?: InputMaybe<Scalars['uint64']['input']>;
  httpResponseStatus_lt?: InputMaybe<Scalars['uint64']['input']>;
  httpResponseStatus_neq?: InputMaybe<Scalars['uint64']['input']>;
  httpResponseStatus_notin?: InputMaybe<Array<Scalars['uint64']['input']>>;
};

export enum ZoneWorkersZoneSubrequestsAdaptiveGroupsOrderBy {
  /** cacheStatus ascending */
  CacheStatusAsc = 'cacheStatus_ASC',
  /** cacheStatus descending */
  CacheStatusDesc = 'cacheStatus_DESC',
  /** constantScriptId ascending */
  ConstantScriptIdAsc = 'constantScriptId_ASC',
  /** constantScriptId descending */
  ConstantScriptIdDesc = 'constantScriptId_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** datetime ascending */
  DatetimeAsc = 'datetime_ASC',
  /** datetime descending */
  DatetimeDesc = 'datetime_DESC',
  /** httpResponseStatus ascending */
  HttpResponseStatusAsc = 'httpResponseStatus_ASC',
  /** httpResponseStatus descending */
  HttpResponseStatusDesc = 'httpResponseStatus_DESC',
  /** scriptName ascending */
  ScriptNameAsc = 'scriptName_ASC',
  /** scriptName descending */
  ScriptNameDesc = 'scriptName_DESC',
  /** stableId ascending */
  StableIdAsc = 'stableId_ASC',
  /** stableId descending */
  StableIdDesc = 'stableId_DESC',
  /** sum(responseBodySize) ascending */
  SumResponseBodySizeAsc = 'sum_responseBodySize_ASC',
  /** sum(responseBodySize) descending */
  SumResponseBodySizeDesc = 'sum_responseBodySize_DESC',
  /** sum(subrequests) ascending */
  SumSubrequestsAsc = 'sum_subrequests_ASC',
  /** sum(subrequests) descending */
  SumSubrequestsDesc = 'sum_subrequests_DESC'
}

export type ZoneWorkersZoneSubrequestsAdaptiveGroupsSum = {
  __typename?: 'ZoneWorkersZoneSubrequestsAdaptiveGroupsSum';
  /** Bandwidth (in bytes) received via subrequests */
  responseBodySize: Scalars['uint64']['output'];
  /** Number of subrequests issued by a worker */
  subrequests: Scalars['uint64']['output'];
};

/** Zaraz Actions Analytics */
export type ZoneZarazActionsAdaptiveGroups = {
  __typename?: 'ZoneZarazActionsAdaptiveGroups';
  /** Number of processed Zaraz Actions */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneZarazActionsAdaptiveGroupsDimensions>;
};

export type ZoneZarazActionsAdaptiveGroupsDimensions = {
  __typename?: 'ZoneZarazActionsAdaptiveGroupsDimensions';
  /** Action Name */
  actionName: Scalars['string']['output'];
  /** The date the Action was triggered */
  date: Scalars['Date']['output'];
  /** The date and time truncated to fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time truncated to five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Tool Name */
  toolName: Scalars['string']['output'];
};

export type ZoneZarazActionsAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneZarazActionsAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneZarazActionsAdaptiveGroupsFilter_InputObject>>;
  actionName?: InputMaybe<Scalars['string']['input']>;
  actionName_geq?: InputMaybe<Scalars['string']['input']>;
  actionName_gt?: InputMaybe<Scalars['string']['input']>;
  actionName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  actionName_leq?: InputMaybe<Scalars['string']['input']>;
  actionName_like?: InputMaybe<Scalars['string']['input']>;
  actionName_lt?: InputMaybe<Scalars['string']['input']>;
  actionName_neq?: InputMaybe<Scalars['string']['input']>;
  actionName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  actionName_notlike?: InputMaybe<Scalars['string']['input']>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  toolName?: InputMaybe<Scalars['string']['input']>;
  toolName_geq?: InputMaybe<Scalars['string']['input']>;
  toolName_gt?: InputMaybe<Scalars['string']['input']>;
  toolName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  toolName_leq?: InputMaybe<Scalars['string']['input']>;
  toolName_like?: InputMaybe<Scalars['string']['input']>;
  toolName_lt?: InputMaybe<Scalars['string']['input']>;
  toolName_neq?: InputMaybe<Scalars['string']['input']>;
  toolName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  toolName_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZoneZarazActionsAdaptiveGroupsOrderBy {
  /** actionName ascending */
  ActionNameAsc = 'actionName_ASC',
  /** actionName descending */
  ActionNameDesc = 'actionName_DESC',
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** toolName ascending */
  ToolNameAsc = 'toolName_ASC',
  /** toolName descending */
  ToolNameDesc = 'toolName_DESC'
}

/** Zaraz Track Analytics - counts zaraz.track calls */
export type ZoneZarazTrackAdaptiveGroups = {
  __typename?: 'ZoneZarazTrackAdaptiveGroups';
  /** Number of processed Zaraz Track requests */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneZarazTrackAdaptiveGroupsDimensions>;
};

export type ZoneZarazTrackAdaptiveGroupsDimensions = {
  __typename?: 'ZoneZarazTrackAdaptiveGroupsDimensions';
  /** Date when track was called */
  date: Scalars['Date']['output'];
  /** The date and time truncated to fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time truncated to five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Track Name */
  trackName: Scalars['string']['output'];
  /** The URL from where Track was called */
  urlPath: Scalars['string']['output'];
};

export type ZoneZarazTrackAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneZarazTrackAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneZarazTrackAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  trackName?: InputMaybe<Scalars['string']['input']>;
  trackName_geq?: InputMaybe<Scalars['string']['input']>;
  trackName_gt?: InputMaybe<Scalars['string']['input']>;
  trackName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  trackName_leq?: InputMaybe<Scalars['string']['input']>;
  trackName_like?: InputMaybe<Scalars['string']['input']>;
  trackName_lt?: InputMaybe<Scalars['string']['input']>;
  trackName_neq?: InputMaybe<Scalars['string']['input']>;
  trackName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  trackName_notlike?: InputMaybe<Scalars['string']['input']>;
  urlPath?: InputMaybe<Scalars['string']['input']>;
  urlPath_geq?: InputMaybe<Scalars['string']['input']>;
  urlPath_gt?: InputMaybe<Scalars['string']['input']>;
  urlPath_in?: InputMaybe<Array<Scalars['string']['input']>>;
  urlPath_leq?: InputMaybe<Scalars['string']['input']>;
  urlPath_like?: InputMaybe<Scalars['string']['input']>;
  urlPath_lt?: InputMaybe<Scalars['string']['input']>;
  urlPath_neq?: InputMaybe<Scalars['string']['input']>;
  urlPath_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  urlPath_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZoneZarazTrackAdaptiveGroupsOrderBy {
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** trackName ascending */
  TrackNameAsc = 'trackName_ASC',
  /** trackName descending */
  TrackNameDesc = 'trackName_DESC',
  /** urlPath ascending */
  UrlPathAsc = 'urlPath_ASC',
  /** urlPath descending */
  UrlPathDesc = 'urlPath_DESC'
}

/** Zaraz Triggers Analytics (a trigger is a set of rules that can trigger a zaraz action) */
export type ZoneZarazTriggersAdaptiveGroups = {
  __typename?: 'ZoneZarazTriggersAdaptiveGroups';
  /** Number of processed Zaraz Triggers */
  count: Scalars['uint64']['output'];
  /** List of dimensions to group by */
  dimensions?: Maybe<ZoneZarazTriggersAdaptiveGroupsDimensions>;
};

export type ZoneZarazTriggersAdaptiveGroupsDimensions = {
  __typename?: 'ZoneZarazTriggersAdaptiveGroupsDimensions';
  /** The date when trigger was triggerd */
  date: Scalars['Date']['output'];
  /** The date and time truncated to fifteen minutes */
  datetimeFifteenMinutes: Scalars['Time']['output'];
  /** The date and time truncated to five minutes */
  datetimeFiveMinutes: Scalars['Time']['output'];
  /** The date and time truncated to the hour */
  datetimeHour: Scalars['Time']['output'];
  /** The date and time truncated to the minute */
  datetimeMinute: Scalars['Time']['output'];
  /** Trigger Name */
  triggerName: Scalars['string']['output'];
};

export type ZoneZarazTriggersAdaptiveGroupsFilter_InputObject = {
  AND?: InputMaybe<Array<ZoneZarazTriggersAdaptiveGroupsFilter_InputObject>>;
  OR?: InputMaybe<Array<ZoneZarazTriggersAdaptiveGroupsFilter_InputObject>>;
  date?: InputMaybe<Scalars['Date']['input']>;
  date_geq?: InputMaybe<Scalars['Date']['input']>;
  date_gt?: InputMaybe<Scalars['Date']['input']>;
  date_in?: InputMaybe<Array<Scalars['Date']['input']>>;
  date_leq?: InputMaybe<Scalars['Date']['input']>;
  date_lt?: InputMaybe<Scalars['Date']['input']>;
  date_neq?: InputMaybe<Scalars['Date']['input']>;
  date_notin?: InputMaybe<Array<Scalars['Date']['input']>>;
  datetimeFifteenMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFifteenMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFifteenMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeFiveMinutes_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeFiveMinutes_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeHour_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeHour_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_geq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_gt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_in?: InputMaybe<Array<Scalars['Time']['input']>>;
  datetimeMinute_leq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_lt?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_neq?: InputMaybe<Scalars['Time']['input']>;
  datetimeMinute_notin?: InputMaybe<Array<Scalars['Time']['input']>>;
  triggerName?: InputMaybe<Scalars['string']['input']>;
  triggerName_geq?: InputMaybe<Scalars['string']['input']>;
  triggerName_gt?: InputMaybe<Scalars['string']['input']>;
  triggerName_in?: InputMaybe<Array<Scalars['string']['input']>>;
  triggerName_leq?: InputMaybe<Scalars['string']['input']>;
  triggerName_like?: InputMaybe<Scalars['string']['input']>;
  triggerName_lt?: InputMaybe<Scalars['string']['input']>;
  triggerName_neq?: InputMaybe<Scalars['string']['input']>;
  triggerName_notin?: InputMaybe<Array<Scalars['string']['input']>>;
  triggerName_notlike?: InputMaybe<Scalars['string']['input']>;
};

export enum ZoneZarazTriggersAdaptiveGroupsOrderBy {
  /** count() ascending */
  CountAsc = 'count_ASC',
  /** count() descending */
  CountDesc = 'count_DESC',
  /** date ascending */
  DateAsc = 'date_ASC',
  /** date descending */
  DateDesc = 'date_DESC',
  /** datetimeFifteenMinutes ascending */
  DatetimeFifteenMinutesAsc = 'datetimeFifteenMinutes_ASC',
  /** datetimeFifteenMinutes descending */
  DatetimeFifteenMinutesDesc = 'datetimeFifteenMinutes_DESC',
  /** datetimeFiveMinutes ascending */
  DatetimeFiveMinutesAsc = 'datetimeFiveMinutes_ASC',
  /** datetimeFiveMinutes descending */
  DatetimeFiveMinutesDesc = 'datetimeFiveMinutes_DESC',
  /** datetimeHour ascending */
  DatetimeHourAsc = 'datetimeHour_ASC',
  /** datetimeHour descending */
  DatetimeHourDesc = 'datetimeHour_DESC',
  /** datetimeMinute ascending */
  DatetimeMinuteAsc = 'datetimeMinute_ASC',
  /** datetimeMinute descending */
  DatetimeMinuteDesc = 'datetimeMinute_DESC',
  /** triggerName ascending */
  TriggerNameAsc = 'triggerName_ASC',
  /** triggerName descending */
  TriggerNameDesc = 'triggerName_DESC'
}

export type Account = {
  __typename?: 'account';
  /** Beta. Magic WAN Connector Metrics */
  MagicWANConnectorMetricsAdaptiveGroups: Array<AccountMagicWanConnectorMetricsAdaptiveGroups>;
  /** Access login requests */
  accessLoginRequestsAdaptiveGroups: Array<AccountAccessLoginRequestsAdaptiveGroups>;
  accountTag: Scalars['string']['output'];
  /** Network analytics data for Advanced DNS Protection */
  advancedDnsProtectionNetworkAnalyticsAdaptiveGroups: Array<AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroups>;
  /**
   * Network analytics data for Advanced TCP Protection
   * @deprecated This node is an alias for <code>advancedTcpProtectionNetworkAnalyticsAdaptiveGroups</code>; prefer using the new name instead
   */
  advancedTcpProtectionNetworkAnalyticsAdaptiveGroups: Array<AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroups>;
  /** AI Gateway Cache */
  aiGatewayCacheAdaptiveGroups: Array<AccountAiGatewayCacheAdaptiveGroups>;
  /** AI Gateway Errors */
  aiGatewayErrorsAdaptiveGroups: Array<AccountAiGatewayErrorsAdaptiveGroups>;
  /** AI Gateway Requests */
  aiGatewayRequestsAdaptiveGroups: Array<AccountAiGatewayRequestsAdaptiveGroups>;
  /** AI Inference logs with adaptive sampling */
  aiInferenceAdaptive: Array<AccountAiInferenceAdaptive>;
  /** Aggregated AI Inference logs with adaptive sampling */
  aiInferenceAdaptiveGroups: Array<AccountAiInferenceAdaptiveGroups>;
  /** Network analytics data for Cloudflare CDN traffic */
  cdnNetworkAnalyticsAdaptiveGroups: Array<AccountCdnNetworkAnalyticsAdaptiveGroups>;
  /** Beta. Aggregated D1 analytics with adaptive sampling */
  d1AnalyticsAdaptiveGroups: Array<AccountD1AnalyticsAdaptiveGroups>;
  /** Attack analytics metadata for attacks detected by dosd */
  dosdAttackAnalyticsGroups: Array<AccountDosdAttackAnalyticsGroups>;
  /** Network analytics data for dosd */
  dosdNetworkAnalyticsAdaptiveGroups: Array<AccountDosdNetworkAnalyticsAdaptiveGroups>;
  /** Durable Objects invocations with adaptive sampling */
  durableObjectsInvocationsAdaptiveGroups: Array<AccountDurableObjectsInvocationsAdaptiveGroups>;
  /** Durable Objects periodic metrics */
  durableObjectsPeriodicGroups: Array<AccountDurableObjectsPeriodicGroups>;
  /** Durable Objects storage metrics */
  durableObjectsStorageGroups: Array<AccountDurableObjectsStorageGroups>;
  /** Durable Objects subrequests with adaptive sampling */
  durableObjectsSubrequestsAdaptiveGroups: Array<AccountDurableObjectsSubrequestsAdaptiveGroups>;
  /** FBM analytics metadata for attacks detected by dosd */
  fbmAttackAnalyticsGroups: Array<AccountFbmAttackAnalyticsGroups>;
  /** Raw Firewall events with adaptive sampling */
  firewallEventsAdaptive: Array<AccountFirewallEventsAdaptive>;
  /** Aggregated Firewall events with adaptive sampling */
  firewallEventsAdaptiveGroups: Array<AccountFirewallEventsAdaptiveGroups>;
  /**
   * Network analytics data for flowtrackd
   * @deprecated This node is an alias for <code>advancedTcpProtectionNetworkAnalyticsAdaptiveGroups</code>; prefer using the new name instead
   */
  flowtrackdNetworkAnalyticsAdaptiveGroups: Array<AccountFlowtrackdNetworkAnalyticsAdaptiveGroups>;
  /** Aggregated metrics about downstream (client to edge) L4 Gateway Sessions. Metrics are reported on TCP or UDP session close */
  gatewayL4DownstreamSessionsAdaptiveGroups: Array<AccountGatewayL4DownstreamSessionsAdaptiveGroups>;
  /** BETA - Aggregate counts of Gateway L4 sessions with adaptive sampling */
  gatewayL4SessionsAdaptiveGroups: Array<AccountGatewayL4SessionsAdaptiveGroups>;
  /**
   * Aggregated metrics about upstream (edge to client) L4 Gateway Sessions.
   * Metrics are reported on TCP, QUIC or UDP session close
   */
  gatewayL4UpstreamSessionsAdaptiveGroups: Array<AccountGatewayL4UpstreamSessionsAdaptiveGroups>;
  /** BETA - Aggregate counts of Gateway L7 requests with adaptive sampling */
  gatewayL7RequestsAdaptiveGroups: Array<AccountGatewayL7RequestsAdaptiveGroups>;
  /** BETA - Aggregate counts of Gateway Resolver queries by category with adaptive sampling */
  gatewayResolverByCategoryAdaptiveGroups: Array<AccountGatewayResolverByCategoryAdaptiveGroups>;
  /** Total time spent on executing firewall rules at the edge */
  gatewayResolverByRuleExecutionPerformanceAdaptiveGroups: Array<AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroups>;
  /** BETA - Aggregate counts of Gateway Resolver queries with adaptive sampling */
  gatewayResolverQueriesAdaptiveGroups: Array<AccountGatewayResolverQueriesAdaptiveGroups>;
  /** Daily rollups of request data */
  httpRequests1dGroups: Array<AccountHttpRequests1dGroups>;
  /** Hourly rollups of request data */
  httpRequests1hGroups: Array<AccountHttpRequests1hGroups>;
  /** Minutely rollups of request data */
  httpRequests1mGroups: Array<AccountHttpRequests1mGroups>;
  /** Raw HTTP requests with adaptive sampling */
  httpRequestsAdaptive: Array<AccountHttpRequestsAdaptive>;
  /** Aggregated HTTP requests data with adaptive sampling */
  httpRequestsAdaptiveGroups: Array<AccountHttpRequestsAdaptiveGroups>;
  /** A high-level summary of HTTP requests made by end users. */
  httpRequestsOverviewAdaptiveGroups: Array<AccountHttpRequestsOverviewAdaptiveGroups>;
  /** Beta. Hyperdrive query events with adaptive sampling. */
  hyperdriveQueriesAdaptiveGroups: Array<AccountHyperdriveQueriesAdaptiveGroups>;
  /** A high-level summary of Cloudflare Images served to end users. */
  imagesRequestsAdaptiveGroups: Array<AccountImagesRequestsAdaptiveGroups>;
  /** Image unique transfromations per day */
  imagesUniqueTransformations: Array<AccountImagesUniqueTransformations>;
  /** Beta. Logpush job health metrics */
  logpushHealthAdaptiveGroups: Array<AccountLogpushHealthAdaptiveGroups>;
  /** Network analytics data for Magic Firewall */
  magicFirewallNetworkAnalyticsAdaptiveGroups: Array<AccountMagicFirewallNetworkAnalyticsAdaptiveGroups>;
  /** Data to visualize traffic allowed and blocked by Magic Firewall rules */
  magicFirewallSamplesAdaptiveGroups: Array<AccountMagicFirewallSamplesAdaptiveGroups>;
  /** Network analytics data for Magic IDS */
  magicIDPSNetworkAnalyticsAdaptiveGroups: Array<AccountMagicIdpsNetworkAnalyticsAdaptiveGroups>;
  /** Network analytics data for Magic Transit traffic */
  magicTransitNetworkAnalyticsAdaptiveGroups: Array<AccountMagicTransitNetworkAnalyticsAdaptiveGroups>;
  /** Beta. Magic Transit Health check results for customer GRE Tunnels with adaptive sampling (ABR). */
  magicTransitTunnelHealthChecksAdaptiveGroups: Array<AccountMagicTransitTunnelHealthChecksAdaptiveGroups>;
  /** Bandwidth usage metric of a Magic Transit tunnel. */
  magicTransitTunnelTrafficAdaptiveGroups: Array<AccountMagicTransitTunnelTrafficAdaptiveGroups>;
  /** Flow data collected through Magic Network Monitoring */
  mnmFlowDataAdaptiveGroups: Array<AccountMnmFlowDataAdaptiveGroups>;
  /** Data to visualize network error logs */
  nelReportsAdaptiveGroups: Array<AccountNelReportsAdaptiveGroups>;
  /** Pages Functions invocations with adaptive sampling */
  pagesFunctionsInvocationsAdaptiveGroups: Array<AccountPagesFunctionsInvocationsAdaptiveGroups>;
  /**
   * Beta. Queue backlog data with adaptive sampling. Queues that are not being
   * written to, or read from, will not return data, even if they have a backlog.
   */
  queueBacklogAdaptiveGroups: Array<AccountQueueBacklogAdaptiveGroups>;
  /** Beta. Queue consumer metrics with adaptive sampling. Inactive queues will not return data. */
  queueConsumerMetricsAdaptiveGroups: Array<AccountQueueConsumerMetricsAdaptiveGroups>;
  /** Beta. Queue message operation data with adaptive sampling */
  queueMessageOperationsAdaptiveGroups: Array<AccountQueueMessageOperationsAdaptiveGroups>;
  /** Beta. R2 operations with adaptive sampling */
  r2OperationsAdaptiveGroups: Array<AccountR2OperationsAdaptiveGroups>;
  /** Beta. R2 storage with adaptive sampling */
  r2StorageAdaptiveGroups: Array<AccountR2StorageAdaptiveGroups>;
  /** Beta. Aggregated RUM pageload event metrics with adaptive sampling */
  rumPageloadEventsAdaptiveGroups: Array<AccountRumPageloadEventsAdaptiveGroups>;
  /** Beta. Aggregated RUM performance event metrics with adaptive sampling */
  rumPerformanceEventsAdaptiveGroups: Array<AccountRumPerformanceEventsAdaptiveGroups>;
  /** Beta. RUM Web Vitals event metrics with adaptive sampling */
  rumWebVitalsEventsAdaptive: Array<AccountRumWebVitalsEventsAdaptive>;
  /** Beta. Aggregated RUM Web Vitals event metrics with adaptive sampling */
  rumWebVitalsEventsAdaptiveGroups: Array<AccountRumWebVitalsEventsAdaptiveGroups>;
  settings?: Maybe<AccountSettings>;
  /** Sinkhole Request Logs */
  sinkholeRequestLogsAdaptive: Array<AccountSinkholeRequestLogsAdaptive>;
  /** Sinkhole Request Logs */
  sinkholeRequestLogsAdaptiveGroups: Array<AccountSinkholeRequestLogsAdaptiveGroups>;
  /** Network analytics data for Spectrum traffic */
  spectrumNetworkAnalyticsAdaptiveGroups: Array<AccountSpectrumNetworkAnalyticsAdaptiveGroups>;
  /** Storage Tracing Information */
  storageTraces: Array<AccountStorageTraces>;
  /** A high-level summary of Cloudflare Stream minutes viewed. */
  streamMinutesViewedAdaptiveGroups: Array<AccountStreamMinutesViewedAdaptiveGroups>;
  /** Beta. Cloudflare Turnstile aggregated events with adaptive sampling */
  turnstileAdaptiveGroups: Array<AccountTurnstileAdaptiveGroups>;
  /** Beta. Aggregated video streaming buffer event metrics with adaptive sampling */
  videoBufferEventsAdaptiveGroups: Array<AccountVideoBufferEventsAdaptiveGroups>;
  /** Beta. Aggregated video streaming playback event metrics with adaptive sampling */
  videoPlaybackEventsAdaptiveGroups: Array<AccountVideoPlaybackEventsAdaptiveGroups>;
  /** Beta. Aggregated video streaming quality change event metrics with adaptive sampling */
  videoQualityEventsAdaptiveGroups: Array<AccountVideoQualityEventsAdaptiveGroups>;
  /** Beta. Warp device health events with adaptive sampling */
  warpDeviceAdaptiveGroups: Array<AccountWarpDeviceAdaptiveGroups>;
  /** Worker placement metrics */
  workerPlacementAdaptiveGroups: Array<AccountWorkerPlacementAdaptiveGroups>;
  /** Beta. Custom Events with adaptive sampling */
  workersAnalyticsEngineAdaptiveGroups: Array<AccountWorkersAnalyticsEngineAdaptiveGroups>;
  /** Beta. Workers invocations with adaptive sampling */
  workersInvocationsAdaptive: Array<AccountWorkersInvocationsAdaptive>;
  /** Workers scheduled invocations */
  workersInvocationsScheduled: Array<AccountWorkersInvocationsScheduled>;
  /** Beta. Workers account overview invocation data with adaptive sampling */
  workersOverviewDataAdaptiveGroups: Array<AccountWorkersOverviewDataAdaptiveGroups>;
  /** Beta. Workers account overview invocation count with adaptive sampling */
  workersOverviewRequestsAdaptiveGroups: Array<AccountWorkersOverviewRequestsAdaptiveGroups>;
  /** Beta. Workers subrequests with adaptive sampling */
  workersSubrequestsAdaptiveGroups: Array<AccountWorkersSubrequestsAdaptiveGroups>;
  /** Zaraz Triggers Analytics (a trigger is a set of rules that can trigger a zaraz action) */
  zarazTriggersAdaptiveGroups: Array<AccountZarazTriggersAdaptiveGroups>;
  /** Beta - Unique origins, applications, and users discovered for Zero Trust private networks */
  zeroTrustPrivateNetworkDiscoveryGroups: Array<AccountZeroTrustPrivateNetworkDiscoveryGroups>;
  zones: Array<Zone>;
};


export type AccountMagicWanConnectorMetricsAdaptiveGroupsArgs = {
  filter: AccountMagicWanConnectorMetricsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountMagicWanConnectorMetricsAdaptiveGroupsOrderBy>>;
};


export type AccountAccessLoginRequestsAdaptiveGroupsArgs = {
  filter: AccountAccessLoginRequestsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountAccessLoginRequestsAdaptiveGroupsOrderBy>>;
};


export type AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsArgs = {
  filter: AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountAdvancedDnsProtectionNetworkAnalyticsAdaptiveGroupsOrderBy>>;
};


export type AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsArgs = {
  filter: AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountAdvancedTcpProtectionNetworkAnalyticsAdaptiveGroupsOrderBy>>;
};


export type AccountAiGatewayCacheAdaptiveGroupsArgs = {
  filter: AccountAiGatewayCacheAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountAiGatewayCacheAdaptiveGroupsOrderBy>>;
};


export type AccountAiGatewayErrorsAdaptiveGroupsArgs = {
  filter: AccountAiGatewayErrorsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountAiGatewayErrorsAdaptiveGroupsOrderBy>>;
};


export type AccountAiGatewayRequestsAdaptiveGroupsArgs = {
  filter: AccountAiGatewayRequestsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountAiGatewayRequestsAdaptiveGroupsOrderBy>>;
};


export type AccountAiInferenceAdaptiveArgs = {
  filter: AccountAiInferenceAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountAiInferenceAdaptiveOrderBy>>;
};


export type AccountAiInferenceAdaptiveGroupsArgs = {
  filter: AccountAiInferenceAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountAiInferenceAdaptiveGroupsOrderBy>>;
};


export type AccountCdnNetworkAnalyticsAdaptiveGroupsArgs = {
  filter: AccountCdnNetworkAnalyticsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountCdnNetworkAnalyticsAdaptiveGroupsOrderBy>>;
};


export type AccountD1AnalyticsAdaptiveGroupsArgs = {
  filter: AccountD1AnalyticsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountD1AnalyticsAdaptiveGroupsOrderBy>>;
};


export type AccountDosdAttackAnalyticsGroupsArgs = {
  filter: AccountDosdAttackAnalyticsGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountDosdAttackAnalyticsGroupsOrderBy>>;
};


export type AccountDosdNetworkAnalyticsAdaptiveGroupsArgs = {
  filter: AccountDosdNetworkAnalyticsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountDosdNetworkAnalyticsAdaptiveGroupsOrderBy>>;
};


export type AccountDurableObjectsInvocationsAdaptiveGroupsArgs = {
  filter: AccountDurableObjectsInvocationsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountDurableObjectsInvocationsAdaptiveGroupsOrderBy>>;
};


export type AccountDurableObjectsPeriodicGroupsArgs = {
  filter: AccountDurableObjectsPeriodicGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountDurableObjectsPeriodicGroupsOrderBy>>;
};


export type AccountDurableObjectsStorageGroupsArgs = {
  filter: AccountDurableObjectsStorageGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountDurableObjectsStorageGroupsOrderBy>>;
};


export type AccountDurableObjectsSubrequestsAdaptiveGroupsArgs = {
  filter: AccountDurableObjectsSubrequestsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountDurableObjectsSubrequestsAdaptiveGroupsOrderBy>>;
};


export type AccountFbmAttackAnalyticsGroupsArgs = {
  filter: AccountFbmAttackAnalyticsGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountFbmAttackAnalyticsGroupsOrderBy>>;
};


export type AccountFirewallEventsAdaptiveArgs = {
  filter: AccountFirewallEventsAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountFirewallEventsAdaptiveOrderBy>>;
};


export type AccountFirewallEventsAdaptiveGroupsArgs = {
  filter: AccountFirewallEventsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountFirewallEventsAdaptiveGroupsOrderBy>>;
};


export type AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsArgs = {
  filter: AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsOrderBy>>;
};


export type AccountGatewayL4DownstreamSessionsAdaptiveGroupsArgs = {
  filter: AccountGatewayL4DownstreamSessionsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountGatewayL4DownstreamSessionsAdaptiveGroupsOrderBy>>;
};


export type AccountGatewayL4SessionsAdaptiveGroupsArgs = {
  filter: AccountGatewayL4SessionsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountGatewayL4SessionsAdaptiveGroupsOrderBy>>;
};


export type AccountGatewayL4UpstreamSessionsAdaptiveGroupsArgs = {
  filter: AccountGatewayL4UpstreamSessionsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountGatewayL4UpstreamSessionsAdaptiveGroupsOrderBy>>;
};


export type AccountGatewayL7RequestsAdaptiveGroupsArgs = {
  filter: AccountGatewayL7RequestsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountGatewayL7RequestsAdaptiveGroupsOrderBy>>;
};


export type AccountGatewayResolverByCategoryAdaptiveGroupsArgs = {
  filter: AccountGatewayResolverByCategoryAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountGatewayResolverByCategoryAdaptiveGroupsOrderBy>>;
};


export type AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsArgs = {
  filter: AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountGatewayResolverByRuleExecutionPerformanceAdaptiveGroupsOrderBy>>;
};


export type AccountGatewayResolverQueriesAdaptiveGroupsArgs = {
  filter: AccountGatewayResolverQueriesAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountGatewayResolverQueriesAdaptiveGroupsOrderBy>>;
};


export type AccountHttpRequests1dGroupsArgs = {
  filter: AccountHttpRequests1dGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountHttpRequests1dGroupsOrderBy>>;
};


export type AccountHttpRequests1hGroupsArgs = {
  filter: AccountHttpRequests1hGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountHttpRequests1hGroupsOrderBy>>;
};


export type AccountHttpRequests1mGroupsArgs = {
  filter: AccountHttpRequests1mGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountHttpRequests1mGroupsOrderBy>>;
};


export type AccountHttpRequestsAdaptiveArgs = {
  filter: AccountHttpRequestsAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountHttpRequestsAdaptiveOrderBy>>;
};


export type AccountHttpRequestsAdaptiveGroupsArgs = {
  filter: AccountHttpRequestsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountHttpRequestsAdaptiveGroupsOrderBy>>;
};


export type AccountHttpRequestsOverviewAdaptiveGroupsArgs = {
  filter: AccountHttpRequestsOverviewAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountHttpRequestsOverviewAdaptiveGroupsOrderBy>>;
};


export type AccountHyperdriveQueriesAdaptiveGroupsArgs = {
  filter: AccountHyperdriveQueriesAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountHyperdriveQueriesAdaptiveGroupsOrderBy>>;
};


export type AccountImagesRequestsAdaptiveGroupsArgs = {
  filter: AccountImagesRequestsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountImagesRequestsAdaptiveGroupsOrderBy>>;
};


export type AccountImagesUniqueTransformationsArgs = {
  filter: AccountImagesUniqueTransformationsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountImagesUniqueTransformationsOrderBy>>;
};


export type AccountLogpushHealthAdaptiveGroupsArgs = {
  filter: AccountLogpushHealthAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountLogpushHealthAdaptiveGroupsOrderBy>>;
};


export type AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsArgs = {
  filter: AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsOrderBy>>;
};


export type AccountMagicFirewallSamplesAdaptiveGroupsArgs = {
  filter: AccountMagicFirewallSamplesAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountMagicFirewallSamplesAdaptiveGroupsOrderBy>>;
};


export type AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsArgs = {
  filter: AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountMagicIdpsNetworkAnalyticsAdaptiveGroupsOrderBy>>;
};


export type AccountMagicTransitNetworkAnalyticsAdaptiveGroupsArgs = {
  filter: AccountMagicTransitNetworkAnalyticsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountMagicTransitNetworkAnalyticsAdaptiveGroupsOrderBy>>;
};


export type AccountMagicTransitTunnelHealthChecksAdaptiveGroupsArgs = {
  filter: AccountMagicTransitTunnelHealthChecksAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountMagicTransitTunnelHealthChecksAdaptiveGroupsOrderBy>>;
};


export type AccountMagicTransitTunnelTrafficAdaptiveGroupsArgs = {
  filter: AccountMagicTransitTunnelTrafficAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountMagicTransitTunnelTrafficAdaptiveGroupsOrderBy>>;
};


export type AccountMnmFlowDataAdaptiveGroupsArgs = {
  filter: AccountMnmFlowDataAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountMnmFlowDataAdaptiveGroupsOrderBy>>;
};


export type AccountNelReportsAdaptiveGroupsArgs = {
  filter: AccountNelReportsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountNelReportsAdaptiveGroupsOrderBy>>;
};


export type AccountPagesFunctionsInvocationsAdaptiveGroupsArgs = {
  filter: AccountPagesFunctionsInvocationsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountPagesFunctionsInvocationsAdaptiveGroupsOrderBy>>;
};


export type AccountQueueBacklogAdaptiveGroupsArgs = {
  filter: AccountQueueBacklogAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountQueueBacklogAdaptiveGroupsOrderBy>>;
};


export type AccountQueueConsumerMetricsAdaptiveGroupsArgs = {
  filter: AccountQueueConsumerMetricsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountQueueConsumerMetricsAdaptiveGroupsOrderBy>>;
};


export type AccountQueueMessageOperationsAdaptiveGroupsArgs = {
  filter: AccountQueueMessageOperationsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountQueueMessageOperationsAdaptiveGroupsOrderBy>>;
};


export type AccountR2OperationsAdaptiveGroupsArgs = {
  filter: AccountR2OperationsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountR2OperationsAdaptiveGroupsOrderBy>>;
};


export type AccountR2StorageAdaptiveGroupsArgs = {
  filter: AccountR2StorageAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountR2StorageAdaptiveGroupsOrderBy>>;
};


export type AccountRumPageloadEventsAdaptiveGroupsArgs = {
  filter: AccountRumPageloadEventsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountRumPageloadEventsAdaptiveGroupsOrderBy>>;
};


export type AccountRumPerformanceEventsAdaptiveGroupsArgs = {
  filter: AccountRumPerformanceEventsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountRumPerformanceEventsAdaptiveGroupsOrderBy>>;
};


export type AccountRumWebVitalsEventsAdaptiveArgs = {
  filter: AccountRumWebVitalsEventsAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountRumWebVitalsEventsAdaptiveOrderBy>>;
};


export type AccountRumWebVitalsEventsAdaptiveGroupsArgs = {
  filter: AccountRumWebVitalsEventsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountRumWebVitalsEventsAdaptiveGroupsOrderBy>>;
};


export type AccountSinkholeRequestLogsAdaptiveArgs = {
  filter: AccountSinkholeRequestLogsAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountSinkholeRequestLogsAdaptiveOrderBy>>;
};


export type AccountSinkholeRequestLogsAdaptiveGroupsArgs = {
  filter: AccountSinkholeRequestLogsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountSinkholeRequestLogsAdaptiveGroupsOrderBy>>;
};


export type AccountSpectrumNetworkAnalyticsAdaptiveGroupsArgs = {
  filter: AccountSpectrumNetworkAnalyticsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountSpectrumNetworkAnalyticsAdaptiveGroupsOrderBy>>;
};


export type AccountStorageTracesArgs = {
  filter: AccountStorageTracesFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountStorageTracesOrderBy>>;
};


export type AccountStreamMinutesViewedAdaptiveGroupsArgs = {
  filter: AccountStreamMinutesViewedAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountStreamMinutesViewedAdaptiveGroupsOrderBy>>;
};


export type AccountTurnstileAdaptiveGroupsArgs = {
  filter: AccountTurnstileAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountTurnstileAdaptiveGroupsOrderBy>>;
};


export type AccountVideoBufferEventsAdaptiveGroupsArgs = {
  filter: AccountVideoBufferEventsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountVideoBufferEventsAdaptiveGroupsOrderBy>>;
};


export type AccountVideoPlaybackEventsAdaptiveGroupsArgs = {
  filter: AccountVideoPlaybackEventsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountVideoPlaybackEventsAdaptiveGroupsOrderBy>>;
};


export type AccountVideoQualityEventsAdaptiveGroupsArgs = {
  filter: AccountVideoQualityEventsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountVideoQualityEventsAdaptiveGroupsOrderBy>>;
};


export type AccountWarpDeviceAdaptiveGroupsArgs = {
  filter: AccountWarpDeviceAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountWarpDeviceAdaptiveGroupsOrderBy>>;
};


export type AccountWorkerPlacementAdaptiveGroupsArgs = {
  filter: AccountWorkerPlacementAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountWorkerPlacementAdaptiveGroupsOrderBy>>;
};


export type AccountWorkersAnalyticsEngineAdaptiveGroupsArgs = {
  filter: AccountWorkersAnalyticsEngineAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountWorkersAnalyticsEngineAdaptiveGroupsOrderBy>>;
};


export type AccountWorkersInvocationsAdaptiveArgs = {
  filter: AccountWorkersInvocationsAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountWorkersInvocationsAdaptiveOrderBy>>;
};


export type AccountWorkersInvocationsScheduledArgs = {
  filter: AccountWorkersInvocationsScheduledFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountWorkersInvocationsScheduledOrderBy>>;
};


export type AccountWorkersOverviewDataAdaptiveGroupsArgs = {
  filter: AccountWorkersOverviewDataAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountWorkersOverviewDataAdaptiveGroupsOrderBy>>;
};


export type AccountWorkersOverviewRequestsAdaptiveGroupsArgs = {
  filter: AccountWorkersOverviewRequestsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountWorkersOverviewRequestsAdaptiveGroupsOrderBy>>;
};


export type AccountWorkersSubrequestsAdaptiveGroupsArgs = {
  filter: AccountWorkersSubrequestsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountWorkersSubrequestsAdaptiveGroupsOrderBy>>;
};


export type AccountZarazTriggersAdaptiveGroupsArgs = {
  filter: AccountZarazTriggersAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountZarazTriggersAdaptiveGroupsOrderBy>>;
};


export type AccountZeroTrustPrivateNetworkDiscoveryGroupsArgs = {
  filter: AccountZeroTrustPrivateNetworkDiscoveryGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<AccountZeroTrustPrivateNetworkDiscoveryGroupsOrderBy>>;
};


export type AccountZonesArgs = {
  filter?: InputMaybe<ZoneFilter_InputObject>;
  limit?: InputMaybe<Scalars['uint64']['input']>;
};

export type Viewer = {
  __typename?: 'viewer';
  accounts: Array<Account>;
  budget: Scalars['uint64']['output'];
  zones: Array<Zone>;
};


export type ViewerAccountsArgs = {
  filter: AccountFilter_InputObject;
};


export type ViewerZonesArgs = {
  filter?: InputMaybe<ZoneFilter_InputObject>;
  limit?: InputMaybe<Scalars['uint64']['input']>;
};

export type Zone = {
  __typename?: 'zone';
  /** GraphQL query attributes and trends */
  apiGatewayGraphqlQueryAnalyticsGroups: Array<ZoneApiGatewayGraphqlQueryAnalyticsGroups>;
  /** Beta. Aggregated count of Session Identifier matches */
  apiGatewayMatchedSessionIDsAdaptiveGroups: Array<ZoneApiGatewayMatchedSessionIDsAdaptiveGroups>;
  /**
   * Sequences of API endpoint operations. Sequences are grouped by AuthID and
   * currently ranked by correlation score. Correlation scores are estimated over a
   * 24 hour window and are current to within 10 minutes
   */
  apiRequestSequencesGroups: Array<ZoneApiRequestSequencesGroups>;
  /** Beta. Cache Reserve operations with adaptive sampling */
  cacheReserveOperationsAdaptiveGroups: Array<ZoneCacheReserveOperationsAdaptiveGroups>;
  /** Cache Reserve HTTP requests data with adaptive sampling */
  cacheReserveRequestsAdaptiveGroups: Array<ZoneCacheReserveRequestsAdaptiveGroups>;
  /** Beta. Cache Reserve storage with adaptive sampling */
  cacheReserveStorageAdaptiveGroups: Array<ZoneCacheReserveStorageAdaptiveGroups>;
  /** Dmarc report records with adaptive sampling */
  dmarcReportsAdaptive: Array<ZoneDmarcReportsAdaptive>;
  /** Aggregated dmarc reports by sources logs with adaptive sampling */
  dmarcReportsSourcesAdaptiveGroups: Array<ZoneDmarcReportsSourcesAdaptiveGroups>;
  /** Analytics data for DNS queries (currently, only Foundation DNS zones are supported) */
  dnsAnalyticsAdaptive: Array<ZoneDnsAnalyticsAdaptive>;
  /** Analytics data for DNS queries (currently, only Foundation DNS zones are supported) */
  dnsAnalyticsAdaptiveGroups: Array<ZoneDnsAnalyticsAdaptiveGroups>;
  /** Beta. Raw email routing logs with adaptive sampling */
  emailRoutingAdaptive: Array<ZoneEmailRoutingAdaptive>;
  /** Beta. Aggregated email routing logs with adaptive sampling */
  emailRoutingAdaptiveGroups: Array<ZoneEmailRoutingAdaptiveGroups>;
  /** Raw Firewall events with adaptive sampling */
  firewallEventsAdaptive: Array<ZoneFirewallEventsAdaptive>;
  /** Aggregated Firewall events with adaptive sampling grouped by time */
  firewallEventsAdaptiveByTimeGroups: Array<ZoneFirewallEventsAdaptiveByTimeGroups>;
  /** Aggregated Firewall events with adaptive sampling */
  firewallEventsAdaptiveGroups: Array<ZoneFirewallEventsAdaptiveGroups>;
  /** Raw Health Check events with adaptive sampling */
  healthCheckEventsAdaptive: Array<ZoneHealthCheckEventsAdaptive>;
  /** Aggregated Health Check events with adaptive sampling */
  healthCheckEventsAdaptiveGroups: Array<ZoneHealthCheckEventsAdaptiveGroups>;
  /**
   * Daily rollups of request data by colo
   * @deprecated Node is replaced with more capable <code>httpRequestsAdaptiveGroups</code>
   */
  httpRequests1dByColoGroups: Array<ZoneHttpRequests1dByColoGroups>;
  /** Daily rollups of request data */
  httpRequests1dGroups: Array<ZoneHttpRequests1dGroups>;
  /** Hourly rollups of request data */
  httpRequests1hGroups: Array<ZoneHttpRequests1hGroups>;
  /**
   * Minutely rollups of request data by colo
   * @deprecated Node is replaced with more capable <code>httpRequestsAdaptiveGroups</code>
   */
  httpRequests1mByColoGroups: Array<ZoneHttpRequests1mByColoGroups>;
  /** Minutely rollups of request data */
  httpRequests1mGroups: Array<ZoneHttpRequests1mGroups>;
  /** Raw HTTP requests with adaptive sampling */
  httpRequestsAdaptive: Array<ZoneHttpRequestsAdaptive>;
  /** Aggregated HTTP requests data with adaptive sampling */
  httpRequestsAdaptiveGroups: Array<ZoneHttpRequestsAdaptiveGroups>;
  /** A high-level summary of HTTP requests made by end users. */
  httpRequestsOverviewAdaptiveGroups: Array<ZoneHttpRequestsOverviewAdaptiveGroups>;
  /** Minutely rollups of Image Resizing requests */
  imageResizingRequests1mGroups: Array<ZoneImageResizingRequests1mGroups>;
  /** Raw Load Balancing origin requests with adaptive sampling */
  loadBalancingRequestsAdaptive: Array<ZoneLoadBalancingRequestsAdaptive>;
  /** Aggregated Load Balancing origin requests with adaptive sampling */
  loadBalancingRequestsAdaptiveGroups: Array<ZoneLoadBalancingRequestsAdaptiveGroups>;
  /** Beta. Logpush job health metrics */
  logpushHealthAdaptiveGroups: Array<ZoneLogpushHealthAdaptiveGroups>;
  /** Data to visualize network error logs */
  nelReportsAdaptiveGroups: Array<ZoneNelReportsAdaptiveGroups>;
  /** Page Shield CSP reports */
  pageShieldReportsAdaptiveGroups: Array<ZonePageShieldReportsAdaptiveGroups>;
  settings?: Maybe<ZoneSettings>;
  /** Raw Waiting Room analytics logs */
  waitingRoomAnalyticsAdaptive: Array<ZoneWaitingRoomAnalyticsAdaptive>;
  /** Aggregated Waiting Room analytics logs with adaptive sampling */
  waitingRoomAnalyticsAdaptiveGroups: Array<ZoneWaitingRoomAnalyticsAdaptiveGroups>;
  /** Workers invocations with adaptive sampling */
  workersZoneInvocationsAdaptiveGroups: Array<ZoneWorkersZoneInvocationsAdaptiveGroups>;
  /** Workers subrequests with adaptive sampling */
  workersZoneSubrequestsAdaptiveGroups: Array<ZoneWorkersZoneSubrequestsAdaptiveGroups>;
  /** Zaraz Actions Analytics */
  zarazActionsAdaptiveGroups: Array<ZoneZarazActionsAdaptiveGroups>;
  /** Zaraz Track Analytics - counts zaraz.track calls */
  zarazTrackAdaptiveGroups: Array<ZoneZarazTrackAdaptiveGroups>;
  /** Zaraz Triggers Analytics (a trigger is a set of rules that can trigger a zaraz action) */
  zarazTriggersAdaptiveGroups: Array<ZoneZarazTriggersAdaptiveGroups>;
  zoneTag: Scalars['string']['output'];
};


export type ZoneApiGatewayGraphqlQueryAnalyticsGroupsArgs = {
  filter: ZoneApiGatewayGraphqlQueryAnalyticsGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneApiGatewayGraphqlQueryAnalyticsGroupsOrderBy>>;
};


export type ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsArgs = {
  filter: ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneApiGatewayMatchedSessionIDsAdaptiveGroupsOrderBy>>;
};


export type ZoneApiRequestSequencesGroupsArgs = {
  filter: ZoneApiRequestSequencesGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneApiRequestSequencesGroupsOrderBy>>;
};


export type ZoneCacheReserveOperationsAdaptiveGroupsArgs = {
  filter: ZoneCacheReserveOperationsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneCacheReserveOperationsAdaptiveGroupsOrderBy>>;
};


export type ZoneCacheReserveRequestsAdaptiveGroupsArgs = {
  filter: ZoneCacheReserveRequestsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneCacheReserveRequestsAdaptiveGroupsOrderBy>>;
};


export type ZoneCacheReserveStorageAdaptiveGroupsArgs = {
  filter: ZoneCacheReserveStorageAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneCacheReserveStorageAdaptiveGroupsOrderBy>>;
};


export type ZoneDmarcReportsAdaptiveArgs = {
  filter: ZoneDmarcReportsAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneDmarcReportsAdaptiveOrderBy>>;
};


export type ZoneDmarcReportsSourcesAdaptiveGroupsArgs = {
  filter: ZoneDmarcReportsSourcesAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneDmarcReportsSourcesAdaptiveGroupsOrderBy>>;
};


export type ZoneDnsAnalyticsAdaptiveArgs = {
  filter: ZoneDnsAnalyticsAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneDnsAnalyticsAdaptiveOrderBy>>;
};


export type ZoneDnsAnalyticsAdaptiveGroupsArgs = {
  filter: ZoneDnsAnalyticsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneDnsAnalyticsAdaptiveGroupsOrderBy>>;
};


export type ZoneEmailRoutingAdaptiveArgs = {
  filter: ZoneEmailRoutingAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneEmailRoutingAdaptiveOrderBy>>;
};


export type ZoneEmailRoutingAdaptiveGroupsArgs = {
  filter: ZoneEmailRoutingAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneEmailRoutingAdaptiveGroupsOrderBy>>;
};


export type ZoneFirewallEventsAdaptiveArgs = {
  filter: ZoneFirewallEventsAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneFirewallEventsAdaptiveOrderBy>>;
};


export type ZoneFirewallEventsAdaptiveByTimeGroupsArgs = {
  filter: ZoneFirewallEventsAdaptiveByTimeGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneFirewallEventsAdaptiveByTimeGroupsOrderBy>>;
};


export type ZoneFirewallEventsAdaptiveGroupsArgs = {
  filter: ZoneFirewallEventsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneFirewallEventsAdaptiveGroupsOrderBy>>;
};


export type ZoneHealthCheckEventsAdaptiveArgs = {
  filter: ZoneHealthCheckEventsAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneHealthCheckEventsAdaptiveOrderBy>>;
};


export type ZoneHealthCheckEventsAdaptiveGroupsArgs = {
  filter: ZoneHealthCheckEventsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneHealthCheckEventsAdaptiveGroupsOrderBy>>;
};


export type ZoneHttpRequests1dByColoGroupsArgs = {
  filter: ZoneHttpRequests1dByColoGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneHttpRequests1dByColoGroupsOrderBy>>;
};


export type ZoneHttpRequests1dGroupsArgs = {
  filter: ZoneHttpRequests1dGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneHttpRequests1dGroupsOrderBy>>;
};


export type ZoneHttpRequests1hGroupsArgs = {
  filter: ZoneHttpRequests1hGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneHttpRequests1hGroupsOrderBy>>;
};


export type ZoneHttpRequests1mByColoGroupsArgs = {
  filter: ZoneHttpRequests1mByColoGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneHttpRequests1mByColoGroupsOrderBy>>;
};


export type ZoneHttpRequests1mGroupsArgs = {
  filter: ZoneHttpRequests1mGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneHttpRequests1mGroupsOrderBy>>;
};


export type ZoneHttpRequestsAdaptiveArgs = {
  filter: ZoneHttpRequestsAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneHttpRequestsAdaptiveOrderBy>>;
};


export type ZoneHttpRequestsAdaptiveGroupsArgs = {
  filter: ZoneHttpRequestsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneHttpRequestsAdaptiveGroupsOrderBy>>;
};


export type ZoneHttpRequestsOverviewAdaptiveGroupsArgs = {
  filter: ZoneHttpRequestsOverviewAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneHttpRequestsOverviewAdaptiveGroupsOrderBy>>;
};


export type ZoneImageResizingRequests1mGroupsArgs = {
  filter: ZoneImageResizingRequests1mGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneImageResizingRequests1mGroupsOrderBy>>;
};


export type ZoneLoadBalancingRequestsAdaptiveArgs = {
  filter: ZoneLoadBalancingRequestsAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneLoadBalancingRequestsAdaptiveOrderBy>>;
};


export type ZoneLoadBalancingRequestsAdaptiveGroupsArgs = {
  filter: ZoneLoadBalancingRequestsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneLoadBalancingRequestsAdaptiveGroupsOrderBy>>;
};


export type ZoneLogpushHealthAdaptiveGroupsArgs = {
  filter: ZoneLogpushHealthAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneLogpushHealthAdaptiveGroupsOrderBy>>;
};


export type ZoneNelReportsAdaptiveGroupsArgs = {
  filter: ZoneNelReportsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneNelReportsAdaptiveGroupsOrderBy>>;
};


export type ZonePageShieldReportsAdaptiveGroupsArgs = {
  filter: ZonePageShieldReportsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZonePageShieldReportsAdaptiveGroupsOrderBy>>;
};


export type ZoneWaitingRoomAnalyticsAdaptiveArgs = {
  filter: ZoneWaitingRoomAnalyticsAdaptiveFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneWaitingRoomAnalyticsAdaptiveOrderBy>>;
};


export type ZoneWaitingRoomAnalyticsAdaptiveGroupsArgs = {
  filter: ZoneWaitingRoomAnalyticsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneWaitingRoomAnalyticsAdaptiveGroupsOrderBy>>;
};


export type ZoneWorkersZoneInvocationsAdaptiveGroupsArgs = {
  filter: ZoneWorkersZoneInvocationsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneWorkersZoneInvocationsAdaptiveGroupsOrderBy>>;
};


export type ZoneWorkersZoneSubrequestsAdaptiveGroupsArgs = {
  filter: ZoneWorkersZoneSubrequestsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneWorkersZoneSubrequestsAdaptiveGroupsOrderBy>>;
};


export type ZoneZarazActionsAdaptiveGroupsArgs = {
  filter: ZoneZarazActionsAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneZarazActionsAdaptiveGroupsOrderBy>>;
};


export type ZoneZarazTrackAdaptiveGroupsArgs = {
  filter: ZoneZarazTrackAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneZarazTrackAdaptiveGroupsOrderBy>>;
};


export type ZoneZarazTriggersAdaptiveGroupsArgs = {
  filter: ZoneZarazTriggersAdaptiveGroupsFilter_InputObject;
  limit: Scalars['uint64']['input'];
  orderBy?: InputMaybe<Array<ZoneZarazTriggersAdaptiveGroupsOrderBy>>;
};
